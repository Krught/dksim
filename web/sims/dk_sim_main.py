#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Created on Sat Aug  6 21:21:33 2022

@author: Andrew
"""
import random
import pandas as pd
from sims.shared.weapon_roll import weapon_roll
from sims.shared.white_attack import white_attack
from sims.shared.fight_time_variance import time_variance_rolled
from sims.shared.power_calc import power as runic_power
from sims.shared.dot_timer import dot_timer
from sims.dk.runes import rune_cd, check_rune, rune_grade_timer, all_rune_check, use_runes
from sims.shared.attack_tables import spell_hit, spell_crit
from sims.shared.attack_tables import melee_table as attack_table
from sims.shared.damage_armor_reduc import dam_reduc
from sims.dk.ghoul_attack_tables import ghoul_attack_table
from sims.dk.icy_touch import icy_touch as icy_touch_cast
from sims.dk.plague_strike import plague_strike as plague_strike_cast
from sims.dk.pestilence import pestilence as pestilence_cast
from sims.dk.frost_strike import frost_strike as frost_strike_cast
from sims.dk.obliterate import obliterate as obliterate_cast
from sims.dk.howling_blast import howling_blast as howling_blast_cast
from sims.dk.blood_strike import blood_strike as blood_strike_cast
from sims.dk.blood_boil import blood_boil as blood_boil_cast
from sims.dk.death_coil import death_coil as death_coil_cast
from sims.dk.scourge_strike import scourge_strike as scourge_strike_cast
from sims.dk.death_and_decay import death_and_decay as death_and_decay_cast
from sims.dk.gargoyle import gargoyle as gargoyle_cast

def all_function(item_head = "", item_neck = "", item_shoulders = "", item_back = "", item_chest = "", item_wrist = "",item_gloves = "", item_waist = "", item_legs = "", item_boots = "", item_ring1 = "", item_ring2 = "", item_trinket1 = "", item_trinket2 = "", item_sigil = "", item_mh = "", item_oh = "", length_of_the_fight = 30, length_of_the_fight_variance = 1, total_simulation_amounts = 1, total_number_of_targets = 1, the_target_level = 83, the_target_armor = 10000, the_total_fight_under_35 = 35, the_pestilence_reset_timer = 3, the_precast_horn_time = 118, the_input_dk_presence = 0, the_input_dk_spec = 0, the_input_race_selection = 0, the_input_potion = "None", the_input_potion_timer = 5, the_input_flask = "None", the_input_food_selection = "None", the_input_draenei_buff = False, the_input_horn_of_winter_buff = True, the_input_imp_icy_talons_buff = False, the_input_abominations_might_buff = False, the_input_sanctified_retribution_buff = False, the_input_imp_moonkin_form_buff = False, the_input_blood_frenzy_buff = False, the_input_expose_armor_debuff = False, the_input_curse_of_weakness_debuff = False, the_input_leader_of_the_pack_buff = False, the_input_heroism_buff = False, the_input_herosim_buff_timer = 10, the_input_unholy_frenzy_buff = False, the_input_unholy_frenzy_buff_timer = 10, the_input_tricks_of_the_trade_buff = False, the_input_tricks_of_the_trade_buff_timer = 10, the_input_gift_of_the_wild_buff = False, the_input_greater_blessing_of_kings_buff = False, the_input_greater_blessing_of_might_buff = False, the_input_imp_blessing_of_might_buff = False, the_input_heart_of_the_crusader_buff = False, the_input_imp_scorch_buff = False, the_input_imp_faerie_fire_debuff = False, the_input_curse_of_the_elements_debuff = False, the_input_moonkin_aura_buff = False, the_input_blood_fury_buff = False, the_input_blood_fury_buff_timer = 10, the_input_berserking_buff = False, the_input_berserking_buff_timer = 10, input_gem1 = "None", input_gem2 = "None", input_gem3 = "None", input_gem4 = "None", input_gem5 = "None", input_gem6 = "None", input_gem7 = "None", input_gem8 = "None", input_gem9 = "None", input_gem10 = "None", input_gem11 = "None", input_gem12 = "None", input_gem13 = "None", input_gem14 = "None", input_gem15 = "None", input_gem16 = "None", input_gem17 = "None", input_gem18 = "None", input_gem19 = "None", input_gem20 = "None", input_gem21 = "None", input_gem22 = "None", input_gem23 = "None", input_gem24 = "None", input_gem25 = "None", input_gem26 = "None", input_gem27 = "None", input_gem28 = "None", input_gem29 = "None", input_gem30 = "None", input_gem31 = "None", input_gem32 = "None", input_gem33 = "None", input_gem34 = "None", input_gem35 = "None", input_gem36 = "None", input_gem37 = "None", input_gem38 = "None", input_gem39 = "None", input_gem40 = "None", input_gem41 = "None", input_gem42 = "None", input_gem43 = "None", input_gem44 = "None", input_gem45 = "None", input_gem46 = "None", input_gem47 = "None", input_gem48 = "None", input_gem49 = "None", input_gem50 = "None", input_gem51 = "None", input_gem52 = "None", input_gem53 = "None", input_gem54 = "None", input_gem55 = "None", input_gem56 = "None", input_gem57 = "None", input_gem58 = "None", input_gem59 = "None", input_gem60 = "None", input_gem61 = "None", input_gem62 = "None", input_gem63 = "None", input_gem64 = "None", input_meta_gem1 = "None", input_socketbonus1 = False, input_socketbonus2 = False, input_socketbonus3 = False, input_socketbonus4 = False, input_socketbonus5 = False, input_socketbonus6 = False, input_socketbonus7 = False, input_socketbonus8 = False, input_socketbonus9 = False, input_socketbonus10 = False, input_socketbonus11 = False, input_socketbonus12 = False, input_socketbonus13 = False, input_socketbonus14 = False, input_socketbonus15 = False, input_socketbonus16 = False, talent_url = "01-32003350350203012300033101351-230230005003_001s9f11s8q21xv631sxd41ts851s9r", input_mh_enchant = "None", input_oh_enchant = "None", input_head_enchant = "None", input_shoulder_enchant = "None", input_back_enchant = "None", input_chest_enchant = "None", input_wrist_enchant = "None", input_gloves_enchant = "None", input_legs_enchant = "None", input_boots_enchant = "None", input_ring1_enchant = "None", input_ring2_enchant = "None", blood_gorged_proc_rate = 100, raid_buff_crypt_fever = False, use_obliterate_over_howling_blast = False, use_blood_strike_over_blood_boil = False, death_and_decay_force_cast = False, death_and_decay_skip = False, bone_shield_bone_consumption_rate = 0, gargoyle_stance_dance = False, gargoyle_use_timer = 60, use_ghoul = False, use_army = False, input_pre_pot_potion = False, greater_gift_of_the_wild = False, extra_armor_potion = False, use_shattering_throw = False, shattering_throw_time = 0, skip_disease = False, skip_erw = False, skip_ua = False, frost_def_setup = True, activity_percent = 1.0, local_testing = False):
    #Input Area
    #Length in Seconds
    length_of_fight = length_of_the_fight 
    fight_length_variance = length_of_the_fight_variance
    amount_of_sims = total_simulation_amounts
    amount_of_targets = total_number_of_targets #Add multitarget damage later
    target_armor = the_target_armor
    target_level = the_target_level
    fight_sub_35percent = the_total_fight_under_35 # In percentage. of 0 - 100
    pestilence_reset_window = the_pestilence_reset_timer
    dranei_in_party = the_input_draenei_buff
    dk_presence = the_input_dk_presence # 0 - Blood.  1 - Frost.  2 - Unholy
    horn = the_precast_horn_time #How many seconds left on horn of winter since you pressed before fight started
    #Specs: 0 - Frost, 1 - Unholy, 2 - Blood
    dk_spec = the_input_dk_spec
    #race selection: 0 = Human, 1 = Dwarf,  2 = Nightelf,  3 = Gnome  4 = Dranei
    #race selection: 5 = Orc,   6 = Undead, 7 = Tauren,    8 = Troll, 9 = Bloodelf
    race_selection = the_input_race_selection
    ##




    base_race_stats = {"HP":(9541, 9571, 9531, 9621, 9531, 9651, 9551, 9967, 9551, 9521), "Strength":(180, 182, 177, 170, 176, 194, 174, 185, 181, 172), "Agility":(112, 108, 117, 115, 109, 109, 110, 107, 114, 114), "Stamina":(160, 163, 159, 168, 159, 171, 161, 162, 161, 158), "Intel":(35, 34, 35, 40, 36, 32, 33, 30, 31, 39), "Spirit":(63, 58, 59, 59, 61, 62, 64, 61, 60, 58), "M_AP":(580, 584, 574, 560, 572, 608, 568, 590, 582, 564), "R_AP":(472, 472, 471, 455, 461, 497, 458, 477, 476, 458), "Armor":(224, 216, 234, 230, 218, 218, 220, 214, 228, 228), "Parry Rating":(45, 45, 44, 42, 44, 48, 43, 46, 45, 43)}
    #Naked Race Base Stats
    base_strength = base_race_stats["Strength"][race_selection]
    base_agility = base_race_stats["Agility"][race_selection]
    base_stamina = base_race_stats["Stamina"][race_selection]
    base_intel = base_race_stats["Intel"][race_selection]
    base_spirit = base_race_stats["Spirit"][race_selection] 
    base_m_ap =  220 #+ (base_strength * 2)
    #base_r_ap = base_strength*2+base_agility
    base_armor = base_race_stats["Armor"][race_selection]
    base_parry_rating = base_race_stats["Parry Rating"][race_selection]
    base_hp = 7941
    if race_selection == 7:
        base_hp += 406

    #Talent Lookup Here
    # remove_wowhead = talent_url.find("death-knight/")+13
    # full_talent_list = talent_url[remove_wowhead:]
    full_talent_list = talent_url
    split_gylphs = full_talent_list.split("_")
    amount_of_talent_rows = split_gylphs[0].count("-")
    if amount_of_talent_rows < 2:
        split_gylphs[0] = split_gylphs[0] + "-"
        if amount_of_talent_rows < 1:
            split_gylphs[0] = split_gylphs[0] + "-"
    split_talents = split_gylphs[0].split("-")
    if full_talent_list.find("_") > 0:
        glyphs = split_gylphs[1]
    elif full_talent_list.find("_") <= 0:
        glyphs = ("00")
    blood_talents = split_talents[0]
    frost_talents = split_talents[1]
    unholy_talents = split_talents[2]
    blood_talents_len = len(blood_talents)
    frost_talents_len = len(frost_talents)
    unholy_talents_len = len(unholy_talents)
    blood_talents = list(blood_talents)
    frost_talents = list(frost_talents)
    unholy_talents = list(unholy_talents)
    if blood_talents_len < 28:
        blood_talents_to_add = 28 - blood_talents_len
        blood_talents_added = 0
        while blood_talents_added < blood_talents_to_add:
            blood_talents.append(0)
            blood_talents_added += 1
    if frost_talents_len < 29:
        frost_talents_to_add = 29 - frost_talents_len
        frost_talents_added = 0
        while frost_talents_added < frost_talents_to_add:
            frost_talents.append(0)
            frost_talents_added += 1
    if unholy_talents_len < 31:
        unholy_talents_to_add = 31 - unholy_talents_len
        unholy_talents_added = 0
        while unholy_talents_added < unholy_talents_to_add:
            unholy_talents.append(0)
            unholy_talents_added += 1
    total_gylph_check = ["1s9r", "1xv2", "1xv5", "1s85", "1sy8", "1xv6", "1s8q", "1xv7", "1s87", "1s9f", "1s91", "1s9d", "1s8j", "1s9y", "1xv4", "1s9h"]
    using_glyphs = []
    glyph_horn_of_winter = False
    glyph_dancing_rune_weapon = False
    glyph_death_coil = False
    glyph_death_and_decay = False
    glyph_death_strike = False
    glyph_pestilence_reset_diseases = False
    glyph_frost_strike = False
    glyph_howling_blast = False
    glyph_frost_fever = False
    glyph_obliterate = False
    glyph_plague_strike = False
    glyph_rune_strike = False
    glyph_scourge_strike = False
    glyph_ghoul = False
    glyph_unholy_blight = False
    glyph_of_bone_shield = 0
    for possibly_glyphs in total_gylph_check:
        if glyphs.find(possibly_glyphs) > 0:
            using_glyphs.append(possibly_glyphs)
    if len(using_glyphs) > 0:
        amount_of_used_glyphs = len(using_glyphs)
        for possible_glyphs in using_glyphs:
            if possible_glyphs == total_gylph_check[0]:
                glyph_horn_of_winter = True
            if possible_glyphs == total_gylph_check[1]:
                glyph_dancing_rune_weapon = True
            if possible_glyphs == total_gylph_check[2]:
                glyph_death_coil = True
            if possible_glyphs == total_gylph_check[3]:
                glyph_death_and_decay = True
            if possible_glyphs == total_gylph_check[4]:
                glyph_death_strike = True
            if possible_glyphs == total_gylph_check[5]:
                glyph_pestilence_reset_diseases = True
            if possible_glyphs == total_gylph_check[6]:
                glyph_frost_strike = True
            if possible_glyphs == total_gylph_check[7]:
                glyph_howling_blast = True
            if possible_glyphs == total_gylph_check[8]:
                glyph_frost_fever = True
            if possible_glyphs == total_gylph_check[9]:
                glyph_obliterate = True
            if possible_glyphs == total_gylph_check[10]:
                glyph_plague_strike = True
            if possible_glyphs == total_gylph_check[11]:
                glyph_rune_strike = True
            if possible_glyphs == total_gylph_check[12]:
                glyph_scourge_strike = True
            if possible_glyphs == total_gylph_check[13]:
                glyph_ghoul = True
            if possible_glyphs == total_gylph_check[14]:
                glyph_unholy_blight = True
            if possible_glyphs == total_gylph_check[15]:
                glyph_of_bone_shield = 1
    
    #Glyphs Here
    pestilence_allow_reset = False
    if glyph_pestilence_reset_diseases == True:
        pestilence_allow_reset = True
    if glyph_horn_of_winter == False:
        horn_timer = 120
    elif glyph_horn_of_winter == True:
        horn_timer = 180
    extra_obli_damage = False
    if glyph_obliterate == True:
        extra_obli_damage = True


    ##Talents
    #Blood
    subversion_points = float(blood_talents[1])
    bladed_armor_points = float(blood_talents[3])
    two_handed_weapon_blood_points = float(blood_talents[5])
    dark_conviction_points = float(blood_talents[7])
    death_rune_mastery_points = float(blood_talents[8])
    blood_strikes_points = float(blood_talents[12])
    veteran_of_the_third_war_points = float(blood_talents[13])
    bloody_vengeance_points = float(blood_talents[15])
    abominations_might_points = float(blood_talents[16])
    bloodworms_points = float(blood_talents[17])
    improved_death_strikes_points = float(blood_talents[20])
    sudden_doom_points = float(blood_talents[21])
    heart_strike_points = float(blood_talents[24])
    might_of_mograine_points = float(blood_talents[25])
    blood_gorged_points = float(blood_talents[26])
    dancing_rune_weapon_points = float(blood_talents[27])
    #Frost
    improved_icy_touch_points = float(frost_talents[0])
    runic_power_mastery_points = float(frost_talents[1])
    toughness_points = float(frost_talents[2])
    black_ice_points = float(frost_talents[4])
    nerves_of_cold_steel = float(frost_talents[5])
    icy_talons_points = float(frost_talents[6])
    annihilation_talent_points = float(frost_talents[8])
    killing_machine_points = float(frost_talents[9])
    chill_of_the_grave_points = float(frost_talents[10])
    endless_winter_points = float(frost_talents[11])
    glacier_rot_points = float(frost_talents[13])
    deathchill_points = float(frost_talents[14])
    improved_icy_talons_points = float(frost_talents[15])
    merciless_combat_points = float(frost_talents[16] )
    rime_points = float(frost_talents[17])
    threat_of_thassarian_points = float(frost_talents[21]) 
    blood_of_the_north_points = float(frost_talents[22]) 
    unbreakable_armor_points = float(frost_talents[23])
    frost_strike_points = float(frost_talents[25])
    guile_of_gorefiend_points = float(frost_talents[26])
    tundra_stalker_points = float(frost_talents[27]) 
    howling_blast_points = float(frost_talents[28]) 
    #Unholy
    vicious_strikes_points = float(unholy_talents[0])
    virtulence_points = float(unholy_talents[1])
    epidemic_points = float(unholy_talents[3])
    morbitity_points = float(unholy_talents[4])
    ravenous_dead_points = float(unholy_talents[6])
    outbreak_points = float(unholy_talents[7])
    necrosis_points = float(unholy_talents[8])
    corspe_explosion_points = float(unholy_talents[9])
    bloodcaked_blades_points = float(unholy_talents[11])
    night_of_the_dead_points = float(unholy_talents[12])
    unholy_blight_points = float(unholy_talents[13])
    impurity_points = float(unholy_talents[14])
    dirge_points = float(unholy_talents[15])
    reaping_points = float(unholy_talents[18])
    master_of_ghouls_points = float(unholy_talents[19])
    desolation_points = float(unholy_talents[20])
    improved_unholy_presence_points = float(unholy_talents[22])
    ghoul_frenzy_points = float(unholy_talents[23])
    crypt_fever_points = float(unholy_talents[24])
    bone_shield_points = float(unholy_talents[25])
    wandering_plague_points = float(unholy_talents[26])
    ebon_plaguebringer_points = float(unholy_talents[27])
    scourge_strike_points = float(unholy_talents[28])
    rage_of_rivendale_points = float(unholy_talents[29])
    summon_gargoyle_points = float(unholy_talents[30])
    
    oh_wep_damage_mod = .5
    if nerves_of_cold_steel == 3:
        oh_wep_damage_mod += .25
    elif nerves_of_cold_steel == 2:
        oh_wep_damage_mod += .16
    elif nerves_of_cold_steel == 1:
        oh_wep_damage_mod += .08

    #Ghoul
    ghoul_active  = False
    ghoul_life_length = 0
    if use_ghoul == True or master_of_ghouls_points == 1:
        ghoul_active = True
        ghoul_life_length = 60
        if master_of_ghouls_points == 1:
            ghoul_life_length = 10000
    
    #Consumes
    #Potion
    pre_pot_potion = input_pre_pot_potion
    pot_of_speed = False
    pot_of_wild_magic = False
    if the_input_potion != "None":
        pot_start_time = the_input_potion_timer
        if the_input_potion == "Potion of Speed":
            pot_of_speed = True
        elif the_input_potion == "Potion of Wild Magic":
            pot_of_wild_magic = True
    #Flask
    flask_of_endless_rage = False
    if the_input_flask != "None":
        if the_input_flask == "Flask of Endless Rage":
            flask_of_endless_rage = True
    #Food
    food_spiced_worm_burger = False
    food_very_burnt_worg = False
    food_fish_feast = False
    food_great_feast = False
    food_blackened_dragonfin = False
    food_dragonfin_filet = False
    food_mega_mammoth_meal = False
    food_hearty_rhino = False
    food_rhinolicious_wormsteak = False
    food_snapper_extreme = False
    if the_input_food_selection != "None":
        if the_input_food_selection == "Spiced Worm Burger":
            food_spiced_worm_burger = True
        elif the_input_food_selection == "Very Burnt Worg":
            food_very_burnt_worg = True
        elif the_input_food_selection == "Fish Feast":    
            food_fish_feast = True
        elif the_input_food_selection == "Great Feast":    
            food_great_feast = True
        elif the_input_food_selection == "Blackened Dragonfin":    
            food_blackened_dragonfin = True
        elif the_input_food_selection == "Dragonfin Filet":    
            food_dragonfin_filet = True
        elif the_input_food_selection == "Mega Mammoth Meal":    
            food_mega_mammoth_meal = True
        elif the_input_food_selection == "Hearty Rhino":    
            food_hearty_rhino = True
        elif the_input_food_selection == "Rhinolicious Wormsteak":    
            food_rhinolicious_wormsteak = True
        elif the_input_food_selection == "Snapper Extreme":    
            food_snapper_extreme = True
    
    #Raid Buffs & Debuffs & On-Use Specials
    raid_buff_gift_of_the_wild = the_input_gift_of_the_wild_buff
    raid_buff_greater_blessing_of_kings = the_input_greater_blessing_of_kings_buff
    raid_buff_horn_of_winter = the_input_horn_of_winter_buff 
    raid_buff_greater_blessing_of_might = the_input_greater_blessing_of_might_buff 
    raid_buff_imp_greater_blessing_of_might = the_input_imp_blessing_of_might_buff
    raid_buff_abomination_rage = the_input_abominations_might_buff
    raid_buff_improved_icy_talons = the_input_imp_icy_talons_buff
    raid_buff_ferocius_inspiration = the_input_sanctified_retribution_buff
    raid_buff_imp_moonkin_form = the_input_imp_moonkin_form_buff
    raid_buff_moonkin_aura = the_input_moonkin_aura_buff
    raid_buff_blood_frenzy = the_input_blood_frenzy_buff
    raid_buff_heart_of_the_crusader = the_input_heart_of_the_crusader_buff
    raid_buff_improved_scorch = the_input_imp_scorch_buff
    raid_buff_imp_faerie_fire = the_input_imp_faerie_fire_debuff
    raid_buff_curse_of_the_elements = the_input_curse_of_the_elements_debuff
    raid_buff_expose_armor = the_input_expose_armor_debuff
    raid_buff_curse_of_weakness = the_input_curse_of_weakness_debuff
    raid_buff_leader_of_the_pack = the_input_leader_of_the_pack_buff
    
    raid_buff_bloodlust = the_input_heroism_buff
    bloodlust_start_time = the_input_herosim_buff_timer
    personal_buff_hysteria = the_input_unholy_frenzy_buff
    hysteria_start_time = the_input_unholy_frenzy_buff_timer
    personal_buff_tricks_of_the_trade = the_input_tricks_of_the_trade_buff
    tricks_start_time = the_input_tricks_of_the_trade_buff_timer
    personal_buff_orc_blood_fury = the_input_blood_fury_buff
    bloodfury_start_time = the_input_blood_fury_buff_timer
    personal_buff_orc_pet_damage = False
    if race_selection == 5:
        personal_buff_orc_pet_damage = True #NOT ADDED YET
    personal_buff_troll_berserking_buff = the_input_berserking_buff
    berserking_start_time = the_input_berserking_buff_timer
    
    if raid_buff_bloodlust == False:
        bloodlust_start_time = 5000
    if personal_buff_hysteria == False:
        hysteria_start_time = 5000
    if personal_buff_tricks_of_the_trade == False:
        tricks_start_time = 5000
    if personal_buff_orc_blood_fury == False:
        bloodfury_start_time = 5000
    if personal_buff_troll_berserking_buff == False:
        berserking_start_time = 5000
    if pot_of_speed == False:
        pot_of_speed_start_time = 5000
    if pot_of_wild_magic == False:
        pot_of_wild_magic_start_time = 5000
    if pot_of_speed == True:
        pot_of_speed_start_time = pot_start_time
    if pot_of_wild_magic == True:
        pot_of_wild_magic_start_time = pot_start_time
    
    
    
    max_runic = 100
    if runic_power_mastery_points == 2:
        max_runic += 30
    if runic_power_mastery_points == 1:
        max_runic += 15




    #Gem Checker Here
    if local_testing == True:
        items_equipment_data = pd.read_csv (r'sims/dk/csv/EquipmentList - Gear.csv')
    else:
        items_equipment_data = pd.read_csv (r'web/sims/dk/csv/EquipmentList - Gear.csv')
    m_gem_data_loc = items_equipment_data.columns.get_loc('Meta Gem')
    reg_gem_data_loc = items_equipment_data.columns.get_loc('Total Gem')
    current_i = (((items_equipment_data[items_equipment_data['Name'] == item_head])))
    current_i = current_i.to_csv(index=False, header=False, sep='\t')
    current_i = current_i.split("\t")
    current_i = current_i[m_gem_data_loc]
    c_i_c_slot = 0
    gem_data_edit = {}
    if current_i == False:
        input_meta_gem1 = "None"
    gem_gear_to_check = item_head, item_neck, item_shoulders, item_back, item_chest, item_wrist, item_gloves, item_waist, item_legs, item_boots, item_ring1, item_ring2, item_trinket1, item_trinket2
    gem_to_check = 9
    for its in gem_gear_to_check:
        current_i = (((items_equipment_data[items_equipment_data['Name'] == its])))
        current_i = current_i.to_csv(index=False, header=False, sep='\t')
        current_i = current_i.split("\t")
        current_i = int(current_i[reg_gem_data_loc])
        if c_i_c_slot == 7:
            current_i += 1
        c_i_c_slot += 1
        if current_i > 4:
            current_i = 4
            print("An Item Being Simmed Has More Than 4 Sockets.")
            print("The Item: " + str(its))
        current_gem_check = list(range(gem_to_check, gem_to_check + 4))
        if current_i == 0:
            gem_data_edit[current_gem_check[0]] = "None"
            gem_data_edit[current_gem_check[1]] = "None"
            gem_data_edit[current_gem_check[2]] = "None"
            gem_data_edit[current_gem_check[3]] = "None"
        elif current_i == 1:
            gem_data_edit[current_gem_check[1]] = "None"
            gem_data_edit[current_gem_check[2]] = "None"
            gem_data_edit[current_gem_check[3]] = "None"
        elif current_i == 2:
            gem_data_edit[current_gem_check[2]] = "None"
            gem_data_edit[current_gem_check[3]] = "None"
        elif current_i == 3:
            gem_data_edit[current_gem_check[3]] = "None"
        gem_to_check += 4
    if local_testing == True:
        items_weapons_data = pd.read_csv (r'sims/dk/csv/EquipmentList - Weapons.csv')
    else:
        items_weapons_data = pd.read_csv (r'web/sims/dk/csv/EquipmentList - Weapons.csv')
    reg_gem_data_loc = items_weapons_data.columns.get_loc('Total Gem')
    current_i = (((items_weapons_data[items_weapons_data['Name'] == item_mh])))
    current_i = current_i.to_csv(index=False, header=False, sep='\t')
    current_i = current_i.split("\t")
    current_i = int(current_i[reg_gem_data_loc])
    if current_i > 4:
        current_i = 4
        print("An Item Being Simmed Has More Than 4 Sockets.")
        print("The Item: " + str(item_mh))
    current_gem_check = list(range(1, 5))
    if current_i == 0:
        gem_data_edit[current_gem_check[0]] = "None"
        gem_data_edit[current_gem_check[1]] = "None"
        gem_data_edit[current_gem_check[2]] = "None"
        gem_data_edit[current_gem_check[3]] = "None"
    elif current_i == 1:
        gem_data_edit[current_gem_check[1]] = "None"
        gem_data_edit[current_gem_check[2]] = "None"
        gem_data_edit[current_gem_check[3]] = "None"
    elif current_i == 2:
        gem_data_edit[current_gem_check[2]] = "None"
        gem_data_edit[current_gem_check[3]] = "None"
    elif current_i == 3:
        gem_data_edit[current_gem_check[3]] = "None"
    current_i = (((items_weapons_data[items_weapons_data['Name'] == item_oh])))
    current_i = current_i.to_csv(index=False, header=False, sep='\t')
    current_i = current_i.split("\t")
    current_i = int(current_i[reg_gem_data_loc])
    if current_i > 4:
        current_i = 4
        print("An Item Being Simmed Has More Than 4 Sockets.")
        print("The Item: " + str(item_oh))
    current_gem_check = list(range(5, 9))
    if current_i == 0:
        gem_data_edit[current_gem_check[0]] = "None"
        gem_data_edit[current_gem_check[1]] = "None"
        gem_data_edit[current_gem_check[2]] = "None"
        gem_data_edit[current_gem_check[3]] = "None"
    elif current_i == 1:
        gem_data_edit[current_gem_check[1]] = "None"
        gem_data_edit[current_gem_check[2]] = "None"
        gem_data_edit[current_gem_check[3]] = "None"
    elif current_i == 2:
        gem_data_edit[current_gem_check[2]] = "None"
        gem_data_edit[current_gem_check[3]] = "None"
    elif current_i == 3:
        gem_data_edit[current_gem_check[3]] = "None"
    
    
    #Gem input here
    geard_gems = [input_gem1, input_gem2, input_gem3, input_gem4, input_gem5, input_gem6, input_gem7, input_gem8, input_gem9, input_gem10, input_gem11, input_gem12, input_gem13, input_gem14, input_gem15, input_gem16, input_gem17, input_gem18, input_gem19, input_gem20, input_gem21, input_gem22, input_gem23, input_gem24, input_gem25, input_gem26, input_gem27, input_gem28, input_gem29, input_gem30, input_gem31, input_gem32, input_gem33, input_gem34, input_gem35, input_gem36, input_gem37, input_gem38, input_gem39, input_gem40, input_gem41, input_gem42, input_gem43, input_gem44, input_gem45, input_gem46, input_gem47, input_gem48, input_gem49, input_gem50, input_gem51, input_gem52, input_gem53, input_gem54, input_gem55, input_gem56, input_gem57, input_gem58, input_gem59, input_gem60, input_gem61, input_gem62, input_gem63, input_gem64]
    c_gem_num = 1
    if local_testing == True:
        items_gems_data = pd.read_csv (r'sims/dk/csv/EquipmentList - Gems.csv')
    else:
        items_gems_data = pd.read_csv (r'web/sims/dk/csv/EquipmentList - Gems.csv')
    gem_attack_power = 0
    gem_strength = 0
    gem_agility = 0
    gem_spell_power = 0
    gem_dodge_rating = 0
    gem_parry_rating = 0
    gem_armor_pen = 0
    gem_expertise_rating = 0
    gem_intelligence = 0
    gem_crit_rating = 0
    gem_haste_rating = 0
    gem_hit_rating = 0
    gem_defense_rating = 0
    gem_resilience = 0
    gem_spell_pen = 0
    gem_stamina = 0
    gem_spirit = 0
    for gems_current in geard_gems:
        if gem_data_edit.get(c_gem_num) == "None":
            gems_current = "None"
        c_gem_num += 1
        if gems_current == "None":
            continue
        else:
            #only need rows 1 - 7
            current_i = (((items_gems_data[items_gems_data['Name'] == gems_current])))
            current_i = current_i.to_csv(index=False, header=False, sep='\t')
            current_i = current_i.split("\t")
            gem_amount_to_add = float(current_i[2])
            gem_stat_to_add = current_i[3]
            if gem_stat_to_add == "Attack Power":
                gem_attack_power += gem_amount_to_add
            elif gem_stat_to_add == "Strength":
                gem_strength += gem_amount_to_add
            elif gem_stat_to_add == "Agility":
                gem_agility += gem_amount_to_add
            elif gem_stat_to_add == "Spell Power":
                gem_spell_power += gem_amount_to_add
            elif gem_stat_to_add == "Dodge Rating":
                gem_dodge_rating += gem_amount_to_add
            elif gem_stat_to_add == "Parry Rating":
                gem_parry_rating += gem_amount_to_add
            elif gem_stat_to_add == "Armor Pen":
                gem_armor_pen += gem_amount_to_add
            elif gem_stat_to_add == "Expertise Rating":
                gem_expertise_rating += gem_amount_to_add
            elif gem_stat_to_add == "Intelligence":
                gem_intelligence += gem_amount_to_add
            elif gem_stat_to_add == "Crit Rating":
                gem_crit_rating += gem_amount_to_add
            elif gem_stat_to_add == "Haste Rating":
                gem_haste_rating += gem_amount_to_add
            elif gem_stat_to_add == "Hit Rating":
                gem_hit_rating += gem_amount_to_add
            elif gem_stat_to_add == "Defense Rating":
                gem_defense_rating += gem_amount_to_add
            elif gem_stat_to_add == "Resilience":
                gem_resilience += gem_amount_to_add
            elif gem_stat_to_add == "Spell Pen":
                gem_spell_pen += gem_amount_to_add
            elif gem_stat_to_add == "Stamina":
                gem_stamina += gem_amount_to_add
            elif gem_stat_to_add == "Spirit":
                gem_spirit += gem_amount_to_add
            elif gem_stat_to_add == "All Stats":
                gem_strength += gem_amount_to_add
                gem_agility += gem_amount_to_add
                gem_intelligence += gem_amount_to_add
                gem_stamina += gem_amount_to_add
                gem_spirit += gem_amount_to_add
            if current_i[5] != "None":
                gem2_amount_to_add = float(current_i[4])
                gem2_stat_to_add = current_i[5]
                if gem2_stat_to_add == "Attack Power":
                    gem_attack_power += gem2_amount_to_add
                elif gem2_stat_to_add == "Strength":
                    gem_strength += gem2_amount_to_add
                elif gem2_stat_to_add == "Agility":
                    gem_agility += gem2_amount_to_add
                elif gem2_stat_to_add == "Spell Power":
                    gem_spell_power += gem2_amount_to_add
                elif gem2_stat_to_add == "Dodge Rating":
                    gem_dodge_rating += gem2_amount_to_add
                elif gem2_stat_to_add == "Parry Rating":
                    gem_parry_rating += gem2_amount_to_add
                elif gem2_stat_to_add == "Armor Pen":
                    gem_armor_pen += gem2_amount_to_add
                elif gem2_stat_to_add == "Expertise Rating":
                    gem_expertise_rating += gem2_amount_to_add
                elif gem2_stat_to_add == "Intelligence":
                    gem_intelligence += gem2_amount_to_add
                elif gem2_stat_to_add == "Crit Rating":
                    gem_crit_rating += gem2_amount_to_add
                elif gem2_stat_to_add == "Haste Rating":
                    gem_haste_rating += gem2_amount_to_add
                elif gem2_stat_to_add == "Hit Rating":
                    gem_hit_rating += gem2_amount_to_add
                elif gem2_stat_to_add == "Defense Rating":
                    gem_defense_rating += gem2_amount_to_add
                elif gem2_stat_to_add == "Resilience":
                    gem_resilience += gem2_amount_to_add
                elif gem2_stat_to_add == "Spell Pen":
                    gem_spell_pen += gem2_amount_to_add
                elif gem2_stat_to_add == "Stamina":
                    gem_stamina += gem2_amount_to_add
                elif gem2_stat_to_add == "Spirit":
                    gem_spirit += gem2_amount_to_add
                elif gem2_stat_to_add == "All Stats":
                    gem_strength += gem2_amount_to_add
                    gem_agility += gem2_amount_to_add
                    gem_intelligence += gem2_amount_to_add
                    gem_stamina += gem2_amount_to_add
                    gem_spirit += gem2_amount_to_add

    #Meta Gem Input area
    if input_meta_gem1 != "None":
        current_i = (((items_gems_data[items_gems_data['Meta Name'] == input_meta_gem1])))
        current_i = current_i.to_csv(index=False, header=False, sep='\t')
        current_i = current_i.split("\t")
        gem_amount_to_add = float(current_i[10])
        gem_stat_to_add = current_i[11]
        if gem_stat_to_add == "Attack Power":
            gem_attack_power += gem_amount_to_add
        elif gem_stat_to_add == "Agility":
            gem_agility += gem_amount_to_add
        elif gem_stat_to_add == "Spell Power":
            gem_spell_power += gem_amount_to_add
        elif gem_stat_to_add == "Crit Rating":
            gem_crit_rating += gem_amount_to_add
        elif gem_stat_to_add == "Stamina":
            gem_stamina += gem_amount_to_add



    ##
    ##Pullin Current gear & Stats
    if local_testing == True:
        items_equipment_data = pd.read_csv (r'sims/dk/csv/EquipmentList - Gear.csv')
    else:
        items_equipment_data = pd.read_csv (r'web/sims/dk/csv/EquipmentList - Gear.csv')
    gear = []
    weapons = []
    gear.append(item_head)
    gear.append(item_neck)
    gear.append(item_shoulders)
    gear.append(item_back)
    gear.append(item_chest)
    gear.append(item_wrist)
    gear.append(item_gloves)
    gear.append(item_waist)
    gear.append(item_legs)
    gear.append(item_boots)
    gear.append(item_ring1)
    gear.append(item_ring2)
    gear.append(item_trinket1)
    gear.append(item_trinket2)
    gear.append(item_sigil)
    weapons.append(item_mh)
    weapons.append(item_oh)
    gears_strength = []
    gears_agility = []
    gears_stamina = []
    gears_intelligence = []
    gears_spirit = []
    gears_attack_power_bonuses = []
    gears_hit_rating = []
    gears_crit_rating = []
    gears_haste_rating = []
    gears_armor_pen_rating = []
    gears_expertise_rating = []
    gears_armor = []
    gears_defense_rating = []
    gears_dodge_rating = []
    gears_parry_rating = []
    weapons_item_slot = []
    weapons_type = []
    weapons_min_damage = []
    weapons_max_damage = []
    weapons_speed = []
    gear_list = 0
    weapon_list = 0
    gears_strength_index = items_equipment_data.columns.get_loc('Strength')
    gears_agility_index = items_equipment_data.columns.get_loc('Agility')
    gears_stamina_index = items_equipment_data.columns.get_loc('Stamina')
    gears_intelligence_index = items_equipment_data.columns.get_loc('Intelligence')
    gears_spirit_index = items_equipment_data.columns.get_loc('Spirit')
    gears_attack_power_bonuses_index = items_equipment_data.columns.get_loc('Attack Power')
    gears_hit_rating_index = items_equipment_data.columns.get_loc('Hit Rating')
    gears_crit_rating_index = items_equipment_data.columns.get_loc('Crit Rating')
    gears_haste_rating_index = items_equipment_data.columns.get_loc('Haste Rating')
    gears_armor_pen_rating_index = items_equipment_data.columns.get_loc('Armor Pen')
    gears_expertise_rating_index = items_equipment_data.columns.get_loc('Expertise Rating')
    gears_armor_index = items_equipment_data.columns.get_loc('Armor')
    gears_defense_rating_index = items_equipment_data.columns.get_loc('Defense Rating')
    gears_dodge_rating_index = items_equipment_data.columns.get_loc('Dodge Rating')
    gears_parry_rating_index = items_equipment_data.columns.get_loc('Parry Rating')
    while gear_list < 15:
        if ((items_equipment_data[items_equipment_data['Name'] == gear[gear_list]])).empty:
            gear_list += 1
            continue
        else:
            current_i = (((items_equipment_data[items_equipment_data['Name'] == gear[gear_list]])))
            current_i = current_i.to_csv(index=False, header=False, sep='\t')
            current_i = current_i.split("\t")
            gears_strength.append(current_i[gears_strength_index])
            gears_agility.append(current_i[gears_agility_index])
            gears_stamina.append(current_i[gears_stamina_index])
            gears_intelligence.append(current_i[gears_intelligence_index])
            gears_spirit.append(current_i[gears_spirit_index])
            gears_attack_power_bonuses.append(current_i[gears_attack_power_bonuses_index])
            gears_hit_rating.append(current_i[gears_hit_rating_index])
            gears_crit_rating.append(current_i[gears_crit_rating_index])
            gears_haste_rating.append(current_i[gears_haste_rating_index])
            gears_armor_pen_rating.append(current_i[gears_armor_pen_rating_index])
            gears_expertise_rating.append(current_i[gears_expertise_rating_index])
            gears_armor.append(current_i[gears_armor_index])
            gears_defense_rating.append(current_i[gears_defense_rating_index])
            gears_dodge_rating.append(current_i[gears_dodge_rating_index])
            gears_parry_rating.append(current_i[gears_parry_rating_index])
            gear_list += 1
            
    #These columns not yet added to items: GEMS	sockte bonus & amount Proc and proc amounts and values
    #1Meta gem, Gem1-Gem64, socketbonus1-socket16
    
    if item_mh == "":
        items_mh_lowend = 1
        items_mh_topend = 10
        items_mh_speed = 1.0
        items_oh_lowend = 1
        items_oh_topend = 10
        items_oh_speed = 1.0
        item_two_hand = True
    else:
        #EquipmentList - Weapons
        if local_testing == True:
            items_weapons_data = pd.read_csv (r'sims/dk/csv/EquipmentList - Weapons.csv')
        else:
            items_weapons_data = pd.read_csv (r'web/sims/dk/csv/EquipmentList - Weapons.csv')
        gears_strength_index = items_weapons_data.columns.get_loc('Strength')
        gears_agility_index = items_weapons_data.columns.get_loc('Agility')
        gears_stamina_index = items_weapons_data.columns.get_loc('Stamina')
        gears_intelligence_index = items_weapons_data.columns.get_loc('Intelligence')
        gears_spirit_index = items_weapons_data.columns.get_loc('Spirit')
        gears_attack_power_bonuses_index = items_weapons_data.columns.get_loc('Attack Power')
        gears_hit_rating_index = items_weapons_data.columns.get_loc('Hit Rating')
        gears_crit_rating_index = items_weapons_data.columns.get_loc('Crit Rating')
        gears_haste_rating_index = items_weapons_data.columns.get_loc('Haste Rating')
        gears_armor_pen_rating_index = items_weapons_data.columns.get_loc('Armor Pen')
        gears_expertise_rating_index = items_weapons_data.columns.get_loc('Expertise Rating')
        gears_armor_index = items_weapons_data.columns.get_loc('Armor')
        gears_defense_rating_index = items_weapons_data.columns.get_loc('Defense Rating')
        gears_dodge_rating_index = items_weapons_data.columns.get_loc('Dodge Rating')
        gears_parry_rating_index = items_weapons_data.columns.get_loc('Parry Rating')
        weapons_item_slot_index = items_weapons_data.columns.get_loc('Item Slot')
        weapons_type_index = items_weapons_data.columns.get_loc('Type')
        weapons_min_damage_index = items_weapons_data.columns.get_loc('Min Damage')
        weapons_max_damage_index = items_weapons_data.columns.get_loc('Max Damage')
        weapons_speed_index = items_weapons_data.columns.get_loc('Speed')
        while weapon_list < 2:
            if ((items_weapons_data[items_weapons_data['Name'] == weapons[weapon_list]])).empty:
                weapon_list += 1
                continue
            else:
                current_i = (((items_weapons_data[items_weapons_data['Name'] == weapons[weapon_list]])))
                current_i = current_i.to_csv(index=False, header=False, sep='\t')
                current_i = current_i.split("\t")
                gears_strength.append(current_i[gears_strength_index])
                gears_agility.append(current_i[gears_agility_index])
                gears_stamina.append(current_i[gears_stamina_index])
                gears_intelligence.append(current_i[gears_intelligence_index])
                gears_spirit.append(current_i[gears_spirit_index])
                gears_attack_power_bonuses.append(current_i[gears_attack_power_bonuses_index])
                gears_hit_rating.append(current_i[gears_hit_rating_index])
                gears_crit_rating.append(current_i[gears_crit_rating_index])
                gears_haste_rating.append(current_i[gears_haste_rating_index])
                gears_armor_pen_rating.append(current_i[gears_armor_pen_rating_index])
                gears_expertise_rating.append(current_i[gears_expertise_rating_index])
                gears_armor.append(current_i[gears_armor_index])
                gears_defense_rating.append(current_i[gears_defense_rating_index])
                gears_dodge_rating.append(current_i[gears_dodge_rating_index])
                gears_parry_rating.append(current_i[gears_parry_rating_index])
                weapons_item_slot.append(current_i[weapons_item_slot_index])
                weapons_type.append(current_i[weapons_type_index])
                weapons_min_damage.append(current_i[weapons_min_damage_index])
                weapons_max_damage.append(current_i[weapons_max_damage_index])
                weapons_speed.append(current_i[weapons_speed_index])
                if weapons_item_slot[0] == "2handed":
                    weapon_list += 2
                    item_two_hand = True
                else:
                    item_two_hand = False
                    weapon_list += 1
        items_mh_lowend = float(weapons_min_damage[0])
        items_mh_topend = float(weapons_max_damage[0])
        items_mh_speed = float(weapons_speed[0])
        if item_two_hand == False:
            items_oh_lowend = float(weapons_min_damage[1])
            items_oh_topend = float(weapons_max_damage[1])
            items_oh_speed = float(weapons_speed[1])
        elif item_two_hand == True:
            items_oh_lowend = 1
            items_oh_topend = 10
            items_oh_speed = 1.0
        #this area should sum totals from gear pulled in
        
    #Lookup Socket Bonus Here
    socket_lookup_num = 0
    all_socket_bonuses = [input_socketbonus1, input_socketbonus2, input_socketbonus3, input_socketbonus4, input_socketbonus5, input_socketbonus6, input_socketbonus7, input_socketbonus8, input_socketbonus9, input_socketbonus10, input_socketbonus11, input_socketbonus12, input_socketbonus13, input_socketbonus14, input_socketbonus15, input_socketbonus16]
    socket_items_list = [item_mh, item_oh, item_head, item_neck, item_shoulders, item_back, item_chest, item_wrist, item_gloves, item_waist, item_legs, item_boots, item_ring1, item_ring2, item_trinket1, item_trinket2]
    for all_socket in all_socket_bonuses:
        if all_socket != False:
            socket_lookup_item = socket_items_list[socket_lookup_num]
            if socket_lookup_num < 2:
                current_i = (((items_weapons_data[items_weapons_data['Name'] == socket_lookup_item])))
                socket_bonus_amount = current_i.iloc[-1:]['Socket Bonus Amount']
                socket_bonus_amount = float(socket_bonus_amount.to_csv(index=False, header=False, sep=' '))
                socket_bonus_type = current_i.iloc[-1:]['Socket Bonus Type']
                socket_bonus_type= socket_bonus_type.to_csv(index=False, header=False, sep=' ')
                if socket_bonus_type == "Attack Power":
                    gem_attack_power += socket_bonus_amount
                elif socket_bonus_type == "Strength":
                    gem_strength += socket_bonus_amount
                elif socket_bonus_type == "Agility":
                    gem_agility += socket_bonus_amount
                elif socket_bonus_type == "Dodge Rating":
                    gem_dodge_rating += socket_bonus_amount
                elif socket_bonus_type == "Parry Rating":
                    gem_parry_rating += socket_bonus_amount
                elif socket_bonus_type == "Expertise Rating":
                    gem_expertise_rating += socket_bonus_amount
                elif socket_bonus_type == "Intelligence":
                    gem_intelligence += socket_bonus_amount
                elif socket_bonus_type == "Crit Rating":
                    gem_crit_rating += socket_bonus_amount
                elif socket_bonus_type == "Haste Rating":
                    gem_haste_rating += socket_bonus_amount
                elif socket_bonus_type == "Hit Rating":
                    gem_hit_rating += socket_bonus_amount
                elif socket_bonus_type == "Defense Rating":
                    gem_defense_rating += socket_bonus_amount
                elif socket_bonus_type == "Resilience":
                    gem_resilience += socket_bonus_amount
                elif socket_bonus_type == "Stamina":
                    gem_stamina += socket_bonus_amount
                elif socket_bonus_type == "Armor Pen":
                    gem_armor_pen += socket_bonus_amount
            else:
                current_i = (((items_equipment_data[items_equipment_data['Name'] == socket_lookup_item])))
                socket_bonus_amount = current_i.iloc[-1:]['Socket Bonus Amount']
                socket_bonus_amount= float(socket_bonus_amount.to_csv(index=False, header=False, sep=' '))
                socket_bonus_type = current_i.iloc[-1:]['Socket Bonus Type']
                socket_bonus_type= socket_bonus_type.to_csv(index=False, header=False, sep=' ')
                if socket_bonus_type == "Attack Power":
                    gem_attack_power += socket_bonus_amount
                elif socket_bonus_type == "Strength":
                    gem_strength += socket_bonus_amount
                elif socket_bonus_type == "Agility":
                    gem_agility += socket_bonus_amount
                elif socket_bonus_type == "Dodge Rating":
                    gem_dodge_rating += socket_bonus_amount
                elif socket_bonus_type == "Parry Rating":
                    gem_parry_rating += socket_bonus_amount
                elif socket_bonus_type == "Expertise Rating":
                    gem_expertise_rating += socket_bonus_amount
                elif socket_bonus_type == "Intelligence":
                    gem_intelligence += socket_bonus_amount
                elif socket_bonus_type == "Crit Rating":
                    gem_crit_rating += socket_bonus_amount
                elif socket_bonus_type == "Haste Rating":
                    gem_haste_rating += socket_bonus_amount
                elif socket_bonus_type == "Hit Rating":
                    gem_hit_rating += socket_bonus_amount
                elif socket_bonus_type == "Defense Rating":
                    gem_defense_rating += socket_bonus_amount
                elif socket_bonus_type == "Resilience":
                    gem_resilience += socket_bonus_amount
                elif socket_bonus_type == "Stamina":
                    gem_stamina += socket_bonus_amount
                elif socket_bonus_type == "Armor Pen":
                    gem_armor_pen += socket_bonus_amount
        socket_lookup_num += 1
        
        
    #Lookup Enchant Here
    enchant_lookup_num = 0
    all_enchant_bonuses = [input_mh_enchant, input_oh_enchant, input_head_enchant, input_shoulder_enchant, input_back_enchant, input_chest_enchant, input_wrist_enchant, input_gloves_enchant, input_legs_enchant, input_boots_enchant, input_ring1_enchant, input_ring2_enchant]
    enchant_items_list = [item_mh, item_oh, item_head, item_shoulders, item_back, item_chest, item_wrist, item_gloves, item_legs, item_boots, item_ring1, item_ring2]
    if local_testing == True:
        items_enchant_data = pd.read_csv (r'sims/dk/csv/EquipmentList - Enchants.csv')
    else:
        items_enchant_data = pd.read_csv (r'web/sims/dk/csv/EquipmentList - Enchants.csv')
    for all_enchant in all_enchant_bonuses:
        if all_enchant != "None":
            #enchant_lookup_item = enchant_items_list[enchant_lookup_num]
            enchant_lookup_item = all_enchant_bonuses[enchant_lookup_num]
            current_i = (((items_enchant_data[items_enchant_data['Name'] == enchant_lookup_item])))
            enchant_bonus_amount = current_i.iloc[-1:]['Amount']
            enchant_bonus_amount = float(enchant_bonus_amount.to_csv(index=False, header=False, sep=' '))
            enchant_bonus_type = current_i.iloc[-1:]['Stat']
            enchant_bonus_type = enchant_bonus_type.to_csv(index=False, header=False, sep=' ')
            enchant_bonus_amount2 = current_i.iloc[-1:]['Amount2']
            enchant_bonus_amount2 = float(enchant_bonus_amount2.to_csv(index=False, header=False, sep=' '))
            enchant_bonus_type2 = current_i.iloc[-1:]['Stat2']
            enchant_bonus_type2 = enchant_bonus_type2.to_csv(index=False, header=False, sep=' ')
            if enchant_bonus_type == "Attack Power":
                gem_attack_power += enchant_bonus_amount
            elif enchant_bonus_type == "Strength":
                gem_strength += enchant_bonus_amount
            elif enchant_bonus_type == "Agility":
                gem_agility += enchant_bonus_amount
            elif enchant_bonus_type == "Dodge Rating":
                gem_dodge_rating += enchant_bonus_amount
            elif enchant_bonus_type == "Parry Rating":
                gem_parry_rating += enchant_bonus_amount
            elif enchant_bonus_type == "Expertise Rating":
                gem_expertise_rating += enchant_bonus_amount
            elif enchant_bonus_type == "Intelligence":
                gem_intelligence += enchant_bonus_amount
            elif enchant_bonus_type == "Crit Rating":
                gem_crit_rating += enchant_bonus_amount
            elif enchant_bonus_type == "Haste Rating":
                gem_haste_rating += enchant_bonus_amount
            elif enchant_bonus_type == "Hit Rating":
                gem_hit_rating += enchant_bonus_amount
            elif enchant_bonus_type == "Defense Rating":
                gem_defense_rating += enchant_bonus_amount
            elif enchant_bonus_type == "Resilience":
                gem_resilience += enchant_bonus_amount
            elif enchant_bonus_type == "Stamina":
                gem_stamina += enchant_bonus_amount
            elif enchant_bonus_type == "Armor Pen":
                gem_armor_pen += enchant_bonus_amount
            elif enchant_bonus_type == "All Stats":
                gem_strength += enchant_bonus_amount
                gem_agility += enchant_bonus_amount
                gem_stamina += enchant_bonus_amount
            if enchant_bonus_type2 == "Attack Power":
                gem_attack_power += enchant_bonus_amount2
            elif enchant_bonus_type2 == "Strength":
                gem_strength += enchant_bonus_amount2
            elif enchant_bonus_type2 == "Agility":
                gem_agility += enchant_bonus_amount2
            elif enchant_bonus_type2 == "Dodge Rating":
                gem_dodge_rating += enchant_bonus_amount2
            elif enchant_bonus_type2 == "Parry Rating":
                gem_parry_rating += enchant_bonus_amount2
            elif enchant_bonus_type2 == "Expertise Rating":
                gem_expertise_rating += enchant_bonus_amount2
            elif enchant_bonus_type2 == "Intelligence":
                gem_intelligence += enchant_bonus_amount2
            elif enchant_bonus_type2 == "Crit Rating":
                gem_crit_rating += enchant_bonus_amount2
            elif enchant_bonus_type2 == "Haste Rating":
                gem_haste_rating += enchant_bonus_amount2
            elif enchant_bonus_type2 == "Hit Rating":
                gem_hit_rating += enchant_bonus_amount2
            elif enchant_bonus_type2 == "Defense Rating":
                gem_defense_rating += enchant_bonus_amount2
            elif enchant_bonus_type2 == "Resilience":
                gem_resilience += enchant_bonus_amount2
            elif enchant_bonus_type2 == "Stamina":
                gem_stamina += enchant_bonus_amount2
            elif enchant_bonus_type2 == "Armor Pen":
                gem_armor_pen += enchant_bonus_amount2
            elif enchant_bonus_type2 == "All Stats":
                gem_strength += enchant_bonus_amount2
                gem_agility += enchant_bonus_amount2
                gem_stamina += enchant_bonus_amount2
        enchant_lookup_num += 1
    rune_of_cinderglacier = False
    rune_of_lichbane = False
    rune_of_razorice = False
    rune_of_the_fallen_crusader = False
    sword_berserking_enchant = False
    swordguard_enchant = False
    engi_gloves_enchant = False
    rune_of_cinderglacier_hand = "No"
    rune_of_lichbane_hand = "No"
    rune_of_razorice_hand = "No"
    rune_of_the_fallen_crusader_hand = "No"
    sword_berserking_enchant_hand = "No"
    rune_of_cinderglacier_hand_o = "No"
    rune_of_lichbane_hand_o = "No"
    rune_of_razorice_hand_o = "No"
    rune_of_the_fallen_crusader_hand_o = "No"
    sword_berserking_enchant_hand_o = "No"
    if input_mh_enchant == "Rune of Cinderglacier":
        rune_of_cinderglacier = True
        rune_of_cinderglacier_hand = "mh"
    elif input_mh_enchant == "Rune of Lichbane":
        rune_of_lichbane = True
        rune_of_lichbane_hand = "mh"
    elif input_mh_enchant == "Rune of Razorice":
        rune_of_razorice = True
        rune_of_razorice_hand = "mh"
    elif input_mh_enchant == "Rune of the Fallen Crusader":
        rune_of_the_fallen_crusader = True
        rune_of_the_fallen_crusader_hand = "mh"
    elif input_mh_enchant == "Enchant Weapon - Berserking":
        sword_berserking_enchant = True
        sword_berserking_enchant_hand = "mh"
    if input_oh_enchant == "Rune of Cinderglacier":
        rune_of_cinderglacier = True
        rune_of_cinderglacier_hand_o = "oh"
    elif input_oh_enchant == "Rune of Lichbane":
        rune_of_lichbane = True
        rune_of_lichbane_hand_o = "oh"
    elif input_oh_enchant == "Rune of Razorice":
        rune_of_razorice = True
        rune_of_razorice_hand_o = "oh"
    elif input_oh_enchant == "Rune of the Fallen Crusader":
        rune_of_the_fallen_crusader = True
        rune_of_the_fallen_crusader_hand_o = "oh"
    elif input_oh_enchant == "Enchant Weapon - Berserking":
        sword_berserking_enchant = True
        sword_berserking_enchant_hand_o = "oh"
    if input_back_enchant == "Swordguard Embroidery":
        swordguard_enchant = True
    if input_gloves_enchant == "Hyperspeed Accelerators":
        engi_gloves_enchant = True
    



    
    top_str = sum(float(sub) for sub in gears_strength) + base_strength + gem_strength
    top_agi = sum(float(sub) for sub in gears_agility) + base_agility + gem_agility
    top_stam = sum(float(sub) for sub in gears_stamina) + base_stamina + gem_stamina
    top_intel = sum(float(sub) for sub in gears_intelligence) + base_intel + gem_intelligence
    top_spirit = sum(float(sub) for sub in gears_spirit) + base_spirit + gem_spirit
    top_ap = sum(float(sub) for sub in gears_attack_power_bonuses) + base_m_ap + gem_attack_power
    top_hit_rating = sum(float(sub) for sub in gears_hit_rating) + gem_hit_rating
    top_crit_rating = sum(float(sub) for sub in gears_crit_rating) + gem_crit_rating
    top_haste_rating = sum(float(sub) for sub in gears_haste_rating) + gem_haste_rating
    top_armor_pen_rating = sum(float(sub) for sub in gears_armor_pen_rating) + gem_armor_pen
    top_expertise_rating = sum(float(sub) for sub in gears_expertise_rating) + gem_expertise_rating
    top_armor = sum(float(sub) for sub in gears_armor)
    top_defense_rating = sum(float(sub) for sub in gears_defense_rating) + gem_defense_rating
    top_dodge_rating = sum(float(sub) for sub in gears_dodge_rating) + gem_dodge_rating
    top_parry_rating = sum(float(sub) for sub in gears_parry_rating) + gem_parry_rating
    
    #Add in Trinket Information here
    use_trinket_index = items_equipment_data.columns.get_loc('Use Trinket')
    trinket_type_index = items_equipment_data.columns.get_loc('Trinket Type')
    trinket_chanceon_index = items_equipment_data.columns.get_loc('Trinket Chanceon')
    trinket_chanceperc_index = items_equipment_data.columns.get_loc('Trinket Chanceperc')
    trinket_bonus_amount_index = items_equipment_data.columns.get_loc('Trinket Bonus Amount')
    trinket_bonus_type_index = items_equipment_data.columns.get_loc('Trinket Bonus Type')
    trinket_length_index = items_equipment_data.columns.get_loc('Trinket Length')
    trinket_icd_index = items_equipment_data.columns.get_loc('Trinket ICD')
    trinket_min_damage_index = items_equipment_data.columns.get_loc('Damage Low')
    trinket_max_damage_index = items_equipment_data.columns.get_loc('Damage High')
    #Trinket 1 lookup here
    current_i = (((items_equipment_data[items_equipment_data['Name'] == gear[12]])))
    current_i = current_i.to_csv(index=False, header=False, sep='\t')
    current_i = current_i.split("\t")
    trinket_1_use = False
    trinket_2_use = False
    if current_i[use_trinket_index] == 'True':
        trinket1_type = current_i[trinket_type_index]
        trinket1_chanceon = current_i[trinket_chanceon_index]
        trinket1_chanceperc = current_i[trinket_chanceperc_index]
        trinket1_bonus_amount = current_i[trinket_bonus_amount_index]
        trinket1_bonus_type = current_i[trinket_bonus_type_index]
        trinket1_length = current_i[trinket_length_index]
        trinket1_icd = current_i[trinket_icd_index]
        trinket1_min_damage = current_i[trinket_min_damage_index]
        trinket1_max_damage = current_i[trinket_max_damage_index]
        if len(trinket1_min_damage) > 1:
            trinket1_min_damage = int(float(trinket1_min_damage))
        else:
            trinket1_min_damage = int(float(0))
        if len(trinket1_max_damage) > 2:
            trinket1_max_damage = int(float(trinket1_max_damage))
        else:
            trinket1_max_damage = int(float(0))
        trinket_1_use = True
    #Trinket 2 lookup here
    current_i = (((items_equipment_data[items_equipment_data['Name'] == gear[13]])))
    current_i = current_i.to_csv(index=False, header=False, sep='\t')
    current_i = current_i.split("\t")
    if current_i[use_trinket_index] == 'True':
        trinket2_type = current_i[trinket_type_index]
        trinket2_chanceon = current_i[trinket_chanceon_index]
        trinket2_chanceperc = current_i[trinket_chanceperc_index]
        trinket2_bonus_amount = current_i[trinket_bonus_amount_index]
        trinket2_bonus_type = current_i[trinket_bonus_type_index]
        trinket2_length = current_i[trinket_length_index]
        trinket2_icd = current_i[trinket_icd_index]
        trinket2_min_damage = current_i[trinket_min_damage_index]
        trinket2_max_damage = current_i[trinket_max_damage_index]
        if len(trinket2_min_damage) > 1:
            trinket2_min_damage = int(float(trinket2_min_damage))
        else:
            trinket2_min_damage = int(float(0))
        if len(trinket2_max_damage) > 2:
            trinket2_max_damage = int(float(trinket2_max_damage))
        else:
            trinket2_max_damage = int(float(0))
        trinket_2_use = True
    ###END Trinket Lookup
    #Offcase Trinket Maker
    fury_of_five_flights_using = False
    if item_trinket1 == "Fury of the Five Flights" or item_trinket2 == "Fury of the Five Flights":
        fury_of_five_flights_using = True


    #Ghoul Stats
    if master_of_ghouls_points == 0:
        ghoul_strength = top_str
    ghoul_hit = int(top_hit_rating)
    ghoul_hit = (int(((ghoul_hit * 30.5)/100000)*100))/100
    ghoul_expertise = 0
    if ghoul_hit >= .08:
        ghoul_expertise = 6.5
    if use_army == True:
        army_strength = top_str
    
    
    


    if item_two_hand == True:
        attack_damage_normalization = 3.3
    elif item_two_hand == False:
        attack_damage_normalization = 2.4
        
    #Dranei Race Bonuses
    if race_selection == 4:
        top_hit_rating += 32.789 
    elif race_selection != 4:
        if dranei_in_party == True:
            top_hit_rating += 32.789 
            
            
    #Set Bonus Lookup
    tier_bonus_item_list = [item_head, item_shoulders, item_chest, item_legs, item_gloves]
    if local_testing == True:
        items_setbonus_data = pd.read_csv (r'sims/dk/csv/EquipmentList - Setbonus.csv')
    else:
        items_setbonus_data = pd.read_csv (r'web/sims/dk/csv/EquipmentList - Setbonus.csv')
    scourgeborne_battlegear_count = 0
    scourgeborne_plate_count = 0
    darkruned_battlegear_count = 0
    darkruned_plate_count = 0
    thassarians_battlegear_count = 0
    koltiras_battlegear_count = 0
    thassarians_plate_count = 0
    koltiras_plate_count = 0
    scourgelords_battlegear_count = 0
    scourgelords_plate_count = 0
    for items in tier_bonus_item_list:
        if ((items_setbonus_data[items_setbonus_data['Name'] == items])).empty:	
            continue
        else:	
            setbonus_item = (((items_setbonus_data[items_setbonus_data['Name'] == items])))	
            setbonus_item = setbonus_item["Tiername"]
            setbonus_item = setbonus_item.to_csv(index=False, header=False)
            setbonus_item = setbonus_item[:setbonus_item.find("\n")]
            if setbonus_item == "Scourgeborne Battlegear":	
            	scourgeborne_battlegear_count += 1
            if setbonus_item == "Scourgeborne Plate":	
            	scourgeborne_plate_count += 1
            if setbonus_item == "Darkruned Battlegear":	
            	darkruned_battlegear_count += 1
            if setbonus_item == "Darkruned Plate":	
            	darkruned_plate_count += 1
            if setbonus_item == "Thassarian's Battlegear":	
            	thassarians_battlegear_count += 1
            if setbonus_item == "Koltira's Battlegear":	
            	koltiras_battlegear_count += 1
            if setbonus_item == "Thassarian's Plate":	
            	thassarians_plate_count += 1
            if setbonus_item == "Koltira's Plate":	
            	koltiras_plate_count += 1
            if setbonus_item == "Scourgelord's Battlegear":	
            	scourgelords_battlegear_count += 1
            if setbonus_item == "Scourgelord's Plate":	
            	scourgelords_plate_count += 1
    scourgeborne_battlegear_two_set = 0
    scourgeborne_battlegear_four_set = False
    scourgeborne_plate_two_set = 0
    darkruned_battlegear_two_set = 0
    darkruned_battlegear_four_set = 0
    darkruned_plate_two_set = False
    t9_dps_two_set = False
    t9_dps_four_set = False
    t9_tank_two_set = False
    t9_tank_four_set = False
    scourgelords_battlegear_two_set = False
    scourgelords_battlegear_four_set = False
    scourgelords_plate_two_set = False
    #Set Bonus Variable Names Area
    if scourgeborne_battlegear_count >= 2:
        scourgeborne_battlegear_two_set = 5
    if scourgeborne_battlegear_count >= 4:
        scourgeborne_battlegear_four_set = True
    if scourgeborne_plate_count >= 2:
        scourgeborne_plate_two_set = 10
    if darkruned_battlegear_count >= 2:
        darkruned_battlegear_two_set = 8
    if darkruned_battlegear_count >= 4:
        darkruned_battlegear_four_set = .2
    if darkruned_plate_count >= 2:
        darkruned_plate_two_set = True #Effects Rune Strike... not added yet
    if thassarians_battlegear_count >= 2:
        t9_dps_two_set = True
    if thassarians_battlegear_count >= 4:
        t9_dps_four_set = True
    if koltiras_battlegear_count >= 2:
        t9_dps_two_set = True
    if koltiras_battlegear_count >= 4:
        t9_dps_four_set = True
    if thassarians_plate_count >= 2:
        t9_tank_two_set = True
    if thassarians_plate_count >= 4:
        t9_tank_four_set = True
    if koltiras_plate_count >= 2:
        t9_tank_two_set = True
    if koltiras_plate_count >= 4:
        t9_tank_four_set = True
    if scourgelords_battlegear_count >= 2:
        scourgelords_battlegear_two_set = True
    if scourgelords_battlegear_count >= 4:
        scourgelords_battlegear_four_set = True
    if scourgelords_plate_count >= 2: 
        scourgelords_plate_two_set = True 
        
       
        
    unbreak_armor_bone_shield_vamp_blood_cd_time = 60
    if t9_tank_four_set == True:
        unbreak_armor_bone_shield_vamp_blood_cd_time -= 10
        
            
    #Consumes
    if flask_of_endless_rage == True:
        top_ap += 180
    if food_spiced_worm_burger == True:
        top_crit_rating += 40
    if food_very_burnt_worg == True:
        top_haste_rating += 40
    if food_fish_feast == True:
        top_ap += 80
    if food_great_feast == True:
        top_ap += 60
    if food_blackened_dragonfin == True:
        top_agi  += 40
    if food_dragonfin_filet == True:
        top_str  += 40
    if food_mega_mammoth_meal == True:
        top_ap += 80
    if food_hearty_rhino == True:
        top_armor_pen_rating += 40
    if food_rhinolicious_wormsteak == True:
        top_expertise_rating += 40
    if food_snapper_extreme == True:
        top_hit_rating += 40
    #Raid Buff Adding
    
    
        
    
    
    
    if greater_gift_of_the_wild == True:
        raid_buff_gift_of_the_wild = False
    if raid_buff_gift_of_the_wild == True:
        top_str += 37
        top_agi += 37
        top_stam += 37
        top_intel += 37
        top_spirit += 37
    if raid_buff_horn_of_winter == True:
        top_str += 155
        top_agi += 155
        
        
    melee_haste_bonus = 0
    if raid_buff_improved_icy_talons == True:
        melee_haste_bonus = .20
        if improved_icy_talons_points == 1:
            melee_haste_bonus += .05
    if raid_buff_improved_icy_talons == False:
        if improved_icy_talons_points == 1:
            melee_haste_bonus = .25
        
    melee_haste_bonus2 = 0
    melee_haste_bonus3 = 0
    #More Raid Buffs
    increased_spell_crit = 0
    increased_spell_hit = 0
    increased_spell_damage = 0
    start_increased_physical_damage = 0
    increased_crit = 0
    start_increased_all_damage = 0
    increased_phy_crit = 0
    
    if raid_buff_ferocius_inspiration == True:
        start_increased_all_damage += .03
    if raid_buff_imp_moonkin_form == True:
        melee_haste_bonus2 = .03
    if raid_buff_blood_frenzy == True:
        start_increased_physical_damage += .03
    if raid_buff_heart_of_the_crusader == True:
        increased_crit += .03
    if raid_buff_improved_scorch == True:
        increased_spell_crit += .03
    if raid_buff_imp_faerie_fire == True:
        increased_spell_hit += (5 * 32.789)
    if raid_buff_curse_of_the_elements == True:
        increased_spell_damage += .13
    if raid_buff_moonkin_aura == True:
        increased_spell_crit += .05
    if raid_buff_leader_of_the_pack == True:
        increased_phy_crit += .05
        
        
    if raid_buff_curse_of_the_elements == False:
        if ebon_plaguebringer_points != 0:
            if ebon_plaguebringer_points == 1:
                increased_spell_damage += .04
            if ebon_plaguebringer_points == 2:
                increased_spell_damage += .09
            if ebon_plaguebringer_points == 3:
                increased_spell_damage += .13
             
                
    disease_bonus_damage_amount = 0
    if raid_buff_crypt_fever == True:
        disease_bonus_damage_amount = .3
    if raid_buff_crypt_fever == False:
        if crypt_fever_points != 0:
            disease_bonus_damage_amount = crypt_fever_points / 10
                
        
        
    death_and_decay_cd_length = 30
    if morbitity_points != 0:
        death_and_decay_cd_length -= (5 * morbitity_points)
        
    dancing_rune_weapon_damage_multi = .5

    ####
    dot_length = 15
    if epidemic_points != 0:
        dot_length += (3 * epidemic_points)
    global_cd = 1.5
    gcd = global_cd
    var_crit_amount = 2.0
    ##
    if input_meta_gem1 == "Chaotic Skyflare Diamond":
        var_crit_amount += .03
    if input_meta_gem1 == "Relentless Earthsiege Diamond":
        var_crit_amount += .03
    if dk_presence == 2:
        gcd = gcd - .5
    input_gcd = gcd


    mh_input_lowend_weapon_damage = items_mh_lowend
    mh_input_topend_weapon_damage = items_mh_topend
    mh_input_weapon_speed = items_mh_speed
    oh_input_lowend_weapon_damage = items_oh_lowend
    oh_input_topend_weapon_damage = items_oh_topend
    oh_input_weapon_speed = items_oh_speed
    #If H2 = True then wearing a 2h; False if has 2 1h's
    H2 = item_two_hand
    
    if two_handed_weapon_blood_points != 0:
        if H2 == True:
            start_increased_all_damage += ((two_handed_weapon_blood_points * 2) / 100)
            
    
    if glyph_frost_strike == True:
        frost_strike_cost = 32
    if glyph_frost_strike == False:
        frost_strike_cost = 40
    
    death_coil_cost = 40

    #Default Values
    target_current_armor = target_armor
    if raid_buff_expose_armor == True:
        target_current_armor -= (target_armor * .2)
    if raid_buff_curse_of_weakness == True:
        target_current_armor -= (target_armor * .05)
    shattering_throw_armor_reduc_amount = target_armor * .2
    
    
    #Toughness Talent point
    if toughness_points == 5:
        top_armor += (top_armor * .1)
    elif toughness_points == 4:
        top_armor += (top_armor * .08)
    elif toughness_points == 3:
        top_armor += (top_armor * .06)
    elif toughness_points == 2:
        top_armor += (top_armor * .04)
    elif toughness_points == 1:
        top_armor += (top_armor * .02)
    my_own_current_armor = top_armor + base_armor
    if extra_armor_potion == True:
        my_own_current_armor += 3500
    if greater_gift_of_the_wild == True:
        my_own_current_armor += 1050
    if raid_buff_gift_of_the_wild == True:
        my_own_current_armor += 750

    #TODO: Add tanking selector or something, would prob take a lot of rewriting of core attack table code
    #Am I tanking?
    # if dk_spec == 2:
    #     tanking = True
    # if dk_spec != 2:
    #     tanking = False
        
    tanking = False
        
    sigil_of_strife = False
    sigil_of_awareness = False
    sigil_of_vengeful_heart = False
    sigil_of_the_frozen_conscience = False
    sigil_of_haunted_dreams = False
    sigil_of_hanged_man = False
    sigil_of_virulence = False
    sigil_of_the_wild_buck = False
    sigil_of_strife_amount = 0
    if item_sigil == "Wrathful Gladiator's Sigil of Strife":
        sigil_of_strife = True
        sigil_of_strife_amount = 204
    if item_sigil == "Relentless Gladiator's Sigil of Strife":
        sigil_of_strife = True
        sigil_of_strife_amount = 172
    if item_sigil == "Furious Gladiator's Sigil of Strife":
        sigil_of_strife = True
        sigil_of_strife_amount = 144
    if item_sigil == "Deadly Gladiator's Sigil of Strife":
        sigil_of_strife = True
        sigil_of_strife_amount = 120
    if item_sigil == "Sigil of Awareness":
        sigil_of_awareness = True
    if item_sigil == "Sigil of the Vengeful Heart":
        sigil_of_vengeful_heart = True
    if item_sigil == "Sigil of the Frozen Conscience":
        sigil_of_the_frozen_conscience = True
    if item_sigil == "Sigil of Haunted Dreams":
        sigil_of_haunted_dreams = True
    if item_sigil == "Sigil of the Hanged Man":
        sigil_of_hanged_man = True
    if item_sigil == "Sigil of Virulence":
        sigil_of_virulence = True
    if item_sigil == "Sigil of the Wild Buck":
        sigil_of_the_wild_buck = True
        


    if item_two_hand == False:
        if nerves_of_cold_steel == 3:
           top_hit_rating += (32.789 * 3)
        if nerves_of_cold_steel == 2:
            top_hit_rating += (32.789 * 2)
        if nerves_of_cold_steel == 1:
            top_hit_rating += (32.789 * 1)
            

    #Army
    army_active = False
    if use_army == True:
        army_strength = army_strength * .7
        army_ap = (army_strength - 10) + 846
        army_life_length = 40
        army_active = True

    #Clear Previous Math Area
    current_sim_number = 0  
    mh_attacks_so_far = 0
    oh_attacks_so_far = 0
    attack_type = 0

    #Math Function Area
    
    #OLD Doesn't actually do anything - can prob delete later
    #Resetting mh & oh amount of attacks in current sim
    # def amount_of_white_attacks(fight_length, mh_input_weapon_speed, oh_input_weapon_speed):
    #     mh_attacks_in_fight = 0
    #     oh_attacks_in_fight = 0
    #     mh_attacks_in_fight = fight_length / mh_input_weapon_speed
    #     if round(mh_attacks_in_fight) > mh_attacks_in_fight:
    #         mh_attacks_in_fight = round(mh_attacks_in_fight) - 1
    #     else:
    #         mh_attacks_in_fight = round(mh_attacks_in_fight)
    #     if H2 == False:
    #         oh_attacks_in_fight = length_of_fight / oh_input_weapon_speed
    #         if round(oh_attacks_in_fight) > oh_attacks_in_fight:
    #             oh_attacks_in_fight = round(oh_attacks_in_fight) - 1
    #         else:
    #             oh_attacks_in_fight = round(oh_attacks_in_fight)
    #     return (mh_attacks_in_fight, oh_attacks_in_fight)



    #Calling Functions Area
    # mh_white_wep_roll = weapon_roll(mh_input_lowend_weapon_damage,mh_input_topend_weapon_damage)
    # mh_white_attack = white_attack(mh_white_wep_roll, mh_input_weapon_speed, current_ap)
    # oh_white_wep_roll = weapon_roll(oh_input_lowend_weapon_damage,oh_input_topend_weapon_damage)
    # oh_white_attack = white_attack(oh_white_wep_roll, oh_input_weapon_speed, current_ap)

    #Resetting Sim Lists Functions To 0
    sum_mh_white_attacks_list = []
    sum_oh_white_attacks_list = []
    sum_damage_list = []
    sum_dps_list = []
    mh_white_attack_values = []
    oh_white_attack_values = []
    sum_ps_attacks_list = []
    sum_it_attacks_list = []
    sum_pest_attacks_list = []
    sum_obil_attacks_list = []
    sum_bs_attacks_list = []
    sum_fs_attacks_list = []
    sum_dot0_damage_list = []
    sum_dot1_damage_list = []
    sum_hb_attacks_list = []
    sum_oh_obil_attacks_list = []
    sum_oh_ps_attacks_list = []
    sum_oh_bs_attacks_list = []
    sum_oh_fs_attacks_list = []
    rune_of_razorice_damage_list = []
    rune_of_lichbane_damage_list = []
    rune_of_cinderglacier_damage_list = []
    trinket1_damage_list = []
    trinket2_damage_list = []
    bloodcaked_blades_damage_list = []
    wandering_plague_damage_list = []
    necrosis_damage_list = []
    dancing_rune_weapon_damage_list = []
    sudden_doom_damage_list = []
    unholy_blight_damage_list = []
    blood_boil_damage_list = []
    death_and_decay_damage_list = []
    death_coil_damage_list = []
    sum_scourge_strikes_attacks_list = []
    sum_death_strike_attacks_list = []
    sum_heart_strike_attacks_list = []
    garg_damage_list = []
    ghoul_damage_list = []
    ghoul_damage_claw_list = []
    army_damage_list = []
    army_damage_claw_list = []

    blood = 0
    frost = 2
    unholy = 4
    death = 6
    death_f = 8
    death_u = 10
    unable_to_do_anything = 0.1
    
    
    meta_as_bonus = False
    if input_meta_gem1 == "Thundering Skyflare Diamond":
        meta_as_bonus = True
    pre_input_gcd = gcd

    #Sim Area
    for item in range(amount_of_sims):
        fight_length = time_variance_rolled(fight_length_variance, length_of_fight)
        if activity_percent != 1:
            inactive_time = fight_length * (1 - activity_percent)
            gcd = pre_input_gcd + (inactive_time / fight_length)
        else:
            gcd = pre_input_gcd
        input_gcd = gcd
        sum_mh_white_attacks = 0
        trinket1_amount = 0
        trinket2_amount = 0
        trinket1_use_icd = 0
        trinket1_buff_time = 0
        trinket2_use_icd = 0
        trinket2_buff_time = 0
        trinket1_used = False
        trinket2_used = False
        trinket1_damage = 0
        trinket2_damage = 0
        trinket_hit_crit_tracker = 0
        howling_current_cd = 0
        rime_procd = False
        rotation = []
        rotation_time = []
        rotation_damage = []
        rotation_status = []
        rime_timer = 0
        sum_oh_white_attacks = 0
        sum_ps_attacks = 0
        sum_it_attacks = 0
        sum_pest_attacks = 0
        sum_obil_attacks = 0
        sum_bs_attacks = 0
        sum_fs_attacks = 0
        sum_hb_attacks = 0
        sum_dot0_damage = 0
        sum_dot1_damage = 0
        last_dot0_damage = 0
        last_dot1_damage = 0
        last_dot2_damage = 0
        rune_cd_tracker = [0, 0, 0, 0, 0, 0, 10000, 10000, 10000, 10000, 10000, 10000]
        bloodlust_used = False
        bloodlust_end = False
        berserking_used = False
        berserking_start_time_cd = berserking_start_time
        bloodfury_used = False
        bloodfury_start_time_cd = bloodfury_start_time
        hysteria_used = False
        hysteria_active = False
        hysteria_end = False
        tricksoftt_used = False
        tricksoftt_active = False
        tricksoftt_end = False
        pot_of_speed_used = False
        pot_of_speed_active = False
        pot_of_speed_end = False
        pot_of_wild_magic_used = False
        pot_of_wild_magic_active = False
        pot_of_wild_magic_end = False
        km_procd = False
        ua_cd_timer = 0
        erw_cd_timer = 0
        ua_buff_timer = 0
        ua_strength_increase_amount = 0
        ua_used = False
        dots = [0, 0, 0] #Dots 0 = Frost Fever.  1 = Blood Plague, 2 = Crypt Fever
        current_time = 0
        current_power = 10
        last_mh_attack_time = 0
        last_oh_attack_time = 0
        meta_as_bonus_active = False
        meta_as_bonus_cd = 0
        meta_as_bonus_active_time = 0
        how_cd = (horn - horn_timer) + 20
        deathchill_cd = 0
        deathchill_active = False
        deathchill_timer = 0
        use_death_rune = False
        blood_tap_cd = 0
        sum_oh_obil_attacks = 0
        sum_oh_ps_attacks = 0
        sum_oh_bs_attacks = 0
        sum_oh_fs_attacks = 0
        engi_gloves_enchant_cd = 0
        engi_gloves_enchant_active_timer = 0
        engi_gloves_buff_active = False
        swordguard_enchant_cd = 0
        swordguard_enchant_active_timer = 0
        swordguard_buff_active = False
        berskering_enchant_cd = 0
        berskering_enchant_active_timer = 0
        berskering_buff_active = False
        runeofthefallencrusader_buff_active = False
        runeofthefallencrusdaer_active_cd = 0
        rune_of_razorice_damage = 0
        rune_of_lichbane_damage = 0
        rune_of_cinderglacier_active = False
        rune_of_cinderglacier_active_count = 0
        rune_of_cinderglacier_damage = 0
        sigil_of_strife_timer = 0
        sigil_of_strife_active = False
        sigil_of_haunted_dreams_buff = False
        sigil_of_haunted_dreams_timer = 0 
        sigil_of_virulence_buff = False
        sigil_of_virulence_timer = 0 
        sigil_of_hanged_man_buff = False
        sigil_of_hanged_man_timer = 0
        sigil_of_hanged_man_count = 0
        necrosis_damage = 0
        skip_castable = 0
        t9_bonus = False
        t9_cd_timer = 0
        t9_active_timer = 0
        t10_4set_dps_buff = False
        t10_4set_dps_buff_timer = 0
        bloodcaked_blades_damage = 0
        desolation_buff = False
        desolation_buff_timer = 0
        wandering_plague_damage = 0
        blood_gorged_active = False
        bloody_vengeance_stacks = 0
        bloody_vengeance_timer = 0
        bone_shield_active = False
        bone_shield_buff_applied = False
        bone_shield_cd = 0
        bone_shield_length = 0
        bone_shield_stacks = 0
        bone_shield_last_damage = 0
        dancing_rune_weapon_damage = 0
        dancing_rune_weapon_active = False
        dancing_rune_weapon_length = 0
        dancing_rune_weapon_cd = 0
        sudden_doom_damage = 0
        unholy_blight_damage = 0
        unholy_blight_timer = 0
        unholy_blight_amount = 0
        multiple_adds_timer = 0
        multiple_adds_timer_bp = 0
        blood_boil_damage = 0
        death_and_decay_cd = 0
        death_and_decay_last_damage_time = 0
        death_and_decay_damage = 0
        death_coil_damage = 0
        sum_scourge_strikes_attacks = 0
        sum_death_strike_attacks = 0
        sum_heart_strike_attacks = 0
        gargoyle_cd = 0
        garg_ap = 0
        garg_haste = 0
        garg_damage = 0
        ghoul_cd = 180
        last_ghoul_attack = 0
        ghoul_attack_tracker = 0
        ghoul_damage = 0
        ghoul_damage_claw = 0
        ghoul_frenzy_buff_timer = 0
        ghoul_leader_crit = 0
        army_damage = 0
        army_damage_claw = 0
        army_attack_tracker = 0
        ghoul_energy = 100
        ghoul_last_energy_tick = 0
        melee_haste_bonus3 = 0
        fury_of_five_flights_stacks = 0
        fury_of_five_flights_timer = 0
        melee_haste_bonus3 = 0
        melee_haste_bonus4 = 0
        rune_0_tracker = []
        rune_1_tracker = []
        rune_2_tracker = []
        rune_3_tracker = []
        rune_4_tracker = []
        rune_5_tracker = []
        rune_6_tracker = []
        rune_7_tracker = []
        rune_8_tracker = []
        rune_9_tracker = []
        rune_10_tracker = []
        rune_11_tracker = []
        rune_time_tracker = []
        runic_power_tracker = []
        increased_all_damage = start_increased_all_damage
        increased_physical_damage = start_increased_physical_damage
        used_gcd = False
        bonus_loop_expertise_rating = 0
        bonus_loop_armor_pen_rating = 0
        bonus_loop_crit_rating = 0
        bonus_loop_agility = 0
        bonus_loop_hit = 0
        bonus_loop_hp = 0
        bonus_loop_ap = 0
        bonus_loop_haste_rating = 0
        bonus_loop_str = 0
        bonus_loop_stam = 0
        hit_from_other = 0
        ghoul_buffs_t = 0
        used_shattering = False
        shattering_used_at_time = 0
        shattering_throw_end = False
        removed_extra_armor = False
        below_my_own_current_armor = 0
        current_armor = target_current_armor
        death_n_decay_apply_time = -1
        garg_summon_time = 0
        garg_last_damage_cast = 0
        gary_active = False
        if bone_shield_points == 1:
            bone_shield_active = True
        if pre_pot_potion == True:
            if pot_of_speed == True:
                if pot_of_speed_start_time < 60:
                    pot_of_speed_start_time += 60
                bonus_loop_haste_rating += 500
                pre_pot_potion_used = True
            elif pot_of_wild_magic == True:
                if pot_of_wild_magic_start_time < 60:
                    pot_of_wild_magic_start_time += 60
                bonus_loop_crit_rating += 200
                pre_pot_potion_used = True
        #Actual Start of Sim
        while current_time < fight_length:
            last_rune_change = rune_cd_tracker
            just_used_death_rune = False
            use_death_rune = False
            if used_gcd == True:
                rune_0_tracker.append(rune_cd_tracker[0])
                rune_1_tracker.append(rune_cd_tracker[1])
                rune_2_tracker.append(rune_cd_tracker[2])
                rune_3_tracker.append(rune_cd_tracker[3])
                rune_4_tracker.append(rune_cd_tracker[4])
                rune_5_tracker.append(rune_cd_tracker[5])
                rune_6_tracker.append(rune_cd_tracker[6])
                rune_7_tracker.append(rune_cd_tracker[7])
                rune_8_tracker.append(rune_cd_tracker[8])
                rune_9_tracker.append(rune_cd_tracker[9])
                rune_10_tracker.append(rune_cd_tracker[10])
                rune_11_tracker.append(rune_cd_tracker[11])
                rune_time_tracker.append(current_time-gcd)
                runic_power_tracker.append(current_power)
            rune_0_tracker.append(rune_cd_tracker[0])
            rune_1_tracker.append(rune_cd_tracker[1])
            rune_2_tracker.append(rune_cd_tracker[2])
            rune_3_tracker.append(rune_cd_tracker[3])
            rune_4_tracker.append(rune_cd_tracker[4])
            rune_5_tracker.append(rune_cd_tracker[5])
            rune_6_tracker.append(rune_cd_tracker[6])
            rune_7_tracker.append(rune_cd_tracker[7])
            rune_8_tracker.append(rune_cd_tracker[8])
            rune_9_tracker.append(rune_cd_tracker[9])
            rune_10_tracker.append(rune_cd_tracker[10])
            rune_11_tracker.append(rune_cd_tracker[11])
            rune_time_tracker.append(current_time)
            runic_power_tracker.append(current_power)
            used_gcd = False
            
            #Armor Pen Area
            armor_penetration = (top_armor_pen_rating + bonus_loop_armor_pen_rating / 7) * 0.5
            if blood_gorged_points != 0:
                armor_penetration += blood_gorged_points * 2
            #Strength Percentage Area
            strtoap = top_str + bonus_loop_str 
            expertise_rating = top_expertise_rating + bonus_loop_expertise_rating
            total_crit_strike = top_crit_rating + bonus_loop_crit_rating
            total_stam = top_stam + bonus_loop_stam
            total_agi = top_agi + base_agility + bonus_loop_agility
            
            total_haste_rating = top_haste_rating + bonus_loop_haste_rating
            
            
            
            if veteran_of_the_third_war_points != 0:
                strtoap += strtoap * ((veteran_of_the_third_war_points * 2) / 100)
                expertise_rating += ((veteran_of_the_third_war_points * 2) * 7.9)
                total_stam += total_stam * (veteran_of_the_third_war_points / 100)
            if ravenous_dead_points != 0:
                strtoap += strtoap * (ravenous_dead_points / 100)
            if abominations_might_points != 0:
                strtoap += (strtoap * (abominations_might_points / 100))
            if abominations_might_points == 2:
                raid_buff_abomination_rage = True
                strtoap += strtoap * .02
            if greater_gift_of_the_wild == True:
                strtoap = strtoap + (strtoap * .02)
                total_agi += (total_agi * .02)
                total_stam += (total_stam * .02)
                # items_intelligence = items_intelligence + (items_intelligence * .02)
                # items_spirit = items_spirit + (items_spirit * .02)
            if raid_buff_greater_blessing_of_kings == True:
                strtoap = strtoap + (strtoap * .1)
                total_agi += (total_agi * .1)
                total_stam += (total_stam * .1)
                # items_intelligence = items_intelligence + (items_intelligence * .1)
                # items_spirit = items_spirit + (items_spirit * .1)
            if endless_winter_points == 2:
                strtoap = strtoap + (strtoap * .04)
            elif endless_winter_points == 1:
                strtoap = strtoap + (strtoap * .02)
                
            current_ap = (strtoap * 2) + top_ap + bonus_loop_ap
            if abominations_might_points == 1:
                if raid_buff_abomination_rage == False:
                    current_ap += current_ap * .05
            if raid_buff_abomination_rage == True:
                current_ap += current_ap * .1
            if raid_buff_greater_blessing_of_might == True:
                current_ap += 550 
            if raid_buff_imp_greater_blessing_of_might == True:
                current_ap += (550 * .25)
                
            if removed_extra_armor == False:
                if extra_armor_potion == True:
                    if pre_pot_potion == True:
                        if current_time > 60:
                            below_my_own_current_armor -= 3500
                            removed_extra_armor = True
                    else:
                        if current_time > 120:
                            below_my_own_current_armor -= 3500
                            removed_extra_armor = True
                        
            if bladed_armor_points != 0:
                current_ap += ((my_own_current_armor + below_my_own_current_armor) / 180) * bladed_armor_points
                
                
            #Expertise Area
            if rage_of_rivendale_points != 0:
                expertise_rating += (rage_of_rivendale_points * 7.9)
            #Race Selection extra expertise bonuses
            if race_selection == 0:
                if weapons_type[0] == 'sword':
                    expertise_rating += 3 * 7.9
                elif weapons_type[0] == 'mace':
                    expertise_rating += 3 * 7.9
            if race_selection == 1:
                if weapons_type[0] == 'mace':
                    expertise_rating += 5 * 7.9
            if race_selection == 5:
                if weapons_type[0] == 'axe':
                    expertise_rating += 5 * 7.9
            #Expertise from Tundra Stalker
            if tundra_stalker_points != 0:
                expertise_rating += tundra_stalker_points * 7.9
            #Expertise Math
            total_expertise_rating = expertise_rating
            total_expertise = total_expertise_rating / 7.9
            if round(total_expertise) > total_expertise:
                total_expertise = round(total_expertise) - 1
            elif round(total_expertise) <= total_expertise:
                total_expertise = round(total_expertise)
            all_expertise = total_expertise
            if all_expertise * .25 > 6.5:
                all_expertise_dodge = 6.5
            elif all_expertise * .25 <= 6.5:
                all_expertise_dodge = all_expertise
            all_expertise_parry = all_expertise
            if all_expertise * .25 > 14.0:
                all_expertise_parry = 14.0
            elif all_expertise * .25 <= 14.0:
                all_expertise_parry = all_expertise
                
            #Crit Strike Math
            if dark_conviction_points != 0:
                total_crit_strike += dark_conviction_points * 45.8
            if ebon_plaguebringer_points != 0:
                total_crit_strike += ebon_plaguebringer_points * 45.8
            total_crit = (((total_agi / 62.5) + 3.188 + (total_crit_strike / 45.8)) / 100) + increased_crit


            total_hp = (total_stam * 10) + base_hp + bonus_loop_hp
            
            
            hit_from_gear = top_hit_rating + bonus_loop_hit
            spell_magic_hit = 0
            if virtulence_points != 0:
                spell_magic_hit += (virtulence_points * 32.789)
            spell_hit_total = hit_from_gear + hit_from_other + spell_magic_hit
            if item_two_hand == False:
                if nerves_of_cold_steel != 0:
                   spell_hit_total -= (32.789 * nerves_of_cold_steel)
            
            
            if use_shattering_throw == True:
                if shattering_throw_time < current_time:
                    if used_shattering == False:
                        used_shattering = True
                        shattering_used_at_time = current_time
                        current_armor -= shattering_throw_armor_reduc_amount
                        rotation.append("Shattering Throw")
                        rotation_time.append(current_time)
                        rotation_damage.append(0)
                        rotation_status.append("Active")
                        
            if use_shattering_throw == True:
                if used_shattering == True:
                    if shattering_used_at_time + 10 < current_time:
                        if shattering_throw_end == False:
                            shattering_throw_end = True
                            current_armor += shattering_throw_armor_reduc_amount
                                







            #Ghoul
            if master_of_ghouls_points != 0:
                ghoul_strength = strtoap
            if ghoul_buffs_t == 0:
                ghoul_strength_modifier = .7
                if ravenous_dead_points != 0:
                    ghoul_strength_modifier += ghoul_strength_modifier * (ravenous_dead_points * .2)
                if glyph_ghoul == True:
                    ghoul_strength_modifier += .4
                    ghoul_buffs_t += 1
            ghoul_strength = ghoul_strength * ghoul_strength_modifier
            ghoul_haste_outside = total_haste_rating
            ghoul_agi = 856
            if master_of_ghouls_points != 0:
                if raid_buff_gift_of_the_wild == True:
                    ghoul_strength += 37
                    ghoul_agi += 37
                if raid_buff_horn_of_winter == True:
                    ghoul_strength += 155
                    ghoul_agi += 155
                if raid_buff_greater_blessing_of_kings == True:
                    ghoul_strength += ghoul_strength * .1
                    ghoul_agi += ghoul_agi * .1
            ghoul_crit = ((ghoul_agi / 62.5) / 100)
            army_crit = ((856 / 62.5) / 100)
            ghoul_ap = (ghoul_strength - 10) + (ghoul_agi - 10)
            if master_of_ghouls_points != 0:
                if raid_buff_abomination_rage == True:
                    ghoul_ap += ghoul_ap * .1
                if raid_buff_greater_blessing_of_might == True:
                    ghoul_ap += 550 
                if raid_buff_imp_greater_blessing_of_might == True:
                    ghoul_ap += (550 * .25)
            

            #Ghoul Attacks
            #Army
            if army_active == True:
                if current_time == 0:
                    g_army_attack_speed = 10
                    g_army_attack_speed_haste = (ghoul_haste_outside / 25.21) / 100 #Returns a result of 0 - 1 for 0% - 100%
                    g_army_attack_speed = g_army_attack_speed * (.1 * (1 - g_army_attack_speed_haste))
                    g_army_to_do_attacks_amount = int((40/g_army_attack_speed))
                    for army_ghoul_num in range(0, 8):
                        army_time_vari = (random.randint(0, 999))/1000
                        army_current_time = 0
                        army_current_time += army_time_vari
                        for army_ghoul in range(0, g_army_to_do_attacks_amount):
                            g_army_attack_damage_amount = random.randint(60, 102)
                            g_army_attack_damage_amount = g_army_attack_damage_amount + (2 * army_ap / 14) - (army_strength / 45)
                            g_army_attack_damage_amount = g_army_attack_damage_amount * .5
                            armor_red_amount = dam_reduc(current_armor, armor_penetration, target_level)
                            if army_attack_tracker == 4:
                                ghoul_army_attack_table_results = ghoul_attack_table(target_level, ghoul_hit, ghoul_expertise, True, army_crit)
                                g_army_attack_damage_amount = g_army_attack_damage_amount * 1.5
                                if ghoul_army_attack_table_results == 0:
                                    rotation.append("Army Ghoul - Claw")
                                    rotation_time.append(army_current_time)
                                    rotation_status.append("Miss")
                                    g_army_attack_damage_amount = 0
                                elif ghoul_army_attack_table_results == 1: 
                                    rotation.append("Army Ghoul - Claw")
                                    rotation_time.append(army_current_time)
                                    rotation_status.append("Dodge")
                                    g_army_attack_damage_amount = 0
                                elif ghoul_army_attack_table_results == 3: 
                                    if target_level - 80 == 3:
                                        g_army_attack_damage_amount = g_army_attack_damage_amount - (g_army_attack_damage_amount * .35) - ((g_army_attack_damage_amount - (g_army_attack_damage_amount * .35)) * armor_red_amount)
                                    elif target_level - 80 == 2:
                                        g_army_attack_damage_amount = g_army_attack_damage_amount - (g_army_attack_damage_amount * .15) - ((g_army_attack_damage_amount - (g_army_attack_damage_amount * .15)) * armor_red_amount)
                                    else:
                                        g_army_attack_damage_amount = g_army_attack_damage_amount - (g_army_attack_damage_amount * .05) - ((g_army_attack_damage_amount - (g_army_attack_damage_amount * .05)) * armor_red_amount)
                                    rotation.append("Army Ghoul - Claw")
                                    rotation_time.append(army_current_time)
                                    rotation_status.append("Glance")
                                elif ghoul_army_attack_table_results == 5: 
                                    g_army_attack_damage_amount = ((g_army_attack_damage_amount) - (g_army_attack_damage_amount * armor_red_amount)) * 2
                                    rotation.append("Army Ghoul - Claw")
                                    rotation_time.append(army_current_time)
                                    rotation_status.append("Crit")
                                elif ghoul_army_attack_table_results == 7: 
                                    g_army_attack_damage_amount = (g_army_attack_damage_amount) - (g_army_attack_damage_amount * armor_red_amount)
                                    rotation.append("Army Ghoul - Claw")
                                    rotation_time.append(army_current_time)
                                    rotation_status.append("Hit")
                                if personal_buff_orc_pet_damage == True:
                                    g_army_attack_damage_amount += g_army_attack_damage_amount * .05
                                army_damage_claw += g_army_attack_damage_amount
                                rotation_damage.append(g_army_attack_damage_amount)
                                army_attack_tracker = 0
                            ghoul_army_attack_table_results = ghoul_attack_table(target_level, ghoul_hit, ghoul_expertise, False, army_crit)
                            if ghoul_army_attack_table_results == 0:
                                rotation.append("Army Ghoul - Main hand")
                                rotation_time.append(army_current_time)
                                rotation_status.append("Miss")
                                g_army_attack_damage_amount = 0
                            elif ghoul_army_attack_table_results == 1: 
                                rotation.append("Army Ghoul - Main hand")
                                rotation_time.append(army_current_time)
                                rotation_status.append("Dodge")
                                g_army_attack_damage_amount = 0
                            elif ghoul_army_attack_table_results == 3: 
                                if target_level - 80 == 3:
                                    g_army_attack_damage_amount = g_army_attack_damage_amount - (g_army_attack_damage_amount * .35) - ((g_army_attack_damage_amount - (g_army_attack_damage_amount * .35)) * armor_red_amount)
                                elif target_level - 80 == 2:
                                    g_army_attack_damage_amount = g_army_attack_damage_amount - (g_army_attack_damage_amount * .15) - ((g_army_attack_damage_amount - (g_army_attack_damage_amount * .15)) * armor_red_amount)
                                else:
                                    g_army_attack_damage_amount = g_army_attack_damage_amount - (g_army_attack_damage_amount * .05) - ((g_army_attack_damage_amount - (g_army_attack_damage_amount * .05)) * armor_red_amount)
                                rotation.append("Army Ghoul - Main hand")
                                rotation_time.append(army_current_time)
                                rotation_status.append("Glance")
                            elif ghoul_army_attack_table_results == 5: 
                                g_army_attack_damage_amount = ((g_army_attack_damage_amount) - (g_army_attack_damage_amount * armor_red_amount)) * 2
                                rotation.append("Army Ghoul - Main hand")
                                rotation_time.append(army_current_time)
                                rotation_status.append("Crit")
                            elif ghoul_army_attack_table_results == 7: 
                                g_army_attack_damage_amount = (g_army_attack_damage_amount) - (g_army_attack_damage_amount * armor_red_amount)
                                rotation.append("Army Ghoul - Main hand")
                                rotation_time.append(army_current_time)
                                rotation_status.append("Hit")
                            if personal_buff_orc_pet_damage == True:
                                g_army_attack_damage_amount += g_army_attack_damage_amount * .05
                            army_damage += g_army_attack_damage_amount
                            rotation_damage.append(g_army_attack_damage_amount)
                            army_current_time += g_army_attack_speed
                            army_attack_tracker += 1

            
                
            
            #ghoul
            if ghoul_active == True:
                if int(current_time - ghoul_last_energy_tick) >= 1:
                    ghoul_diff = int(current_time - ghoul_last_energy_tick)
                    ghoul_energy += (10 * ghoul_diff)
                    if ghoul_energy > 100:
                        ghoul_energy = 100
                    ghoul_last_energy_tick += (1 * ghoul_diff)
                if ghoul_life_length >= current_time:
                    g_attack_speed = 10
                    g_attack_speed_haste = (ghoul_haste_outside / 25.21) / 100 #Returns a result of 0 - 1 for 0% - 100%
                    g_attack_speed = g_attack_speed * (.1 * (1 - g_attack_speed_haste))
                    if ghoul_frenzy_buff_timer > current_time:
                        g_attack_speed = g_attack_speed / ((25 / 100) + 1)
                    if master_of_ghouls_points != 0:
                        g_attack_speed = g_attack_speed / (1 + melee_haste_bonus) / (1 + melee_haste_bonus2) / (1 + melee_haste_bonus3) / (1 + melee_haste_bonus4)
                        ghoul_strength = strtoap * ghoul_strength_modifier
                        if raid_buff_gift_of_the_wild == True:
                            ghoul_strength += 37
                        if raid_buff_horn_of_winter == True:
                            ghoul_strength += 155
                        if raid_buff_greater_blessing_of_kings == True:
                            ghoul_strength += ghoul_strength * .1
                        ghoul_ap = (ghoul_strength - 10) + (ghoul_agi - 10)
                        if raid_buff_abomination_rage == True:
                            ghoul_ap += ghoul_ap * .1
                        if raid_buff_greater_blessing_of_might == True:
                            ghoul_ap += 550 
                        if raid_buff_imp_greater_blessing_of_might == True:
                            ghoul_ap += (550 * .25)
                        if raid_buff_leader_of_the_pack == True:
                            ghoul_leader_crit = .05
                    g_to_do_attacks_amount = int((current_time - last_ghoul_attack)/g_attack_speed) #Might have to divide by 2
                    #g_attack_damage_amount = random.randint(44, 86)
                    #g_attack_damage_amount = g_attack_damage_amount + (ghoul_ap-846)/75 + (g_attack_speed * ghoul_ap / 14)
                    #g_attack_damage_amount = g_attack_damage_amount + (ghoul_ap-846)/75 + (2 * ghoul_ap / 14)
                    g_attack_damage_amount = random.randint(60, 102)
                    g_attack_damage_amount = g_attack_damage_amount + (2 * ghoul_ap / 14) - (ghoul_strength / 45)
                    #round(102+(2*current_ap/14)-((current_str/45)))
                    armor_red_amount = dam_reduc(current_armor, armor_penetration, target_level)
                    if g_to_do_attacks_amount != 0:
                        for g_attacks in range(0, g_to_do_attacks_amount):
                            #if ghoul_attack_tracker == 4:
                            if ghoul_energy >= 40:
                                ghoul_energy -= 40
                                ghoul_attack_table_results = ghoul_attack_table(target_level, ghoul_hit, ghoul_expertise, True, ghoul_crit, ghoul_leader_crit)
                                g_attack_damage_amount = g_attack_damage_amount * 1.5
                                if ghoul_attack_table_results == 0:
                                    rotation.append("Ghoul - Claw")
                                    rotation_time.append(last_ghoul_attack)
                                    rotation_status.append("Miss")
                                    g_attack_damage_amount = 0
                                elif ghoul_attack_table_results == 1: 
                                    rotation.append("Ghoul - Claw")
                                    rotation_time.append(last_ghoul_attack)
                                    rotation_status.append("Dodge")
                                    g_attack_damage_amount = 0
                                elif ghoul_attack_table_results == 3: 
                                    if target_level - 80 == 3:
                                        g_attack_damage_amount = g_attack_damage_amount - (g_attack_damage_amount * .35) - ((g_attack_damage_amount - (g_attack_damage_amount * .35)) * armor_red_amount)
                                    elif target_level - 80 == 2:
                                        g_attack_damage_amount = g_attack_damage_amount - (g_attack_damage_amount * .15) - ((g_attack_damage_amount - (g_attack_damage_amount * .15)) * armor_red_amount)
                                    else:
                                        g_attack_damage_amount = g_attack_damage_amount - (g_attack_damage_amount * .05) - ((g_attack_damage_amount - (g_attack_damage_amount * .05)) * armor_red_amount)
                                    rotation.append("Ghoul - Claw")
                                    rotation_time.append(last_ghoul_attack)
                                    rotation_status.append("Glance")
                                elif ghoul_attack_table_results == 5: 
                                    g_attack_damage_amount = ((g_attack_damage_amount) - (g_attack_damage_amount * armor_red_amount)) * 2
                                    rotation.append("Ghoul - Claw")
                                    rotation_time.append(last_ghoul_attack)
                                    rotation_status.append("Crit")
                                elif ghoul_attack_table_results == 7: 
                                    g_attack_damage_amount = (g_attack_damage_amount) - (g_attack_damage_amount * armor_red_amount)
                                    rotation.append("Ghoul - Claw")
                                    rotation_time.append(last_ghoul_attack)
                                    rotation_status.append("Hit")
                                if personal_buff_orc_pet_damage == True:
                                    g_attack_damage_amount += g_attack_damage_amount * .05
                                ghoul_damage_claw += g_attack_damage_amount
                                rotation_damage.append(g_attack_damage_amount)
                                #ghoul_attack_tracker = 0
                            ghoul_attack_table_results = ghoul_attack_table(target_level, ghoul_hit, ghoul_expertise, False, ghoul_crit, ghoul_leader_crit)
                            if ghoul_attack_table_results == 0:
                                rotation.append("Ghoul - Main hand")
                                rotation_time.append(last_ghoul_attack)
                                rotation_status.append("Miss")
                                g_attack_damage_amount = 0
                            elif ghoul_attack_table_results == 1: 
                                rotation.append("Ghoul - Main hand")
                                rotation_time.append(last_ghoul_attack)
                                rotation_status.append("Dodge")
                                g_attack_damage_amount = 0
                            elif ghoul_attack_table_results == 3: 
                                if target_level - 80 == 3:
                                    g_attack_damage_amount = g_attack_damage_amount - (g_attack_damage_amount * .35) - ((g_attack_damage_amount - (g_attack_damage_amount * .35)) * armor_red_amount)
                                elif target_level - 80 == 2:
                                    g_attack_damage_amount = g_attack_damage_amount - (g_attack_damage_amount * .15) - ((g_attack_damage_amount - (g_attack_damage_amount * .15)) * armor_red_amount)
                                else:
                                    g_attack_damage_amount = g_attack_damage_amount - (g_attack_damage_amount * .05) - ((g_attack_damage_amount - (g_attack_damage_amount * .05)) * armor_red_amount)
                                rotation.append("Ghoul - Main hand")
                                rotation_time.append(last_ghoul_attack)
                                rotation_status.append("Glance")
                            elif ghoul_attack_table_results == 5: 
                                g_attack_damage_amount = ((g_attack_damage_amount) - (g_attack_damage_amount * armor_red_amount)) * 2
                                rotation.append("Ghoul - Main hand")
                                rotation_time.append(last_ghoul_attack)
                                rotation_status.append("Crit")
                            elif ghoul_attack_table_results == 7: 
                                g_attack_damage_amount = (g_attack_damage_amount) - (g_attack_damage_amount * armor_red_amount)
                                rotation.append("Ghoul - Main hand")
                                rotation_time.append(last_ghoul_attack)
                                rotation_status.append("Hit")
                            if personal_buff_orc_pet_damage == True:
                                g_attack_damage_amount += g_attack_damage_amount * .05
                            ghoul_damage += g_attack_damage_amount
                            rotation_damage.append(g_attack_damage_amount)
                            last_ghoul_attack = last_ghoul_attack + g_attack_speed
                            #ghoul_attack_tracker += 1
                if ghoul_life_length < current_time:
                    last_ghoul_attack = current_time 
                    if ghoul_cd < current_time:
                        ghoul_cd = current_time + 180
                        if night_of_the_dead_points != 0:
                            ghoul_cd -= night_of_the_dead_points * 45
                        ghoul_life_length = current_time + 60
                        last_ghoul_attack = current_time 
                        rotation.append("Raise Dead")
                        rotation_time.append(current_time)
                        rotation_damage.append(0)
                        rotation_status.append("Active")
                        haste_percentage = (total_haste_rating / 25.21) / 100 #Returns a result of 0 - 1 for 0% - 100%
                        haste_rune_cd = rune_grade_timer(current_time, last_rune_change[castable], last_rune_change[castable+6])
                        if improved_unholy_presence_points != 0:
                            if dk_presence == 2:
                                haste_rune_cd = haste_rune_cd - (haste_rune_cd * ((improved_unholy_presence_points * 5) / 100))
                        if dk_presence != 2:
                            gcd = input_gcd / (1 + haste_percentage)
                            if gcd < 1:
                                gcd = 1
                        current_time += gcd
                        used_gcd = True
                        continue
            #Use Bloodlust / Other Specials
            if meta_as_bonus == True:
                if meta_as_bonus_active == False:
                    if meta_as_bonus_cd < current_time:
                        meta_as_bonus_active = True
                        meta_as_bonus_cd = current_time + 46
                        meta_as_bonus_active_time = current_time + 6
                        bonus_loop_haste_rating += 480
                if meta_as_bonus_active == True:
                    if meta_as_bonus_active_time < current_time:
                        meta_as_bonus_active = False
                        bonus_loop_haste_rating -= 480
            if pre_pot_potion == True:
                if current_time > 15:
                    if pre_pot_potion_used == True:
                        if pot_of_speed == True:
                            bonus_loop_haste_rating -= 500
                            pre_pot_potion_used = False
                        elif pot_of_wild_magic == True:
                            bonus_loop_crit_rating -= 200
                            pre_pot_potion_used = False
            if bloodlust_used == False:
                if bloodlust_start_time <= current_time:
                    bloodlust_used = True
                    melee_haste_bonus3 = .3
            if bloodlust_end == False:
                if bloodlust_used == True:
                    if bloodlust_start_time + 30 < current_time:
                        melee_haste_bonus3 = 0
                        bloodlust_end = True
            if berserking_used == False:
                if berserking_start_time_cd <= current_time:
                    berserking_used = True
                    melee_haste_bonus4 = .2
            if berserking_used == True:
                if berserking_start_time_cd + 10 < current_time:
                    melee_haste_bonus4 = 0
                    berserking_start_time_cd = berserking_start_time_cd + 170
                    berserking_used = False
            if bloodfury_used == False:
                if bloodfury_start_time_cd <= current_time:
                    bloodfury_used = True
                    bonus_loop_ap += 322
            if bloodfury_used == True:
                if bloodfury_start_time_cd + 15 < current_time:
                    bonus_loop_ap -= 322
                    bloodfury_start_time_cd = bloodfury_start_time_cd + 105
                    bloodfury_used = False
            if hysteria_used == False:
                if hysteria_start_time <= current_time:
                    hysteria_used = True
                    hysteria_active = True
            if hysteria_end == False:
                if hysteria_used == True:
                    if hysteria_start_time + 30 < current_time:
                        hysteria_end = True
                        hysteria_active = False
            if tricksoftt_used == False:
                if tricks_start_time <= current_time:
                    tricksoftt_used = True
                    tricksoftt_active = True
            if tricksoftt_end == False:
                if tricksoftt_used == True:
                    if tricks_start_time + 30 < current_time:
                        tricksoftt_end = True
                        tricksoftt_active = False
            if pot_of_speed_used == False:
                if pot_of_speed_start_time <= current_time:
                    pot_of_speed_used = True
                    pot_of_speed_active = True
                    bonus_loop_haste_rating += 500
            if pot_of_speed_end == False:
                if pot_of_speed_used == True:
                    if pot_of_speed_start_time + 15 < current_time:
                        pot_of_speed_end = True
                        pot_of_speed_active = False
                        bonus_loop_haste_rating -= 500
            if pot_of_wild_magic_used == False:
                if pot_of_wild_magic_start_time <= current_time:
                    pot_of_wild_magic_used = True
                    pot_of_wild_magic_active = True
                    bonus_loop_crit_rating += 200
            if pot_of_wild_magic_end == False:
                if pot_of_wild_magic_used == True:
                    if pot_of_wild_magic_start_time + 15 < current_time:
                        pot_of_wild_magic_end = True
                        pot_of_wild_magic_active = False
                        bonus_loop_crit_rating -= 200      
            if dots[0] > current_time:
                if dots[1] > current_time:
                    if engi_gloves_enchant == True:
                        if engi_gloves_enchant_cd < current_time:
                            if engi_gloves_buff_active == False:
                                rotation.append("Hyperspeed Acceleration")
                                rotation_time.append(current_time)
                                rotation_damage.append(0)
                                rotation_status.append("Active")
                                engi_gloves_enchant_cd += 60
                                engi_gloves_enchant_active_timer += 12
                                engi_gloves_buff_active = True
                                bonus_loop_haste_rating += 340
            if engi_gloves_enchant == True:
                if engi_gloves_buff_active == True:
                    if engi_gloves_enchant_active_timer < current_time:
                        engi_gloves_buff_active = False
                        bonus_loop_haste_rating -= 340
            if swordguard_enchant == True:
                if swordguard_enchant_cd < current_time:
                    if trinket_hit_crit_tracker != 0:
                        if random.randint(0, 100) < 25:
                            if swordguard_buff_active == False:
                                swordguard_buff_active = True
                                rotation.append("Swordguard Embroidery")
                                rotation_time.append(current_time)
                                rotation_damage.append(0)
                                rotation_status.append("Proc")
                                swordguard_enchant_cd = current_time + 45
                                swordguard_enchant_active_timer = current_time + 15
                                bonus_loop_ap += 400      
            if sword_berserking_enchant == True:
                if sword_berserking_enchant_hand == "mh":
                    if trinket_hit_crit_tracker != 0:
                        if random.randint(0, 10000)/100 < ((mh_speed * 1.2 / 60)*100):
                            berskering_buff_active = True
                            rotation.append("Berskering Enchant")
                            rotation_time.append(current_time)
                            rotation_damage.append(0)
                            rotation_status.append("Proc")
                            berskering_enchant_active_timer = current_time + 15
                            bonus_loop_ap += 400      
            if rune_of_the_fallen_crusader == True:
                if rune_of_the_fallen_crusader_hand == "mh":
                    if trinket_hit_crit_tracker != 0:
                        if random.randint(0, 10000)/100 < ((mh_speed * 2 / 60)*100):
                            rotation.append("Rune of the Fallen Crusader")
                            rotation_time.append(current_time)
                            rotation_damage.append(0)
                            rotation_status.append("Proc")
                            runeofthefallencrusdaer_active_cd = current_time + 15
                            if runeofthefallencrusader_buff_active == False:
                                runeofthefallc_str_amount = strtoap * .15
                                bonus_loop_str += runeofthefallc_str_amount
                                runeofthefallencrusader_buff_active = True
            if rune_of_razorice == True:
                if rune_of_razorice_hand == "mh":
                    if trinket_hit_crit_tracker != 0:
                        rune_of_razorice_damage += (atta_num * .02) 
                        rotation.append("Rune of Razorice")
                        rotation_time.append(current_time)
                        rotation_damage.append(atta_num * .02)
                        rotation_status.append("Active")
            if rune_of_lichbane == True:
                if rune_of_lichbane_hand == "mh":
                    if trinket_hit_crit_tracker != 0:
                        rune_of_lichbane_damage += (atta_num * .02)  
                        rotation.append("Rune of Lichbane")
                        rotation_time.append(current_time)
                        rotation_damage.append(atta_num * .02)
                        rotation_status.append("Active")
            if rune_of_cinderglacier == True:
                if rune_of_cinderglacier_hand == "mh":
                    if trinket_hit_crit_tracker != 0:
                        if random.randint(0, 10000)/100 < ((mh_speed * 1.5 / 60)*100):
                            rotation.append("Rune of Cinderglacier")
                            rotation_time.append(current_time)
                            rotation_damage.append(0)
                            rotation_status.append("Proc")
                            rune_of_cinderglacier_active = True
                            rune_of_cinderglacier_active_count = 0
            if scourgelords_battlegear_four_set == True:
                if rune_cd_tracker[2] > current_time:
                    if rune_cd_tracker[3] > current_time:
                        if rune_cd_tracker[4] > current_time:
                            if rune_cd_tracker[5] > current_time:
                                if rune_cd_tracker[0] > current_time and rune_cd_tracker[6] > current_time:
                                    if rune_cd_tracker[1] > current_time and rune_cd_tracker[7] > current_time:
                                        if t10_4set_dps_buff == False:
                                            increased_all_damage += .03
                                            rotation.append("Scourgelord 4p Bonus")
                                            rotation_time.append(current_time)
                                            rotation_damage.append(0)
                                            rotation_status.append("Active")
                                        t10_4set_dps_buff = True
                                        t10_4set_dps_buff_timer = current_time + 15
            if blood_gorged_points != 0:
                if random.randint(0, 10000)/100 <= blood_gorged_proc_rate:
                    if blood_gorged_active == False:
                        blood_gorged_active = True
                        increased_all_damage += (blood_gorged_points * 2) / 100
                else:
                    if blood_gorged_active == True:
                        blood_gorged_active = False
                        increased_all_damage -= (blood_gorged_points * 2) / 100
            if bloody_vengeance_points != 0:
                if trinket_hit_crit_tracker == 2:
                    if bloody_vengeance_stacks < 3:
                        bloody_vengeance_stacks += 1
                        bloody_vengeance_timer = current_time + 30
                        increased_physical_damage += bloody_vengeance_points / 100
                        rotation.append("Bloody Vengeance")
                        rotation_time.append(current_time)
                        rotation_damage.append(0)
                        rotation_status.append("Active")
                    else:
                        bloody_vengeance_timer = current_time + 30
                        rotation.append("Bloody Vengeance")
                        rotation_time.append(current_time)
                        rotation_damage.append(0)
                        rotation_status.append("Refresh")
            if bone_shield_points == 1:
                if bone_shield_active == True:
                    if bone_shield_buff_applied == False:
                        bone_shield_buff_applied = True
                        increased_all_damage += .02
            if unholy_blight_points == 1:
                if unholy_blight_amount != 0:
                    if unholy_blight_timer >= current_time:
                        atta_num = unholy_blight_amount / 10
                        if glyph_unholy_blight == True:
                            atta_num += atta_num * .4
                        unholy_blight_damage += atta_num
                        rotation.append("Unholy Blight")
                        rotation_time.append(current_time)
                        rotation_damage.append(atta_num)
                        rotation_status.append("DOT")
                    elif unholy_blight_timer < current_time:
                        unholy_blight_amount = 0
            if fury_of_five_flights_using == True:
                if trinket_hit_crit_tracker == 2 or trinket_hit_crit_tracker == 1:
                    if fury_of_five_flights_stacks < 20:
                        fury_of_five_flights_stacks += 1
                        fury_of_five_flights_timer = current_time + 10
                        bonus_loop_ap += 16
                        rotation.append("Fury of the Five Flights")
                        rotation_time.append(current_time)
                        rotation_damage.append(0)
                        rotation_status.append("Active")
                    else:
                        fury_of_five_flights_timer = current_time + 10
                        rotation.append("Fury of the Five Flights")
                        rotation_time.append(current_time)
                        rotation_damage.append(0)
                        rotation_status.append("Refresh")
                        
            
                                    

            #Remove Buffs
            if swordguard_enchant == True:
                if swordguard_buff_active == True:
                    if swordguard_enchant_active_timer < current_time:
                        swordguard_buff_active = False
                        bonus_loop_ap -= 400
            if sword_berserking_enchant == True:
                if berskering_buff_active == True:
                    if berskering_enchant_active_timer < current_time:
                        berskering_buff_active = False
                        bonus_loop_ap -= 400
            if rune_of_the_fallen_crusader == True:
                if runeofthefallencrusader_buff_active == True:
                    if runeofthefallencrusdaer_active_cd < current_time:
                        runeofthefallencrusader_buff_active = False
                        bonus_loop_str -= runeofthefallc_str_amount
            if sigil_of_strife == True:
                if sigil_of_strife_active == True:
                    if sigil_of_strife_timer < current_time:
                        bonus_loop_ap -= sigil_of_strife_amount
                        sigil_of_strife_active = False   
            if sigil_of_haunted_dreams == True:
                if sigil_of_haunted_dreams_buff == True:
                    if sigil_of_haunted_dreams_timer < current_time:
                        sigil_of_haunted_dreams_buff = False
                        bonus_loop_crit_rating -= 173 
            if sigil_of_virulence == True:
                if sigil_of_virulence_buff == True:
                    if sigil_of_virulence_timer < current_time:
                        sigil_of_virulence_buff = False 
                        bonus_loop_str -= 200
            if sigil_of_hanged_man == True:
                if sigil_of_hanged_man_buff == True:
                    if sigil_of_hanged_man_timer < current_time:
                        sigil_of_hanged_man_buff = False
                        bonus_loop_str -= 73 * sigil_of_hanged_man_count
            if t9_dps_two_set == True:
                if t9_bonus == True:
                    if t9_active_timer < current_time:
                        t9_bonus = False
                        bonus_loop_str -= 180
            if scourgelords_battlegear_four_set == True:
                if t10_4set_dps_buff == True:
                    if t10_4set_dps_buff_timer < current_time:
                        increased_all_damage -= .03
                        t10_4set_dps_buff = False
            if desolation_points != 0:
                if desolation_buff == True:
                    if desolation_buff_timer < current_time:
                        increased_all_damage -= (desolation_points / 100)
                        desolation_buff = False
                        rotation.append("Desolation")
                        rotation_time.append(current_time)
                        rotation_damage.append(0)
                        rotation_status.append("Removed")
            if bloody_vengeance_points != 0:
                if bloody_vengeance_timer < current_time:
                    if bloody_vengeance_stacks > 0:
                        increased_physical_damage -= (bloody_vengeance_points / 100) * bloody_vengeance_stacks
                        bloody_vengeance_stacks = 0
                        rotation.append("Bloody Vengeance")
                        rotation_time.append(current_time)
                        rotation_damage.append(0)
                        rotation_status.append("Removed")
            if bone_shield_points == 1:
                if bone_shield_active == False:
                    if bone_shield_buff_applied == True:
                        bone_shield_buff_applied = False
                        increased_all_damage -= .02
            if dancing_rune_weapon_points == 1:
                if dancing_rune_weapon_active == True:
                    if dancing_rune_weapon_length < current_time:
                        dancing_rune_weapon_active = False
            if fury_of_five_flights_using == True:
               if fury_of_five_flights_timer < current_time:
                   if fury_of_five_flights_stacks > 0:
                       bonus_loop_ap -= 16 * fury_of_five_flights_stacks
                       fury_of_five_flights_stacks = 0
                       rotation.append("Fury of the Five Flights")
                       rotation_time.append(current_time)
                       rotation_damage.append(0)
                       rotation_status.append("Removed")
                    
            
                        
            #Remove Trinket Buffs Here
            if trinket1_used == True: #Removing Trinket 1 Buff
                if trinket1_buff_time < current_time:
                    trinket1_used = False
                    if trinket1_bonus_type == "Strength":
                        bonus_loop_str -= float(trinket1_bonus_amount)
                    elif trinket1_bonus_type == "Agility":
                        bonus_loop_agility -= float(trinket1_bonus_amount)
                    elif trinket1_bonus_type == "Stamina":
                        bonus_loop_hp -= (float(trinket1_bonus_amount) * 10)
                    elif trinket1_bonus_type == "Intelligence":
                        print("Increased Intel") #Not even adding this
                    elif trinket1_bonus_type == "Spirit":
                        print("Increased Spirit") #Not even adding this
                    elif trinket1_bonus_type == "Attack Power":
                        bonus_loop_ap -= float(trinket1_bonus_amount)
                    elif trinket1_bonus_type == "Hit Rating":
                        bonus_loop_hit -= float(trinket1_bonus_amount)
                    elif trinket1_bonus_type == "Crit Rating":
                        bonus_loop_crit_rating -= float(trinket1_bonus_amount)
                    elif trinket1_bonus_type == "Haste Rating":
                        bonus_loop_haste_rating -= float(trinket1_bonus_amount)
                    elif trinket1_bonus_type == "Armor Pen":
                        bonus_loop_armor_pen_rating -= float(trinket1_bonus_amount)
                    elif trinket1_bonus_type == "Expertise Rating":
                        bonus_loop_expertise_rating -= float(trinket1_bonus_amount)
                    elif trinket1_bonus_type == "Armor":
                        print("Increased Armor") #To be added Later
                    elif trinket1_bonus_type == "Defense Rating":
                        print("Increase Defense Rating") #To be added Later
                    elif trinket1_bonus_type == "Dodge Rating":
                        print("Increased Dodge Rating") #To be added Later
                    elif trinket1_bonus_type == "Parry Rating":
                        print("Increased Parry Rating") #To be added Later
            if trinket2_used == True: #Removing Trinket 2 Buff
                if trinket2_buff_time < current_time:
                    trinket2_used = False
                    if trinket2_bonus_type == "Strength":
                        bonus_loop_str -= float(trinket2_bonus_amount)
                    elif trinket2_bonus_type == "Agility":
                        bonus_loop_agility -= float(trinket2_bonus_amount)
                    elif trinket2_bonus_type == "Stamina":
                        bonus_loop_hp -= (float(trinket2_bonus_amount) * 10)
                    elif trinket2_bonus_type == "Intelligence":
                        print("Increased Intel") #Not even adding this
                    elif trinket2_bonus_type == "Spirit":
                        print("Increased Spirit") #Not even adding this
                    elif trinket2_bonus_type == "Attack Power":
                        bonus_loop_ap -= float(trinket2_bonus_amount)
                    elif trinket2_bonus_type == "Hit Rating":
                        bonus_loop_hit -= float(trinket2_bonus_amount)
                    elif trinket2_bonus_type == "Crit Rating":
                        bonus_loop_crit_rating -= float(trinket2_bonus_amount)
                    elif trinket2_bonus_type == "Haste Rating":
                        bonus_loop_haste_rating -= float(trinket2_bonus_amount)
                    elif trinket2_bonus_type == "Armor Pen":
                        bonus_loop_armor_pen_rating -= float(trinket2_bonus_amount)
                    elif trinket2_bonus_type == "Expertise Rating":
                        bonus_loop_expertise_rating -= float(trinket2_bonus_amount)
                    elif trinket2_bonus_type == "Armor":
                        print("Increased Armor") #To be added Later
                    elif trinket2_bonus_type == "Defense Rating":
                        print("Increase Defense Rating") #To be added Later
                    elif trinket2_bonus_type == "Dodge Rating":
                        print("Increased Dodge Rating") #To be added Later
                    elif trinket2_bonus_type == "Parry Rating":
                        print("Increased Parry Rating") #To be added Later
            #Trinket Buff Check After Special Attacks
            if trinket_1_use == True:
                if trinket1_type == "Active":
                    if trinket1_use_icd < current_time:
                        trinket1_buff_time = current_time + float(trinket1_length)
                        trinket1_use_icd = current_time + float(trinket1_icd)
                        trinket1_used = True
                        rotation.append(gear[12])
                        rotation_status.append("Active")
                        rotation_time.append(current_time)
                        if trinket1_bonus_type == "Strength":
                            bonus_loop_str += float(trinket1_bonus_amount)
                        elif trinket1_bonus_type == "Agility":
                            bonus_loop_agility += float(trinket1_bonus_amount)
                        elif trinket1_bonus_type == "Stamina":
                            bonus_loop_hp += (float(trinket1_bonus_amount) * 10)
                        elif trinket1_bonus_type == "Intelligence":
                            print("Increased Intel") #Not even adding this
                        elif trinket1_bonus_type == "Spirit":
                            print("Increased Spirit") #Not even adding this
                        elif trinket1_bonus_type == "Attack Power":
                            bonus_loop_ap += float(trinket1_bonus_amount)
                        elif trinket1_bonus_type == "Hit Rating":
                            bonus_loop_hit += float(trinket1_bonus_amount)
                        elif trinket1_bonus_type == "Crit Rating":
                            bonus_loop_crit_rating += float(trinket1_bonus_amount)
                        elif trinket1_bonus_type == "Haste Rating":
                            bonus_loop_hit += float(trinket1_bonus_amount)
                        elif trinket1_bonus_type == "Armor Pen":
                            bonus_loop_armor_pen_rating += float(trinket1_bonus_amount)
                        elif trinket1_bonus_type == "Expertise Rating":
                            bonus_loop_expertise_rating += float(trinket1_bonus_amount)
                        elif trinket1_bonus_type == "Armor":
                            print("Increased Armor") #To be added Later
                        elif trinket1_bonus_type == "Defense Rating":
                            print("Increase Defense Rating") #To be added Later
                        elif trinket1_bonus_type == "Dodge Rating":
                            print("Increased Dodge Rating") #To be added Later
                        elif trinket1_bonus_type == "Parry Rating":
                            print("Increased Parry Rating") #To be added Later
                        elif trinket1_bonus_type == "Damage":
                            trinket_bonus_damage = random.randint(trinket1_min_damage, trinket1_max_damage)
                            rotation_damage.append(trinket_bonus_damage)
                            trinket1_damage += trinket_bonus_damage
                        if trinket1_bonus_type != "Damage":
                            rotation_damage.append(0)
                elif trinket1_type == "Proc":
                    if trinket1_chanceon == "Hit":
                        if trinket_hit_crit_tracker == 1 or trinket_hit_crit_tracker == 2: #trinket_hit_crit_tracker = 0 Null, 1 Hit, 2 Crit
                            if trinket1_use_icd < current_time:
                                atta_num = (random.randint(1, 100) / 100)
                                if float(trinket1_chanceperc) > atta_num:
                                    trinket1_use_icd = current_time + float(trinket1_icd)
                                    trinket1_buff_time = current_time + float(trinket1_length)
                                    trinket1_used = True
                                    rotation.append(gear[12])
                                    rotation_time.append(current_time)
                                    rotation_status.append("Proc")
                                    if trinket1_bonus_type == "Strength":
                                        bonus_loop_str += float(trinket1_bonus_amount)
                                    elif trinket1_bonus_type == "Agility":
                                        bonus_loop_agility += float(trinket1_bonus_amount)
                                    elif trinket1_bonus_type == "Stamina":
                                        bonus_loop_hp += (float(trinket1_bonus_amount) * 10)
                                    elif trinket1_bonus_type == "Intelligence":
                                        print("Increased Intel") #Not even adding this
                                    elif trinket1_bonus_type == "Spirit":
                                        print("Increased Spirit") #Not even adding this
                                    elif trinket1_bonus_type == "Attack Power":
                                        bonus_loop_ap += float(trinket1_bonus_amount)
                                    elif trinket1_bonus_type == "Hit Rating":
                                        bonus_loop_hit += float(trinket1_bonus_amount)
                                    elif trinket1_bonus_type == "Crit Rating":
                                        bonus_loop_crit_rating += float(trinket1_bonus_amount)
                                    elif trinket1_bonus_type == "Haste Rating":
                                        bonus_loop_hit += float(trinket1_bonus_amount)
                                    elif trinket1_bonus_type == "Armor Pen":
                                        bonus_loop_armor_pen_rating += float(trinket1_bonus_amount)
                                    elif trinket1_bonus_type == "Expertise Rating":
                                        bonus_loop_expertise_rating += float(trinket1_bonus_amount)
                                    elif trinket1_bonus_type == "Armor":
                                        print("Increased Armor") #To be added Later
                                    elif trinket1_bonus_type == "Defense Rating":
                                        print("Increase Defense Rating") #To be added Later
                                    elif trinket1_bonus_type == "Dodge Rating":
                                        print("Increased Dodge Rating") #To be added Later
                                    elif trinket1_bonus_type == "Parry Rating":
                                        print("Increased Parry Rating") #To be added Later
                                    elif trinket1_bonus_type == "Damage":
                                        trinket_bonus_damage = random.randint(trinket1_min_damage, trinket1_max_damage)
                                        rotation_damage.append(trinket_bonus_damage)
                                        trinket1_damage += trinket_bonus_damage
                                    if trinket1_bonus_type != "Damage":
                                        rotation_damage.append(0)
                    elif trinket1_chanceon == "Crit":
                        if trinket_hit_crit_tracker == 2:
                            if trinket1_use_icd < current_time:
                                atta_num = (random.randint(1, 100) / 100)
                                if float(trinket1_chanceperc) > atta_num:
                                    trinket1_use_icd = current_time + float(trinket1_icd)
                                    trinket1_buff_time = current_time + float(trinket1_length)
                                    trinket1_used = True
                                    rotation.append(gear[12])
                                    rotation_time.append(current_time)
                                    rotation_status.append("Proc")
                                    if trinket1_bonus_type == "Strength":
                                        bonus_loop_str += float(trinket1_bonus_amount)
                                    elif trinket1_bonus_type == "Agility":
                                        bonus_loop_agility += float(trinket1_bonus_amount)
                                    elif trinket1_bonus_type == "Stamina":
                                        bonus_loop_hp += (float(trinket1_bonus_amount) * 10)
                                    elif trinket1_bonus_type == "Intelligence":
                                        print("Increased Intel") #Not even adding this
                                    elif trinket1_bonus_type == "Spirit":
                                        print("Increased Spirit") #Not even adding this
                                    elif trinket1_bonus_type == "Attack Power":
                                        bonus_loop_ap += float(trinket1_bonus_amount)
                                    elif trinket1_bonus_type == "Hit Rating":
                                        bonus_loop_hit += float(trinket1_bonus_amount)
                                    elif trinket1_bonus_type == "Crit Rating":
                                        bonus_loop_crit_rating += float(trinket1_bonus_amount)
                                    elif trinket1_bonus_type == "Haste Rating":
                                        bonus_loop_hit += float(trinket1_bonus_amount)
                                    elif trinket1_bonus_type == "Armor Pen":
                                        bonus_loop_armor_pen_rating += float(trinket1_bonus_amount)
                                    elif trinket1_bonus_type == "Expertise Rating":
                                        bonus_loop_expertise_rating += float(trinket1_bonus_amount)
                                    elif trinket1_bonus_type == "Armor":
                                        print("Increased Armor") #To be added Later
                                    elif trinket1_bonus_type == "Defense Rating":
                                        print("Increase Defense Rating") #To be added Later
                                    elif trinket1_bonus_type == "Dodge Rating":
                                        print("Increased Dodge Rating") #To be added Later
                                    elif trinket1_bonus_type == "Parry Rating":
                                        print("Increased Parry Rating") #To be added Later
                                    elif trinket1_bonus_type == "Damage":
                                        trinket_bonus_damage = random.randint(trinket1_min_damage, trinket1_max_damage)
                                        rotation_damage.append(trinket_bonus_damage)
                                        trinket1_damage += trinket_bonus_damage
                                    if trinket1_bonus_type != "Damage":
                                        rotation_damage.append(0)
            if trinket_2_use == True:
                if trinket2_type == "Active":
                    if trinket2_use_icd < current_time:
                        trinket2_buff_time = current_time + float(trinket2_length)
                        trinket2_use_icd = current_time + float(trinket2_icd)
                        trinket2_used = True
                        rotation.append(gear[13])
                        rotation_time.append(current_time)
                        rotation_status.append("Active")
                        if trinket2_bonus_type == "Strength":
                            bonus_loop_str += float(trinket2_bonus_amount)
                        elif trinket2_bonus_type == "Agility":
                            bonus_loop_agility += float(trinket2_bonus_amount)
                        elif trinket2_bonus_type == "Stamina":
                            bonus_loop_hp += (float(trinket2_bonus_amount) * 10)
                        elif trinket2_bonus_type == "Intelligence":
                            print("Increased Intel") #Not even adding this
                        elif trinket2_bonus_type == "Spirit":
                            print("Increased Spirit") #Not even adding this
                        elif trinket2_bonus_type == "Attack Power":
                            bonus_loop_ap += float(trinket2_bonus_amount)
                        elif trinket2_bonus_type == "Hit Rating":
                            bonus_loop_hit += float(trinket2_bonus_amount)
                        elif trinket2_bonus_type == "Crit Rating":
                            bonus_loop_crit_rating += float(trinket2_bonus_amount)
                        elif trinket2_bonus_type == "Haste Rating":
                            bonus_loop_hit += float(trinket2_bonus_amount)
                        elif trinket2_bonus_type == "Armor Pen":
                            bonus_loop_armor_pen_rating += float(trinket2_bonus_amount)
                        elif trinket2_bonus_type == "Expertise Rating":
                            bonus_loop_expertise_rating += float(trinket2_bonus_amount)
                        elif trinket2_bonus_type == "Armor":
                            print("Increased Armor") #To be added Later
                        elif trinket2_bonus_type == "Defense Rating":
                            print("Increase Defense Rating") #To be added Later
                        elif trinket2_bonus_type == "Dodge Rating":
                            print("Increased Dodge Rating") #To be added Later
                        elif trinket2_bonus_type == "Parry Rating":
                            print("Increased Parry Rating") #To be added Later
                        elif trinket2_bonus_type == "Damage":
                            trinket_bonus_damage = random.randint(trinket2_min_damage, trinket2_max_damage)
                            rotation_damage.append(trinket_bonus_damage)
                            trinket2_damage += trinket_bonus_damage
                        if trinket2_bonus_type != "Damage":
                            rotation_damage.append(0)
                elif trinket2_type == "Proc":
                    if trinket2_chanceon == "Hit":
                        if trinket_hit_crit_tracker == 1 or trinket_hit_crit_tracker == 2: #trinket_hit_crit_tracker = 0 Null, 1 Hit, 2 Crit
                            if trinket2_use_icd < current_time:
                                atta_num = (random.randint(1, 100) / 100)
                                if float(trinket2_chanceperc) > atta_num:
                                    trinket2_use_icd = current_time + float(trinket2_icd)
                                    trinket2_buff_time = current_time + float(trinket2_length)
                                    trinket2_used = True
                                    rotation.append(gear[13])
                                    rotation_time.append(current_time)
                                    rotation_status.append("Proc")
                                    if trinket2_bonus_type == "Strength":
                                        bonus_loop_str += float(trinket2_bonus_amount)
                                    elif trinket2_bonus_type == "Agility":
                                        bonus_loop_agility += float(trinket2_bonus_amount)
                                    elif trinket2_bonus_type == "Stamina":
                                        bonus_loop_hp += (float(trinket2_bonus_amount) * 10)
                                    elif trinket2_bonus_type == "Intelligence":
                                        print("Increased Intel") #Not even adding this
                                    elif trinket2_bonus_type == "Spirit":
                                        print("Increased Spirit") #Not even adding this
                                    elif trinket2_bonus_type == "Attack Power":
                                        bonus_loop_ap += float(trinket2_bonus_amount)
                                    elif trinket2_bonus_type == "Hit Rating":
                                        bonus_loop_hit += float(trinket2_bonus_amount)
                                    elif trinket2_bonus_type == "Crit Rating":
                                        bonus_loop_crit_rating += float(trinket2_bonus_amount)
                                    elif trinket2_bonus_type == "Haste Rating":
                                        bonus_loop_hit += float(trinket2_bonus_amount)
                                    elif trinket2_bonus_type == "Armor Pen":
                                        bonus_loop_armor_pen_rating += float(trinket2_bonus_amount)
                                    elif trinket2_bonus_type == "Expertise Rating":
                                        bonus_loop_expertise_rating += float(trinket2_bonus_amount)
                                    elif trinket2_bonus_type == "Armor":
                                        print("Increased Armor") #To be added Later
                                    elif trinket2_bonus_type == "Defense Rating":
                                        print("Increase Defense Rating") #To be added Later
                                    elif trinket2_bonus_type == "Dodge Rating":
                                        print("Increased Dodge Rating") #To be added Later
                                    elif trinket2_bonus_type == "Parry Rating":
                                        print("Increased Parry Rating") #To be added Later
                                    elif trinket2_bonus_type == "Damage":
                                        trinket_bonus_damage = random.randint(trinket2_min_damage, trinket2_max_damage)
                                        rotation_damage.append(trinket_bonus_damage)
                                        trinket2_damage += trinket_bonus_damage
                                    if trinket2_bonus_type != "Damage":
                                        rotation_damage.append(0)
                    elif trinket2_chanceon == "Crit":
                        if trinket_hit_crit_tracker == 2:
                            if trinket2_use_icd < current_time:
                                atta_num = (random.randint(1, 100) / 100)
                                if float(trinket2_chanceperc) > atta_num:
                                    trinket2_use_icd = current_time + float(trinket2_icd)
                                    trinket2_buff_time = current_time + float(trinket2_length)
                                    trinket2_used = True
                                    rotation.append(gear[13])
                                    rotation_time.append(current_time)
                                    rotation_status.append("Proc")
                                    if trinket2_bonus_type == "Strength":
                                        bonus_loop_str += float(trinket2_bonus_amount)
                                    elif trinket2_bonus_type == "Agility":
                                        bonus_loop_agility += float(trinket2_bonus_amount)
                                    elif trinket2_bonus_type == "Stamina":
                                        bonus_loop_hp += (float(trinket2_bonus_amount) * 10)
                                    elif trinket2_bonus_type == "Intelligence":
                                        print("Increased Intel") #Not even adding this
                                    elif trinket2_bonus_type == "Spirit":
                                        print("Increased Spirit") #Not even adding this
                                    elif trinket2_bonus_type == "Attack Power":
                                        bonus_loop_ap += float(trinket2_bonus_amount)
                                    elif trinket2_bonus_type == "Hit Rating":
                                        bonus_loop_hit += float(trinket2_bonus_amount)
                                    elif trinket2_bonus_type == "Crit Rating":
                                        bonus_loop_crit_rating += float(trinket2_bonus_amount)
                                    elif trinket2_bonus_type == "Haste Rating":
                                        bonus_loop_hit += float(trinket2_bonus_amount)
                                    elif trinket2_bonus_type == "Armor Pen":
                                        bonus_loop_armor_pen_rating += float(trinket2_bonus_amount)
                                    elif trinket2_bonus_type == "Expertise Rating":
                                        bonus_loop_expertise_rating += float(trinket2_bonus_amount)
                                    elif trinket2_bonus_type == "Armor":
                                        print("Increased Armor") #To be added Later
                                    elif trinket2_bonus_type == "Defense Rating":
                                        print("Increase Defense Rating") #To be added Later
                                    elif trinket2_bonus_type == "Dodge Rating":
                                        print("Increased Dodge Rating") #To be added Later
                                    elif trinket2_bonus_type == "Parry Rating":
                                        print("Increased Parry Rating") #To be added Later
                                    elif trinket2_bonus_type == "Damage":
                                        trinket_bonus_damage = random.randint(trinket2_min_damage, trinket2_max_damage)
                                        rotation_damage.append(trinket_bonus_damage)
                                        trinket2_damage += trinket_bonus_damage
                                    if trinket2_bonus_type != "Damage":
                                        rotation_damage.append(0)
            trinket_hit_crit_tracker = 0 #Resetting hit/crit tracker after both trinkets 
                        
            #Auto attacks here
            if last_mh_attack_time <= current_time:
                mh_white_wep_roll = weapon_roll(mh_input_lowend_weapon_damage,mh_input_topend_weapon_damage)
                haste_percentage = (total_haste_rating / 25.21) / 100 #Returns a result of 0 - 1 for 0% - 100%
                mh_speed = mh_input_weapon_speed / (1 + haste_percentage) / (1 + melee_haste_bonus) / (1 + melee_haste_bonus2) / (1 + melee_haste_bonus3) / (1 + melee_haste_bonus4)
                if dk_presence == 2:
                    mh_speed = mh_speed / (1 + .15)
                if icy_talons_points != 0:
                    if dots[0] > current_time:
                        mh_speed = mh_speed / (1 + (icy_talons_points * .04))
                mh_white_attack = white_attack(mh_white_wep_roll, mh_input_weapon_speed, current_ap)
                if killing_machine_points != 0:
                    km_proc_chance = (mh_speed* killing_machine_points / 60) * 100
                    km_rand = random.randint(0, 10000)/100
                    if km_proc_chance > km_rand:
                        km_procd = True
                attack_table_results = attack_table(0, tanking, H2, True, False, hit_from_gear, hit_from_other, target_level, all_expertise_dodge, all_expertise_parry, total_crit, increased_phy_crit)
                armor_red_amount = dam_reduc(current_armor, armor_penetration, target_level)
                if dancing_rune_weapon_points == 1:
                    if dancing_rune_weapon_active == True:
                        if attack_table_results == 0:
                            atta_num = 0 #No Damage
                            rotation.append("Dancing Rune Weapon")
                            rotation_time.append(last_mh_attack_time)
                            rotation_status.append("Miss")
                        elif attack_table_results == 1: 
                            atta_num = 0 #No Damage
                            rotation.append("Dancing Rune Weapon")
                            rotation_time.append(last_mh_attack_time)
                            rotation_status.append("Dodge")
                        elif attack_table_results == 2:
                            atta_num = 0 #No Damage
                            rotation.append("Dancing Rune Weapon")
                            rotation_time.append(last_mh_attack_time)
                            rotation_status.append("Parry")
                        elif attack_table_results == 3: 
                            if target_level - 80 == 3:
                                mh_white_attack = mh_white_attack - (mh_white_attack * .35) - ((mh_white_attack - (mh_white_attack * .35)) * armor_red_amount)
                                trinket_hit_crit_tracker = 1
                            elif target_level - 80 == 2:
                                mh_white_attack = mh_white_attack - (mh_white_attack * .15) - ((mh_white_attack - (mh_white_attack * .15)) * armor_red_amount)
                                trinket_hit_crit_tracker = 1
                            else:
                                mh_white_attack = mh_white_attack - (mh_white_attack * .05) - ((mh_white_attack - (mh_white_attack * .05)) * armor_red_amount)
                                trinket_hit_crit_tracker = 1
                            rotation.append("Dancing Rune Weapon")
                            rotation_time.append(last_mh_attack_time)
                            rotation_status.append("Glance")
                        elif attack_table_results == 4: 
                            if target_level - 80 == 3:
                                mh_white_attack = mh_white_attack - 119 - ((mh_white_attack - 119) * armor_red_amount)
                                trinket_hit_crit_tracker = 1
                            else:
                                mh_white_attack = mh_white_attack - 72 - ((mh_white_attack - 72) * armor_red_amount)
                                trinket_hit_crit_tracker = 1
                            rotation.append("Dancing Rune Weapon")
                            rotation_time.append(last_mh_attack_time)
                            rotation_status.append("Block")
                        elif attack_table_results == 5: 
                            atta_num = ((mh_white_attack) - (mh_white_attack * armor_red_amount)) * var_crit_amount
                            trinket_hit_crit_tracker = 2
                            rotation.append("Dancing Rune Weapon")
                            rotation_time.append(last_mh_attack_time)
                            rotation_status.append("Crit")
                        elif attack_table_results == 7: 
                            atta_num = (mh_white_attack) - (mh_white_attack * armor_red_amount)
                            trinket_hit_crit_tracker = 1
                            rotation.append("Dancing Rune Weapon")
                            rotation_time.append(last_mh_attack_time)
                            rotation_status.append("Hit")
                        if atta_num < 0:
                            atta_num = 0
                        if dk_presence == 0:
                            atta_num = atta_num + (atta_num * .15)
                        if hysteria_active == True:
                            atta_num =atta_num + (atta_num * .2)
                        if tricksoftt_active == True:
                            atta_num = atta_num + (atta_num * .15)
                        atta_num = atta_num + (atta_num * increased_physical_damage) + (atta_num * increased_all_damage)
                        atta_num = atta_num * dancing_rune_weapon_damage_multi
                        dancing_rune_weapon_damage += atta_num
                        rotation_damage.append(atta_num)
                if attack_table_results == 0:
                    mh_white_attack = 0 #No Damage
                    rotation.append("Main hand")
                    rotation_time.append(last_mh_attack_time)
                    rotation_status.append("Miss")
                elif attack_table_results == 1: 
                    mh_white_attack = 0 #No Damage
                    rotation.append("Main hand")
                    rotation_time.append(last_mh_attack_time)
                    rotation_status.append("Dodge")
                elif attack_table_results == 2: 
                    mh_white_attack = 0 #No Damage
                    rotation.append("Main hand")
                    rotation_time.append(last_mh_attack_time)
                    rotation_status.append("Parry")
                elif attack_table_results == 3: 
                    if target_level - 80 == 3:
                        mh_white_attack = mh_white_attack - (mh_white_attack * .35) - ((mh_white_attack - (mh_white_attack * .35)) * armor_red_amount)
                        trinket_hit_crit_tracker = 1
                    elif target_level - 80 == 2:
                        mh_white_attack = mh_white_attack - (mh_white_attack * .15) - ((mh_white_attack - (mh_white_attack * .15)) * armor_red_amount)
                        trinket_hit_crit_tracker = 1
                    else:
                        mh_white_attack = mh_white_attack - (mh_white_attack * .05) - ((mh_white_attack - (mh_white_attack * .05)) * armor_red_amount)
                        trinket_hit_crit_tracker = 1
                    rotation.append("Main hand")
                    rotation_time.append(last_mh_attack_time)
                    rotation_status.append("Glance")
                elif attack_table_results == 4:
                    if target_level - 80 == 3:
                        mh_white_attack = mh_white_attack - 119 - ((mh_white_attack - 119) * armor_red_amount)
                        trinket_hit_crit_tracker = 1
                    else:
                        mh_white_attack = mh_white_attack - 72 - ((mh_white_attack - 72) * armor_red_amount)
                        trinket_hit_crit_tracker = 1
                    rotation.append("Main hand")
                    rotation_time.append(last_mh_attack_time)
                    rotation_status.append("Block")
                elif attack_table_results == 5: 
                    mh_white_attack = ((mh_white_attack) - (mh_white_attack * armor_red_amount)) * var_crit_amount
                    trinket_hit_crit_tracker = 2
                    rotation.append("Main hand")
                    rotation_time.append(last_mh_attack_time)
                    rotation_status.append("Crit")
                elif attack_table_results == 7: 
                    mh_white_attack = (mh_white_attack) - (mh_white_attack * armor_red_amount)
                    trinket_hit_crit_tracker = 1
                    rotation.append("Main hand")
                    rotation_time.append(last_mh_attack_time)
                    rotation_status.append("Hit")
                if mh_white_attack < 0:
                    mh_white_attack = 0
                if dk_presence == 0:
                    mh_white_attack = mh_white_attack + (mh_white_attack * .15)
                if hysteria_active == True:
                    mh_white_attack = mh_white_attack + (mh_white_attack * .2)
                if tricksoftt_active == True:
                    mh_white_attack = mh_white_attack + (mh_white_attack * .15)
                mh_white_attack = mh_white_attack + (mh_white_attack * increased_physical_damage) + (mh_white_attack * increased_all_damage)
                sum_mh_white_attacks += mh_white_attack
                rotation_damage.append(mh_white_attack)
                last_mh_attack_time = last_mh_attack_time + (mh_speed) 
            if necrosis_points != 0:
                if trinket_hit_crit_tracker != 0:
                    atta_num = mh_white_attack * ((necrosis_points * 4) / 100)
                    necrosis_damage += atta_num
                    rotation.append("Necrosis")
                    rotation_time.append(last_mh_attack_time - mh_speed)
                    rotation_damage.append(atta_num)
                    rotation_status.append("Active")
            if bloodcaked_blades_points != 0:
                if trinket_hit_crit_tracker != 0:
                    if ((random.randint(0, 10000)) / 100) < (bloodcaked_blades_points * 10):
                        attack_table_results = attack_table(1, tanking, H2, True, False, hit_from_gear, hit_from_other, target_level, all_expertise_dodge, all_expertise_parry, total_crit, increased_phy_crit)
                        how_many_dots_on_target = 0
                        if dots[0] > current_time:
                            how_many_dots_on_target += 1
                        if dots[1] > current_time:
                            how_many_dots_on_target += 1
                        if dots[2] > current_time:
                            how_many_dots_on_target += 1
                        if attack_table_results == 0:
                            rotation.append("Blood-Caked Blades")
                            rotation_time.append(last_mh_attack_time - mh_speed)
                            rotation_damage.append(0)
                            rotation_status.append("Miss")
                        if attack_table_results == 1:
                            rotation.append("Blood-Caked Blades")
                            rotation_time.append(last_mh_attack_time - mh_speed)
                            rotation_damage.append(0)
                            rotation_status.append("Dodge")
                        if attack_table_results == 5:
                            atta_num = (weapon_roll(mh_input_lowend_weapon_damage,mh_input_topend_weapon_damage)) * .25
                            armor_red_amount = dam_reduc(current_armor, armor_penetration, target_level)
                            atta_num = atta_num + atta_num * (.125 * how_many_dots_on_target)
                            atta_num = atta_num - (atta_num * armor_red_amount)
                            atta_num = atta_num + (atta_num * increased_physical_damage) + (atta_num * increased_all_damage)
                            bloodcaked_blades_damage += atta_num
                            rotation.append("Blood-Caked Blades")
                            rotation_time.append(last_mh_attack_time - mh_speed)
                            rotation_damage.append(atta_num)
                            rotation_status.append("Hit")
                        if attack_table_results == 7:
                            atta_num = (weapon_roll(mh_input_lowend_weapon_damage,mh_input_topend_weapon_damage)) * .25
                            armor_red_amount = dam_reduc(current_armor, armor_penetration, target_level)
                            atta_num = atta_num + atta_num * (.125 * how_many_dots_on_target)
                            atta_num = atta_num - (atta_num * armor_red_amount)
                            atta_num = atta_num + (atta_num * increased_physical_damage) + (atta_num * increased_all_damage)
                            bloodcaked_blades_damage += atta_num
                            rotation.append("Blood-Caked Blades")
                            rotation_time.append(last_mh_attack_time - mh_speed)
                            rotation_damage.append(atta_num)
                            rotation_status.append("Hit")
                        
            if swordguard_enchant == True:
                if swordguard_enchant_cd < current_time:
                    if trinket_hit_crit_tracker != 0:
                        if random.randint(0, 100) < 25:
                            if swordguard_buff_active == False:
                                swordguard_buff_active = True
                                rotation.append("Swordguard Embroidery")
                                rotation_time.append(current_time)
                                rotation_damage.append(0)
                                rotation_status.append("Proc")
                                swordguard_enchant_cd = current_time + 45
                                swordguard_enchant_active_timer = current_time + 15
                                bonus_loop_ap += 400      
            if sword_berserking_enchant == True:
                if sword_berserking_enchant_hand == "mh":
                    if trinket_hit_crit_tracker != 0:
                        if random.randint(0, 10000)/100 < ((mh_speed * 1.2 / 60)*100):
                            berskering_buff_active = True
                            rotation.append("Berskering Enchant")
                            rotation_time.append(current_time)
                            rotation_damage.append(0)
                            rotation_status.append("Proc")
                            berskering_enchant_active_timer = current_time + 15
                            bonus_loop_ap += 400      
            if rune_of_the_fallen_crusader == True:
                if rune_of_the_fallen_crusader_hand == "mh":
                    if trinket_hit_crit_tracker != 0:
                        if random.randint(0, 10000)/100 < ((mh_speed * 2 / 60)*100):
                            rotation.append("Rune of the Fallen Crusader")
                            rotation_time.append(current_time)
                            rotation_damage.append(0)
                            rotation_status.append("Proc")
                            runeofthefallencrusdaer_active_cd = current_time + 15
                            if runeofthefallencrusader_buff_active == False:
                                runeofthefallc_str_amount = strtoap * .15
                                bonus_loop_str += runeofthefallc_str_amount
                                runeofthefallencrusader_buff_active = True
            if rune_of_razorice == True:
                if rune_of_razorice_hand == "mh":
                    if trinket_hit_crit_tracker != 0:
                        rune_of_razorice_damage += (mh_white_attack * .02)  
                        rotation.append("Rune of Razoricce")
                        rotation_time.append(current_time)
                        rotation_damage.append(mh_white_attack * .02)
                        rotation_status.append("Active")
            if rune_of_lichbane == True:
                if rune_of_lichbane_hand == "mh":
                    if trinket_hit_crit_tracker != 0:
                        rune_of_lichbane_damage += (mh_white_attack * .02) 
                        rotation.append("Rune of Lichbane")
                        rotation_time.append(current_time)
                        rotation_damage.append(mh_white_attack * .02)
                        rotation_status.append("Active")
            if rune_of_cinderglacier == True:
                if rune_of_cinderglacier_hand == "mh":
                    if trinket_hit_crit_tracker != 0:
                        if random.randint(0, 10000)/100 < ((mh_speed * 1.5 / 60)*100):
                            rotation.append("Rune of Cinderglacier")
                            rotation_time.append(current_time)
                            rotation_damage.append(0)
                            rotation_status.append("Proc")
                            rune_of_cinderglacier_active = True
                            rune_of_cinderglacier_active_count = 0
            if bloody_vengeance_points != 0:
                if trinket_hit_crit_tracker == 2:
                    if bloody_vengeance_stacks < 3:
                        bloody_vengeance_stacks += 1
                        bloody_vengeance_timer = current_time + 30
                        increased_physical_damage += bloody_vengeance_points / 100
                        rotation.append("Bloody Vengeance")
                        rotation_time.append(current_time)
                        rotation_damage.append(0)
                        rotation_status.append("Active")
                    else:
                        bloody_vengeance_timer = current_time + 30
                        rotation.append("Bloody Vengeance")
                        rotation_time.append(current_time)
                        rotation_damage.append(0)
                        rotation_status.append("Refresh")
            #Trinket Buff Check Between MH & OH Swing
            if trinket_1_use == True:
                if trinket1_type == "Active":
                    if trinket1_use_icd < current_time:
                        trinket1_buff_time = current_time + float(trinket1_length)
                        trinket1_use_icd = current_time + float(trinket1_icd)
                        trinket1_used = True
                        rotation.append(gear[12])
                        rotation_time.append(current_time)
                        rotation_status.append("Active")
                        if trinket1_bonus_type == "Strength":
                            bonus_loop_str += float(trinket1_bonus_amount)
                        elif trinket1_bonus_type == "Agility":
                            bonus_loop_agility += float(trinket1_bonus_amount)
                        elif trinket1_bonus_type == "Stamina":
                            bonus_loop_hp += (float(trinket1_bonus_amount) * 10)
                        elif trinket1_bonus_type == "Intelligence":
                            print("Increased Intel") #Not even adding this
                        elif trinket1_bonus_type == "Spirit":
                            print("Increased Spirit") #Not even adding this
                        elif trinket1_bonus_type == "Attack Power":
                            bonus_loop_ap += float(trinket1_bonus_amount)
                        elif trinket1_bonus_type == "Hit Rating":
                            bonus_loop_hit += float(trinket1_bonus_amount)
                        elif trinket1_bonus_type == "Crit Rating":
                            bonus_loop_crit_rating += float(trinket1_bonus_amount)
                        elif trinket1_bonus_type == "Haste Rating":
                            bonus_loop_hit += float(trinket1_bonus_amount)
                        elif trinket1_bonus_type == "Armor Pen":
                            bonus_loop_armor_pen_rating += float(trinket1_bonus_amount)
                        elif trinket1_bonus_type == "Expertise Rating":
                            bonus_loop_expertise_rating += float(trinket1_bonus_amount)
                        elif trinket1_bonus_type == "Armor":
                            print("Increased Armor") #To be added Later
                        elif trinket1_bonus_type == "Defense Rating":
                            print("Increase Defense Rating") #To be added Later
                        elif trinket1_bonus_type == "Dodge Rating":
                            print("Increased Dodge Rating") #To be added Later
                        elif trinket1_bonus_type == "Parry Rating":
                            print("Increased Parry Rating") #To be added Later
                        elif trinket1_bonus_type == "Damage":
                            trinket_bonus_damage = random.randint(trinket1_min_damage, trinket1_max_damage)
                            rotation_damage.append(trinket_bonus_damage)
                            trinket1_damage += trinket_bonus_damage
                        if trinket1_bonus_type != "Damage":
                            rotation_damage.append(0)
                elif trinket1_type == "Proc":
                    if trinket1_chanceon == "Hit":
                        if trinket_hit_crit_tracker == 1 or trinket_hit_crit_tracker == 2: #trinket_hit_crit_tracker = 0 Null, 1 Hit, 2 Crit
                            if trinket1_use_icd < current_time:
                                atta_num = (random.randint(1, 100) / 100)
                                if float(trinket1_chanceperc) > atta_num:
                                    trinket1_use_icd = current_time + float(trinket1_icd)
                                    trinket1_buff_time = current_time + float(trinket1_length)
                                    trinket1_used = True
                                    rotation.append(gear[12])
                                    rotation_time.append(current_time)
                                    rotation_status.append("Proc")
                                    if trinket1_bonus_type == "Strength":
                                        bonus_loop_str += float(trinket1_bonus_amount)
                                    elif trinket1_bonus_type == "Agility":
                                        bonus_loop_agility += float(trinket1_bonus_amount)
                                    elif trinket1_bonus_type == "Stamina":
                                        bonus_loop_hp += (float(trinket1_bonus_amount) * 10)
                                    elif trinket1_bonus_type == "Intelligence":
                                        print("Increased Intel") #Not even adding this
                                    elif trinket1_bonus_type == "Spirit":
                                        print("Increased Spirit") #Not even adding this
                                    elif trinket1_bonus_type == "Attack Power":
                                        bonus_loop_ap += float(trinket1_bonus_amount)
                                    elif trinket1_bonus_type == "Hit Rating":
                                        bonus_loop_hit += float(trinket1_bonus_amount)
                                    elif trinket1_bonus_type == "Crit Rating":
                                        bonus_loop_crit_rating += float(trinket1_bonus_amount)
                                    elif trinket1_bonus_type == "Haste Rating":
                                        bonus_loop_hit += float(trinket1_bonus_amount)
                                    elif trinket1_bonus_type == "Armor Pen":
                                        bonus_loop_armor_pen_rating += float(trinket1_bonus_amount)
                                    elif trinket1_bonus_type == "Expertise Rating":
                                        bonus_loop_expertise_rating += float(trinket1_bonus_amount)
                                    elif trinket1_bonus_type == "Armor":
                                        print("Increased Armor") #To be added Later
                                    elif trinket1_bonus_type == "Defense Rating":
                                        print("Increase Defense Rating") #To be added Later
                                    elif trinket1_bonus_type == "Dodge Rating":
                                        print("Increased Dodge Rating") #To be added Later
                                    elif trinket1_bonus_type == "Parry Rating":
                                        print("Increased Parry Rating") #To be added Later
                                    elif trinket1_bonus_type == "Damage":
                                        trinket_bonus_damage = random.randint(trinket1_min_damage, trinket1_max_damage)
                                        rotation_damage.append(trinket_bonus_damage)
                                        trinket1_damage += trinket_bonus_damage
                                    if trinket1_bonus_type != "Damage":
                                        rotation_damage.append(0)
                    elif trinket1_chanceon == "Crit":
                        if trinket_hit_crit_tracker == 2:
                            if trinket1_use_icd < current_time:
                                atta_num = (random.randint(1, 100) / 100)
                                if float(trinket1_chanceperc) > atta_num:
                                    trinket1_use_icd = current_time + float(trinket1_icd)
                                    trinket1_buff_time = current_time + float(trinket1_length)
                                    trinket1_used = True
                                    rotation.append(gear[12])
                                    rotation_time.append(current_time)
                                    rotation_status.append("Proc")
                                    if trinket1_bonus_type == "Strength":
                                        bonus_loop_str += float(trinket1_bonus_amount)
                                    elif trinket1_bonus_type == "Agility":
                                        bonus_loop_agility += float(trinket1_bonus_amount)
                                    elif trinket1_bonus_type == "Stamina":
                                        bonus_loop_hp += (float(trinket1_bonus_amount) * 10)
                                    elif trinket1_bonus_type == "Intelligence":
                                        print("Increased Intel") #Not even adding this
                                    elif trinket1_bonus_type == "Spirit":
                                        print("Increased Spirit") #Not even adding this
                                    elif trinket1_bonus_type == "Attack Power":
                                        bonus_loop_ap += float(trinket1_bonus_amount)
                                    elif trinket1_bonus_type == "Hit Rating":
                                        bonus_loop_hit += float(trinket1_bonus_amount)
                                    elif trinket1_bonus_type == "Crit Rating":
                                        bonus_loop_crit_rating += float(trinket1_bonus_amount)
                                    elif trinket1_bonus_type == "Haste Rating":
                                        bonus_loop_hit += float(trinket1_bonus_amount)
                                    elif trinket1_bonus_type == "Armor Pen":
                                        bonus_loop_armor_pen_rating += float(trinket1_bonus_amount)
                                    elif trinket1_bonus_type == "Expertise Rating":
                                        bonus_loop_expertise_rating += float(trinket1_bonus_amount)
                                    elif trinket1_bonus_type == "Armor":
                                        print("Increased Armor") #To be added Later
                                    elif trinket1_bonus_type == "Defense Rating":
                                        print("Increase Defense Rating") #To be added Later
                                    elif trinket1_bonus_type == "Dodge Rating":
                                        print("Increased Dodge Rating") #To be added Later
                                    elif trinket1_bonus_type == "Parry Rating":
                                        print("Increased Parry Rating") #To be added Later
                                    elif trinket1_bonus_type == "Damage":
                                        trinket_bonus_damage = random.randint(trinket1_min_damage, trinket1_max_damage)
                                        rotation_damage.append(trinket_bonus_damage)
                                        trinket1_damage += trinket_bonus_damage
                                    if trinket1_bonus_type != "Damage":
                                        rotation_damage.append(0)
            if trinket_2_use == True:
                if trinket2_type == "Active":
                    if trinket2_use_icd < current_time:
                        trinket2_buff_time = current_time + float(trinket2_length)
                        trinket2_use_icd = current_time + float(trinket2_icd)
                        trinket2_used = True
                        rotation.append(gear[13])
                        rotation_time.append(current_time)
                        rotation_status.append("Active")
                        if trinket2_bonus_type == "Strength":
                            bonus_loop_str += float(trinket2_bonus_amount)
                        elif trinket2_bonus_type == "Agility":
                            bonus_loop_agility += float(trinket2_bonus_amount)
                        elif trinket2_bonus_type == "Stamina":
                            bonus_loop_hp += (float(trinket2_bonus_amount) * 10)
                        elif trinket2_bonus_type == "Intelligence":
                            print("Increased Intel") #Not even adding this
                        elif trinket2_bonus_type == "Spirit":
                            print("Increased Spirit") #Not even adding this
                        elif trinket2_bonus_type == "Attack Power":
                            bonus_loop_ap += float(trinket2_bonus_amount)
                        elif trinket2_bonus_type == "Hit Rating":
                            bonus_loop_hit += float(trinket2_bonus_amount)
                        elif trinket2_bonus_type == "Crit Rating":
                            bonus_loop_crit_rating += float(trinket2_bonus_amount)
                        elif trinket2_bonus_type == "Haste Rating":
                            bonus_loop_hit += float(trinket2_bonus_amount)
                        elif trinket2_bonus_type == "Armor Pen":
                            bonus_loop_armor_pen_rating += float(trinket2_bonus_amount)
                        elif trinket2_bonus_type == "Expertise Rating":
                            bonus_loop_expertise_rating += float(trinket2_bonus_amount)
                        elif trinket2_bonus_type == "Armor":
                            print("Increased Armor") #To be added Later
                        elif trinket2_bonus_type == "Defense Rating":
                            print("Increase Defense Rating") #To be added Later
                        elif trinket2_bonus_type == "Dodge Rating":
                            print("Increased Dodge Rating") #To be added Later
                        elif trinket2_bonus_type == "Parry Rating":
                            print("Increased Parry Rating") #To be added Later
                        elif trinket2_bonus_type == "Damage":
                            trinket_bonus_damage = random.randint(trinket2_min_damage, trinket2_max_damage)
                            rotation_damage.append(trinket_bonus_damage)
                            trinket2_damage += trinket_bonus_damage
                        if trinket2_bonus_type != "Damage":
                            rotation_damage.append(0)
                elif trinket2_type == "Proc":
                    if trinket2_chanceon == "Hit":
                        if trinket_hit_crit_tracker == 1 or trinket_hit_crit_tracker == 2: #trinket_hit_crit_tracker = 0 Null, 1 Hit, 2 Crit
                            if trinket2_use_icd < current_time:
                                atta_num = (random.randint(1, 100) / 100)
                                if float(trinket2_chanceperc) > atta_num:
                                    trinket2_use_icd = current_time + float(trinket2_icd)
                                    trinket2_buff_time = current_time + float(trinket2_length)
                                    trinket2_used = True
                                    rotation.append(gear[13])
                                    rotation_time.append(current_time)
                                    rotation_status.append("Proc")
                                    if trinket2_bonus_type == "Strength":
                                        bonus_loop_str += float(trinket2_bonus_amount)
                                    elif trinket2_bonus_type == "Agility":
                                        bonus_loop_agility += float(trinket2_bonus_amount)
                                    elif trinket2_bonus_type == "Stamina":
                                        bonus_loop_hp += (float(trinket2_bonus_amount) * 10)
                                    elif trinket2_bonus_type == "Intelligence":
                                        print("Increased Intel") #Not even adding this
                                    elif trinket2_bonus_type == "Spirit":
                                        print("Increased Spirit") #Not even adding this
                                    elif trinket2_bonus_type == "Attack Power":
                                        bonus_loop_ap += float(trinket2_bonus_amount)
                                    elif trinket2_bonus_type == "Hit Rating":
                                        bonus_loop_hit += float(trinket2_bonus_amount)
                                    elif trinket2_bonus_type == "Crit Rating":
                                        bonus_loop_crit_rating += float(trinket2_bonus_amount)
                                    elif trinket2_bonus_type == "Haste Rating":
                                        bonus_loop_hit += float(trinket2_bonus_amount)
                                    elif trinket2_bonus_type == "Armor Pen":
                                        bonus_loop_armor_pen_rating += float(trinket2_bonus_amount)
                                    elif trinket2_bonus_type == "Expertise Rating":
                                        bonus_loop_expertise_rating += float(trinket2_bonus_amount)
                                    elif trinket2_bonus_type == "Armor":
                                        print("Increased Armor") #To be added Later
                                    elif trinket2_bonus_type == "Defense Rating":
                                        print("Increase Defense Rating") #To be added Later
                                    elif trinket2_bonus_type == "Dodge Rating":
                                        print("Increased Dodge Rating") #To be added Later
                                    elif trinket2_bonus_type == "Parry Rating":
                                        print("Increased Parry Rating") #To be added Later
                                    elif trinket2_bonus_type == "Damage":
                                        trinket_bonus_damage = random.randint(trinket2_min_damage, trinket2_max_damage)
                                        rotation_damage.append(trinket_bonus_damage)
                                        trinket2_damage += trinket_bonus_damage
                                    if trinket2_bonus_type != "Damage":
                                        rotation_damage.append(0)
                    elif trinket2_chanceon == "Crit":
                        if trinket_hit_crit_tracker == 2:
                            if trinket2_use_icd < current_time:
                                atta_num = (random.randint(1, 100) / 100)
                                if float(trinket2_chanceperc) > atta_num:
                                    trinket2_use_icd = current_time + float(trinket2_icd)
                                    trinket2_buff_time = current_time + float(trinket2_length)
                                    trinket2_used = True
                                    rotation.append(gear[13])
                                    rotation_time.append(current_time)
                                    rotation_status.append("Proc")
                                    if trinket2_bonus_type == "Strength":
                                        bonus_loop_str += float(trinket2_bonus_amount)
                                    elif trinket2_bonus_type == "Agility":
                                        bonus_loop_agility += float(trinket2_bonus_amount)
                                    elif trinket2_bonus_type == "Stamina":
                                        bonus_loop_hp += (float(trinket2_bonus_amount) * 10)
                                    elif trinket2_bonus_type == "Intelligence":
                                        print("Increased Intel") #Not even adding this
                                    elif trinket2_bonus_type == "Spirit":
                                        print("Increased Spirit") #Not even adding this
                                    elif trinket2_bonus_type == "Attack Power":
                                        bonus_loop_ap += float(trinket2_bonus_amount)
                                    elif trinket2_bonus_type == "Hit Rating":
                                        bonus_loop_hit += float(trinket2_bonus_amount)
                                    elif trinket2_bonus_type == "Crit Rating":
                                        bonus_loop_crit_rating += float(trinket2_bonus_amount)
                                    elif trinket2_bonus_type == "Haste Rating":
                                        bonus_loop_hit += float(trinket2_bonus_amount)
                                    elif trinket2_bonus_type == "Armor Pen":
                                        bonus_loop_armor_pen_rating += float(trinket2_bonus_amount)
                                    elif trinket2_bonus_type == "Expertise Rating":
                                        bonus_loop_expertise_rating += float(trinket2_bonus_amount)
                                    elif trinket2_bonus_type == "Armor":
                                        print("Increased Armor") #To be added Later
                                    elif trinket2_bonus_type == "Defense Rating":
                                        print("Increase Defense Rating") #To be added Later
                                    elif trinket2_bonus_type == "Dodge Rating":
                                        print("Increased Dodge Rating") #To be added Later
                                    elif trinket2_bonus_type == "Parry Rating":
                                        print("Increased Parry Rating") #To be added Later
                                    elif trinket2_bonus_type == "Damage":
                                        trinket_bonus_damage = random.randint(trinket2_min_damage, trinket2_max_damage)
                                        rotation_damage.append(trinket_bonus_damage)
                                        trinket2_damage += trinket_bonus_damage
                                    if trinket2_bonus_type != "Damage":
                                        rotation_damage.append(0)
            trinket_hit_crit_tracker = 0 #Resetting hit/crit tracker after both trinkets
            if H2 == False:
                if last_oh_attack_time <= current_time:
                    oh_white_wep_roll = weapon_roll(oh_input_lowend_weapon_damage,oh_input_topend_weapon_damage)
                    haste_percentage = (total_haste_rating / 25.21) / 100 #Returns a result of 0 - 1 for 0% - 100%
                    oh_speed = oh_input_weapon_speed / (1 + haste_percentage) / (1 + melee_haste_bonus) / (1 + melee_haste_bonus2) / (1 + melee_haste_bonus3) / (1 + melee_haste_bonus4)
                    if dk_presence == 2:
                        oh_speed = oh_speed / (1 + .15)
                    if icy_talons_points != 0:
                        if dots[0] > current_time:
                            mh_speed = mh_speed / (1 + (icy_talons_points * .04))
                    oh_white_attack = white_attack(oh_white_wep_roll, oh_input_weapon_speed, current_ap)
                    if killing_machine_points != 0:
                        km_proc_chance = (mh_speed* killing_machine_points / 60) * 100
                        km_rand = random.randint(0, 10000)/100
                        if km_proc_chance > km_rand:
                            km_procd = True
                    attack_table_results = attack_table(0, tanking, H2, False, True, hit_from_gear, hit_from_other, target_level, all_expertise_dodge, all_expertise_parry, total_crit, increased_phy_crit)
                    armor_red_amount = dam_reduc(current_armor, armor_penetration, target_level)
                    if dancing_rune_weapon_points == 1:
                        if dancing_rune_weapon_active == True:
                            if attack_table_results == 0:
                                atta_num = 0 #No Damage
                                rotation.append("Dancing Rune Weapon")
                                rotation_time.append(last_oh_attack_time)
                                rotation_status.append("Miss")
                            elif attack_table_results == 1: 
                                atta_num = 0 #No Damage
                                rotation.append("Dancing Rune Weapon")
                                rotation_time.append(last_oh_attack_time)
                                rotation_status.append("Dodge")
                            elif attack_table_results == 2:
                                atta_num = 0 #No Damage
                                rotation.append("Dancing Rune Weapon")
                                rotation_time.append(last_oh_attack_time)
                                rotation_status.append("Parry")
                            elif attack_table_results == 3: 
                                if target_level - 80 == 3:
                                    oh_white_attack = oh_white_attack - (oh_white_attack * .35) - ((oh_white_attack - (oh_white_attack * .35)) * armor_red_amount)
                                    trinket_hit_crit_tracker = 1
                                elif target_level - 80 == 2:
                                    oh_white_attack = oh_white_attack - (oh_white_attack * .15) - ((oh_white_attack - (oh_white_attack * .15)) * armor_red_amount)
                                    trinket_hit_crit_tracker = 1
                                else:
                                    oh_white_attack = oh_white_attack - (oh_white_attack * .05) - ((oh_white_attack - (oh_white_attack * .05)) * armor_red_amount)
                                    trinket_hit_crit_tracker = 1
                                rotation.append("Dancing Rune Weapon")
                                rotation_time.append(last_oh_attack_time)
                                rotation_status.append("Glance")
                            elif attack_table_results == 4: 
                                if target_level - 80 == 3:
                                    oh_white_attack = oh_white_attack - 119 - ((oh_white_attack - 119) * armor_red_amount)
                                    trinket_hit_crit_tracker = 1
                                else:
                                    oh_white_attack = oh_white_attack - 72 - ((oh_white_attack - 72) * armor_red_amount)
                                    trinket_hit_crit_tracker = 1
                                rotation.append("Dancing Rune Weapon")
                                rotation_time.append(last_oh_attack_time)
                                rotation_status.append("Block")
                            elif attack_table_results == 5: 
                                atta_num = ((oh_white_attack) - (oh_white_attack * armor_red_amount)) * var_crit_amount
                                trinket_hit_crit_tracker = 2
                                rotation.append("Dancing Rune Weapon")
                                rotation_time.append(last_oh_attack_time)
                                rotation_status.append("Crit")
                            elif attack_table_results == 7: 
                                atta_num = (oh_white_attack) - (oh_white_attack * armor_red_amount)
                                trinket_hit_crit_tracker = 1
                                rotation.append("Dancing Rune Weapon")
                                rotation_time.append(last_oh_attack_time)
                                rotation_status.append("Hit")
                            if atta_num < 0:
                                atta_num = 0
                            if dk_presence == 0:
                                atta_num = atta_num + (atta_num * .15)
                            if hysteria_active == True:
                                atta_num =atta_num + (atta_num * .2)
                            if tricksoftt_active == True:
                                atta_num = atta_num + (atta_num * .15)
                            atta_num = atta_num + (atta_num * increased_physical_damage) + (atta_num * increased_all_damage)
                            atta_num = atta_num * dancing_rune_weapon_damage_multi
                            dancing_rune_weapon_damage += atta_num
                            rotation_damage.append(atta_num)
                    if attack_table_results == 0:
                        oh_white_attack = 0 #No Damage
                        rotation.append("Off hand")
                        rotation_time.append(last_oh_attack_time)
                        rotation_status.append("Miss")
                    elif attack_table_results == 1: 
                        oh_white_attack = 0 #No Damage
                        rotation.append("Off hand")
                        rotation_time.append(last_oh_attack_time)
                        rotation_status.append("Dodge")
                    elif attack_table_results == 2: 
                        oh_white_attack = 0 #No Damage
                        rotation.append("Off hand")
                        rotation_time.append(last_oh_attack_time)
                        rotation_status.append("Parry")
                    elif attack_table_results == 3: 
                        if target_level - 80 == 3:
                            oh_white_attack = oh_white_attack - (oh_white_attack * .35) - ((oh_white_attack - (oh_white_attack * .35)) * armor_red_amount)
                            trinket_hit_crit_tracker = 1
                        elif target_level - 80 == 2:
                            oh_white_attack = oh_white_attack - (oh_white_attack * .15) - ((oh_white_attack - (oh_white_attack * .15)) * armor_red_amount)
                            trinket_hit_crit_tracker = 1
                        else:
                            oh_white_attack = oh_white_attack - (oh_white_attack * .05) - ((oh_white_attack - (oh_white_attack * .05)) * armor_red_amount)
                            trinket_hit_crit_tracker = 1
                        rotation.append("Off hand")
                        rotation_time.append(last_oh_attack_time)
                        rotation_status.append("Glance")
                    elif attack_table_results == 4:
                        if target_level - 80 == 3:
                            oh_white_attack = oh_white_attack - 119 - ((oh_white_attack - 119) * armor_red_amount)
                            trinket_hit_crit_tracker = 1
                        else:
                            oh_white_attack = oh_white_attack - 72 - ((oh_white_attack - 72) * armor_red_amount)
                            trinket_hit_crit_tracker = 1
                        rotation.append("Off hand")
                        rotation_time.append(last_oh_attack_time)
                        rotation_status.append("Block")
                    elif attack_table_results == 5: 
                        oh_white_attack = ((oh_white_attack) - (oh_white_attack * armor_red_amount)) * var_crit_amount
                        trinket_hit_crit_tracker = 2
                        rotation.append("Off hand")
                        rotation_time.append(last_oh_attack_time)
                        rotation_status.append("Crit")
                    elif attack_table_results == 7: 
                        oh_white_attack = (oh_white_attack) - (oh_white_attack * armor_red_amount)
                        trinket_hit_crit_tracker = 1
                        rotation.append("Off hand")
                        rotation_time.append(last_oh_attack_time)
                        rotation_status.append("Hit")
                    if oh_white_attack < 0:
                        oh_white_attack = 0
                    if dk_presence == 0:
                        oh_white_attack = oh_white_attack + (oh_white_attack * .15)
                    oh_white_attack = oh_white_attack * oh_wep_damage_mod
                    if hysteria_active == True:
                        oh_white_attack = oh_white_attack + (oh_white_attack * .2)
                    if tricksoftt_active == True:
                        oh_white_attack = oh_white_attack + (oh_white_attack * .15)
                    oh_white_attack = oh_white_attack + (oh_white_attack * increased_physical_damage) + (oh_white_attack * increased_all_damage)
                    sum_oh_white_attacks += oh_white_attack
                    rotation_damage.append(oh_white_attack)
                    last_oh_attack_time = last_oh_attack_time + (oh_speed)
            if necrosis_points != 0:
                if trinket_hit_crit_tracker != 0:
                    atta_num = mh_white_attack * ((necrosis_points * 4) / 100)
                    necrosis_damage += atta_num
                    rotation.append("Necrosis")
                    rotation_time.append(last_oh_attack_time - oh_speed)
                    rotation_damage.append(atta_num)
                    rotation_status.append("Active")
            if bloodcaked_blades_points != 0:
                if trinket_hit_crit_tracker != 0:
                    if ((random.randint(0, 10000)) / 100) < (bloodcaked_blades_points * 10):
                        attack_table_results = attack_table(1, tanking, H2, True, False, hit_from_gear, hit_from_other, target_level, all_expertise_dodge, all_expertise_parry, total_crit, increased_phy_crit)
                        how_many_dots_on_target = 0
                        if dots[0] > current_time:
                            how_many_dots_on_target += 1
                        if dots[1] > current_time:
                            how_many_dots_on_target += 1
                        if dots[2] > current_time:
                            how_many_dots_on_target += 1
                        if attack_table_results == 0:
                            rotation.append("Blood-Caked Blades")
                            rotation_time.append(last_oh_attack_time - oh_speed)
                            rotation_damage.append(0)
                            rotation_status.append("Miss")
                        if attack_table_results == 1:
                            rotation.append("Blood-Caked Blades")
                            rotation_time.append(last_oh_attack_time - oh_speed)
                            rotation_damage.append(0)
                            rotation_status.append("Dodge")
                        if attack_table_results == 5:
                            atta_num = (weapon_roll(mh_input_lowend_weapon_damage,mh_input_topend_weapon_damage)) * .25
                            armor_red_amount = dam_reduc(current_armor, armor_penetration, target_level)
                            atta_num = atta_num + atta_num * (.125 * how_many_dots_on_target)
                            atta_num = atta_num - (atta_num * armor_red_amount)
                            atta_num = atta_num + (atta_num * increased_physical_damage) + (atta_num * increased_all_damage)
                            bloodcaked_blades_damage += atta_num
                            rotation.append("Blood-Caked Blades")
                            rotation_time.append(last_oh_attack_time - oh_speed)
                            rotation_damage.append(atta_num)
                            rotation_status.append("Hit")
                        if attack_table_results == 7:
                            atta_num = (weapon_roll(mh_input_lowend_weapon_damage,mh_input_topend_weapon_damage)) * .25
                            armor_red_amount = dam_reduc(current_armor, armor_penetration, target_level)
                            atta_num = atta_num + atta_num * (.125 * how_many_dots_on_target)
                            atta_num = atta_num - (atta_num * armor_red_amount)
                            atta_num = atta_num + (atta_num * increased_physical_damage) + (atta_num * increased_all_damage)
                            bloodcaked_blades_damage += atta_num
                            rotation.append("Blood-Caked Blades")
                            rotation_time.append(last_oh_attack_time - oh_speed)
                            rotation_damage.append(atta_num)
                            rotation_status.append("Hit")
            if swordguard_enchant == True:
                if swordguard_enchant_cd < current_time:
                    if trinket_hit_crit_tracker != 0:
                        if random.randint(0, 100) < 25:
                            if swordguard_buff_active == False:
                                swordguard_buff_active = True
                                rotation.append("Swordguard Embroidery")
                                rotation_time.append(current_time)
                                rotation_damage.append(0)
                                rotation_status.append("Proc")
                                swordguard_enchant_cd = current_time + 45
                                swordguard_enchant_active_timer = current_time + 15
                                bonus_loop_ap += 400      
            if sword_berserking_enchant == True:
                if sword_berserking_enchant_hand_o == "oh":
                    if trinket_hit_crit_tracker != 0:
                        if random.randint(0, 10000)/100 < ((oh_speed * 1.2 / 60)*100):
                            berskering_buff_active = True
                            rotation.append("Berskering Enchant")
                            rotation_time.append(current_time)
                            rotation_damage.append(0)
                            rotation_status.append("Proc")
                            berskering_enchant_active_timer = current_time + 15
                            bonus_loop_ap += 400      
            if rune_of_the_fallen_crusader == True:
                if rune_of_the_fallen_crusader_hand_o == "oh":
                    if trinket_hit_crit_tracker != 0:
                        if random.randint(0, 10000)/100 < ((oh_speed * 2 / 60)*100):
                            rotation.append("Rune of the Fallen Crusader")
                            rotation_time.append(current_time)
                            rotation_damage.append(0)
                            rotation_status.append("Proc")
                            runeofthefallencrusdaer_active_cd = current_time + 15
                            if runeofthefallencrusader_buff_active == False:
                                runeofthefallc_str_amount = strtoap * .15
                                bonus_loop_str += runeofthefallc_str_amount
                                runeofthefallencrusader_buff_active = True
            if rune_of_razorice == True:
                if rune_of_razorice_hand_o == "oh":
                    if trinket_hit_crit_tracker != 0:
                        rune_of_razorice_damage += (oh_white_attack * .02) 
                        rotation.append("Rune of Razorice")
                        rotation_time.append(current_time)
                        rotation_damage.append(oh_white_attack * .02)
                        rotation_status.append("Active")
            if rune_of_lichbane == True:
                if rune_of_lichbane_hand_o == "oh":
                    if trinket_hit_crit_tracker != 0:
                        rune_of_lichbane_damage += (oh_white_attack * .02)  
                        rotation.append("Rune of Lichbane")
                        rotation_time.append(current_time)
                        rotation_damage.append(oh_white_attack * .02)
                        rotation_status.append("Active")
            if rune_of_cinderglacier == True:
                if rune_of_cinderglacier_hand_o == "oh":
                    if trinket_hit_crit_tracker != 0:
                        if random.randint(0, 10000)/100 < ((oh_speed * 1.5 / 60)*100):
                            rotation.append("Rune of Cinderglacier")
                            rotation_time.append(current_time)
                            rotation_damage.append(0)
                            rotation_status.append("Proc")
                            rune_of_cinderglacier_active = True
                            rune_of_cinderglacier_active_count = 0
            if bloody_vengeance_points != 0:
                if trinket_hit_crit_tracker == 2:
                    if bloody_vengeance_stacks < 3:
                        bloody_vengeance_stacks += 1
                        bloody_vengeance_timer = current_time + 30
                        increased_physical_damage += bloody_vengeance_points / 100
                        rotation.append("Bloody Vengeance")
                        rotation_time.append(current_time)
                        rotation_damage.append(0)
                        rotation_status.append("Active")
                    else:
                        bloody_vengeance_timer = current_time + 30
                        rotation.append("Bloody Vengeance")
                        rotation_time.append(current_time)
                        rotation_damage.append(0)
                        rotation_status.append("Refresh")
            #Use Trinket After OH Swing
            if trinket_1_use == True:
                if trinket1_type == "Active":
                    if trinket1_use_icd < current_time:
                        trinket1_buff_time = current_time + float(trinket1_length)
                        trinket1_use_icd = current_time + float(trinket1_icd)
                        trinket1_used = True
                        rotation.append(gear[12])
                        rotation_time.append(current_time)
                        rotation_status.append("Active")
                        if trinket1_bonus_type == "Strength":
                            bonus_loop_str += float(trinket1_bonus_amount)
                        elif trinket1_bonus_type == "Agility":
                            bonus_loop_agility += float(trinket1_bonus_amount)
                        elif trinket1_bonus_type == "Stamina":
                            bonus_loop_hp += (float(trinket1_bonus_amount) * 10)
                        elif trinket1_bonus_type == "Intelligence":
                            print("Increased Intel") #Not even adding this
                        elif trinket1_bonus_type == "Spirit":
                            print("Increased Spirit") #Not even adding this
                        elif trinket1_bonus_type == "Attack Power":
                            bonus_loop_ap += float(trinket1_bonus_amount)
                        elif trinket1_bonus_type == "Hit Rating":
                            bonus_loop_hit += float(trinket1_bonus_amount)
                        elif trinket1_bonus_type == "Crit Rating":
                            bonus_loop_crit_rating += float(trinket1_bonus_amount)
                        elif trinket1_bonus_type == "Haste Rating":
                            bonus_loop_hit += float(trinket1_bonus_amount)
                        elif trinket1_bonus_type == "Armor Pen":
                            bonus_loop_armor_pen_rating += float(trinket1_bonus_amount)
                        elif trinket1_bonus_type == "Expertise Rating":
                            bonus_loop_expertise_rating += float(trinket1_bonus_amount)
                        elif trinket1_bonus_type == "Armor":
                            print("Increased Armor") #To be added Later
                        elif trinket1_bonus_type == "Defense Rating":
                            print("Increase Defense Rating") #To be added Later
                        elif trinket1_bonus_type == "Dodge Rating":
                            print("Increased Dodge Rating") #To be added Later
                        elif trinket1_bonus_type == "Parry Rating":
                            print("Increased Parry Rating") #To be added Later
                        elif trinket1_bonus_type == "Damage":
                            trinket_bonus_damage = random.randint(trinket1_min_damage, trinket1_max_damage)
                            rotation_damage.append(trinket_bonus_damage)
                            trinket1_damage += trinket_bonus_damage
                        if trinket1_bonus_type != "Damage":
                            rotation_damage.append(0)
                elif trinket1_type == "Proc":
                    if trinket1_chanceon == "Hit":
                        if trinket_hit_crit_tracker == 1 or trinket_hit_crit_tracker == 2: #trinket_hit_crit_tracker = 0 Null, 1 Hit, 2 Crit
                            if trinket1_use_icd < current_time:
                                atta_num = (random.randint(1, 100) / 100)
                                if float(trinket1_chanceperc) > atta_num:
                                    trinket1_use_icd = current_time + float(trinket1_icd)
                                    trinket1_buff_time = current_time + float(trinket1_length)
                                    trinket1_used = True
                                    rotation.append(gear[12])
                                    rotation_time.append(current_time)
                                    rotation_status.append("Proc")
                                    if trinket1_bonus_type == "Strength":
                                        bonus_loop_str += float(trinket1_bonus_amount)
                                    elif trinket1_bonus_type == "Agility":
                                        bonus_loop_agility += float(trinket1_bonus_amount)
                                    elif trinket1_bonus_type == "Stamina":
                                        bonus_loop_hp += (float(trinket1_bonus_amount) * 10)
                                    elif trinket1_bonus_type == "Intelligence":
                                        print("Increased Intel") #Not even adding this
                                    elif trinket1_bonus_type == "Spirit":
                                        print("Increased Spirit") #Not even adding this
                                    elif trinket1_bonus_type == "Attack Power":
                                        bonus_loop_ap += float(trinket1_bonus_amount)
                                    elif trinket1_bonus_type == "Hit Rating":
                                        bonus_loop_hit += float(trinket1_bonus_amount)
                                    elif trinket1_bonus_type == "Crit Rating":
                                        bonus_loop_crit_rating += float(trinket1_bonus_amount)
                                    elif trinket1_bonus_type == "Haste Rating":
                                        bonus_loop_hit += float(trinket1_bonus_amount)
                                    elif trinket1_bonus_type == "Armor Pen":
                                        bonus_loop_armor_pen_rating += float(trinket1_bonus_amount)
                                    elif trinket1_bonus_type == "Expertise Rating":
                                        bonus_loop_expertise_rating += float(trinket1_bonus_amount)
                                    elif trinket1_bonus_type == "Armor":
                                        print("Increased Armor") #To be added Later
                                    elif trinket1_bonus_type == "Defense Rating":
                                        print("Increase Defense Rating") #To be added Later
                                    elif trinket1_bonus_type == "Dodge Rating":
                                        print("Increased Dodge Rating") #To be added Later
                                    elif trinket1_bonus_type == "Parry Rating":
                                        print("Increased Parry Rating") #To be added Later
                                    elif trinket1_bonus_type == "Damage":
                                        trinket_bonus_damage = random.randint(trinket1_min_damage, trinket1_max_damage)
                                        rotation_damage.append(trinket_bonus_damage)
                                        trinket1_damage += trinket_bonus_damage
                                    if trinket1_bonus_type != "Damage":
                                        rotation_damage.append(0)
                    elif trinket1_chanceon == "Crit":
                        if trinket_hit_crit_tracker == 2:
                            if trinket1_use_icd < current_time:
                                atta_num = (random.randint(1, 100) / 100)
                                if float(trinket1_chanceperc) > atta_num:
                                    trinket1_use_icd = current_time + float(trinket1_icd)
                                    trinket1_buff_time = current_time + float(trinket1_length)
                                    trinket1_used = True
                                    rotation.append(gear[12])
                                    rotation_time.append(current_time)
                                    rotation_status.append("Proc")
                                    if trinket1_bonus_type == "Strength":
                                        bonus_loop_str += float(trinket1_bonus_amount)
                                    elif trinket1_bonus_type == "Agility":
                                        bonus_loop_agility += float(trinket1_bonus_amount)
                                    elif trinket1_bonus_type == "Stamina":
                                        bonus_loop_hp += (float(trinket1_bonus_amount) * 10)
                                    elif trinket1_bonus_type == "Intelligence":
                                        print("Increased Intel") #Not even adding this
                                    elif trinket1_bonus_type == "Spirit":
                                        print("Increased Spirit") #Not even adding this
                                    elif trinket1_bonus_type == "Attack Power":
                                        bonus_loop_ap += float(trinket1_bonus_amount)
                                    elif trinket1_bonus_type == "Hit Rating":
                                        bonus_loop_hit += float(trinket1_bonus_amount)
                                    elif trinket1_bonus_type == "Crit Rating":
                                        bonus_loop_crit_rating += float(trinket1_bonus_amount)
                                    elif trinket1_bonus_type == "Haste Rating":
                                        bonus_loop_hit += float(trinket1_bonus_amount)
                                    elif trinket1_bonus_type == "Armor Pen":
                                        bonus_loop_armor_pen_rating += float(trinket1_bonus_amount)
                                    elif trinket1_bonus_type == "Expertise Rating":
                                        bonus_loop_expertise_rating += float(trinket1_bonus_amount)
                                    elif trinket1_bonus_type == "Armor":
                                        print("Increased Armor") #To be added Later
                                    elif trinket1_bonus_type == "Defense Rating":
                                        print("Increase Defense Rating") #To be added Later
                                    elif trinket1_bonus_type == "Dodge Rating":
                                        print("Increased Dodge Rating") #To be added Later
                                    elif trinket1_bonus_type == "Parry Rating":
                                        print("Increased Parry Rating") #To be added Later
                                    elif trinket1_bonus_type == "Damage":
                                        trinket_bonus_damage = random.randint(trinket1_min_damage, trinket1_max_damage)
                                        rotation_damage.append(trinket_bonus_damage)
                                        trinket1_damage += trinket_bonus_damage
                                    if trinket1_bonus_type != "Damage":
                                        rotation_damage.append(0)
            if trinket_2_use == True:
                if trinket2_type == "Active":
                    if trinket2_use_icd < current_time:
                        trinket2_buff_time = current_time + float(trinket2_length)
                        trinket2_use_icd = current_time + float(trinket2_icd)
                        trinket2_used = True
                        rotation.append(gear[13])
                        rotation_time.append(current_time)
                        rotation_status.append("Active")
                        if trinket2_bonus_type == "Strength":
                            bonus_loop_str += float(trinket2_bonus_amount)
                        elif trinket2_bonus_type == "Agility":
                            bonus_loop_agility += float(trinket2_bonus_amount)
                        elif trinket2_bonus_type == "Stamina":
                            bonus_loop_hp += (float(trinket2_bonus_amount) * 10)
                        elif trinket2_bonus_type == "Intelligence":
                            print("Increased Intel") #Not even adding this
                        elif trinket2_bonus_type == "Spirit":
                            print("Increased Spirit") #Not even adding this
                        elif trinket2_bonus_type == "Attack Power":
                            bonus_loop_ap += float(trinket2_bonus_amount)
                        elif trinket2_bonus_type == "Hit Rating":
                            bonus_loop_hit += float(trinket2_bonus_amount)
                        elif trinket2_bonus_type == "Crit Rating":
                            bonus_loop_crit_rating += float(trinket2_bonus_amount)
                        elif trinket2_bonus_type == "Haste Rating":
                            bonus_loop_hit += float(trinket2_bonus_amount)
                        elif trinket2_bonus_type == "Armor Pen":
                            bonus_loop_armor_pen_rating += float(trinket2_bonus_amount)
                        elif trinket2_bonus_type == "Expertise Rating":
                            bonus_loop_expertise_rating += float(trinket2_bonus_amount)
                        elif trinket2_bonus_type == "Armor":
                            print("Increased Armor") #To be added Later
                        elif trinket2_bonus_type == "Defense Rating":
                            print("Increase Defense Rating") #To be added Later
                        elif trinket2_bonus_type == "Dodge Rating":
                            print("Increased Dodge Rating") #To be added Later
                        elif trinket2_bonus_type == "Parry Rating":
                            print("Increased Parry Rating") #To be added Later
                        elif trinket2_bonus_type == "Damage":
                            trinket_bonus_damage = random.randint(trinket2_min_damage, trinket2_max_damage)
                            rotation_damage.append(trinket_bonus_damage)
                            trinket2_damage += trinket_bonus_damage
                        if trinket2_bonus_type != "Damage":
                            rotation_damage.append(0)
                elif trinket2_type == "Proc":
                    if trinket2_chanceon == "Hit":
                        if trinket_hit_crit_tracker == 1 or trinket_hit_crit_tracker == 2: #trinket_hit_crit_tracker = 0 Null, 1 Hit, 2 Crit
                            if trinket2_use_icd < current_time:
                                atta_num = (random.randint(1, 100) / 100)
                                if float(trinket2_chanceperc) > atta_num:
                                    trinket2_use_icd = current_time + float(trinket2_icd)
                                    trinket2_buff_time = current_time + float(trinket2_length)
                                    trinket2_used = True
                                    rotation.append(gear[13])
                                    rotation_time.append(current_time)
                                    rotation_status.append("Proc")
                                    if trinket2_bonus_type == "Strength":
                                        bonus_loop_str += float(trinket2_bonus_amount)
                                    elif trinket2_bonus_type == "Agility":
                                        bonus_loop_agility += float(trinket2_bonus_amount)
                                    elif trinket2_bonus_type == "Stamina":
                                        bonus_loop_hp += (float(trinket2_bonus_amount) * 10)
                                    elif trinket2_bonus_type == "Intelligence":
                                        print("Increased Intel") #Not even adding this
                                    elif trinket2_bonus_type == "Spirit":
                                        print("Increased Spirit") #Not even adding this
                                    elif trinket2_bonus_type == "Attack Power":
                                        bonus_loop_ap += float(trinket2_bonus_amount)
                                    elif trinket2_bonus_type == "Hit Rating":
                                        bonus_loop_hit += float(trinket2_bonus_amount)
                                    elif trinket2_bonus_type == "Crit Rating":
                                        bonus_loop_crit_rating += float(trinket2_bonus_amount)
                                    elif trinket2_bonus_type == "Haste Rating":
                                        bonus_loop_hit += float(trinket2_bonus_amount)
                                    elif trinket2_bonus_type == "Armor Pen":
                                        bonus_loop_armor_pen_rating += float(trinket2_bonus_amount)
                                    elif trinket2_bonus_type == "Expertise Rating":
                                        bonus_loop_expertise_rating += float(trinket2_bonus_amount)
                                    elif trinket2_bonus_type == "Armor":
                                        print("Increased Armor") #To be added Later
                                    elif trinket2_bonus_type == "Defense Rating":
                                        print("Increase Defense Rating") #To be added Later
                                    elif trinket2_bonus_type == "Dodge Rating":
                                        print("Increased Dodge Rating") #To be added Later
                                    elif trinket2_bonus_type == "Parry Rating":
                                        print("Increased Parry Rating") #To be added Later
                                    elif trinket2_bonus_type == "Damage":
                                        trinket_bonus_damage = random.randint(trinket2_min_damage, trinket2_max_damage)
                                        rotation_damage.append(trinket_bonus_damage)
                                        trinket2_damage += trinket_bonus_damage
                                    if trinket2_bonus_type != "Damage":
                                        rotation_damage.append(0)
                    elif trinket2_chanceon == "Crit":
                        if trinket_hit_crit_tracker == 2:
                            if trinket2_use_icd < current_time:
                                atta_num = (random.randint(1, 100) / 100)
                                if float(trinket2_chanceperc) > atta_num:
                                    trinket2_use_icd = current_time + float(trinket2_icd)
                                    trinket2_buff_time = current_time + float(trinket2_length)
                                    trinket2_used = True
                                    rotation.append(gear[13])
                                    rotation_time.append(current_time)
                                    rotation_status.append("Proc")
                                    if trinket2_bonus_type == "Strength":
                                        bonus_loop_str += float(trinket2_bonus_amount)
                                    elif trinket2_bonus_type == "Agility":
                                        bonus_loop_agility += float(trinket2_bonus_amount)
                                    elif trinket2_bonus_type == "Stamina":
                                        bonus_loop_hp += (float(trinket2_bonus_amount) * 10)
                                    elif trinket2_bonus_type == "Intelligence":
                                        print("Increased Intel") #Not even adding this
                                    elif trinket2_bonus_type == "Spirit":
                                        print("Increased Spirit") #Not even adding this
                                    elif trinket2_bonus_type == "Attack Power":
                                        bonus_loop_ap += float(trinket2_bonus_amount)
                                    elif trinket2_bonus_type == "Hit Rating":
                                        bonus_loop_hit += float(trinket2_bonus_amount)
                                    elif trinket2_bonus_type == "Crit Rating":
                                        bonus_loop_crit_rating += float(trinket2_bonus_amount)
                                    elif trinket2_bonus_type == "Haste Rating":
                                        bonus_loop_hit += float(trinket2_bonus_amount)
                                    elif trinket2_bonus_type == "Armor Pen":
                                        bonus_loop_armor_pen_rating += float(trinket2_bonus_amount)
                                    elif trinket2_bonus_type == "Expertise Rating":
                                        bonus_loop_expertise_rating += float(trinket2_bonus_amount)
                                    elif trinket2_bonus_type == "Armor":
                                        print("Increased Armor") #To be added Later
                                    elif trinket2_bonus_type == "Defense Rating":
                                        print("Increase Defense Rating") #To be added Later
                                    elif trinket2_bonus_type == "Dodge Rating":
                                        print("Increased Dodge Rating") #To be added Later
                                    elif trinket2_bonus_type == "Parry Rating":
                                        print("Increased Parry Rating") #To be added Later
                                    elif trinket2_bonus_type == "Damage":
                                        trinket_bonus_damage = random.randint(trinket2_min_damage, trinket2_max_damage)
                                        rotation_damage.append(trinket_bonus_damage)
                                        trinket2_damage += trinket_bonus_damage
                                    if trinket2_bonus_type != "Damage":
                                        rotation_damage.append(0)
            trinket_hit_crit_tracker = 0 #Resetting hit/crit tracker after both trinkets 
            
            if dots[0] >= current_time: #Frost Fever Damage
                if last_dot0_damage + 3 <= current_time:
                    last_dot0_damage = last_dot0_damage + 3
                    other_frost_fever_damage = 0
                    if amount_of_targets > 1:
                        if multiple_adds_timer >= current_time:
                            dot_multiple_repeate = 1
                            while dot_multiple_repeate < amount_of_targets:
                                atta_num = (current_ap * .055 * 1.15)
                                if black_ice_points == 5:
                                    atta_num = atta_num + (atta_num * .1)
                                elif black_ice_points == 4:
                                    atta_num = atta_num + (atta_num * .08)
                                elif black_ice_points == 3:
                                    atta_num = atta_num + (atta_num * .06)
                                elif black_ice_points == 2:
                                    atta_num = atta_num + (atta_num * .04)
                                elif black_ice_points == 1:
                                    atta_num = atta_num + (atta_num * .02)
                                if glyph_frost_fever == True:
                                    atta_num = atta_num + (atta_num * .20)
                                if crypt_fever_points != 0:
                                    if dots[2] >= current_time:
                                        atta_num += atta_num * disease_bonus_damage_amount
                                atta_num = atta_num + (atta_num * increased_spell_damage) + (atta_num * increased_all_damage)
                                other_frost_fever_damage += atta_num
                                dot_multiple_repeate  += 1
                    atta_num = (current_ap * .055 * 1.15)
                    if black_ice_points == 5:
                        atta_num = atta_num + (atta_num * .1)
                    elif black_ice_points == 4:
                        atta_num = atta_num + (atta_num * .08)
                    elif black_ice_points == 3:
                        atta_num = atta_num + (atta_num * .06)
                    elif black_ice_points == 2:
                        atta_num = atta_num + (atta_num * .04)
                    elif black_ice_points == 1:
                        atta_num = atta_num + (atta_num * .02)
                    if glyph_frost_fever == True:
                        atta_num = atta_num + (atta_num * .20)
                    if crypt_fever_points != 0:
                        if dots[2] >= current_time:
                            atta_num += atta_num * disease_bonus_damage_amount
                    atta_num = atta_num + (atta_num * increased_spell_damage) + (atta_num * increased_all_damage)
                    rotation.append("Frost Fever")
                    rotation_time.append(last_dot0_damage)
                    rotation_status.append("DOT")
                    rotation_damage.append(atta_num + other_frost_fever_damage)
                    sum_dot0_damage += atta_num + other_frost_fever_damage
                    if wandering_plague_points != 0:
                        if (random.randint(0, 10000)) / 100 < total_crit * 100:
                            if wandering_plague_points == 1:
                                atta_num = atta_num * .33
                            if wandering_plague_points == 2:
                                atta_num = atta_num * .66
                            if wandering_plague_points == 3:
                                atta_num = atta_num
                            atta_num = atta_num * amount_of_targets
                            rotation.append("Wandering Plague")
                            rotation_time.append(last_dot0_damage)
                            rotation_status.append("Proc")
                            rotation_damage.append(atta_num)
                            wandering_plague_damage += atta_num
                        
            if dots[1] >= current_time: #Blood Plague Damage
                if last_dot1_damage + 3 <= current_time:
                    last_dot1_damage = last_dot1_damage + 3
                    other_blood_plague_damage = 0
                    if amount_of_targets > 1:
                        if multiple_adds_timer_bp >= current_time:
                            dot_multiple_repeate = 1
                            while dot_multiple_repeate < amount_of_targets:
                                atta_num = (current_ap * (211 / 3333)) + (0.394 * 80) + 127
                                if t9_dps_four_set == True:
                                    crit = spell_crit((total_crit), spell_hit_total, increased_spell_hit, target_level, increased_spell_crit)
                                    if crit == True:
                                        atta_num = atta_num * var_crit_amount
                                if black_ice_points == 5:
                                    atta_num = atta_num + (atta_num * .1)
                                elif black_ice_points == 4:
                                    atta_num = atta_num + (atta_num * .08)
                                elif black_ice_points == 3:
                                    atta_num = atta_num + (atta_num * .06)
                                elif black_ice_points == 2:
                                    atta_num = atta_num + (atta_num * .04)
                                elif black_ice_points == 1:
                                    atta_num = atta_num + (atta_num * .02)
                                if crypt_fever_points != 0:
                                    if dots[2] >= current_time:
                                        atta_num += atta_num * disease_bonus_damage_amount
                                atta_num = atta_num + (atta_num * increased_spell_damage) + (atta_num * increased_all_damage)
                                other_blood_plague_damage += atta_num
                                dot_multiple_repeate  += 1
                    atta_num = (current_ap * (211 / 3333)) + (0.394 * 80) + 127
                    if t9_dps_four_set == True:
                        crit = spell_crit((total_crit), spell_hit_total, increased_spell_hit, target_level, increased_spell_crit)
                        if crit == True:
                            atta_num = atta_num * var_crit_amount
                            rotation_status.append("Crit")
                        else:
                            rotation_status.append("DOT")
                    elif t9_dps_four_set == False:
                        rotation_status.append("DOT")
                    if black_ice_points == 5:
                        atta_num = atta_num + (atta_num * .1)
                    elif black_ice_points == 4:
                        atta_num = atta_num + (atta_num * .08)
                    elif black_ice_points == 3:
                        atta_num = atta_num + (atta_num * .06)
                    elif black_ice_points == 2:
                        atta_num = atta_num + (atta_num * .04)
                    elif black_ice_points == 1:
                        atta_num = atta_num + (atta_num * .02)
                    if crypt_fever_points != 0:
                        if dots[2] >= current_time:
                            atta_num += atta_num * disease_bonus_damage_amount
                    atta_num = atta_num + (atta_num * increased_spell_damage) + (atta_num * increased_all_damage)
                    rotation.append("Blood Plague")
                    rotation_time.append(last_dot1_damage)
                    rotation_damage.append(atta_num + other_blood_plague_damage)
                    sum_dot1_damage += atta_num + other_blood_plague_damage
                    if wandering_plague_points != 0:
                        if (random.randint(0, 10000)) / 100 < total_crit * 100:
                            if wandering_plague_points == 1:
                                atta_num = atta_num * .33
                            if wandering_plague_points == 2:
                                atta_num = atta_num * .66
                            if wandering_plague_points == 3:
                                atta_num = atta_num
                            atta_num = atta_num * amount_of_targets
                            rotation.append("Wandering Plague")
                            rotation_time.append(last_dot1_damage)
                            rotation_status.append("Proc")
                            rotation_damage.append(atta_num)
                            wandering_plague_damage += atta_num
            if dots[2] >= current_time: #Crypt Fever
                if last_dot2_damage + 3 <= current_time:
                    rotation.append("Crypt Fever")
                    rotation_time.append(last_dot2_damage)
                    rotation_status.append("DOT")
                    rotation_damage.append(0)
           
            #Death and Decay Damage Tick
            while death_n_decay_apply_time >= death_and_decay_last_damage_time:
                death_and_decay_last_damage_time = death_and_decay_last_damage_time + 1
                for dnd_multi in range(amount_of_targets):
                    rotation_a, rotation_time_a, rotation_status_a, rotation_damage_a, current_time, used_gcd, current_power, gcd, \
                        death_and_decay_damage, death_and_decay_last_damage_time, death_n_decay_apply_time, death_and_decay_cd = death_and_decay_cast(
                        spell_hit_total, increased_spell_hit, target_level, total_crit, increased_spell_crit,
                        current_time,
                        dk_presence, input_gcd, dots, haste_percentage, current_ap, impurity_points, gcd, used_gcd,
                        death_and_decay_cd, death_and_decay_cd_length,
                        var_crit_amount, black_ice_points, rage_of_rivendale_points, hysteria_active, tricksoftt_active,
                        increased_spell_damage, max_runic, death_n_decay_apply_time,
                        increased_all_damage, current_power, glyph_death_and_decay, scourgelords_plate_two_set,
                        death_and_decay_damage, death_and_decay_last_damage_time,
                        initial_hit=False)
                    rotation.extend(rotation_a)
                    rotation_time.extend(rotation_time_a)
                    rotation_status.extend(rotation_status_a)
                    rotation_damage.extend(rotation_damage_a)
                # death_and_decay_last_damage_time = death_and_decay_last_damage_time + 1

            #Garg Attack
            if gary_active == True:
                for gary_multi in range(6):
                    rotation_a, rotation_time_a, rotation_status_a, rotation_damage_a, current_time, used_gcd, current_power, gcd, gargoyle_cd, garg_last_damage_cast, garg_damage, \
                        gary_active, garg_summon_time, garg_ap = gargoyle_cast(spell_hit_total, increased_spell_hit, target_level, total_crit,
                                                    increased_spell_crit, current_time, melee_haste_bonus2,
                                                    melee_haste_bonus3, melee_haste_bonus4,
                                                    dk_presence, input_gcd, current_ap, gcd, used_gcd,
                                                    var_crit_amount, black_ice_points, max_runic, castable,
                                                    melee_haste_bonus, gargoyle_cd, garg_damage,
                                                    current_power, garg_ap, garg_summon_time, garg_last_damage_cast,
                                                    total_haste_rating, last_rune_change,
                                                    improved_unholy_presence_points, personal_buff_orc_pet_damage,
                                                    initial_cast=False)
                    rotation.extend(rotation_a)
                    rotation_time.extend(rotation_time_a)
                    rotation_status.extend(rotation_status_a)
                    rotation_damage.extend(rotation_damage_a)
                    
            #Frost Rotation First
            if dk_spec == 0: # Frost Spec
                if amount_of_targets == 1: #Single Target Fight
                    if deathchill_points == 1:
                        if deathchill_active == True:
                            if deathchill_timer < current_time:
                                deathchill_active = False
                        if deathchill_cd < current_time:
                            if dots[0] > current_time:
                                if dots[1] > current_time:
                                    rotation.append("Death Chill")
                                    rotation_time.append(current_time)
                                    rotation_status.append("Active")
                                    rotation_damage.append(0)
                                    deathchill_active = True
                                    deathchill_cd = current_time + 120
                                    deathchill_timer = current_time + 30
                    if ua_buff_timer >= current_time:
                        if ua_used == False:
                            ua_used = True
                            bonus_loop_str += ua_strength_increase_amount
                    elif ua_buff_timer < current_time:
                        ua_used = False
                        bonus_loop_str -= ua_strength_increase_amount
                        ua_strength_increase_amount = 0  
                    if skip_erw == False:
                        if all_rune_check(blood, current_time, rune_cd_tracker) == 3: #Empowered Rune Weapon
                            if all_rune_check(frost, current_time, rune_cd_tracker) == 3:
                                if all_rune_check(unholy, current_time, rune_cd_tracker) == 3:
                                    if all_rune_check(death, current_time, rune_cd_tracker) == 3:
                                        if all_rune_check(death_f, current_time, rune_cd_tracker) == 3:
                                            if all_rune_check(death_u, current_time, rune_cd_tracker) == 3:
                                                if erw_cd_timer < current_time:
                                                    if rune_cd_tracker[0] != 10000:
                                                        rune_reset_1 = 0
                                                    else:
                                                        rune_reset_1 = 6
                                                    if rune_cd_tracker[1] != 10000:
                                                        rune_reset_2 = 1
                                                    else:
                                                        rune_reset_2 = 7
                                                    if rune_cd_tracker[2] != 10000:
                                                        rune_reset_3 = 2
                                                    else:
                                                        rune_reset_3 = 8
                                                    if rune_cd_tracker[3] != 10000:
                                                        rune_reset_4 = 3
                                                    else:
                                                        rune_reset_4 = 9
                                                    if rune_cd_tracker[4] != 10000:
                                                        rune_reset_5 = 4
                                                    else:
                                                        rune_reset_5 = 10
                                                    if rune_cd_tracker[5] != 10000:
                                                        rune_reset_6 = 5
                                                    else:
                                                        rune_reset_6 = 11
                                                    rotation.append("Empowered Rune Weapon")
                                                    rotation_time.append(current_time)
                                                    rotation_status.append("Active")
                                                    rotation_damage.append(0)
                                                    current_power = runic_power(25, current_power, max_runic)
                                                    # rune_cd_tracker = [0, 0, 0, 0, 0, 0, 10000, 10000, 10000, 10000, 10000, 10000]
                                                    rune_cd_tracker[rune_reset_1] = 0
                                                    rune_cd_tracker[rune_reset_2] = 0
                                                    rune_cd_tracker[rune_reset_3] = 0
                                                    rune_cd_tracker[rune_reset_4] = 0
                                                    rune_cd_tracker[rune_reset_5] = 0
                                                    rune_cd_tracker[rune_reset_6] = 0
                                                    erw_cd_timer = current_time + 300
                                                    continue
                    if current_time >= horn: #Horn       #Prob set all of these below after like if amount_of_targets >= 1, else run a sim w/ howling blast and stuff
                        if dk_presence != 2:
                            gcd = input_gcd / (1 + haste_percentage)
                            if gcd < 1:
                                gcd = 1
                        current_power = runic_power(10, current_power, max_runic) 
                        rotation.append("Horn of Winter")
                        rotation_time.append(current_time)
                        rotation_status.append("Active")
                        rotation_damage.append(0)
                        horn += horn_timer
                        current_time += gcd
                        used_gcd = True
                        continue

                    if dots[0] > current_time: #Use Blood Tap
                        if dots[1] > current_time:
                            castable = all_rune_check(blood, current_time, rune_cd_tracker)
                            if castable == 3:
                                if rune_cd_tracker[6] == 10000:
                                    if rune_cd_tracker[7] == 10000:
                                        if blood_tap_cd <= current_time:
                                            blood_tap_cd = current_time + 60
                                            rotation.append("Blood Tap")
                                            rotation_time.append(current_time)
                                            rotation_status.append("Active")
                                            rotation_damage.append(0)
                                            haste_percentage = (total_haste_rating / 25.21) / 100 #Returns a result of 0 - 1 for 0% - 100%
                                            haste_rune_cd = rune_grade_timer(current_time, last_rune_change[castable], last_rune_change[castable+6])
                                            if improved_unholy_presence_points != 0:
                                                if dk_presence == 2:
                                                    haste_rune_cd = haste_rune_cd - (haste_rune_cd * ((improved_unholy_presence_points * 5) / 100))
                                            if rune_cd_tracker[0] < rune_cd_tracker[1]:
                                                castable = 0
                                                death_castable = castable + death
                                                haste_percentage = (total_haste_rating / 25.21) / 100 #Returns a result of 0 - 1 for 0% - 100%
                                                haste_rune_cd = 0
                                                rune_cd_tracker[death_castable] = rune_cd(haste_rune_cd, current_time)
                                                rune_cd_tracker[castable] = 10000 
                                            else:
                                                castable = 1
                                                death_castable = castable + death
                                                haste_percentage = (total_haste_rating / 25.21) / 100 #Returns a result of 0 - 1 for 0% - 100%
                                                haste_rune_cd = 0
                                                rune_cd_tracker[death_castable] = rune_cd(haste_rune_cd, current_time)
                                                rune_cd_tracker[castable] = 10000 
                    
                    
                    if skip_disease == False:
                        if dots[0] <= current_time: #Cast Icy Touch First Global
                            able_to_cast, castable, castable1, castable2, just_used_death_rune, rune_cd_tracker = use_runes(
                rune_cd_tracker, current_time, dots, improved_unholy_presence_points, dk_presence, total_haste_rating, last_rune_change,
                                n_blood=0, n_frost=1, n_unholy=0)
                            if able_to_cast == 1:
                                rotation_a, rotation_time_a, rotation_status_a, rotation_damage_a, current_time, used_gcd, rune_cd_tracker, last_dot0_damage, \
                current_power, rune_of_cinderglacier_active, rune_of_cinderglacier_active_count, dots, sum_it_attacks, km_procd, \
                deathchill_active, gcd, rune_of_cinderglacier_damage = icy_touch_cast(spell_hit_total, increased_spell_hit, target_level, km_procd, deathchill_active, total_crit, rime_points, increased_spell_crit, total_haste_rating,
                current_time, last_rune_change, castable, improved_unholy_presence_points, rune_grade_timer, dk_presence, input_gcd, rune_cd_tracker,
                sigil_of_the_frozen_conscience, current_ap, impurity_points, var_crit_amount, improved_icy_touch_points, black_ice_points, glacier_rot_points,
                dots, tundra_stalker_points, merciless_combat_points, rage_of_rivendale_points, hysteria_active, tricksoftt_active,
                fight_length, fight_sub_35percent, increased_spell_damage, increased_all_damage, sum_it_attacks, current_power, max_runic,
                chill_of_the_grave_points, dot_length, crypt_fever_points, rune_of_cinderglacier_active, rune_of_cinderglacier_active_count, rune_of_cinderglacier_damage)
                                rotation.extend(rotation_a)
                                rotation_time.extend(rotation_time_a)
                                rotation_status.extend(rotation_status_a)
                                rotation_damage.extend(rotation_damage_a)
                                continue

                        if dots[1] <= current_time: #Plague Strike, Second Global
                            able_to_cast, castable, castable1, castable2, just_used_death_rune, rune_cd_tracker = use_runes(
                                rune_cd_tracker, current_time, dots, improved_unholy_presence_points, dk_presence,
                                total_haste_rating, last_rune_change,
                                n_blood=0, n_frost=0, n_unholy=1)
                            if able_to_cast == 1:
                                rotation_a, rotation_time_a, rotation_status_a, rotation_damage_a, current_time, used_gcd, rune_cd_tracker, last_dot1_damage, \
                current_power, dots, gcd, trinket_hit_crit_tracker, sum_ps_attacks, sigil_of_strife_active, sigil_of_strife_timer, bonus_loop_ap, \
                sum_oh_ps_attacks, dancing_rune_weapon_damage = plague_strike_cast(tanking, H2, hit_from_gear, hit_from_other, target_level, all_expertise_dodge, all_expertise_parry, total_crit, annihilation_talent_points,
                  increased_phy_crit, scourgeborne_plate_two_set, vicious_strikes_points, current_armor, armor_penetration, mh_input_lowend_weapon_damage,
                  mh_input_topend_weapon_damage, attack_damage_normalization, current_ap, total_haste_rating, current_time, last_rune_change, castable,
                  improved_unholy_presence_points, dk_presence, input_gcd, dancing_rune_weapon_points, dancing_rune_weapon_active, var_crit_amount,
                  tundra_stalker_points, dots, outbreak_points, rage_of_rivendale_points, glyph_plague_strike, hysteria_active, tricksoftt_active,
                  increased_physical_damage, increased_all_damage, dancing_rune_weapon_damage_multi, dancing_rune_weapon_damage, dot_length,
                  crypt_fever_points, threat_of_thassarian_points, oh_input_lowend_weapon_damage, oh_input_topend_weapon_damage,
                  sum_oh_ps_attacks, oh_wep_damage_mod, rune_cd_tracker, sum_ps_attacks, current_power,
                  max_runic, dirge_points, sigil_of_strife, bonus_loop_ap, sigil_of_strife_amount, sigil_of_strife_active, sigil_of_strife_timer, 
                  trinket_hit_crit_tracker)
                                rotation.extend(rotation_a)
                                rotation_time.extend(rotation_time_a)
                                rotation_status.extend(rotation_status_a)
                                rotation_damage.extend(rotation_damage_a)
                                continue
                    if pestilence_allow_reset == False:
                        if (dots[0] - pestilence_reset_window) > 0 and (dots[0] - pestilence_reset_window) < current_time: #Refresh Icy Touch
                            able_to_cast, castable, castable1, castable2, just_used_death_rune, rune_cd_tracker = use_runes(
                                rune_cd_tracker, current_time, dots, improved_unholy_presence_points, dk_presence,
                                total_haste_rating, last_rune_change,
                                n_blood=0, n_frost=1, n_unholy=0)
                            if able_to_cast == 1:
                                rotation_a, rotation_time_a, rotation_status_a, rotation_damage_a, current_time, used_gcd, rune_cd_tracker, last_dot0_damage, \
                                    current_power, rune_of_cinderglacier_active, rune_of_cinderglacier_active_count, dots, sum_it_attacks, km_procd, \
                                    deathchill_active, gcd, rune_of_cinderglacier_damage = icy_touch_cast(spell_hit_total, increased_spell_hit, target_level, km_procd, deathchill_active,
                                    total_crit, rime_points, increased_spell_crit, total_haste_rating, current_time, last_rune_change, castable,
                                    improved_unholy_presence_points, rune_grade_timer, dk_presence, input_gcd, rune_cd_tracker, sigil_of_the_frozen_conscience,
                                    current_ap, impurity_points, var_crit_amount, improved_icy_touch_points, black_ice_points, glacier_rot_points,
                                    dots, tundra_stalker_points, merciless_combat_points, rage_of_rivendale_points, hysteria_active, tricksoftt_active,
                                    fight_length, fight_sub_35percent, increased_spell_damage, increased_all_damage, sum_it_attacks, current_power, max_runic,
                                    chill_of_the_grave_points, dot_length, crypt_fever_points, rune_of_cinderglacier_active, rune_of_cinderglacier_active_count,
                                    rune_of_cinderglacier_damage)
                                rotation.extend(rotation_a)
                                rotation_time.extend(rotation_time_a)
                                rotation_status.extend(rotation_status_a)
                                rotation_damage.extend(rotation_damage_a)
                                continue

                        if (dots[1] - pestilence_reset_window) > 0 and (dots[1] - pestilence_reset_window) < current_time: #Refresh Plague Strike
                            able_to_cast, castable, castable1, castable2, just_used_death_rune, rune_cd_tracker = use_runes(
                                rune_cd_tracker, current_time, dots, improved_unholy_presence_points, dk_presence,
                                total_haste_rating, last_rune_change,
                                n_blood=0, n_frost=0, n_unholy=1)
                            if able_to_cast == 1:
                                rotation_a, rotation_time_a, rotation_status_a, rotation_damage_a, current_time, used_gcd, rune_cd_tracker, last_dot1_damage, \
                                    current_power, dots, gcd, trinket_hit_crit_tracker, sum_ps_attacks, sigil_of_strife_active, sigil_of_strife_timer, bonus_loop_ap, \
                                    sum_oh_ps_attacks, dancing_rune_weapon_damage = plague_strike_cast(tanking, H2, hit_from_gear, hit_from_other, target_level,
                                   all_expertise_dodge, all_expertise_parry, total_crit, annihilation_talent_points, increased_phy_crit, scourgeborne_plate_two_set,
                                   vicious_strikes_points, current_armor, armor_penetration, mh_input_lowend_weapon_damage, mh_input_topend_weapon_damage,
                                   attack_damage_normalization, current_ap, total_haste_rating, current_time, last_rune_change, castable, improved_unholy_presence_points,
                                   dk_presence, input_gcd, dancing_rune_weapon_points, dancing_rune_weapon_active, var_crit_amount, tundra_stalker_points,
                                   dots, outbreak_points, rage_of_rivendale_points, glyph_plague_strike, hysteria_active, tricksoftt_active, increased_physical_damage,
                                   increased_all_damage, dancing_rune_weapon_damage_multi, dancing_rune_weapon_damage, dot_length, crypt_fever_points,  threat_of_thassarian_points,
                                   oh_input_lowend_weapon_damage, oh_input_topend_weapon_damage, sum_oh_ps_attacks, oh_wep_damage_mod, rune_cd_tracker,
                                   sum_ps_attacks, current_power, max_runic, dirge_points, sigil_of_strife, bonus_loop_ap, sigil_of_strife_amount,
                                   sigil_of_strife_active, sigil_of_strife_timer, trinket_hit_crit_tracker)
                                rotation.extend(rotation_a)
                                rotation_time.extend(rotation_time_a)
                                rotation_status.extend(rotation_status_a)
                                rotation_damage.extend(rotation_damage_a)
                                continue

                    
                    if (dots[0] - pestilence_reset_window) > 0 and (dots[0] - pestilence_reset_window) < current_time: #Pestilence
                        if (dots[1] - pestilence_reset_window) > 0 and (dots[1] - pestilence_reset_window) < current_time:
                            if pestilence_allow_reset == True:
                                if current_time - dots[0] == 0:
                                    continue
                                if current_time - dots[1] == 0:
                                    continue
                                able_to_cast, castable, castable1, castable2, just_used_death_rune, rune_cd_tracker = use_runes(
                                    rune_cd_tracker, current_time, dots, improved_unholy_presence_points, dk_presence,
                                    total_haste_rating, last_rune_change,
                                    n_blood=1, n_frost=0, n_unholy=0)
                                if able_to_cast == 1:
                                    rotation_a, rotation_time_a, rotation_status_a, rotation_damage_a, current_time, used_gcd, rune_cd_tracker, \
            current_power, rune_of_cinderglacier_active, rune_of_cinderglacier_active_count, dots, sum_pest_attacks, \
            gcd, rune_of_cinderglacier_damage, multiple_adds_timer, multiple_adds_timer_bp = pestilence_cast(spell_hit_total, increased_spell_hit, target_level, total_crit, increased_spell_crit, total_haste_rating, current_time, last_rune_change,
               castable, improved_unholy_presence_points, dk_presence, input_gcd, rune_cd_tracker, dots, dot_length, crypt_fever_points, multiple_adds_timer,
               var_crit_amount, black_ice_points, tundra_stalker_points, rage_of_rivendale_points, hysteria_active, tricksoftt_active, increased_spell_damage,
               increased_all_damage, sum_pest_attacks, current_power, max_runic, blood_of_the_north_points, just_used_death_rune, death, reaping_points,
               rune_of_cinderglacier_active, rune_of_cinderglacier_active_count, rune_of_cinderglacier_damage, pestilence_allow_reset, multiple_adds_timer_bp)
                                    rotation.extend(rotation_a)
                                    rotation_time.extend(rotation_time_a)
                                    rotation_status.extend(rotation_status_a)
                                    rotation_damage.extend(rotation_damage_a)
                                    continue

                    if current_time < 10 and frost_def_setup == True:
                        if dots[0] == dots[1] and pestilence_allow_reset == True and blood_tap_cd <= current_time:
                            if current_time - dots[0] == 0:
                                continue
                            if current_time - dots[1] == 0:
                                continue
                            castable = all_rune_check(blood, current_time, rune_cd_tracker)
                            if castable == 3 or castable != 3:
                                if rune_cd_tracker[6] == 10000 or rune_cd_tracker[7] == 10000:
                                    if blood_tap_cd <= current_time:
                                        blood_tap_cd = current_time + 60
                                        rotation.append("Blood Tap")
                                        rotation_time.append(current_time)
                                        rotation_status.append("Active")
                                        rotation_damage.append(0)
                                        haste_percentage = (
                                                                   total_haste_rating / 25.21) / 100  # Returns a result of 0 - 1 for 0% - 100%
                                        haste_rune_cd = rune_grade_timer(current_time, last_rune_change[castable],
                                                                         last_rune_change[castable + 6])
                                        if improved_unholy_presence_points != 0:
                                            if dk_presence == 2:
                                                haste_rune_cd = haste_rune_cd - (haste_rune_cd * (
                                                        (improved_unholy_presence_points * 5) / 100))
                                        if rune_cd_tracker[0] < rune_cd_tracker[1]:
                                            castable = 0
                                            death_castable = castable + death
                                            haste_percentage = (
                                                                       total_haste_rating / 25.21) / 100  # Returns a result of 0 - 1 for 0% - 100%
                                            haste_rune_cd = 0
                                            rune_cd_tracker[death_castable] = rune_cd(haste_rune_cd, current_time)
                                            rune_cd_tracker[castable] = 10000
                                        else:
                                            castable = 1
                                            death_castable = castable + death
                                            haste_percentage = (
                                                                       total_haste_rating / 25.21) / 100  # Returns a result of 0 - 1 for 0% - 100%
                                            haste_rune_cd = 0
                                            rune_cd_tracker[death_castable] = rune_cd(haste_rune_cd, current_time)
                                            rune_cd_tracker[castable] = 10000
                                            # Use bloodtap
                        if unbreakable_armor_points == 1 and skip_ua == False:  # Unbreakable Armor
                            if ua_cd_timer <= current_time:
                                able_to_cast, castable, castable1, castable2, just_used_death_rune, rune_cd_tracker = use_runes(
                                    rune_cd_tracker, current_time, dots, improved_unholy_presence_points, dk_presence,
                                    total_haste_rating, last_rune_change,
                                    n_blood=0, n_frost=1, n_unholy=0, n_skip=0, n_reset_window=pestilence_reset_window)
                                if able_to_cast == 1:
                                    rotation.append("Unbreakable Armor")
                                    rotation_time.append(current_time)
                                    rotation_status.append("Active")
                                    rotation_damage.append(0)
                                    ua_cd_timer = current_time + unbreak_armor_bone_shield_vamp_blood_cd_time
                                    # Rune Hit
                                    haste_percentage = (
                                                                   total_haste_rating / 25.21) / 100  # Returns a result of 0 - 1 for 0% - 100%
                                    haste_rune_cd = rune_grade_timer(current_time, last_rune_change[castable],
                                                                     last_rune_change[castable + 6])
                                    if improved_unholy_presence_points != 0:
                                        if dk_presence == 2:
                                            haste_rune_cd = haste_rune_cd - (
                                                        haste_rune_cd * ((improved_unholy_presence_points * 5) / 100))
                                    if dk_presence != 2:
                                        gcd = input_gcd / (1 + haste_percentage)
                                        if gcd < 1:
                                            gcd = 1
                                    rune_cd_tracker[castable] = rune_cd(haste_rune_cd, current_time)
                                    ua_buff_timer = current_time + 20
                                    ua_strength_increase_amount = (strtoap * .2)
                                    current_power = runic_power(-10, current_power, max_runic)
                                    current_time += gcd
                                    used_gcd = True
                                    continue
                        able_to_cast, castable, castable1, castable2, just_used_death_rune, rune_cd_tracker = use_runes(
                            rune_cd_tracker, current_time, dots, improved_unholy_presence_points, dk_presence,
                            total_haste_rating, last_rune_change,
                            n_blood=0, n_frost=1, n_unholy=1, n_skip=0, n_reset_window=0)
                        if able_to_cast == 1:
                            rotation_a, rotation_time_a, rotation_status_a, rotation_damage_a, deathchill_active, gcd, dots, \
                                dancing_rune_weapon_damage, trinket_hit_crit_tracker, howling_current_cd, rime_procd, rime_timer, \
                                sigil_of_virulence_timer, sigil_of_virulence_buff, bonus_loop_str, sigil_of_hanged_man_buff, sigil_of_hanged_man_timer, \
                                sigil_of_hanged_man_count, rune_cd_tracker, sum_oh_obil_attacks, current_time, used_gcd, sum_obil_attacks, current_power = obliterate_cast(
                                deathchill_active, tanking, H2, hit_from_gear, hit_from_other, target_level,
                                all_expertise_dodge, all_expertise_parry, total_crit,
                                annihilation_talent_points, rime_points, increased_phy_crit,
                                scourgeborne_battlegear_two_set, subversion_points, current_armor, armor_penetration,
                                mh_input_lowend_weapon_damage, mh_input_topend_weapon_damage,
                                attack_damage_normalization, current_ap, total_haste_rating, current_time,
                                castable, last_rune_change, dk_presence, improved_unholy_presence_points, input_gcd,
                                dots, dancing_rune_weapon_points, dancing_rune_weapon_active,
                                darkruned_battlegear_four_set, var_crit_amount, guile_of_gorefiend_points,
                                tundra_stalker_points, merciless_combat_points, fight_length, fight_sub_35percent,
                                rage_of_rivendale_points,
                                scourgelords_battlegear_two_set, hysteria_active, tricksoftt_active, extra_obli_damage,
                                increased_physical_damage,
                                increased_all_damage, dancing_rune_weapon_damage_multi, dancing_rune_weapon_damage,
                                sigil_of_virulence, sigil_of_virulence_buff,
                                bonus_loop_str, sigil_of_hanged_man, sigil_of_hanged_man_count,
                                death_rune_mastery_points, just_used_death_rune, castable1, sigil_of_awareness,
                                rune_cd_tracker, threat_of_thassarian_points, oh_input_lowend_weapon_damage,
                                oh_input_topend_weapon_damage, oh_wep_damage_mod,
                                sum_oh_obil_attacks, current_power, max_runic, sum_obil_attacks,
                                chill_of_the_grave_points, scourgeborne_battlegear_four_set, howling_current_cd,
                                rime_procd, rime_timer, sigil_of_virulence_timer, sigil_of_hanged_man_buff,
                                sigil_of_hanged_man_timer, trinket_hit_crit_tracker)
                            rotation.extend(rotation_a)
                            rotation_time.extend(rotation_time_a)
                            rotation_status.extend(rotation_status_a)
                            rotation_damage.extend(rotation_damage_a)
                            continue
                        if frost_strike_points == 1:
                            if current_power >= frost_strike_cost:  # Frost Strike
                                rotation_a, rotation_time_a, rotation_status_a, rotation_damage_a, current_time, used_gcd, \
                                    current_power, dots, gcd, trinket_hit_crit_tracker, km_procd, deathchill_active, sum_oh_fs_attacks, rune_of_cinderglacier_active, \
                                    rune_of_cinderglacier_damage, rune_of_cinderglacier_active_count, sum_fs_attacks, sum_oh_fs_attacks = frost_strike_cast(
                                    km_procd, tanking, H2, hit_from_gear, hit_from_other, target_level,
                                    all_expertise_dodge, all_expertise_parry, total_crit, annihilation_talent_points,
                                    increased_phy_crit, darkruned_battlegear_two_set, deathchill_active, current_armor,
                                    armor_penetration, mh_input_lowend_weapon_damage,
                                    mh_input_topend_weapon_damage, attack_damage_normalization, current_ap,
                                    total_haste_rating, current_time, last_rune_change, castable,
                                    improved_unholy_presence_points, dk_presence, input_gcd,
                                    threat_of_thassarian_points, oh_input_lowend_weapon_damage,
                                    oh_input_topend_weapon_damage,
                                    var_crit_amount, guile_of_gorefiend_points, sigil_of_vengeful_heart,
                                    black_ice_points, glacier_rot_points, dots, tundra_stalker_points,
                                    merciless_combat_points, blood_of_the_north_points, rage_of_rivendale_points,
                                    hysteria_active, tricksoftt_active, sum_oh_fs_attacks,
                                    increased_physical_damage, increased_all_damage, fight_length, fight_sub_35percent,
                                    oh_wep_damage_mod, rune_of_cinderglacier_active,
                                    rune_of_cinderglacier_damage, rune_of_cinderglacier_active_count, frost_strike_cost,
                                    current_power, max_runic, sum_fs_attacks, trinket_hit_crit_tracker)
                                rotation.extend(rotation_a)
                                rotation_time.extend(rotation_time_a)
                                rotation_status.extend(rotation_status_a)
                                rotation_damage.extend(rotation_damage_a)
                                continue
                        if dots[0] != dots[1] and pestilence_allow_reset == True:
                            if current_time - dots[0] == 0:
                                continue
                            if current_time - dots[1] == 0:
                                continue
                            able_to_cast, castable, castable1, castable2, just_used_death_rune, rune_cd_tracker = use_runes(
                                rune_cd_tracker, current_time, dots, improved_unholy_presence_points, dk_presence,
                                total_haste_rating, last_rune_change,
                                n_blood=1, n_frost=0, n_unholy=0, n_skip=0, n_reset_window = 0)
                            if able_to_cast == 1:
                                rotation_a, rotation_time_a, rotation_status_a, rotation_damage_a, current_time, used_gcd, rune_cd_tracker, \
                                    current_power, rune_of_cinderglacier_active, rune_of_cinderglacier_active_count, dots, sum_pest_attacks, \
                                    gcd, rune_of_cinderglacier_damage, multiple_adds_timer, multiple_adds_timer_bp = pestilence_cast(
                                    spell_hit_total, increased_spell_hit, target_level, total_crit,
                                    increased_spell_crit, total_haste_rating, current_time, last_rune_change,
                                    castable, improved_unholy_presence_points, dk_presence, input_gcd, rune_cd_tracker,
                                    dots, dot_length, crypt_fever_points, multiple_adds_timer,
                                    var_crit_amount, black_ice_points, tundra_stalker_points, rage_of_rivendale_points,
                                    hysteria_active, tricksoftt_active, increased_spell_damage,
                                    increased_all_damage, sum_pest_attacks, current_power, max_runic,
                                    blood_of_the_north_points, just_used_death_rune, death, reaping_points,
                                    rune_of_cinderglacier_active, rune_of_cinderglacier_active_count,
                                    rune_of_cinderglacier_damage, pestilence_allow_reset, multiple_adds_timer_bp)
                                rotation.extend(rotation_a)
                                rotation_time.extend(rotation_time_a)
                                rotation_status.extend(rotation_status_a)
                                rotation_damage.extend(rotation_damage_a)
                                continue

                    if unbreakable_armor_points == 1 and skip_ua == False: #Unbreakable Armor
                        if ua_cd_timer <= current_time:
                            able_to_cast, castable, castable1, castable2, just_used_death_rune, rune_cd_tracker = use_runes(
                                rune_cd_tracker, current_time, dots, improved_unholy_presence_points, dk_presence,
                                total_haste_rating, last_rune_change,
                                n_blood=0, n_frost=1, n_unholy=0, n_skip=1, n_reset_window=pestilence_reset_window)
                            if able_to_cast == 1:
                                rotation.append("Unbreakable Armor")
                                rotation_time.append(current_time)
                                rotation_status.append("Active")
                                rotation_damage.append(0)
                                ua_cd_timer = current_time + unbreak_armor_bone_shield_vamp_blood_cd_time
                                #Rune Hit
                                haste_percentage = (total_haste_rating / 25.21) / 100 #Returns a result of 0 - 1 for 0% - 100%
                                haste_rune_cd = rune_grade_timer(current_time, last_rune_change[castable], last_rune_change[castable+6])
                                if improved_unholy_presence_points != 0:
                                    if dk_presence == 2:
                                        haste_rune_cd = haste_rune_cd - (haste_rune_cd * ((improved_unholy_presence_points * 5) / 100))
                                if dk_presence != 2:
                                    gcd = input_gcd / (1 + haste_percentage)
                                    if gcd < 1:
                                        gcd = 1
                                rune_cd_tracker[castable] = rune_cd(haste_rune_cd, current_time)
                                ua_buff_timer = current_time + 20
                                ua_strength_increase_amount = (strtoap * .2)
                                current_power = runic_power(-10, current_power, max_runic)
                                current_time += gcd
                                used_gcd = True
                                continue

                    #Obliterate
                    able_to_cast, castable, castable1, castable2, just_used_death_rune, rune_cd_tracker = use_runes(
                        rune_cd_tracker, current_time, dots, improved_unholy_presence_points, dk_presence,
                        total_haste_rating, last_rune_change,
                        n_blood=0, n_frost=1, n_unholy=1, n_skip=1, n_reset_window=pestilence_reset_window)
                    if able_to_cast == 1:
                        rotation_a, rotation_time_a, rotation_status_a, rotation_damage_a, deathchill_active, gcd, dots, \
        dancing_rune_weapon_damage, trinket_hit_crit_tracker, howling_current_cd, rime_procd, rime_timer, \
        sigil_of_virulence_timer, sigil_of_virulence_buff, bonus_loop_str, sigil_of_hanged_man_buff, sigil_of_hanged_man_timer, \
        sigil_of_hanged_man_count, rune_cd_tracker, sum_oh_obil_attacks, current_time, used_gcd, sum_obil_attacks, current_power = obliterate_cast(deathchill_active, tanking, H2, hit_from_gear, hit_from_other, target_level, all_expertise_dodge, all_expertise_parry, total_crit,
               annihilation_talent_points, rime_points, increased_phy_crit, scourgeborne_battlegear_two_set, subversion_points, current_armor, armor_penetration,
               mh_input_lowend_weapon_damage, mh_input_topend_weapon_damage, attack_damage_normalization, current_ap, total_haste_rating, current_time,
               castable, last_rune_change, dk_presence, improved_unholy_presence_points, input_gcd, dots, dancing_rune_weapon_points, dancing_rune_weapon_active,
               darkruned_battlegear_four_set, var_crit_amount, guile_of_gorefiend_points,
               tundra_stalker_points, merciless_combat_points, fight_length, fight_sub_35percent, rage_of_rivendale_points,
               scourgelords_battlegear_two_set, hysteria_active, tricksoftt_active, extra_obli_damage, increased_physical_damage,
               increased_all_damage, dancing_rune_weapon_damage_multi, dancing_rune_weapon_damage, sigil_of_virulence, sigil_of_virulence_buff,
               bonus_loop_str, sigil_of_hanged_man, sigil_of_hanged_man_count, death_rune_mastery_points, just_used_death_rune, castable1, sigil_of_awareness,
               rune_cd_tracker, threat_of_thassarian_points, oh_input_lowend_weapon_damage, oh_input_topend_weapon_damage, oh_wep_damage_mod,
               sum_oh_obil_attacks, current_power, max_runic, sum_obil_attacks, chill_of_the_grave_points, scourgeborne_battlegear_four_set, howling_current_cd,
               rime_procd, rime_timer, sigil_of_virulence_timer, sigil_of_hanged_man_buff, sigil_of_hanged_man_timer, trinket_hit_crit_tracker)
                        rotation.extend(rotation_a)
                        rotation_time.extend(rotation_time_a)
                        rotation_status.extend(rotation_status_a)
                        rotation_damage.extend(rotation_damage_a)
                        continue

                    if frost_strike_points == 1:
                        if current_power >= frost_strike_cost:  # Frost Strike
                            rotation_a, rotation_time_a, rotation_status_a, rotation_damage_a, current_time, used_gcd, \
                            current_power, dots, gcd, trinket_hit_crit_tracker, km_procd, deathchill_active, sum_oh_fs_attacks, rune_of_cinderglacier_active, \
                            rune_of_cinderglacier_damage, rune_of_cinderglacier_active_count, sum_fs_attacks, sum_oh_fs_attacks = frost_strike_cast(km_procd, tanking, H2, hit_from_gear, hit_from_other, target_level, all_expertise_dodge, all_expertise_parry, total_crit, annihilation_talent_points,
                 increased_phy_crit, darkruned_battlegear_two_set, deathchill_active, current_armor, armor_penetration, mh_input_lowend_weapon_damage,
                 mh_input_topend_weapon_damage, attack_damage_normalization, current_ap, total_haste_rating, current_time, last_rune_change, castable,
                 improved_unholy_presence_points, dk_presence, input_gcd, threat_of_thassarian_points, oh_input_lowend_weapon_damage, oh_input_topend_weapon_damage,
                 var_crit_amount, guile_of_gorefiend_points, sigil_of_vengeful_heart, black_ice_points, glacier_rot_points, dots, tundra_stalker_points,
                 merciless_combat_points, blood_of_the_north_points, rage_of_rivendale_points, hysteria_active, tricksoftt_active, sum_oh_fs_attacks,
                 increased_physical_damage, increased_all_damage, fight_length, fight_sub_35percent, oh_wep_damage_mod, rune_of_cinderglacier_active,
                 rune_of_cinderglacier_damage, rune_of_cinderglacier_active_count, frost_strike_cost, current_power, max_runic, sum_fs_attacks, trinket_hit_crit_tracker)
                            rotation.extend(rotation_a)
                            rotation_time.extend(rotation_time_a)
                            rotation_status.extend(rotation_status_a)
                            rotation_damage.extend(rotation_damage_a)
                            continue

                    if rime_procd == True:  # Howling Blast on Rime Proc
                        rime_procd = False
                        if rime_timer + 15 > current_time:
                            if howling_blast_points == 1:
                                rotation_a, rotation_time_a, rotation_status_a, rotation_damage_a, current_time, used_gcd, rune_cd_tracker, \
        current_power, rune_of_cinderglacier_active, rune_of_cinderglacier_active_count, dots, km_procd, \
        deathchill_active, gcd, rune_of_cinderglacier_damage, howling_current_cd, sum_hb_attacks = howling_blast_cast(spell_hit_total, increased_spell_hit, target_level, km_procd, deathchill_active, increased_spell_crit, total_haste_rating,
                  total_crit, current_time, last_rune_change, castable, castable1, improved_unholy_presence_points, dk_presence, input_gcd, amount_of_targets,
                  current_ap, impurity_points, var_crit_amount, guile_of_gorefiend_points, black_ice_points, dots, glacier_rot_points, tundra_stalker_points,
                  fight_sub_35percent, merciless_combat_points, rage_of_rivendale_points, hysteria_active, tricksoftt_active, increased_spell_damage,
                  increased_all_damage, rune_of_cinderglacier_active, rune_of_cinderglacier_damage, rune_of_cinderglacier_active_count,
                  fight_length, rune_cd_tracker, sum_hb_attacks, chill_of_the_grave_points, current_power, max_runic, dot_length, glyph_howling_blast, free_rime = False)
                                rotation.extend(rotation_a)
                                rotation_time.extend(rotation_time_a)
                                rotation_status.extend(rotation_status_a)
                                rotation_damage.extend(rotation_damage_a)
                                continue

                    if pestilence_allow_reset == True:
                        #Blood Strike
                        able_to_cast, castable, castable1, castable2, just_used_death_rune, rune_cd_tracker = use_runes(
                            rune_cd_tracker, current_time, dots, improved_unholy_presence_points, dk_presence,
                            total_haste_rating, last_rune_change,
                            n_blood=1, n_frost=0, n_unholy=0, n_skip=1, n_reset_window=pestilence_reset_window)
                        if able_to_cast == 1:
                            rotation_a, rotation_time_a, rotation_status_a, rotation_damage_a, current_time, used_gcd, rune_cd_tracker, current_power,\
        dots, gcd, trinket_hit_crit_tracker, dancing_rune_weapon_damage, sigil_of_haunted_dreams_buff, sigil_of_haunted_dreams_timer,\
            total_crit, t9_bonus, t9_cd_timer, t9_active_timer, bonus_loop_str, increased_all_damage, desolation_buff_timer, sudden_doom_damage,\
            unholy_blight_amount, unholy_blight_timer, rune_of_cinderglacier_damage, rune_of_cinderglacier_active_count, \
            rune_of_cinderglacier_active, sum_bs_attacks =  blood_strike_cast(tanking, H2, hit_from_gear, hit_from_other, target_level, all_expertise_dodge, all_expertise_parry, total_crit, annihilation_talent_points,
                     increased_phy_crit, subversion_points, current_armor, armor_penetration, mh_input_lowend_weapon_damage, mh_input_topend_weapon_damage,
                     current_ap, attack_damage_normalization, total_haste_rating, current_time, last_rune_change, castable, dk_presence, improved_unholy_presence_points,
                     dots, input_gcd, dancing_rune_weapon_points, dancing_rune_weapon_active, darkruned_battlegear_four_set, var_crit_amount,
                     guile_of_gorefiend_points, tundra_stalker_points, blood_of_the_north_points, t9_tank_two_set, rage_of_rivendale_points,
                     blood_strikes_points, might_of_mograine_points, hysteria_active, tricksoftt_active, increased_physical_damage, increased_all_damage,
                     dancing_rune_weapon_damage_multi, dancing_rune_weapon_damage, just_used_death_rune, rune_cd_tracker, reaping_points,
                     sigil_of_haunted_dreams, sigil_of_haunted_dreams_buff, t9_dps_two_set, t9_bonus, t9_cd_timer, bonus_loop_str, desolation_points,
                     desolation_buff, desolation_buff_timer, sudden_doom_points, sigil_of_vengeful_heart, spell_hit_total, increased_spell_hit,
                     darkruned_battlegear_two_set, increased_spell_crit, impurity_points, sigil_of_the_wild_buck,
                      black_ice_points, glyph_death_coil, morbitity_points, increased_spell_damage, sudden_doom_damage, unholy_blight_points,
                     rune_of_cinderglacier_active, rune_of_cinderglacier_active_count, rune_of_cinderglacier_damage, death, threat_of_thassarian_points,
                     oh_input_lowend_weapon_damage, oh_input_topend_weapon_damage, oh_wep_damage_mod, sum_oh_bs_attacks, current_power, sum_bs_attacks, max_runic,
                     trinket_hit_crit_tracker, sigil_of_haunted_dreams_timer, t9_active_timer, unholy_blight_amount, unholy_blight_timer)
                            rotation.extend(rotation_a)
                            rotation_time.extend(rotation_time_a)
                            rotation_status.extend(rotation_status_a)
                            rotation_damage.extend(rotation_damage_a)
                            continue

                    if pestilence_allow_reset == False:
                        # Blood Strike
                        able_to_cast, castable, castable1, castable2, just_used_death_rune, rune_cd_tracker = use_runes(
                            rune_cd_tracker, current_time, dots, improved_unholy_presence_points, dk_presence,
                            total_haste_rating, last_rune_change,
                            n_blood=1, n_frost=0, n_unholy=0, n_skip=0, n_reset_window=pestilence_reset_window)
                        if able_to_cast == 1:
                            rotation_a, rotation_time_a, rotation_status_a, rotation_damage_a, current_time, used_gcd, rune_cd_tracker, current_power, \
                                dots, gcd, trinket_hit_crit_tracker, dancing_rune_weapon_damage, sigil_of_haunted_dreams_buff, sigil_of_haunted_dreams_timer, \
                                total_crit, t9_bonus, t9_cd_timer, t9_active_timer, bonus_loop_str, increased_all_damage, desolation_buff_timer, sudden_doom_damage, \
                                unholy_blight_amount, unholy_blight_timer, rune_of_cinderglacier_damage, rune_of_cinderglacier_active_count, \
                                rune_of_cinderglacier_active, sum_bs_attacks = blood_strike_cast(tanking, H2,
                                                                                                 hit_from_gear,
                                                                                                 hit_from_other,
                                                                                                 target_level,
                                                                                                 all_expertise_dodge,
                                                                                                 all_expertise_parry,
                                                                                                 total_crit,
                                                                                                 annihilation_talent_points,
                                                                                                 increased_phy_crit,
                                                                                                 subversion_points,
                                                                                                 current_armor,
                                                                                                 armor_penetration,
                                                                                                 mh_input_lowend_weapon_damage,
                                                                                                 mh_input_topend_weapon_damage,
                                                                                                 current_ap,
                                                                                                 attack_damage_normalization,
                                                                                                 total_haste_rating,
                                                                                                 current_time,
                                                                                                 last_rune_change,
                                                                                                 castable, dk_presence,
                                                                                                 improved_unholy_presence_points,
                                                                                                 dots, input_gcd,
                                                                                                 dancing_rune_weapon_points,
                                                                                                 dancing_rune_weapon_active,
                                                                                                 darkruned_battlegear_four_set,
                                                                                                 var_crit_amount,
                                                                                                 guile_of_gorefiend_points,
                                                                                                 tundra_stalker_points,
                                                                                                 blood_of_the_north_points,
                                                                                                 t9_tank_two_set,
                                                                                                 rage_of_rivendale_points,
                                                                                                 blood_strikes_points,
                                                                                                 might_of_mograine_points,
                                                                                                 hysteria_active,
                                                                                                 tricksoftt_active,
                                                                                                 increased_physical_damage,
                                                                                                 increased_all_damage,
                                                                                                 dancing_rune_weapon_damage_multi,
                                                                                                 dancing_rune_weapon_damage,
                                                                                                 just_used_death_rune,
                                                                                                 rune_cd_tracker,
                                                                                                 reaping_points,
                                                                                                 sigil_of_haunted_dreams,
                                                                                                 sigil_of_haunted_dreams_buff,
                                                                                                 t9_dps_two_set,
                                                                                                 t9_bonus, t9_cd_timer,
                                                                                                 bonus_loop_str,
                                                                                                 desolation_points,
                                                                                                 desolation_buff,
                                                                                                 desolation_buff_timer,
                                                                                                 sudden_doom_points,
                                                                                                 sigil_of_vengeful_heart,
                                                                                                 spell_hit_total,
                                                                                                 increased_spell_hit,
                                                                                                 darkruned_battlegear_two_set,
                                                                                                 increased_spell_crit,
                                                                                                 impurity_points,
                                                                                                 sigil_of_the_wild_buck,
                                                                                                 black_ice_points,
                                                                                                 glyph_death_coil,
                                                                                                 morbitity_points,
                                                                                                 increased_spell_damage,
                                                                                                 sudden_doom_damage,
                                                                                                 unholy_blight_points,
                                                                                                 rune_of_cinderglacier_active,
                                                                                                 rune_of_cinderglacier_active_count,
                                                                                                 rune_of_cinderglacier_damage,
                                                                                                 death,
                                                                                                 threat_of_thassarian_points,
                                                                                                 oh_input_lowend_weapon_damage,
                                                                                                 oh_input_topend_weapon_damage,
                                                                                                 oh_wep_damage_mod,
                                                                                                 sum_oh_bs_attacks,
                                                                                                 current_power,
                                                                                                 sum_bs_attacks,
                                                                                                 max_runic,
                                                                                                 trinket_hit_crit_tracker,
                                                                                                 sigil_of_haunted_dreams_timer,
                                                                                                 t9_active_timer,
                                                                                                 unholy_blight_amount,
                                                                                                 unholy_blight_timer)
                            rotation.extend(rotation_a)
                            rotation_time.extend(rotation_time_a)
                            rotation_status.extend(rotation_status_a)
                            rotation_damage.extend(rotation_damage_a)
                            continue


                        
                    
                if amount_of_targets > 1: #AOE Fight
                    if deathchill_points == 1:
                        if deathchill_active == True:
                            if deathchill_timer < current_time:
                                deathchill_active = False
                        if deathchill_cd < current_time:
                            if dots[0] > current_time:
                                if dots[1] > current_time:
                                    rotation.append("Death Chill")
                                    rotation_time.append(current_time)
                                    rotation_status.append("Active")
                                    rotation_damage.append(0)
                                    deathchill_active = True
                                    deathchill_cd = current_time + 120
                                    deathchill_timer = current_time + 30
                    if ua_buff_timer >= current_time:
                        if ua_used == False:
                            ua_used = True
                            bonus_loop_str += ua_strength_increase_amount
                    elif ua_buff_timer < current_time:
                        ua_used = False
                        bonus_loop_str -= ua_strength_increase_amount
                        ua_strength_increase_amount = 0
                    if skip_erw == False:
                        if all_rune_check(blood, current_time, rune_cd_tracker) == 3:  # Empowered Rune Weapon
                            if all_rune_check(frost, current_time, rune_cd_tracker) == 3:
                                if all_rune_check(unholy, current_time, rune_cd_tracker) == 3:
                                    if all_rune_check(death, current_time, rune_cd_tracker) == 3:
                                        if all_rune_check(death_f, current_time, rune_cd_tracker) == 3:
                                            if all_rune_check(death_u, current_time, rune_cd_tracker) == 3:
                                                if erw_cd_timer < current_time:
                                                    if rune_cd_tracker[0] != 10000:
                                                        rune_reset_1 = 0
                                                    else:
                                                        rune_reset_1 = 6
                                                    if rune_cd_tracker[1] != 10000:
                                                        rune_reset_2 = 1
                                                    else:
                                                        rune_reset_2 = 7
                                                    if rune_cd_tracker[2] != 10000:
                                                        rune_reset_3 = 2
                                                    else:
                                                        rune_reset_3 = 8
                                                    if rune_cd_tracker[3] != 10000:
                                                        rune_reset_4 = 3
                                                    else:
                                                        rune_reset_4 = 9
                                                    if rune_cd_tracker[4] != 10000:
                                                        rune_reset_5 = 4
                                                    else:
                                                        rune_reset_5 = 10
                                                    if rune_cd_tracker[5] != 10000:
                                                        rune_reset_6 = 5
                                                    else:
                                                        rune_reset_6 = 11
                                                    rotation.append("Empowered Rune Weapon")
                                                    rotation_time.append(current_time)
                                                    rotation_status.append("Active")
                                                    rotation_damage.append(0)
                                                    current_power = runic_power(25, current_power, max_runic)
                                                    # rune_cd_tracker = [0, 0, 0, 0, 0, 0, 10000, 10000, 10000, 10000, 10000, 10000]
                                                    rune_cd_tracker[rune_reset_1] = 0
                                                    rune_cd_tracker[rune_reset_2] = 0
                                                    rune_cd_tracker[rune_reset_3] = 0
                                                    rune_cd_tracker[rune_reset_4] = 0
                                                    rune_cd_tracker[rune_reset_5] = 0
                                                    rune_cd_tracker[rune_reset_6] = 0
                                                    erw_cd_timer = current_time + 300
                                                    continue
                    if current_time >= horn: #Horn       #Prob set all of these below after like if amount_of_targets >= 1, else run a sim w/ howling blast and stuff
                        if dk_presence != 2:
                            gcd = input_gcd / (1 + haste_percentage)
                            if gcd < 1:
                                gcd = 1
                        current_power = runic_power(10, current_power, max_runic) 
                        rotation.append("Horn of Winter")
                        rotation_time.append(current_time)
                        rotation_status.append("Active")
                        rotation_damage.append(0)
                        horn += horn_timer
                        current_time += gcd
                        used_gcd = True
                        continue

                    if dots[0] > current_time: #Use Blood Tap
                        if dots[1] > current_time:
                            castable = all_rune_check(blood, current_time, rune_cd_tracker)
                            if castable == 3:
                                if rune_cd_tracker[6] == 10000:
                                    if rune_cd_tracker[7] == 10000:
                                        if blood_tap_cd <= current_time:
                                            blood_tap_cd = current_time + 60
                                            rotation.append("Blood Tap")
                                            rotation_time.append(current_time)
                                            rotation_status.append("Active")
                                            rotation_damage.append(0)
                                            haste_percentage = (total_haste_rating / 25.21) / 100 #Returns a result of 0 - 1 for 0% - 100%
                                            haste_rune_cd = rune_grade_timer(current_time, last_rune_change[castable], last_rune_change[castable+6])
                                            if improved_unholy_presence_points != 0:
                                                if dk_presence == 2:
                                                    haste_rune_cd = haste_rune_cd - (haste_rune_cd * ((improved_unholy_presence_points * 5) / 100))
                                            if rune_cd_tracker[0] < rune_cd_tracker[1]:
                                                castable = 0
                                                death_castable = castable + death
                                                haste_percentage = (total_haste_rating / 25.21) / 100 #Returns a result of 0 - 1 for 0% - 100%
                                                haste_rune_cd = 0
                                                rune_cd_tracker[death_castable] = rune_cd(haste_rune_cd, current_time)
                                                rune_cd_tracker[castable] = 10000 
                                            else:
                                                castable = 1
                                                death_castable = castable + death
                                                haste_percentage = (total_haste_rating / 25.21) / 100 #Returns a result of 0 - 1 for 0% - 100%
                                                haste_rune_cd = 0
                                                rune_cd_tracker[death_castable] = rune_cd(haste_rune_cd, current_time)
                                                rune_cd_tracker[castable] = 10000 
                    
                    
                    if skip_disease == False:
                        if dots[0] <= current_time: #Cast Icy Touch First Global
                            able_to_cast, castable, castable1, castable2, just_used_death_rune, rune_cd_tracker = use_runes(
                                rune_cd_tracker, current_time, dots, improved_unholy_presence_points, dk_presence,
                                total_haste_rating, last_rune_change,
                                n_blood=0, n_frost=1, n_unholy=0)
                            if able_to_cast == 1:
                                rotation_a, rotation_time_a, rotation_status_a, rotation_damage_a, current_time, used_gcd, rune_cd_tracker, last_dot0_damage, \
                                    current_power, rune_of_cinderglacier_active, rune_of_cinderglacier_active_count, dots, sum_it_attacks, km_procd, \
                                    deathchill_active, gcd, rune_of_cinderglacier_damage = icy_touch_cast(spell_hit_total, increased_spell_hit, target_level, km_procd, deathchill_active,
                                    total_crit, rime_points, increased_spell_crit, total_haste_rating, current_time, last_rune_change, castable,
                                    improved_unholy_presence_points, rune_grade_timer, dk_presence, input_gcd, rune_cd_tracker,
                                    sigil_of_the_frozen_conscience, current_ap, impurity_points, var_crit_amount, improved_icy_touch_points, black_ice_points,
                                    glacier_rot_points, dots, tundra_stalker_points, merciless_combat_points, rage_of_rivendale_points, hysteria_active,
                                    tricksoftt_active, fight_length, fight_sub_35percent, increased_spell_damage, increased_all_damage, sum_it_attacks,
                                    current_power, max_runic, chill_of_the_grave_points, dot_length, crypt_fever_points, rune_of_cinderglacier_active,
                                    rune_of_cinderglacier_active_count, rune_of_cinderglacier_damage)
                                rotation.extend(rotation_a)
                                rotation_time.extend(rotation_time_a)
                                rotation_status.extend(rotation_status_a)
                                rotation_damage.extend(rotation_damage_a)
                                continue

                        if dots[1] <= current_time: #Plague Strike, Second Global
                            able_to_cast, castable, castable1, castable2, just_used_death_rune, rune_cd_tracker = use_runes(
                                rune_cd_tracker, current_time, dots, improved_unholy_presence_points, dk_presence,
                                total_haste_rating, last_rune_change,
                                n_blood=0, n_frost=0, n_unholy=1)
                            if able_to_cast == 1:
                                rotation_a, rotation_time_a, rotation_status_a, rotation_damage_a, current_time, used_gcd, rune_cd_tracker, last_dot1_damage, \
                                    current_power, dots, gcd, trinket_hit_crit_tracker, sum_ps_attacks, sigil_of_strife_active, sigil_of_strife_timer, bonus_loop_ap, \
                                    sum_oh_ps_attacks, dancing_rune_weapon_damage = plague_strike_cast(tanking, H2,
                                                                                                       hit_from_gear,
                                                                                                       hit_from_other,
                                                                                                       target_level,
                                                                                                       all_expertise_dodge,
                                                                                                       all_expertise_parry,
                                                                                                       total_crit,
                                                                                                       annihilation_talent_points,
                                                                                                       increased_phy_crit,
                                                                                                       scourgeborne_plate_two_set,
                                                                                                       vicious_strikes_points,
                                                                                                       current_armor,
                                                                                                       armor_penetration,
                                                                                                       mh_input_lowend_weapon_damage,
                                                                                                       mh_input_topend_weapon_damage,
                                                                                                       attack_damage_normalization,
                                                                                                       current_ap,
                                                                                                       total_haste_rating,
                                                                                                       current_time,
                                                                                                       last_rune_change,
                                                                                                       castable,
                                                                                                       improved_unholy_presence_points,
                                                                                                       dk_presence,
                                                                                                       input_gcd,
                                                                                                       dancing_rune_weapon_points,
                                                                                                       dancing_rune_weapon_active,
                                                                                                       var_crit_amount,
                                                                                                       tundra_stalker_points,
                                                                                                       dots,
                                                                                                       outbreak_points,
                                                                                                       rage_of_rivendale_points,
                                                                                                       glyph_plague_strike,
                                                                                                       hysteria_active,
                                                                                                       tricksoftt_active,
                                                                                                       increased_physical_damage,
                                                                                                       increased_all_damage,
                                                                                                       dancing_rune_weapon_damage_multi,
                                                                                                       dancing_rune_weapon_damage,
                                                                                                       dot_length,
                                                                                                       crypt_fever_points,
                                                                                                       threat_of_thassarian_points,
                                                                                                       oh_input_lowend_weapon_damage,
                                                                                                       oh_input_topend_weapon_damage,
                                                                                                       sum_oh_ps_attacks,
                                                                                                       oh_wep_damage_mod,
                                                                                                       rune_cd_tracker,
                                                                                                       sum_ps_attacks,
                                                                                                       current_power,
                                                                                                       max_runic,
                                                                                                       dirge_points,
                                                                                                       sigil_of_strife,
                                                                                                       bonus_loop_ap,
                                                                                                       sigil_of_strife_amount,
                                                                                                       sigil_of_strife_active,
                                                                                                       sigil_of_strife_timer,
                                                                                                       trinket_hit_crit_tracker)
                                rotation.extend(rotation_a)
                                rotation_time.extend(rotation_time_a)
                                rotation_status.extend(rotation_status_a)
                                rotation_damage.extend(rotation_damage_a)
                                continue
                    if pestilence_allow_reset == False:
                        if (dots[0] - pestilence_reset_window) > 0 and (dots[0] - pestilence_reset_window) < current_time: #Refresh Icy Touch
                            able_to_cast, castable, castable1, castable2, just_used_death_rune, rune_cd_tracker = use_runes(
                                rune_cd_tracker, current_time, dots, improved_unholy_presence_points, dk_presence,
                                total_haste_rating, last_rune_change,
                                n_blood=0, n_frost=1, n_unholy=0)
                            if able_to_cast == 1:
                                rotation_a, rotation_time_a, rotation_status_a, rotation_damage_a, current_time, used_gcd, rune_cd_tracker, last_dot0_damage, \
                                    current_power, rune_of_cinderglacier_active, rune_of_cinderglacier_active_count, dots, sum_it_attacks, km_procd, \
                                    deathchill_active, gcd, rune_of_cinderglacier_damage = icy_touch_cast(
                                    spell_hit_total, increased_spell_hit, target_level, km_procd, deathchill_active,
                                    total_crit, rime_points, increased_spell_crit, total_haste_rating,
                                    current_time, last_rune_change, castable, improved_unholy_presence_points,
                                    rune_grade_timer, dk_presence, input_gcd, rune_cd_tracker,
                                    sigil_of_the_frozen_conscience, current_ap, impurity_points, var_crit_amount,
                                    improved_icy_touch_points, black_ice_points, glacier_rot_points,
                                    dots, tundra_stalker_points, merciless_combat_points, rage_of_rivendale_points,
                                    hysteria_active, tricksoftt_active,
                                    fight_length, fight_sub_35percent, increased_spell_damage, increased_all_damage,
                                    sum_it_attacks, current_power, max_runic,
                                    chill_of_the_grave_points, dot_length, crypt_fever_points,
                                    rune_of_cinderglacier_active, rune_of_cinderglacier_active_count,
                                    rune_of_cinderglacier_damage)
                                rotation.extend(rotation_a)
                                rotation_time.extend(rotation_time_a)
                                rotation_status.extend(rotation_status_a)
                                rotation_damage.extend(rotation_damage_a)
                                continue
                        
                    if pestilence_allow_reset == False:
                        if (dots[1] - pestilence_reset_window) > 0 and (dots[1] - pestilence_reset_window) < current_time: #Refresh Plague Strike
                            able_to_cast, castable, castable1, castable2, just_used_death_rune, rune_cd_tracker = use_runes(
                                rune_cd_tracker, current_time, dots, improved_unholy_presence_points, dk_presence,
                                total_haste_rating, last_rune_change,
                                n_blood=0, n_frost=0, n_unholy=1)
                            if able_to_cast == 1:
                                rotation_a, rotation_time_a, rotation_status_a, rotation_damage_a, current_time, used_gcd, rune_cd_tracker, last_dot1_damage, \
                                    current_power, dots, gcd, trinket_hit_crit_tracker, sum_ps_attacks, sigil_of_strife_active, sigil_of_strife_timer, bonus_loop_ap, \
                                    sum_oh_ps_attacks, dancing_rune_weapon_damage = plague_strike_cast(tanking, H2,
                                                                                                       hit_from_gear,
                                                                                                       hit_from_other,
                                                                                                       target_level,
                                                                                                       all_expertise_dodge,
                                                                                                       all_expertise_parry,
                                                                                                       total_crit,
                                                                                                       annihilation_talent_points,
                                                                                                       increased_phy_crit,
                                                                                                       scourgeborne_plate_two_set,
                                                                                                       vicious_strikes_points,
                                                                                                       current_armor,
                                                                                                       armor_penetration,
                                                                                                       mh_input_lowend_weapon_damage,
                                                                                                       mh_input_topend_weapon_damage,
                                                                                                       attack_damage_normalization,
                                                                                                       current_ap,
                                                                                                       total_haste_rating,
                                                                                                       current_time,
                                                                                                       last_rune_change,
                                                                                                       castable,
                                                                                                       improved_unholy_presence_points,
                                                                                                       dk_presence,
                                                                                                       input_gcd,
                                                                                                       dancing_rune_weapon_points,
                                                                                                       dancing_rune_weapon_active,
                                                                                                       var_crit_amount,
                                                                                                       tundra_stalker_points,
                                                                                                       dots,
                                                                                                       outbreak_points,
                                                                                                       rage_of_rivendale_points,
                                                                                                       glyph_plague_strike,
                                                                                                       hysteria_active,
                                                                                                       tricksoftt_active,
                                                                                                       increased_physical_damage,
                                                                                                       increased_all_damage,
                                                                                                       dancing_rune_weapon_damage_multi,
                                                                                                       dancing_rune_weapon_damage,
                                                                                                       dot_length,
                                                                                                       crypt_fever_points,
                                                                                                       threat_of_thassarian_points,
                                                                                                       oh_input_lowend_weapon_damage,
                                                                                                       oh_input_topend_weapon_damage,
                                                                                                       sum_oh_ps_attacks,
                                                                                                       oh_wep_damage_mod,
                                                                                                       rune_cd_tracker,
                                                                                                       sum_ps_attacks,
                                                                                                       current_power,
                                                                                                       max_runic,
                                                                                                       dirge_points,
                                                                                                       sigil_of_strife,
                                                                                                       bonus_loop_ap,
                                                                                                       sigil_of_strife_amount,
                                                                                                       sigil_of_strife_active,
                                                                                                       sigil_of_strife_timer,
                                                                                                       trinket_hit_crit_tracker)
                                rotation.extend(rotation_a)
                                rotation_time.extend(rotation_time_a)
                                rotation_status.extend(rotation_status_a)
                                rotation_damage.extend(rotation_damage_a)
                                continue

                    if (dots[0] - pestilence_reset_window) > 0 and (dots[0] - pestilence_reset_window) < current_time: #Pestilence
                        if (dots[1] - pestilence_reset_window) > 0 and (dots[1] - pestilence_reset_window) < current_time:
                            if pestilence_allow_reset == True:
                                if current_time - dots[0] == 0:
                                    continue
                                if current_time - dots[1] == 0:
                                    continue
                                able_to_cast, castable, castable1, castable2, just_used_death_rune, rune_cd_tracker = use_runes(
                                    rune_cd_tracker, current_time, dots, improved_unholy_presence_points, dk_presence,
                                    total_haste_rating, last_rune_change,
                                    n_blood=1, n_frost=0, n_unholy=0)
                                if able_to_cast == 1:
                                    rotation_a, rotation_time_a, rotation_status_a, rotation_damage_a, current_time, used_gcd, rune_cd_tracker, \
                                        current_power, rune_of_cinderglacier_active, rune_of_cinderglacier_active_count, dots, sum_pest_attacks, \
                                        gcd, rune_of_cinderglacier_damage, multiple_adds_timer, multiple_adds_timer_bp = pestilence_cast(
                                        spell_hit_total, increased_spell_hit, target_level, total_crit,
                                        increased_spell_crit, total_haste_rating, current_time, last_rune_change,
                                        castable, improved_unholy_presence_points, dk_presence, input_gcd,
                                        rune_cd_tracker, dots, dot_length, crypt_fever_points, multiple_adds_timer,
                                        var_crit_amount, black_ice_points, tundra_stalker_points,
                                        rage_of_rivendale_points, hysteria_active, tricksoftt_active,
                                        increased_spell_damage,
                                        increased_all_damage, sum_pest_attacks, current_power, max_runic,
                                        blood_of_the_north_points, just_used_death_rune, death, reaping_points,
                                        rune_of_cinderglacier_active, rune_of_cinderglacier_active_count,
                                        rune_of_cinderglacier_damage, pestilence_allow_reset, multiple_adds_timer_bp)
                                    rotation.extend(rotation_a)
                                    rotation_time.extend(rotation_time_a)
                                    rotation_status.extend(rotation_status_a)
                                    rotation_damage.extend(rotation_damage_a)
                                    continue
                    if (multiple_adds_timer < current_time or multiple_adds_timer_bp < current_time) and (dots[0] - pestilence_reset_window) > 0 and (dots[0] - pestilence_reset_window) < current_time and (dots[1] - pestilence_reset_window) > 0 and (dots[1] - pestilence_reset_window) < current_time: #Spread Pest, if not on adds
                        if pestilence_allow_reset == True:
                            able_to_cast, castable, castable1, castable2, just_used_death_rune, rune_cd_tracker = use_runes(
                                rune_cd_tracker, current_time, dots, improved_unholy_presence_points, dk_presence,
                                total_haste_rating, last_rune_change,
                                n_blood=1, n_frost=0, n_unholy=0)
                            if able_to_cast == 1:
                                rotation_a, rotation_time_a, rotation_status_a, rotation_damage_a, current_time, used_gcd, rune_cd_tracker, \
                                    current_power, rune_of_cinderglacier_active, rune_of_cinderglacier_active_count, dots, sum_pest_attacks, \
                                    gcd, rune_of_cinderglacier_damage, multiple_adds_timer, multiple_adds_timer_bp = pestilence_cast(
                                    spell_hit_total, increased_spell_hit, target_level, total_crit,
                                    increased_spell_crit, total_haste_rating, current_time, last_rune_change,
                                    castable, improved_unholy_presence_points, dk_presence, input_gcd, rune_cd_tracker,
                                    dots, dot_length, crypt_fever_points, multiple_adds_timer,
                                    var_crit_amount, black_ice_points, tundra_stalker_points, rage_of_rivendale_points,
                                    hysteria_active, tricksoftt_active, increased_spell_damage,
                                    increased_all_damage, sum_pest_attacks, current_power, max_runic,
                                    blood_of_the_north_points, just_used_death_rune, death, reaping_points,
                                    rune_of_cinderglacier_active, rune_of_cinderglacier_active_count,
                                    rune_of_cinderglacier_damage, pestilence_allow_reset, multiple_adds_timer_bp)
                                rotation.extend(rotation_a)
                                rotation_time.extend(rotation_time_a)
                                rotation_status.extend(rotation_status_a)
                                rotation_damage.extend(rotation_damage_a)
                                continue
                        elif pestilence_allow_reset == False:
                            able_to_cast, castable, castable1, castable2, just_used_death_rune, rune_cd_tracker = use_runes(
                                rune_cd_tracker, current_time, dots, improved_unholy_presence_points, dk_presence,
                                total_haste_rating, last_rune_change,
                                n_blood=1, n_frost=0, n_unholy=0)
                            if able_to_cast == 1:
                                rotation_a, rotation_time_a, rotation_status_a, rotation_damage_a, current_time, used_gcd, rune_cd_tracker, \
                                    current_power, rune_of_cinderglacier_active, rune_of_cinderglacier_active_count, dots, sum_pest_attacks, \
                                    gcd, rune_of_cinderglacier_damage, multiple_adds_timer, multiple_adds_timer_bp = pestilence_cast(
                                    spell_hit_total, increased_spell_hit, target_level, total_crit,
                                    increased_spell_crit, total_haste_rating, current_time, last_rune_change,
                                    castable, improved_unholy_presence_points, dk_presence, input_gcd, rune_cd_tracker,
                                    dots, dot_length, crypt_fever_points, multiple_adds_timer,
                                    var_crit_amount, black_ice_points, tundra_stalker_points, rage_of_rivendale_points,
                                    hysteria_active, tricksoftt_active, increased_spell_damage,
                                    increased_all_damage, sum_pest_attacks, current_power, max_runic,
                                    blood_of_the_north_points, just_used_death_rune, death, reaping_points,
                                    rune_of_cinderglacier_active, rune_of_cinderglacier_active_count,
                                    rune_of_cinderglacier_damage, pestilence_allow_reset, multiple_adds_timer_bp)
                                rotation.extend(rotation_a)
                                rotation_time.extend(rotation_time_a)
                                rotation_status.extend(rotation_status_a)
                                rotation_damage.extend(rotation_damage_a)
                                continue

                    if current_time < 10 and frost_def_setup == True:
                        if dots[0] == dots[1] and pestilence_allow_reset == True and blood_tap_cd <= current_time:
                            if current_time - dots[0] == 0:
                                continue
                            if current_time - dots[1] == 0:
                                continue
                            castable = all_rune_check(blood, current_time, rune_cd_tracker)
                            if castable == 3 or castable != 3:
                                if rune_cd_tracker[6] == 10000 or rune_cd_tracker[7] == 10000:
                                    if blood_tap_cd <= current_time:
                                        blood_tap_cd = current_time + 60
                                        rotation.append("Blood Tap")
                                        rotation_time.append(current_time)
                                        rotation_status.append("Active")
                                        rotation_damage.append(0)
                                        haste_percentage = (
                                                                   total_haste_rating / 25.21) / 100  # Returns a result of 0 - 1 for 0% - 100%
                                        haste_rune_cd = rune_grade_timer(current_time, last_rune_change[castable],
                                                                         last_rune_change[castable + 6])
                                        if improved_unholy_presence_points != 0:
                                            if dk_presence == 2:
                                                haste_rune_cd = haste_rune_cd - (haste_rune_cd * (
                                                        (improved_unholy_presence_points * 5) / 100))
                                        if rune_cd_tracker[0] < rune_cd_tracker[1]:
                                            castable = 0
                                            death_castable = castable + death
                                            haste_percentage = (
                                                                       total_haste_rating / 25.21) / 100  # Returns a result of 0 - 1 for 0% - 100%
                                            haste_rune_cd = 0
                                            rune_cd_tracker[death_castable] = rune_cd(haste_rune_cd, current_time)
                                            rune_cd_tracker[castable] = 10000
                                        else:
                                            castable = 1
                                            death_castable = castable + death
                                            haste_percentage = (
                                                                       total_haste_rating / 25.21) / 100  # Returns a result of 0 - 1 for 0% - 100%
                                            haste_rune_cd = 0
                                            rune_cd_tracker[death_castable] = rune_cd(haste_rune_cd, current_time)
                                            rune_cd_tracker[castable] = 10000
                                            # Use bloodtap
                        if unbreakable_armor_points == 1 and skip_ua == False:  # Unbreakable Armor
                            if ua_cd_timer <= current_time:
                                able_to_cast, castable, castable1, castable2, just_used_death_rune, rune_cd_tracker = use_runes(
                                    rune_cd_tracker, current_time, dots, improved_unholy_presence_points, dk_presence,
                                    total_haste_rating, last_rune_change,
                                    n_blood=0, n_frost=1, n_unholy=0, n_skip=0, n_reset_window=pestilence_reset_window)
                                if able_to_cast == 1:
                                    rotation.append("Unbreakable Armor")
                                    rotation_time.append(current_time)
                                    rotation_status.append("Active")
                                    rotation_damage.append(0)
                                    ua_cd_timer = current_time + unbreak_armor_bone_shield_vamp_blood_cd_time
                                    # Rune Hit
                                    haste_percentage = (
                                                               total_haste_rating / 25.21) / 100  # Returns a result of 0 - 1 for 0% - 100%
                                    haste_rune_cd = rune_grade_timer(current_time, last_rune_change[castable],
                                                                     last_rune_change[castable + 6])
                                    if improved_unholy_presence_points != 0:
                                        if dk_presence == 2:
                                            haste_rune_cd = haste_rune_cd - (
                                                    haste_rune_cd * ((improved_unholy_presence_points * 5) / 100))
                                    if dk_presence != 2:
                                        gcd = input_gcd / (1 + haste_percentage)
                                        if gcd < 1:
                                            gcd = 1
                                    rune_cd_tracker[castable] = rune_cd(haste_rune_cd, current_time)
                                    ua_buff_timer = current_time + 20
                                    ua_strength_increase_amount = (strtoap * .2)
                                    current_power = runic_power(-10, current_power, max_runic)
                                    current_time += gcd
                                    used_gcd = True
                                    continue
                        able_to_cast, castable, castable1, castable2, just_used_death_rune, rune_cd_tracker = use_runes(
                            rune_cd_tracker, current_time, dots, improved_unholy_presence_points, dk_presence,
                            total_haste_rating, last_rune_change,
                            n_blood=0, n_frost=1, n_unholy=1, n_skip=0, n_reset_window=0)
                        if able_to_cast == 1:
                            rotation_a, rotation_time_a, rotation_status_a, rotation_damage_a, deathchill_active, gcd, dots, \
                                dancing_rune_weapon_damage, trinket_hit_crit_tracker, howling_current_cd, rime_procd, rime_timer, \
                                sigil_of_virulence_timer, sigil_of_virulence_buff, bonus_loop_str, sigil_of_hanged_man_buff, sigil_of_hanged_man_timer, \
                                sigil_of_hanged_man_count, rune_cd_tracker, sum_oh_obil_attacks, current_time, used_gcd, sum_obil_attacks, current_power = obliterate_cast(
                                deathchill_active, tanking, H2, hit_from_gear, hit_from_other, target_level,
                                all_expertise_dodge, all_expertise_parry, total_crit,
                                annihilation_talent_points, rime_points, increased_phy_crit,
                                scourgeborne_battlegear_two_set, subversion_points, current_armor, armor_penetration,
                                mh_input_lowend_weapon_damage, mh_input_topend_weapon_damage,
                                attack_damage_normalization, current_ap, total_haste_rating, current_time,
                                castable, last_rune_change, dk_presence, improved_unholy_presence_points, input_gcd,
                                dots, dancing_rune_weapon_points, dancing_rune_weapon_active,
                                darkruned_battlegear_four_set, var_crit_amount, guile_of_gorefiend_points,
                                tundra_stalker_points, merciless_combat_points, fight_length, fight_sub_35percent,
                                rage_of_rivendale_points,
                                scourgelords_battlegear_two_set, hysteria_active, tricksoftt_active, extra_obli_damage,
                                increased_physical_damage,
                                increased_all_damage, dancing_rune_weapon_damage_multi, dancing_rune_weapon_damage,
                                sigil_of_virulence, sigil_of_virulence_buff,
                                bonus_loop_str, sigil_of_hanged_man, sigil_of_hanged_man_count,
                                death_rune_mastery_points, just_used_death_rune, castable1, sigil_of_awareness,
                                rune_cd_tracker, threat_of_thassarian_points, oh_input_lowend_weapon_damage,
                                oh_input_topend_weapon_damage, oh_wep_damage_mod,
                                sum_oh_obil_attacks, current_power, max_runic, sum_obil_attacks,
                                chill_of_the_grave_points, scourgeborne_battlegear_four_set, howling_current_cd,
                                rime_procd, rime_timer, sigil_of_virulence_timer, sigil_of_hanged_man_buff,
                                sigil_of_hanged_man_timer, trinket_hit_crit_tracker)
                            rotation.extend(rotation_a)
                            rotation_time.extend(rotation_time_a)
                            rotation_status.extend(rotation_status_a)
                            rotation_damage.extend(rotation_damage_a)
                            continue
                        if frost_strike_points == 1:
                            if current_power >= frost_strike_cost:  # Frost Strike
                                rotation_a, rotation_time_a, rotation_status_a, rotation_damage_a, current_time, used_gcd, \
                                    current_power, dots, gcd, trinket_hit_crit_tracker, km_procd, deathchill_active, sum_oh_fs_attacks, rune_of_cinderglacier_active, \
                                    rune_of_cinderglacier_damage, rune_of_cinderglacier_active_count, sum_fs_attacks, sum_oh_fs_attacks = frost_strike_cast(
                                    km_procd, tanking, H2, hit_from_gear, hit_from_other, target_level,
                                    all_expertise_dodge, all_expertise_parry, total_crit, annihilation_talent_points,
                                    increased_phy_crit, darkruned_battlegear_two_set, deathchill_active, current_armor,
                                    armor_penetration, mh_input_lowend_weapon_damage,
                                    mh_input_topend_weapon_damage, attack_damage_normalization, current_ap,
                                    total_haste_rating, current_time, last_rune_change, castable,
                                    improved_unholy_presence_points, dk_presence, input_gcd,
                                    threat_of_thassarian_points, oh_input_lowend_weapon_damage,
                                    oh_input_topend_weapon_damage,
                                    var_crit_amount, guile_of_gorefiend_points, sigil_of_vengeful_heart,
                                    black_ice_points, glacier_rot_points, dots, tundra_stalker_points,
                                    merciless_combat_points, blood_of_the_north_points, rage_of_rivendale_points,
                                    hysteria_active, tricksoftt_active, sum_oh_fs_attacks,
                                    increased_physical_damage, increased_all_damage, fight_length, fight_sub_35percent,
                                    oh_wep_damage_mod, rune_of_cinderglacier_active,
                                    rune_of_cinderglacier_damage, rune_of_cinderglacier_active_count, frost_strike_cost,
                                    current_power, max_runic, sum_fs_attacks, trinket_hit_crit_tracker)
                                rotation.extend(rotation_a)
                                rotation_time.extend(rotation_time_a)
                                rotation_status.extend(rotation_status_a)
                                rotation_damage.extend(rotation_damage_a)
                                continue
                        if dots[0] != dots[1] and pestilence_allow_reset == True:
                            if current_time - dots[0] == 0:
                                continue
                            if current_time - dots[1] == 0:
                                continue
                            able_to_cast, castable, castable1, castable2, just_used_death_rune, rune_cd_tracker = use_runes(
                                rune_cd_tracker, current_time, dots, improved_unholy_presence_points, dk_presence,
                                total_haste_rating, last_rune_change,
                                n_blood=1, n_frost=0, n_unholy=0, n_skip=0, n_reset_window=0)
                            if able_to_cast == 1:
                                rotation_a, rotation_time_a, rotation_status_a, rotation_damage_a, current_time, used_gcd, rune_cd_tracker, \
                                    current_power, rune_of_cinderglacier_active, rune_of_cinderglacier_active_count, dots, sum_pest_attacks, \
                                    gcd, rune_of_cinderglacier_damage, multiple_adds_timer, multiple_adds_timer_bp = pestilence_cast(
                                    spell_hit_total, increased_spell_hit, target_level, total_crit,
                                    increased_spell_crit, total_haste_rating, current_time, last_rune_change,
                                    castable, improved_unholy_presence_points, dk_presence, input_gcd, rune_cd_tracker,
                                    dots, dot_length, crypt_fever_points, multiple_adds_timer,
                                    var_crit_amount, black_ice_points, tundra_stalker_points, rage_of_rivendale_points,
                                    hysteria_active, tricksoftt_active, increased_spell_damage,
                                    increased_all_damage, sum_pest_attacks, current_power, max_runic,
                                    blood_of_the_north_points, just_used_death_rune, death, reaping_points,
                                    rune_of_cinderglacier_active, rune_of_cinderglacier_active_count,
                                    rune_of_cinderglacier_damage, pestilence_allow_reset, multiple_adds_timer_bp)
                                rotation.extend(rotation_a)
                                rotation_time.extend(rotation_time_a)
                                rotation_status.extend(rotation_status_a)
                                rotation_damage.extend(rotation_damage_a)
                                continue

                                

                    if death_and_decay_skip == False:   #Death & Decay
                        if death_and_decay_cd == 0:
                            if death_and_decay_cd < current_time:
                                able_to_cast, castable, castable1, castable2, just_used_death_rune, rune_cd_tracker = use_runes(
                                    rune_cd_tracker, current_time, dots, improved_unholy_presence_points, dk_presence,
                                    total_haste_rating, last_rune_change,
                                    n_blood=1, n_frost=1, n_unholy=1)
                                if able_to_cast == 1:
                                    rotation_a, rotation_time_a, rotation_status_a, rotation_damage_a, current_time, used_gcd, current_power, gcd, \
                                        death_and_decay_damage, death_and_decay_last_damage_time, death_n_decay_apply_time, death_and_decay_cd = death_and_decay_cast(
                                        spell_hit_total, increased_spell_hit, target_level, total_crit,
                                        increased_spell_crit,
                                        current_time,
                                        dk_presence, input_gcd, dots, haste_percentage, current_ap, impurity_points,
                                        gcd,
                                        used_gcd, death_and_decay_cd, death_and_decay_cd_length,
                                        var_crit_amount, black_ice_points, rage_of_rivendale_points, hysteria_active,
                                        tricksoftt_active, increased_spell_damage, max_runic, death_n_decay_apply_time,
                                        increased_all_damage, current_power, glyph_death_and_decay,
                                        scourgelords_plate_two_set,
                                        death_and_decay_damage, death_and_decay_last_damage_time,
                                        initial_hit=True)
                                    rotation.extend(rotation_a)
                                    rotation_time.extend(rotation_time_a)
                                    rotation_status.extend(rotation_status_a)
                                    rotation_damage.extend(rotation_damage_a)
                                    for dnd_multi in range(1, amount_of_targets):
                                        rotation_a, rotation_time_a, rotation_status_a, rotation_damage_a, current_time, used_gcd, current_power, gcd, \
                                            death_and_decay_damage, death_and_decay_last_damage_time, death_n_decay_apply_time, death_and_decay_cd = death_and_decay_cast(
                                            spell_hit_total, increased_spell_hit, target_level, total_crit,
                                            increased_spell_crit, current_time,
                                            dk_presence, input_gcd, dots, haste_percentage, current_ap, impurity_points,
                                            gcd, used_gcd, death_and_decay_cd, death_and_decay_cd_length,
                                            var_crit_amount, black_ice_points, rage_of_rivendale_points,
                                            hysteria_active, tricksoftt_active, increased_spell_damage, max_runic,
                                            death_n_decay_apply_time,
                                            increased_all_damage, current_power, glyph_death_and_decay,
                                            scourgelords_plate_two_set, death_and_decay_damage,
                                            death_and_decay_last_damage_time,
                                            initial_hit=False)
                                        rotation.extend(rotation_a)
                                        rotation_time.extend(rotation_time_a)
                                        rotation_status.extend(rotation_status_a)
                                        rotation_damage.extend(rotation_damage_a)
                                    continue

                    if unbreakable_armor_points == 1 and skip_ua == False:  # Unbreakable Armor
                        if ua_cd_timer <= current_time:
                            able_to_cast, castable, castable1, castable2, just_used_death_rune, rune_cd_tracker = use_runes(
                                rune_cd_tracker, current_time, dots, improved_unholy_presence_points, dk_presence,
                                total_haste_rating, last_rune_change,
                                n_blood=0, n_frost=1, n_unholy=0, n_skip=1, n_reset_window=pestilence_reset_window)
                            if able_to_cast == 1:
                                rotation.append("Unbreakable Armor")
                                rotation_time.append(current_time)
                                rotation_status.append("Active")
                                rotation_damage.append(0)
                                ua_cd_timer = current_time + unbreak_armor_bone_shield_vamp_blood_cd_time
                                # Rune Hit
                                haste_percentage = (
                                                               total_haste_rating / 25.21) / 100  # Returns a result of 0 - 1 for 0% - 100%
                                haste_rune_cd = rune_grade_timer(current_time, last_rune_change[castable],
                                                                 last_rune_change[castable + 6])
                                if improved_unholy_presence_points != 0:
                                    if dk_presence == 2:
                                        haste_rune_cd = haste_rune_cd - (
                                                    haste_rune_cd * ((improved_unholy_presence_points * 5) / 100))
                                if dk_presence != 2:
                                    gcd = input_gcd / (1 + haste_percentage)
                                    if gcd < 1:
                                        gcd = 1
                                rune_cd_tracker[castable] = rune_cd(haste_rune_cd, current_time)
                                ua_buff_timer = current_time + 20
                                ua_strength_increase_amount = (strtoap * .2)
                                current_power = runic_power(-10, current_power, max_runic)
                                current_time += gcd
                                used_gcd = True
                                continue
                    if rime_procd == True: #Howling Blast on Rime Proc
                        rime_procd = False
                        if rime_timer + 15 > current_time:
                            if howling_blast_points == 1:
                                rotation_a, rotation_time_a, rotation_status_a, rotation_damage_a, current_time, used_gcd, rune_cd_tracker, \
                                    current_power, rune_of_cinderglacier_active, rune_of_cinderglacier_active_count, dots, km_procd, \
                                    deathchill_active, gcd, rune_of_cinderglacier_damage, howling_current_cd, sum_hb_attacks = howling_blast_cast(
                                    spell_hit_total, increased_spell_hit, target_level, km_procd, deathchill_active,
                                    increased_spell_crit, total_haste_rating,
                                    total_crit, current_time, last_rune_change, castable, castable1,
                                    improved_unholy_presence_points, dk_presence, input_gcd, amount_of_targets,
                                    current_ap, impurity_points, var_crit_amount, guile_of_gorefiend_points,
                                    black_ice_points, dots, glacier_rot_points, tundra_stalker_points,
                                    fight_sub_35percent, merciless_combat_points, rage_of_rivendale_points,
                                    hysteria_active, tricksoftt_active, increased_spell_damage,
                                    increased_all_damage, rune_of_cinderglacier_active, rune_of_cinderglacier_damage,
                                    rune_of_cinderglacier_active_count,
                                    fight_length, rune_cd_tracker, sum_hb_attacks, chill_of_the_grave_points,
                                    current_power, max_runic, dot_length, glyph_howling_blast, free_rime=False)
                                rotation.extend(rotation_a)
                                rotation_time.extend(rotation_time_a)
                                rotation_status.extend(rotation_status_a)
                                rotation_damage.extend(rotation_damage_a)
                                continue
                                
                                
                                
                    if use_obliterate_over_howling_blast == False: #Regular Howling Blast
                        if howling_blast_points == 1:
                            if howling_current_cd < current_time:
                                able_to_cast, castable, castable1, castable2, just_used_death_rune, rune_cd_tracker = use_runes(
                                    rune_cd_tracker, current_time, dots, improved_unholy_presence_points, dk_presence,
                                    total_haste_rating, last_rune_change,
                                    n_blood=0, n_frost=1, n_unholy=1, n_skip=1, n_reset_window=pestilence_reset_window)
                                if able_to_cast == 1:
                                    rotation_a, rotation_time_a, rotation_status_a, rotation_damage_a, current_time, used_gcd, rune_cd_tracker, \
                                        current_power, rune_of_cinderglacier_active, rune_of_cinderglacier_active_count, dots, km_procd, \
                                        deathchill_active, gcd, rune_of_cinderglacier_damage, howling_current_cd, sum_hb_attacks = howling_blast_cast(
                                        spell_hit_total, increased_spell_hit, target_level, km_procd, deathchill_active,
                                        increased_spell_crit, total_haste_rating,
                                        total_crit, current_time, last_rune_change, castable, castable1,
                                        improved_unholy_presence_points, dk_presence, input_gcd, amount_of_targets,
                                        current_ap, impurity_points, var_crit_amount, guile_of_gorefiend_points,
                                        black_ice_points, dots, glacier_rot_points, tundra_stalker_points,
                                        fight_sub_35percent, merciless_combat_points, rage_of_rivendale_points,
                                        hysteria_active, tricksoftt_active, increased_spell_damage,
                                        increased_all_damage, rune_of_cinderglacier_active,
                                        rune_of_cinderglacier_damage, rune_of_cinderglacier_active_count,
                                        fight_length, rune_cd_tracker, sum_hb_attacks, chill_of_the_grave_points,
                                        current_power, max_runic, dot_length, glyph_howling_blast, free_rime=False)
                                    rotation.extend(rotation_a)
                                    rotation_time.extend(rotation_time_a)
                                    rotation_status.extend(rotation_status_a)
                                    rotation_damage.extend(rotation_damage_a)
                                    continue
                    if use_obliterate_over_howling_blast == True:
                        able_to_cast, castable, castable1, castable2, just_used_death_rune, rune_cd_tracker = use_runes(
                            rune_cd_tracker, current_time, dots, improved_unholy_presence_points, dk_presence,
                            total_haste_rating, last_rune_change,
                            n_blood=0, n_frost=1, n_unholy=1, n_skip=1, n_reset_window=pestilence_reset_window)
                        if able_to_cast == 1:
                            rotation_a, rotation_time_a, rotation_status_a, rotation_damage_a, deathchill_active, gcd, dots, \
                                dancing_rune_weapon_damage, trinket_hit_crit_tracker, howling_current_cd, rime_procd, rime_timer, \
                                sigil_of_virulence_timer, sigil_of_virulence_buff, bonus_loop_str, sigil_of_hanged_man_buff, sigil_of_hanged_man_timer, \
                                sigil_of_hanged_man_count, rune_cd_tracker, sum_oh_obil_attacks, current_time, used_gcd, sum_obil_attacks, current_power = obliterate_cast(
                                deathchill_active, tanking, H2, hit_from_gear, hit_from_other, target_level,
                                all_expertise_dodge, all_expertise_parry, total_crit,
                                annihilation_talent_points, rime_points, increased_phy_crit,
                                scourgeborne_battlegear_two_set, subversion_points, current_armor, armor_penetration,
                                mh_input_lowend_weapon_damage, mh_input_topend_weapon_damage,
                                attack_damage_normalization, current_ap, total_haste_rating, current_time,
                                castable, last_rune_change, dk_presence, improved_unholy_presence_points, input_gcd,
                                dots, dancing_rune_weapon_points, dancing_rune_weapon_active,
                                darkruned_battlegear_four_set, var_crit_amount, guile_of_gorefiend_points,
                                tundra_stalker_points, merciless_combat_points, fight_length, fight_sub_35percent,
                                rage_of_rivendale_points,
                                scourgelords_battlegear_two_set, hysteria_active, tricksoftt_active, extra_obli_damage,
                                increased_physical_damage,
                                increased_all_damage, dancing_rune_weapon_damage_multi, dancing_rune_weapon_damage,
                                sigil_of_virulence, sigil_of_virulence_buff,
                                bonus_loop_str, sigil_of_hanged_man, sigil_of_hanged_man_count,
                                death_rune_mastery_points, just_used_death_rune, castable1, sigil_of_awareness,
                                rune_cd_tracker, threat_of_thassarian_points, oh_input_lowend_weapon_damage,
                                oh_input_topend_weapon_damage, oh_wep_damage_mod,
                                sum_oh_obil_attacks, current_power, max_runic, sum_obil_attacks,
                                chill_of_the_grave_points, scourgeborne_battlegear_four_set, howling_current_cd,
                                rime_procd, rime_timer, sigil_of_virulence_timer, sigil_of_hanged_man_buff,
                                sigil_of_hanged_man_timer, trinket_hit_crit_tracker)
                            rotation.extend(rotation_a)
                            rotation_time.extend(rotation_time_a)
                            rotation_status.extend(rotation_status_a)
                            rotation_damage.extend(rotation_damage_a)
                            continue
                                
                                
                    if howling_current_cd > min(rune_cd_tracker[2], rune_cd_tracker[3], rune_cd_tracker[4], rune_cd_tracker[5], rune_cd_tracker[8], rune_cd_tracker[9], rune_cd_tracker[10], rune_cd_tracker[11]):
                        able_to_cast, castable, castable1, castable2, just_used_death_rune, rune_cd_tracker = use_runes(
                            rune_cd_tracker, current_time, dots, improved_unholy_presence_points, dk_presence,
                            total_haste_rating, last_rune_change,
                            n_blood=0, n_frost=1, n_unholy=1, n_skip=1, n_reset_window=pestilence_reset_window)
                        if able_to_cast == 1:
                            rotation_a, rotation_time_a, rotation_status_a, rotation_damage_a, deathchill_active, gcd, dots, \
                                dancing_rune_weapon_damage, trinket_hit_crit_tracker, howling_current_cd, rime_procd, rime_timer, \
                                sigil_of_virulence_timer, sigil_of_virulence_buff, bonus_loop_str, sigil_of_hanged_man_buff, sigil_of_hanged_man_timer, \
                                sigil_of_hanged_man_count, rune_cd_tracker, sum_oh_obil_attacks, current_time, used_gcd, sum_obil_attacks, current_power = obliterate_cast(
                                deathchill_active, tanking, H2, hit_from_gear, hit_from_other, target_level,
                                all_expertise_dodge, all_expertise_parry, total_crit,
                                annihilation_talent_points, rime_points, increased_phy_crit,
                                scourgeborne_battlegear_two_set, subversion_points, current_armor, armor_penetration,
                                mh_input_lowend_weapon_damage, mh_input_topend_weapon_damage,
                                attack_damage_normalization, current_ap, total_haste_rating, current_time,
                                castable, last_rune_change, dk_presence, improved_unholy_presence_points, input_gcd,
                                dots, dancing_rune_weapon_points, dancing_rune_weapon_active,
                                darkruned_battlegear_four_set, var_crit_amount, guile_of_gorefiend_points,
                                tundra_stalker_points, merciless_combat_points, fight_length, fight_sub_35percent,
                                rage_of_rivendale_points,
                                scourgelords_battlegear_two_set, hysteria_active, tricksoftt_active, extra_obli_damage,
                                increased_physical_damage,
                                increased_all_damage, dancing_rune_weapon_damage_multi, dancing_rune_weapon_damage,
                                sigil_of_virulence, sigil_of_virulence_buff,
                                bonus_loop_str, sigil_of_hanged_man, sigil_of_hanged_man_count,
                                death_rune_mastery_points, just_used_death_rune, castable1, sigil_of_awareness,
                                rune_cd_tracker, threat_of_thassarian_points, oh_input_lowend_weapon_damage,
                                oh_input_topend_weapon_damage, oh_wep_damage_mod,
                                sum_oh_obil_attacks, current_power, max_runic, sum_obil_attacks,
                                chill_of_the_grave_points, scourgeborne_battlegear_four_set, howling_current_cd,
                                rime_procd, rime_timer, sigil_of_virulence_timer, sigil_of_hanged_man_buff,
                                sigil_of_hanged_man_timer, trinket_hit_crit_tracker)
                            rotation.extend(rotation_a)
                            rotation_time.extend(rotation_time_a)
                            rotation_status.extend(rotation_status_a)
                            rotation_damage.extend(rotation_damage_a)
                            continue

                    if frost_strike_points == 1:
                        if current_power >= frost_strike_cost:  # Frost Strike
                            rotation_a, rotation_time_a, rotation_status_a, rotation_damage_a, current_time, used_gcd, \
                                current_power, dots, gcd, trinket_hit_crit_tracker, km_procd, deathchill_active, sum_oh_fs_attacks, rune_of_cinderglacier_active, \
                                rune_of_cinderglacier_damage, rune_of_cinderglacier_active_count, sum_fs_attacks, sum_oh_fs_attacks = frost_strike_cast(
                                km_procd, tanking, H2, hit_from_gear, hit_from_other, target_level, all_expertise_dodge,
                                all_expertise_parry, total_crit, annihilation_talent_points,
                                increased_phy_crit, darkruned_battlegear_two_set, deathchill_active, current_armor,
                                armor_penetration, mh_input_lowend_weapon_damage,
                                mh_input_topend_weapon_damage, attack_damage_normalization, current_ap,
                                total_haste_rating, current_time, last_rune_change, castable,
                                improved_unholy_presence_points, dk_presence, input_gcd, threat_of_thassarian_points,
                                oh_input_lowend_weapon_damage, oh_input_topend_weapon_damage,
                                var_crit_amount, guile_of_gorefiend_points, sigil_of_vengeful_heart, black_ice_points,
                                glacier_rot_points, dots, tundra_stalker_points,
                                merciless_combat_points, blood_of_the_north_points, rage_of_rivendale_points,
                                hysteria_active, tricksoftt_active, sum_oh_fs_attacks,
                                increased_physical_damage, increased_all_damage, fight_length, fight_sub_35percent,
                                oh_wep_damage_mod, rune_of_cinderglacier_active,
                                rune_of_cinderglacier_damage, rune_of_cinderglacier_active_count, frost_strike_cost,
                                current_power, max_runic, sum_fs_attacks, trinket_hit_crit_tracker)
                            rotation.extend(rotation_a)
                            rotation_time.extend(rotation_time_a)
                            rotation_status.extend(rotation_status_a)
                            rotation_damage.extend(rotation_damage_a)
                            continue

                    if use_blood_strike_over_blood_boil == False: #Use Blood Boil
                        # Blood Strike
                        able_to_cast, castable, castable1, castable2, just_used_death_rune, rune_cd_tracker = use_runes(
                            rune_cd_tracker, current_time, dots, improved_unholy_presence_points, dk_presence,
                            total_haste_rating, last_rune_change,
                            n_blood=1, n_frost=0, n_unholy=0, n_skip=1, n_reset_window=pestilence_reset_window)
                        if able_to_cast == 1:
                            rotation_a, rotation_time_a, rotation_status_a, rotation_damage_a, current_time, used_gcd, rune_cd_tracker,\
        current_power, rune_of_cinderglacier_active, rune_of_cinderglacier_active_count, dots, sum_it_attacks, km_procd, \
        deathchill_active, gcd, rune_of_cinderglacier_damage, blood_boil_damage = blood_boil_cast(spell_hit_total, increased_spell_hit, target_level, km_procd, deathchill_active, total_crit, increased_spell_crit, total_haste_rating,
              current_time, last_rune_change, castable, improved_unholy_presence_points, rune_grade_timer, dk_presence, input_gcd, rune_cd_tracker,
              current_ap, impurity_points, var_crit_amount, black_ice_points, might_of_mograine_points, blood_strikes_points, blood_boil_damage,
              dots, tundra_stalker_points, rage_of_rivendale_points, hysteria_active, tricksoftt_active,
              increased_spell_damage, increased_all_damage, sum_it_attacks, current_power,
              rune_of_cinderglacier_active,
              rune_of_cinderglacier_active_count, rune_of_cinderglacier_damage, amount_of_targets)
                            rotation.extend(rotation_a)
                            rotation_time.extend(rotation_time_a)
                            rotation_status.extend(rotation_status_a)
                            rotation_damage.extend(rotation_damage_a)
                            continue

                            
                    if use_blood_strike_over_blood_boil == True: #Use Blood Strike
                        # Blood Strike
                        able_to_cast, castable, castable1, castable2, just_used_death_rune, rune_cd_tracker = use_runes(
                            rune_cd_tracker, current_time, dots, improved_unholy_presence_points, dk_presence,
                            total_haste_rating, last_rune_change,
                            n_blood=1, n_frost=0, n_unholy=0, n_skip=1, n_reset_window=pestilence_reset_window)
                        if able_to_cast == 1:
                            rotation_a, rotation_time_a, rotation_status_a, rotation_damage_a, current_time, used_gcd, rune_cd_tracker, current_power, \
                                dots, gcd, trinket_hit_crit_tracker, dancing_rune_weapon_damage, sigil_of_haunted_dreams_buff, sigil_of_haunted_dreams_timer, \
                                total_crit, t9_bonus, t9_cd_timer, t9_active_timer, bonus_loop_str, increased_all_damage, desolation_buff_timer, sudden_doom_damage, \
                                unholy_blight_amount, unholy_blight_timer, rune_of_cinderglacier_damage, rune_of_cinderglacier_active_count, \
                                rune_of_cinderglacier_active, sum_bs_attacks = blood_strike_cast(tanking, H2,
                                                                                                 hit_from_gear,
                                                                                                 hit_from_other,
                                                                                                 target_level,
                                                                                                 all_expertise_dodge,
                                                                                                 all_expertise_parry,
                                                                                                 total_crit,
                                                                                                 annihilation_talent_points,
                                                                                                 increased_phy_crit,
                                                                                                 subversion_points,
                                                                                                 current_armor,
                                                                                                 armor_penetration,
                                                                                                 mh_input_lowend_weapon_damage,
                                                                                                 mh_input_topend_weapon_damage,
                                                                                                 current_ap,
                                                                                                 attack_damage_normalization,
                                                                                                 total_haste_rating,
                                                                                                 current_time,
                                                                                                 last_rune_change,
                                                                                                 castable, dk_presence,
                                                                                                 improved_unholy_presence_points,
                                                                                                 dots, input_gcd,
                                                                                                 dancing_rune_weapon_points,
                                                                                                 dancing_rune_weapon_active,
                                                                                                 darkruned_battlegear_four_set,
                                                                                                 var_crit_amount,
                                                                                                 guile_of_gorefiend_points,
                                                                                                 tundra_stalker_points,
                                                                                                 blood_of_the_north_points,
                                                                                                 t9_tank_two_set,
                                                                                                 rage_of_rivendale_points,
                                                                                                 blood_strikes_points,
                                                                                                 might_of_mograine_points,
                                                                                                 hysteria_active,
                                                                                                 tricksoftt_active,
                                                                                                 increased_physical_damage,
                                                                                                 increased_all_damage,
                                                                                                 dancing_rune_weapon_damage_multi,
                                                                                                 dancing_rune_weapon_damage,
                                                                                                 just_used_death_rune,
                                                                                                 rune_cd_tracker,
                                                                                                 reaping_points,
                                                                                                 sigil_of_haunted_dreams,
                                                                                                 sigil_of_haunted_dreams_buff,
                                                                                                 t9_dps_two_set,
                                                                                                 t9_bonus, t9_cd_timer,
                                                                                                 bonus_loop_str,
                                                                                                 desolation_points,
                                                                                                 desolation_buff,
                                                                                                 desolation_buff_timer,
                                                                                                 sudden_doom_points,
                                                                                                 sigil_of_vengeful_heart,
                                                                                                 spell_hit_total,
                                                                                                 increased_spell_hit,
                                                                                                 darkruned_battlegear_two_set,
                                                                                                 increased_spell_crit,
                                                                                                 impurity_points,
                                                                                                 sigil_of_the_wild_buck,
                                                                                                 black_ice_points,
                                                                                                 glyph_death_coil,
                                                                                                 morbitity_points,
                                                                                                 increased_spell_damage,
                                                                                                 sudden_doom_damage,
                                                                                                 unholy_blight_points,
                                                                                                 rune_of_cinderglacier_active,
                                                                                                 rune_of_cinderglacier_active_count,
                                                                                                 rune_of_cinderglacier_damage,
                                                                                                 death,
                                                                                                 threat_of_thassarian_points,
                                                                                                 oh_input_lowend_weapon_damage,
                                                                                                 oh_input_topend_weapon_damage,
                                                                                                 oh_wep_damage_mod,
                                                                                                 sum_oh_bs_attacks,
                                                                                                 current_power,
                                                                                                 sum_bs_attacks,
                                                                                                 max_runic,
                                                                                                 trinket_hit_crit_tracker,
                                                                                                 sigil_of_haunted_dreams_timer,
                                                                                                 t9_active_timer,
                                                                                                 unholy_blight_amount,
                                                                                                 unholy_blight_timer)
                            rotation.extend(rotation_a)
                            rotation_time.extend(rotation_time_a)
                            rotation_status.extend(rotation_status_a)
                            rotation_damage.extend(rotation_damage_a)
                            continue
                                    
                    if pestilence_allow_reset == False:
                        if use_blood_strike_over_blood_boil == False: #Use Blood boil
                            able_to_cast, castable, castable1, castable2, just_used_death_rune, rune_cd_tracker = use_runes(
                                rune_cd_tracker, current_time, dots, improved_unholy_presence_points, dk_presence,
                                total_haste_rating, last_rune_change,
                                n_blood=1, n_frost=0, n_unholy=0, n_skip=0, n_reset_window=pestilence_reset_window)
                            if able_to_cast == 1:
                                rotation_a, rotation_time_a, rotation_status_a, rotation_damage_a, current_time, used_gcd, rune_cd_tracker, \
                                    current_power, rune_of_cinderglacier_active, rune_of_cinderglacier_active_count, dots, sum_it_attacks, km_procd, \
                                    deathchill_active, gcd, rune_of_cinderglacier_damage, blood_boil_damage = blood_boil_cast(
                                    spell_hit_total, increased_spell_hit, target_level, km_procd, deathchill_active,
                                    total_crit, increased_spell_crit, total_haste_rating,
                                    current_time, last_rune_change, castable, improved_unholy_presence_points,
                                    rune_grade_timer, dk_presence, input_gcd, rune_cd_tracker,
                                    current_ap, impurity_points, var_crit_amount, black_ice_points,
                                    might_of_mograine_points, blood_strikes_points, blood_boil_damage,
                                    dots, tundra_stalker_points, rage_of_rivendale_points, hysteria_active,
                                    tricksoftt_active,
                                    increased_spell_damage, increased_all_damage, sum_it_attacks, current_power,
                                    rune_of_cinderglacier_active,
                                    rune_of_cinderglacier_active_count, rune_of_cinderglacier_damage,
                                    amount_of_targets)
                                rotation.extend(rotation_a)
                                rotation_time.extend(rotation_time_a)
                                rotation_status.extend(rotation_status_a)
                                rotation_damage.extend(rotation_damage_a)
                                continue
                    
                    
                    if pestilence_allow_reset == False:
                        if use_blood_strike_over_blood_boil == True: #Use Blood Strike
                            # Blood Strike
                            able_to_cast, castable, castable1, castable2, just_used_death_rune, rune_cd_tracker = use_runes(
                                rune_cd_tracker, current_time, dots, improved_unholy_presence_points, dk_presence,
                                total_haste_rating, last_rune_change,
                                n_blood=1, n_frost=0, n_unholy=0, n_skip=0, n_reset_window=pestilence_reset_window)
                            if able_to_cast == 1:
                                rotation_a, rotation_time_a, rotation_status_a, rotation_damage_a, current_time, used_gcd, rune_cd_tracker, current_power, \
                                    dots, gcd, trinket_hit_crit_tracker, dancing_rune_weapon_damage, sigil_of_haunted_dreams_buff, sigil_of_haunted_dreams_timer, \
                                    total_crit, t9_bonus, t9_cd_timer, t9_active_timer, bonus_loop_str, increased_all_damage, desolation_buff_timer, sudden_doom_damage, \
                                    unholy_blight_amount, unholy_blight_timer, rune_of_cinderglacier_damage, rune_of_cinderglacier_active_count, \
                                    rune_of_cinderglacier_active, sum_bs_attacks = blood_strike_cast(tanking, H2,
                                                                                                     hit_from_gear,
                                                                                                     hit_from_other,
                                                                                                     target_level,
                                                                                                     all_expertise_dodge,
                                                                                                     all_expertise_parry,
                                                                                                     total_crit,
                                                                                                     annihilation_talent_points,
                                                                                                     increased_phy_crit,
                                                                                                     subversion_points,
                                                                                                     current_armor,
                                                                                                     armor_penetration,
                                                                                                     mh_input_lowend_weapon_damage,
                                                                                                     mh_input_topend_weapon_damage,
                                                                                                     current_ap,
                                                                                                     attack_damage_normalization,
                                                                                                     total_haste_rating,
                                                                                                     current_time,
                                                                                                     last_rune_change,
                                                                                                     castable,
                                                                                                     dk_presence,
                                                                                                     improved_unholy_presence_points,
                                                                                                     dots, input_gcd,
                                                                                                     dancing_rune_weapon_points,
                                                                                                     dancing_rune_weapon_active,
                                                                                                     darkruned_battlegear_four_set,
                                                                                                     var_crit_amount,
                                                                                                     guile_of_gorefiend_points,
                                                                                                     tundra_stalker_points,
                                                                                                     blood_of_the_north_points,
                                                                                                     t9_tank_two_set,
                                                                                                     rage_of_rivendale_points,
                                                                                                     blood_strikes_points,
                                                                                                     might_of_mograine_points,
                                                                                                     hysteria_active,
                                                                                                     tricksoftt_active,
                                                                                                     increased_physical_damage,
                                                                                                     increased_all_damage,
                                                                                                     dancing_rune_weapon_damage_multi,
                                                                                                     dancing_rune_weapon_damage,
                                                                                                     just_used_death_rune,
                                                                                                     rune_cd_tracker,
                                                                                                     reaping_points,
                                                                                                     sigil_of_haunted_dreams,
                                                                                                     sigil_of_haunted_dreams_buff,
                                                                                                     t9_dps_two_set,
                                                                                                     t9_bonus,
                                                                                                     t9_cd_timer,
                                                                                                     bonus_loop_str,
                                                                                                     desolation_points,
                                                                                                     desolation_buff,
                                                                                                     desolation_buff_timer,
                                                                                                     sudden_doom_points,
                                                                                                     sigil_of_vengeful_heart,
                                                                                                     spell_hit_total,
                                                                                                     increased_spell_hit,
                                                                                                     darkruned_battlegear_two_set,
                                                                                                     increased_spell_crit,
                                                                                                     impurity_points,
                                                                                                     sigil_of_the_wild_buck,
                                                                                                     black_ice_points,
                                                                                                     glyph_death_coil,
                                                                                                     morbitity_points,
                                                                                                     increased_spell_damage,
                                                                                                     sudden_doom_damage,
                                                                                                     unholy_blight_points,
                                                                                                     rune_of_cinderglacier_active,
                                                                                                     rune_of_cinderglacier_active_count,
                                                                                                     rune_of_cinderglacier_damage,
                                                                                                     death,
                                                                                                     threat_of_thassarian_points,
                                                                                                     oh_input_lowend_weapon_damage,
                                                                                                     oh_input_topend_weapon_damage,
                                                                                                     oh_wep_damage_mod,
                                                                                                     sum_oh_bs_attacks,
                                                                                                     current_power,
                                                                                                     sum_bs_attacks,
                                                                                                     max_runic,
                                                                                                     trinket_hit_crit_tracker,
                                                                                                     sigil_of_haunted_dreams_timer,
                                                                                                     t9_active_timer,
                                                                                                     unholy_blight_amount,
                                                                                                     unholy_blight_timer)
                                rotation.extend(rotation_a)
                                rotation_time.extend(rotation_time_a)
                                rotation_status.extend(rotation_status_a)
                                rotation_damage.extend(rotation_damage_a)
                                continue

            if dk_spec == 1: # Unholy Spec
                time_to_dnd = death_and_decay_cd - current_time
                if time_to_dnd < 0:
                    time_to_dnd = 0
                if amount_of_targets != 0: #Unholy Fight Logic Is Only 1 thing, but with changed inside
                    if deathchill_points == 1:
                        if deathchill_active == True:
                            if deathchill_timer < current_time:
                                deathchill_active = False
                        if deathchill_cd < current_time:
                            if dots[0] > current_time:
                                if dots[1] > current_time:
                                    rotation.append("Death Chill")
                                    rotation_time.append(current_time)
                                    rotation_status.append("Active")
                                    rotation_damage.append(0)
                                    deathchill_active = True
                                    deathchill_cd = current_time + 120
                                    deathchill_timer = current_time + 30
                    if ua_buff_timer >= current_time:
                        if ua_used == False:
                            ua_used = True
                            bonus_loop_str += ua_strength_increase_amount
                    elif ua_buff_timer < current_time:
                        ua_used = False
                        bonus_loop_str -= ua_strength_increase_amount
                        ua_strength_increase_amount = 0
                    if skip_erw == False:
                        if all_rune_check(blood, current_time, rune_cd_tracker) == 3:  # Empowered Rune Weapon
                            if all_rune_check(frost, current_time, rune_cd_tracker) == 3:
                                if all_rune_check(unholy, current_time, rune_cd_tracker) == 3:
                                    if all_rune_check(death, current_time, rune_cd_tracker) == 3:
                                        if all_rune_check(death_f, current_time, rune_cd_tracker) == 3:
                                            if all_rune_check(death_u, current_time, rune_cd_tracker) == 3:
                                                if erw_cd_timer < current_time:
                                                    if rune_cd_tracker[0] != 10000:
                                                        rune_reset_1 = 0
                                                    else:
                                                        rune_reset_1 = 6
                                                    if rune_cd_tracker[1] != 10000:
                                                        rune_reset_2 = 1
                                                    else:
                                                        rune_reset_2 = 7
                                                    if rune_cd_tracker[2] != 10000:
                                                        rune_reset_3 = 2
                                                    else:
                                                        rune_reset_3 = 8
                                                    if rune_cd_tracker[3] != 10000:
                                                        rune_reset_4 = 3
                                                    else:
                                                        rune_reset_4 = 9
                                                    if rune_cd_tracker[4] != 10000:
                                                        rune_reset_5 = 4
                                                    else:
                                                        rune_reset_5 = 10
                                                    if rune_cd_tracker[5] != 10000:
                                                        rune_reset_6 = 5
                                                    else:
                                                        rune_reset_6 = 11
                                                    rotation.append("Empowered Rune Weapon")
                                                    rotation_time.append(current_time)
                                                    rotation_status.append("Active")
                                                    rotation_damage.append(0)
                                                    current_power = runic_power(25, current_power, max_runic)
                                                    # rune_cd_tracker = [0, 0, 0, 0, 0, 0, 10000, 10000, 10000, 10000, 10000, 10000]
                                                    rune_cd_tracker[rune_reset_1] = 0
                                                    rune_cd_tracker[rune_reset_2] = 0
                                                    rune_cd_tracker[rune_reset_3] = 0
                                                    rune_cd_tracker[rune_reset_4] = 0
                                                    rune_cd_tracker[rune_reset_5] = 0
                                                    rune_cd_tracker[rune_reset_6] = 0
                                                    erw_cd_timer = current_time + 300
                                                    continue
                    if current_time >= horn: #Horn       #Prob set all of these below after like if amount_of_targets >= 1, else run a sim w/ howling blast and stuff
                        if dk_presence != 2:
                            gcd = input_gcd / (1 + haste_percentage)
                            if gcd < 1:
                                gcd = 1
                        current_power = runic_power(10, current_power, max_runic) 
                        rotation.append("Horn of Winter")
                        rotation_time.append(current_time)
                        rotation_status.append("Active")
                        rotation_damage.append(0)
                        horn += horn_timer
                        current_time += gcd
                        used_gcd = True
                        continue

                    if dots[0] > current_time: #Use Blood Tap
                        if dots[1] > current_time:
                            castable = all_rune_check(blood, current_time, rune_cd_tracker)
                            if castable == 3:
                                if rune_cd_tracker[6] == 10000:
                                    if rune_cd_tracker[7] == 10000:
                                        if blood_tap_cd <= current_time:
                                            blood_tap_cd = current_time + 60
                                            rotation.append("Blood Tap")
                                            rotation_time.append(current_time)
                                            rotation_status.append("Active")
                                            rotation_damage.append(0)
                                            haste_percentage = (total_haste_rating / 25.21) / 100 #Returns a result of 0 - 1 for 0% - 100%
                                            haste_rune_cd = rune_grade_timer(current_time, last_rune_change[castable], last_rune_change[castable+6])
                                            if improved_unholy_presence_points != 0:
                                                if dk_presence == 2:
                                                    haste_rune_cd = haste_rune_cd - (haste_rune_cd * ((improved_unholy_presence_points * 5) / 100))
                                            if rune_cd_tracker[0] < rune_cd_tracker[1]:
                                                castable = 0
                                                death_castable = castable + death
                                                haste_percentage = (total_haste_rating / 25.21) / 100 #Returns a result of 0 - 1 for 0% - 100%
                                                haste_rune_cd = 0
                                                rune_cd_tracker[death_castable] = rune_cd(haste_rune_cd, current_time)
                                                rune_cd_tracker[castable] = 10000 
                                            else:
                                                castable = 1
                                                death_castable = castable + death
                                                haste_percentage = (total_haste_rating / 25.21) / 100 #Returns a result of 0 - 1 for 0% - 100%
                                                haste_rune_cd = 0
                                                rune_cd_tracker[death_castable] = rune_cd(haste_rune_cd, current_time)
                                                rune_cd_tracker[castable] = 10000 
                    if bone_shield_points == 1:  #Activate Bone Shield
                        if bone_shield_active == True:
                            if random.randint(0, 100) > 100 - bone_shield_bone_consumption_rate:
                                if bone_shield_last_damage + 1 < current_time:
                                    bone_shield_stacks -= 1
                                    bone_shield_last_damage = current_time
                                    if bone_shield_stacks == 0:
                                        bone_shield_active = False
                                        rotation.append("Bone Shield")
                                        rotation_time.append(current_time)
                                        rotation_status.append("Fades")
                                        rotation_damage.append(0)
                            bone_shield_last_damage = current_time
                            if current_time > bone_shield_length:
                                bone_shield_active = False
                                rotation.append("Bone Shield")
                                rotation_time.append(current_time)
                                rotation_status.append("Fades")
                                rotation_damage.append(0)
                        if bone_shield_active == False:
                            if bone_shield_cd < current_time:
                                able_to_cast, castable, castable1, castable2, just_used_death_rune, rune_cd_tracker = use_runes(
                                    rune_cd_tracker, current_time, dots, improved_unholy_presence_points, dk_presence,
                                    total_haste_rating, last_rune_change,
                                    n_blood=0, n_frost=0, n_unholy=1, n_skip=1, n_reset_window=time_to_dnd)
                                if able_to_cast == 1:
                                    bone_shield_cd = current_time + unbreak_armor_bone_shield_vamp_blood_cd_time
                                    bone_shield_length = current_time + 300
                                    bone_shield_stacks = 3 + glyph_of_bone_shield
                                    bone_shield_active = True
                                    current_power = runic_power(10, current_power, max_runic) 
                                    rotation.append("Bone Shield")
                                    rotation_time.append(current_time)
                                    rotation_status.append("Active")
                                    rotation_damage.append(0)
                                    current_time += gcd
                                    used_gcd = True
                                    continue
                                
                                
                    if gargoyle_stance_dance == True: #Removing Stancedance for Garg
                        if gargoyle_cd > 1:
                            if dk_presence != garg_dk_presence:
                                if garg_dk_presence == 0:
                                    able_to_cast, castable, castable1, castable2, just_used_death_rune, rune_cd_tracker = use_runes(
                                        rune_cd_tracker, current_time, dots, improved_unholy_presence_points,
                                        dk_presence,
                                        total_haste_rating, last_rune_change,
                                        n_blood=1, n_frost=0, n_unholy=0, n_skip=1, n_reset_window=time_to_dnd)
                                    if able_to_cast == 1:
                                        dk_presence = 0
                                        rotation.append("Blood Presence")
                                        rotation_time.append(current_time)
                                        rotation_status.append("Active")
                                        rotation_damage.append(0)
                                elif garg_dk_presence == 1:
                                    able_to_cast, castable, castable1, castable2, just_used_death_rune, rune_cd_tracker = use_runes(
                                        rune_cd_tracker, current_time, dots, improved_unholy_presence_points,
                                        dk_presence,
                                        total_haste_rating, last_rune_change,
                                        n_blood=0, n_frost=1, n_unholy=0, n_skip=1, n_reset_window=time_to_dnd)
                                    if able_to_cast == 1:
                                        dk_presence = 1
                                        rotation.append("Frost Presence")
                                        rotation_time.append(current_time)
                                        rotation_status.append("Active")
                                        rotation_damage.append(0)
                    if gargoyle_use_timer < current_time: #Garg
                        if gargoyle_cd < current_time:
                            if gargoyle_stance_dance == True:
                                if dk_presence != 2: #Garg stancedance
                                    able_to_cast, castable, castable1, castable2, just_used_death_rune, rune_cd_tracker = use_runes(
                                        rune_cd_tracker, current_time, dots, improved_unholy_presence_points,
                                        dk_presence,
                                        total_haste_rating, last_rune_change,
                                        n_blood=0, n_frost=0, n_unholy=1)
                                    if able_to_cast == 1:
                                        garg_dk_presence = dk_presence
                                        dk_presence = 2
                                        rotation.append("Unholy Presence")
                                        rotation_time.append(current_time)
                                        rotation_status.append("Active")
                                        rotation_damage.append(0)
                            if current_power >= 60: 
                                if gargoyle_stance_dance == True:
                                    if dk_presence != 2: #Garg stancedance
                                        able_to_cast, castable, castable1, castable2, just_used_death_rune, rune_cd_tracker = use_runes(
                                            rune_cd_tracker, current_time, dots, improved_unholy_presence_points,
                                            dk_presence,
                                            total_haste_rating, last_rune_change,
                                            n_blood=0, n_frost=0, n_unholy=1)
                                        if able_to_cast == 1:
                                            garg_dk_presence = dk_presence
                                            dk_presence = 2
                                            rotation.append("Unholy Presence")
                                            rotation_time.append(current_time)
                                            rotation_status.append("Active")
                                            rotation_damage.append(0)
                                if gargoyle_stance_dance == False or dk_presence == 2:
                                    rotation_a, rotation_time_a, rotation_status_a, rotation_damage_a, current_time, used_gcd, current_power, gcd, gargoyle_cd, garg_last_damage_cast, garg_damage, \
                                        gary_active, garg_summon_time, garg_ap = gargoyle_cast(spell_hit_total, increased_spell_hit, target_level, total_crit, increased_spell_crit, current_time, melee_haste_bonus2, melee_haste_bonus3, melee_haste_bonus4,
               dk_presence, input_gcd, current_ap, gcd, used_gcd, var_crit_amount, black_ice_points, max_runic, castable, melee_haste_bonus, gargoyle_cd, garg_damage,
               current_power, garg_ap, garg_summon_time, garg_last_damage_cast, total_haste_rating, last_rune_change, improved_unholy_presence_points, personal_buff_orc_pet_damage,
               initial_cast = True)
                                    rotation.extend(rotation_a)
                                    rotation_time.extend(rotation_time_a)
                                    rotation_status.extend(rotation_status_a)
                                    rotation_damage.extend(rotation_damage_a)
                                    continue
                    #Should also make this dynamic, aka if procs active then cast garg, else wait for timer
                    #you want 3 buffs, greatness (if equipped), fallen crusader and the sigil if equipped
                    # TODO: need to add cast army and not just pre-casted army
                    if ghoul_frenzy_points == 1:
                        if dots[0] > current_time:
                            if dots[1] > current_time:
                                if ghoul_frenzy_buff_timer < current_time:
                                    able_to_cast, castable, castable1, castable2, just_used_death_rune, rune_cd_tracker = use_runes(
                                        rune_cd_tracker, current_time, dots, improved_unholy_presence_points,
                                        dk_presence,
                                        total_haste_rating, last_rune_change,
                                        n_blood=0, n_frost=0, n_unholy=1, n_skip=1, n_reset_window=time_to_dnd)
                                    if able_to_cast == 1:
                                        #Rune Hit
                                        haste_percentage = (total_haste_rating / 25.21) / 100 #Returns a result of 0 - 1 for 0% - 100%
                                        haste_rune_cd = rune_grade_timer(current_time, last_rune_change[castable], last_rune_change[castable+6])
                                        if improved_unholy_presence_points != 0:
                                            if dk_presence == 2:
                                                haste_rune_cd = haste_rune_cd - (haste_rune_cd * ((improved_unholy_presence_points * 5) / 100))
                                        if dk_presence != 2:
                                            gcd = input_gcd / (1 + haste_percentage)
                                            if gcd < 1:
                                                gcd = 1
                                        ghoul_frenzy_buff_timer = current_time + 30
                                        rune_cd_tracker[castable] = rune_cd(haste_rune_cd, current_time)
                                        current_power = runic_power(10, current_power, max_runic) 
                                        rotation.append("Ghoul Frenzy")
                                        rotation_time.append(current_time)
                                        rotation_status.append("Active")
                                        rotation_damage.append(0)
                                        current_time += gcd
                                        used_gcd = True
                                        continue
                    if current_time < 10:  # Horn
                        if dots[0] <= current_time:  # Cast Icy Touch First Global
                            able_to_cast, castable, castable1, castable2, just_used_death_rune, rune_cd_tracker = use_runes(
                                rune_cd_tracker, current_time, dots, improved_unholy_presence_points, dk_presence,
                                total_haste_rating, last_rune_change,
                                n_blood=0, n_frost=1, n_unholy=0)
                            if able_to_cast == 1:
                                rotation_a, rotation_time_a, rotation_status_a, rotation_damage_a, current_time, used_gcd, rune_cd_tracker, last_dot0_damage, \
                                    current_power, rune_of_cinderglacier_active, rune_of_cinderglacier_active_count, dots, sum_it_attacks, km_procd, \
                                    deathchill_active, gcd, rune_of_cinderglacier_damage = icy_touch_cast(
                                    spell_hit_total, increased_spell_hit, target_level, km_procd, deathchill_active,
                                    total_crit, rime_points, increased_spell_crit, total_haste_rating,
                                    current_time, last_rune_change, castable, improved_unholy_presence_points,
                                    rune_grade_timer, dk_presence, input_gcd, rune_cd_tracker,
                                    sigil_of_the_frozen_conscience, current_ap, impurity_points, var_crit_amount,
                                    improved_icy_touch_points, black_ice_points, glacier_rot_points,
                                    dots, tundra_stalker_points, merciless_combat_points, rage_of_rivendale_points,
                                    hysteria_active, tricksoftt_active,
                                    fight_length, fight_sub_35percent, increased_spell_damage, increased_all_damage,
                                    sum_it_attacks, current_power, max_runic,
                                    chill_of_the_grave_points, dot_length, crypt_fever_points,
                                    rune_of_cinderglacier_active, rune_of_cinderglacier_active_count,
                                    rune_of_cinderglacier_damage)
                                rotation.extend(rotation_a)
                                rotation_time.extend(rotation_time_a)
                                rotation_status.extend(rotation_status_a)
                                rotation_damage.extend(rotation_damage_a)
                                continue

                        if dots[1] <= current_time:  # Plague Strike, Second Global
                            able_to_cast, castable, castable1, castable2, just_used_death_rune, rune_cd_tracker = use_runes(
                                rune_cd_tracker, current_time, dots, improved_unholy_presence_points, dk_presence,
                                total_haste_rating, last_rune_change,
                                n_blood=0, n_frost=0, n_unholy=1)
                            if able_to_cast == 1:
                                rotation_a, rotation_time_a, rotation_status_a, rotation_damage_a, current_time, used_gcd, rune_cd_tracker, last_dot1_damage, \
                                    current_power, dots, gcd, trinket_hit_crit_tracker, sum_ps_attacks, sigil_of_strife_active, sigil_of_strife_timer, bonus_loop_ap, \
                                    sum_oh_ps_attacks, dancing_rune_weapon_damage = plague_strike_cast(tanking, H2,
                                                                                                       hit_from_gear,
                                                                                                       hit_from_other,
                                                                                                       target_level,
                                                                                                       all_expertise_dodge,
                                                                                                       all_expertise_parry,
                                                                                                       total_crit,
                                                                                                       annihilation_talent_points,
                                                                                                       increased_phy_crit,
                                                                                                       scourgeborne_plate_two_set,
                                                                                                       vicious_strikes_points,
                                                                                                       current_armor,
                                                                                                       armor_penetration,
                                                                                                       mh_input_lowend_weapon_damage,
                                                                                                       mh_input_topend_weapon_damage,
                                                                                                       attack_damage_normalization,
                                                                                                       current_ap,
                                                                                                       total_haste_rating,
                                                                                                       current_time,
                                                                                                       last_rune_change,
                                                                                                       castable,
                                                                                                       improved_unholy_presence_points,
                                                                                                       dk_presence,
                                                                                                       input_gcd,
                                                                                                       dancing_rune_weapon_points,
                                                                                                       dancing_rune_weapon_active,
                                                                                                       var_crit_amount,
                                                                                                       tundra_stalker_points,
                                                                                                       dots,
                                                                                                       outbreak_points,
                                                                                                       rage_of_rivendale_points,
                                                                                                       glyph_plague_strike,
                                                                                                       hysteria_active,
                                                                                                       tricksoftt_active,
                                                                                                       increased_physical_damage,
                                                                                                       increased_all_damage,
                                                                                                       dancing_rune_weapon_damage_multi,
                                                                                                       dancing_rune_weapon_damage,
                                                                                                       dot_length,
                                                                                                       crypt_fever_points,
                                                                                                       threat_of_thassarian_points,
                                                                                                       oh_input_lowend_weapon_damage,
                                                                                                       oh_input_topend_weapon_damage,
                                                                                                       sum_oh_ps_attacks,
                                                                                                       oh_wep_damage_mod,
                                                                                                       rune_cd_tracker,
                                                                                                       sum_ps_attacks,
                                                                                                       current_power,
                                                                                                       max_runic,
                                                                                                       dirge_points,
                                                                                                       sigil_of_strife,
                                                                                                       bonus_loop_ap,
                                                                                                       sigil_of_strife_amount,
                                                                                                       sigil_of_strife_active,
                                                                                                       sigil_of_strife_timer,
                                                                                                       trinket_hit_crit_tracker)
                                rotation.extend(rotation_a)
                                rotation_time.extend(rotation_time_a)
                                rotation_status.extend(rotation_status_a)
                                rotation_damage.extend(rotation_damage_a)
                                continue
                    if death_and_decay_cd < current_time:
                        able_to_cast, castable, castable1, castable2, just_used_death_rune, rune_cd_tracker = use_runes(
                            rune_cd_tracker, current_time, dots, improved_unholy_presence_points, dk_presence,
                            total_haste_rating, last_rune_change,
                            n_blood=1, n_frost=1, n_unholy=1)
                        if able_to_cast == 1:
                            rotation_a, rotation_time_a, rotation_status_a, rotation_damage_a, current_time, used_gcd, current_power, gcd, \
                                death_and_decay_damage, death_and_decay_last_damage_time, death_n_decay_apply_time, death_and_decay_cd = death_and_decay_cast(
                                spell_hit_total, increased_spell_hit, target_level, total_crit, increased_spell_crit,
                                current_time,
                                dk_presence, input_gcd, dots, haste_percentage, current_ap, impurity_points, gcd,
                                used_gcd, death_and_decay_cd, death_and_decay_cd_length,
                                var_crit_amount, black_ice_points, rage_of_rivendale_points, hysteria_active,
                                tricksoftt_active, increased_spell_damage, max_runic, death_n_decay_apply_time,
                                increased_all_damage, current_power, glyph_death_and_decay, scourgelords_plate_two_set,
                                death_and_decay_damage, death_and_decay_last_damage_time,
                                initial_hit=True)
                            rotation.extend(rotation_a)
                            rotation_time.extend(rotation_time_a)
                            rotation_status.extend(rotation_status_a)
                            rotation_damage.extend(rotation_damage_a)
                            for dnd_multi in range(1, amount_of_targets):
                                rotation_a, rotation_time_a, rotation_status_a, rotation_damage_a, current_time, used_gcd, current_power, gcd, \
        death_and_decay_damage, death_and_decay_last_damage_time, death_n_decay_apply_time, death_and_decay_cd = death_and_decay_cast(spell_hit_total, increased_spell_hit, target_level, total_crit, increased_spell_crit, current_time,
               dk_presence, input_gcd, dots, haste_percentage, current_ap, impurity_points, gcd, used_gcd, death_and_decay_cd, death_and_decay_cd_length, 
               var_crit_amount, black_ice_points, rage_of_rivendale_points, hysteria_active, tricksoftt_active, increased_spell_damage, max_runic, death_n_decay_apply_time,
               increased_all_damage, current_power, glyph_death_and_decay, scourgelords_plate_two_set, death_and_decay_damage, death_and_decay_last_damage_time,
               initial_hit = False)
                                rotation.extend(rotation_a)
                                rotation_time.extend(rotation_time_a)
                                rotation_status.extend(rotation_status_a)
                                rotation_damage.extend(rotation_damage_a)
                            continue
                    #Cast Icy Touch First Global
                    able_to_cast, castable, castable1, castable2, just_used_death_rune, rune_cd_tracker = use_runes(
                        rune_cd_tracker, current_time, dots, improved_unholy_presence_points, dk_presence,
                        total_haste_rating, last_rune_change,
                        n_blood=0, n_frost=1, n_unholy=0, n_skip=1, n_reset_window=time_to_dnd)
                    if able_to_cast == 1:
                        rotation_a, rotation_time_a, rotation_status_a, rotation_damage_a, current_time, used_gcd, rune_cd_tracker, last_dot0_damage, \
                            current_power, rune_of_cinderglacier_active, rune_of_cinderglacier_active_count, dots, sum_it_attacks, km_procd, \
                            deathchill_active, gcd, rune_of_cinderglacier_damage = icy_touch_cast(spell_hit_total, increased_spell_hit, target_level, km_procd, deathchill_active,
                            total_crit, rime_points, increased_spell_crit, total_haste_rating, current_time, last_rune_change, castable,
                            improved_unholy_presence_points, rune_grade_timer, dk_presence, input_gcd, rune_cd_tracker,
                            sigil_of_the_frozen_conscience, current_ap, impurity_points, var_crit_amount, improved_icy_touch_points, black_ice_points,
                            glacier_rot_points, dots, tundra_stalker_points, merciless_combat_points, rage_of_rivendale_points, hysteria_active,
                            tricksoftt_active, fight_length, fight_sub_35percent, increased_spell_damage, increased_all_damage, sum_it_attacks,
                            current_power, max_runic, chill_of_the_grave_points, dot_length, crypt_fever_points, rune_of_cinderglacier_active,
                            rune_of_cinderglacier_active_count, rune_of_cinderglacier_damage)
                        rotation.extend(rotation_a)
                        rotation_time.extend(rotation_time_a)
                        rotation_status.extend(rotation_status_a)
                        rotation_damage.extend(rotation_damage_a)
                        continue

                    # Plague Strike, Second Global
                    able_to_cast, castable, castable1, castable2, just_used_death_rune, rune_cd_tracker = use_runes(
                        rune_cd_tracker, current_time, dots, improved_unholy_presence_points,
                        dk_presence,
                        total_haste_rating, last_rune_change,
                        n_blood=0, n_frost=0, n_unholy=1, n_skip=1, n_reset_window=time_to_dnd)
                    if able_to_cast == 1:
                        rotation_a, rotation_time_a, rotation_status_a, rotation_damage_a, current_time, used_gcd, rune_cd_tracker, last_dot1_damage, \
                            current_power, dots, gcd, trinket_hit_crit_tracker, sum_ps_attacks, sigil_of_strife_active, sigil_of_strife_timer, bonus_loop_ap, \
                            sum_oh_ps_attacks, dancing_rune_weapon_damage = plague_strike_cast(tanking,
                                                                                               H2,
                                                                                               hit_from_gear,
                                                                                               hit_from_other,
                                                                                               target_level,
                                                                                               all_expertise_dodge,
                                                                                               all_expertise_parry,
                                                                                               total_crit,
                                                                                               annihilation_talent_points,
                                                                                               increased_phy_crit,
                                                                                               scourgeborne_plate_two_set,
                                                                                               vicious_strikes_points,
                                                                                               current_armor,
                                                                                               armor_penetration,
                                                                                               mh_input_lowend_weapon_damage,
                                                                                               mh_input_topend_weapon_damage,
                                                                                               attack_damage_normalization,
                                                                                               current_ap,
                                                                                               total_haste_rating,
                                                                                               current_time,
                                                                                               last_rune_change,
                                                                                               castable,
                                                                                               improved_unholy_presence_points,
                                                                                               dk_presence,
                                                                                               input_gcd,
                                                                                               dancing_rune_weapon_points,
                                                                                               dancing_rune_weapon_active,
                                                                                               var_crit_amount,
                                                                                               tundra_stalker_points,
                                                                                               dots,
                                                                                               outbreak_points,
                                                                                               rage_of_rivendale_points,
                                                                                               glyph_plague_strike,
                                                                                               hysteria_active,
                                                                                               tricksoftt_active,
                                                                                               increased_physical_damage,
                                                                                               increased_all_damage,
                                                                                               dancing_rune_weapon_damage_multi,
                                                                                               dancing_rune_weapon_damage,
                                                                                               dot_length,
                                                                                               crypt_fever_points,
                                                                                               threat_of_thassarian_points,
                                                                                               oh_input_lowend_weapon_damage,
                                                                                               oh_input_topend_weapon_damage,
                                                                                               sum_oh_ps_attacks,
                                                                                               oh_wep_damage_mod,
                                                                                               rune_cd_tracker,
                                                                                               sum_ps_attacks,
                                                                                               current_power,
                                                                                               max_runic,
                                                                                               dirge_points,
                                                                                               sigil_of_strife,
                                                                                               bonus_loop_ap,
                                                                                               sigil_of_strife_amount,
                                                                                               sigil_of_strife_active,
                                                                                               sigil_of_strife_timer,
                                                                                               trinket_hit_crit_tracker)
                        rotation.extend(rotation_a)
                        rotation_time.extend(rotation_time_a)
                        rotation_status.extend(rotation_status_a)
                        rotation_damage.extend(rotation_damage_a)
                        continue


                    if scourge_strike_points == 1 and (sigil_of_virulence ==  True or sigil_of_hanged_man == True) and (sigil_of_virulence_buff == False and sigil_of_hanged_man_buff == False):
                        able_to_cast, castable, castable1, castable2, just_used_death_rune, rune_cd_tracker = use_runes(
                            rune_cd_tracker, current_time, dots, improved_unholy_presence_points, dk_presence,
                            total_haste_rating, last_rune_change,
                            n_blood=0, n_frost=1, n_unholy=1, n_skip=0, n_reset_window=0)
                        if able_to_cast == 1:
                            rotation_a, rotation_time_a, rotation_status_a, rotation_damage_a, gcd, dots, \
        trinket_hit_crit_tracker, sigil_of_virulence_timer, sigil_of_virulence_buff, bonus_loop_str, sigil_of_hanged_man_buff, \
        sigil_of_hanged_man_count, rune_cd_tracker, current_time, used_gcd, current_power, sum_scourge_strikes_attacks, \
         bonus_loop_str, sigil_of_virulence_buff, sigil_of_hanged_man_count, scourge_strike_dot0_counter, scourge_strike_dot1_counter, \
                                sigil_of_hanged_man_timer = scourge_strike_cast(tanking, H2, hit_from_gear, hit_from_other, target_level, all_expertise_dodge, all_expertise_parry, total_crit,
               annihilation_talent_points, increased_phy_crit, scourgeborne_battlegear_two_set, subversion_points, current_armor, armor_penetration,
               mh_input_lowend_weapon_damage, mh_input_topend_weapon_damage, attack_damage_normalization, current_ap, total_haste_rating, current_time,
               castable, last_rune_change, dk_presence, improved_unholy_presence_points, input_gcd, dots, vicious_strikes_points, outbreak_points,
               darkruned_battlegear_four_set, var_crit_amount, rage_of_rivendale_points, sum_scourge_strikes_attacks, dirge_points, sigil_of_hanged_man_buff,
               scourgelords_battlegear_two_set, hysteria_active, tricksoftt_active, increased_physical_damage, glyph_scourge_strike,
               increased_all_damage, sigil_of_virulence, sigil_of_virulence_buff, scourge_strike_dot0_counter, scourge_strike_dot1_counter,
               bonus_loop_str, sigil_of_hanged_man, sigil_of_hanged_man_count, castable1, sigil_of_awareness, gcd, sigil_of_hanged_man_timer, 
               rune_cd_tracker, current_power, max_runic, scourgeborne_battlegear_four_set, sigil_of_virulence_timer, trinket_hit_crit_tracker)
                            rotation.extend(rotation_a)
                            rotation_time.extend(rotation_time_a)
                            rotation_status.extend(rotation_status_a)
                            rotation_damage.extend(rotation_damage_a)
                            continue
                    
                
                                

                if (multiple_adds_timer < current_time or multiple_adds_timer_bp < current_time) and (dots[0] - pestilence_reset_window) > 0 and (dots[0] - pestilence_reset_window) < current_time and (dots[1] - pestilence_reset_window) > 0 and (dots[1] - pestilence_reset_window) < current_time and amount_of_targets > 1: #Spread Pest, if not on adds
                    able_to_cast, castable, castable1, castable2, just_used_death_rune, rune_cd_tracker = use_runes(
                        rune_cd_tracker, current_time, dots, improved_unholy_presence_points, dk_presence,
                        total_haste_rating, last_rune_change,
                        n_blood=1, n_frost=0, n_unholy=0, n_skip=1, n_reset_window=time_to_dnd)
                    if able_to_cast == 1:
                        rotation_a, rotation_time_a, rotation_status_a, rotation_damage_a, current_time, used_gcd, rune_cd_tracker, \
                            current_power, rune_of_cinderglacier_active, rune_of_cinderglacier_active_count, dots, sum_pest_attacks, \
                            gcd, rune_of_cinderglacier_damage, multiple_adds_timer, multiple_adds_timer_bp = pestilence_cast(
                            spell_hit_total, increased_spell_hit, target_level, total_crit, increased_spell_crit,
                            total_haste_rating, current_time, last_rune_change,
                            castable, improved_unholy_presence_points, dk_presence, input_gcd, rune_cd_tracker, dots,
                            dot_length, crypt_fever_points, multiple_adds_timer,
                            var_crit_amount, black_ice_points, tundra_stalker_points, rage_of_rivendale_points,
                            hysteria_active, tricksoftt_active, increased_spell_damage,
                            increased_all_damage, sum_pest_attacks, current_power, max_runic, blood_of_the_north_points,
                            just_used_death_rune, death, reaping_points,
                            rune_of_cinderglacier_active, rune_of_cinderglacier_active_count,
                            rune_of_cinderglacier_damage, pestilence_allow_reset, multiple_adds_timer_bp)
                        rotation.extend(rotation_a)
                        rotation_time.extend(rotation_time_a)
                        rotation_status.extend(rotation_status_a)
                        rotation_damage.extend(rotation_damage_a)
                        continue

                if use_blood_strike_over_blood_boil == True:
                    # Blood Strike
                    able_to_cast, castable, castable1, castable2, just_used_death_rune, rune_cd_tracker = use_runes(
                        rune_cd_tracker, current_time, dots, improved_unholy_presence_points, dk_presence,
                        total_haste_rating, last_rune_change,
                        n_blood=1, n_frost=0, n_unholy=0, n_skip=1, n_reset_window=time_to_dnd)
                    if able_to_cast == 1:
                        rotation_a, rotation_time_a, rotation_status_a, rotation_damage_a, current_time, used_gcd, rune_cd_tracker, current_power, \
                            dots, gcd, trinket_hit_crit_tracker, dancing_rune_weapon_damage, sigil_of_haunted_dreams_buff, sigil_of_haunted_dreams_timer, \
                            total_crit, t9_bonus, t9_cd_timer, t9_active_timer, bonus_loop_str, increased_all_damage, desolation_buff_timer, sudden_doom_damage, \
                            unholy_blight_amount, unholy_blight_timer, rune_of_cinderglacier_damage, rune_of_cinderglacier_active_count, \
                            rune_of_cinderglacier_active, sum_bs_attacks = blood_strike_cast(tanking, H2,
                                                                                             hit_from_gear,
                                                                                             hit_from_other,
                                                                                             target_level,
                                                                                             all_expertise_dodge,
                                                                                             all_expertise_parry,
                                                                                             total_crit,
                                                                                             annihilation_talent_points,
                                                                                             increased_phy_crit,
                                                                                             subversion_points,
                                                                                             current_armor,
                                                                                             armor_penetration,
                                                                                             mh_input_lowend_weapon_damage,
                                                                                             mh_input_topend_weapon_damage,
                                                                                             current_ap,
                                                                                             attack_damage_normalization,
                                                                                             total_haste_rating,
                                                                                             current_time,
                                                                                             last_rune_change,
                                                                                             castable, dk_presence,
                                                                                             improved_unholy_presence_points,
                                                                                             dots, input_gcd,
                                                                                             dancing_rune_weapon_points,
                                                                                             dancing_rune_weapon_active,
                                                                                             darkruned_battlegear_four_set,
                                                                                             var_crit_amount,
                                                                                             guile_of_gorefiend_points,
                                                                                             tundra_stalker_points,
                                                                                             blood_of_the_north_points,
                                                                                             t9_tank_two_set,
                                                                                             rage_of_rivendale_points,
                                                                                             blood_strikes_points,
                                                                                             might_of_mograine_points,
                                                                                             hysteria_active,
                                                                                             tricksoftt_active,
                                                                                             increased_physical_damage,
                                                                                             increased_all_damage,
                                                                                             dancing_rune_weapon_damage_multi,
                                                                                             dancing_rune_weapon_damage,
                                                                                             just_used_death_rune,
                                                                                             rune_cd_tracker,
                                                                                             reaping_points,
                                                                                             sigil_of_haunted_dreams,
                                                                                             sigil_of_haunted_dreams_buff,
                                                                                             t9_dps_two_set,
                                                                                             t9_bonus, t9_cd_timer,
                                                                                             bonus_loop_str,
                                                                                             desolation_points,
                                                                                             desolation_buff,
                                                                                             desolation_buff_timer,
                                                                                             sudden_doom_points,
                                                                                             sigil_of_vengeful_heart,
                                                                                             spell_hit_total,
                                                                                             increased_spell_hit,
                                                                                             darkruned_battlegear_two_set,
                                                                                             increased_spell_crit,
                                                                                             impurity_points,
                                                                                             sigil_of_the_wild_buck,
                                                                                             black_ice_points,
                                                                                             glyph_death_coil,
                                                                                             morbitity_points,
                                                                                             increased_spell_damage,
                                                                                             sudden_doom_damage,
                                                                                             unholy_blight_points,
                                                                                             rune_of_cinderglacier_active,
                                                                                             rune_of_cinderglacier_active_count,
                                                                                             rune_of_cinderglacier_damage,
                                                                                             death,
                                                                                             threat_of_thassarian_points,
                                                                                             oh_input_lowend_weapon_damage,
                                                                                             oh_input_topend_weapon_damage,
                                                                                             oh_wep_damage_mod,
                                                                                             sum_oh_bs_attacks,
                                                                                             current_power,
                                                                                             sum_bs_attacks,
                                                                                             max_runic,
                                                                                             trinket_hit_crit_tracker,
                                                                                             sigil_of_haunted_dreams_timer,
                                                                                             t9_active_timer,
                                                                                             unholy_blight_amount,
                                                                                             unholy_blight_timer)
                        rotation.extend(rotation_a)
                        rotation_time.extend(rotation_time_a)
                        rotation_status.extend(rotation_status_a)
                        rotation_damage.extend(rotation_damage_a)
                        continue
                if use_blood_strike_over_blood_boil == False: #Use Blood Boil
                    able_to_cast, castable, castable1, castable2, just_used_death_rune, rune_cd_tracker = use_runes(
                        rune_cd_tracker, current_time, dots, improved_unholy_presence_points, dk_presence,
                        total_haste_rating, last_rune_change,
                        n_blood=1, n_frost=0, n_unholy=0, n_skip=1, n_reset_window=time_to_dnd)
                    if able_to_cast == 1:
                        rotation_a, rotation_time_a, rotation_status_a, rotation_damage_a, current_time, used_gcd, rune_cd_tracker, \
                            current_power, rune_of_cinderglacier_active, rune_of_cinderglacier_active_count, dots, sum_it_attacks, km_procd, \
                            deathchill_active, gcd, rune_of_cinderglacier_damage, blood_boil_damage = blood_boil_cast(
                            spell_hit_total, increased_spell_hit, target_level, km_procd, deathchill_active,
                            total_crit, increased_spell_crit, total_haste_rating,
                            current_time, last_rune_change, castable, improved_unholy_presence_points,
                            rune_grade_timer, dk_presence, input_gcd, rune_cd_tracker,
                            current_ap, impurity_points, var_crit_amount, black_ice_points,
                            might_of_mograine_points, blood_strikes_points, blood_boil_damage,
                            dots, tundra_stalker_points, rage_of_rivendale_points, hysteria_active,
                            tricksoftt_active,
                            increased_spell_damage, increased_all_damage, sum_it_attacks, current_power,
                            rune_of_cinderglacier_active,
                            rune_of_cinderglacier_active_count, rune_of_cinderglacier_damage, amount_of_targets)
                        rotation.extend(rotation_a)
                        rotation_time.extend(rotation_time_a)
                        rotation_status.extend(rotation_status_a)
                        rotation_damage.extend(rotation_damage_a)
                        continue
                if current_power >= death_coil_cost:  # Death Coil
                    rotation_a, rotation_time_a, rotation_status_a, rotation_damage_a, current_time, used_gcd, rune_cd_tracker, \
                        current_power, rune_of_cinderglacier_active, rune_of_cinderglacier_active_count, dots, sum_pest_attacks, gcd, \
                        rune_of_cinderglacier_damage, multiple_adds_timer, unholy_blight_amount, unholy_blight_timer, death_coil_damage = death_coil_cast(
                        spell_hit_total, increased_spell_hit, target_level, total_crit, increased_spell_crit,
                        current_time, death_coil_cost, darkruned_battlegear_two_set, unholy_blight_amount,
                        unholy_blight_timer,
                        dk_presence, input_gcd, rune_cd_tracker, dots, multiple_adds_timer, haste_percentage,
                        current_ap, impurity_points, sigil_of_vengeful_heart, death_coil_damage,
                        var_crit_amount, black_ice_points, tundra_stalker_points, rage_of_rivendale_points,
                        hysteria_active, tricksoftt_active, increased_spell_damage,
                        increased_all_damage, sum_pest_attacks, current_power, max_runic,
                        sigil_of_the_wild_buck, glyph_death_coil, morbitity_points, unholy_blight_points,
                        rune_of_cinderglacier_active, rune_of_cinderglacier_active_count,
                        rune_of_cinderglacier_damage, free_dc=False)
                    rotation.extend(rotation_a)
                    rotation_time.extend(rotation_time_a)
                    rotation_status.extend(rotation_status_a)
                    rotation_damage.extend(rotation_damage_a)
                    continue


                    
            if dk_spec == 2: # Blood Spec
                if amount_of_targets == 1: #Single Target Fight - Blood
                    if deathchill_points == 1:
                        if deathchill_active == True:
                            if deathchill_timer < current_time:
                                deathchill_active = False
                        if deathchill_cd < current_time:
                            if dots[0] > current_time:
                                if dots[1] > current_time:
                                    rotation.append("Death Chill")
                                    rotation_time.append(current_time)
                                    rotation_status.append("Active")
                                    rotation_damage.append(0)
                                    deathchill_active = True
                                    deathchill_cd = current_time + 120
                                    deathchill_timer = current_time + 30
                    if ua_buff_timer >= current_time:
                        if ua_used == False:
                            ua_used = True
                            bonus_loop_str += ua_strength_increase_amount
                    elif ua_buff_timer < current_time:
                        ua_used = False
                        bonus_loop_str -= ua_strength_increase_amount
                        ua_strength_increase_amount = 0
                    if skip_erw == False:
                        if all_rune_check(blood, current_time, rune_cd_tracker) == 3:  # Empowered Rune Weapon
                            if all_rune_check(frost, current_time, rune_cd_tracker) == 3:
                                if all_rune_check(unholy, current_time, rune_cd_tracker) == 3:
                                    if all_rune_check(death, current_time, rune_cd_tracker) == 3:
                                        if all_rune_check(death_f, current_time, rune_cd_tracker) == 3:
                                            if all_rune_check(death_u, current_time, rune_cd_tracker) == 3:
                                                if erw_cd_timer < current_time:
                                                    if rune_cd_tracker[0] != 10000:
                                                        rune_reset_1 = 0
                                                    else:
                                                        rune_reset_1 = 6
                                                    if rune_cd_tracker[1] != 10000:
                                                        rune_reset_2 = 1
                                                    else:
                                                        rune_reset_2 = 7
                                                    if rune_cd_tracker[2] != 10000:
                                                        rune_reset_3 = 2
                                                    else:
                                                        rune_reset_3 = 8
                                                    if rune_cd_tracker[3] != 10000:
                                                        rune_reset_4 = 3
                                                    else:
                                                        rune_reset_4 = 9
                                                    if rune_cd_tracker[4] != 10000:
                                                        rune_reset_5 = 4
                                                    else:
                                                        rune_reset_5 = 10
                                                    if rune_cd_tracker[5] != 10000:
                                                        rune_reset_6 = 5
                                                    else:
                                                        rune_reset_6 = 11
                                                    rotation.append("Empowered Rune Weapon")
                                                    rotation_time.append(current_time)
                                                    rotation_status.append("Active")
                                                    rotation_damage.append(0)
                                                    current_power = runic_power(25, current_power, max_runic)
                                                    # rune_cd_tracker = [0, 0, 0, 0, 0, 0, 10000, 10000, 10000, 10000, 10000, 10000]
                                                    rune_cd_tracker[rune_reset_1] = 0
                                                    rune_cd_tracker[rune_reset_2] = 0
                                                    rune_cd_tracker[rune_reset_3] = 0
                                                    rune_cd_tracker[rune_reset_4] = 0
                                                    rune_cd_tracker[rune_reset_5] = 0
                                                    rune_cd_tracker[rune_reset_6] = 0
                                                    erw_cd_timer = current_time + 300
                                                    continue
                    if current_time >= horn: #Horn       #Prob set all of these below after like if amount_of_targets >= 1, else run a sim w/ howling blast and stuff
                        if dk_presence != 2:
                            gcd = input_gcd / (1 + haste_percentage)
                            if gcd < 1:
                                gcd = 1
                        current_power = runic_power(10, current_power, max_runic) 
                        rotation.append("Horn of Winter")
                        rotation_time.append(current_time)
                        rotation_status.append("Active")
                        rotation_damage.append(0)
                        horn += horn_timer
                        current_time += gcd
                        used_gcd = True
                        continue

                    if dots[0] > current_time: #Use Blood Tap
                        if dots[1] > current_time:
                            castable = all_rune_check(blood, current_time, rune_cd_tracker)
                            if castable == 3:
                                if rune_cd_tracker[6] == 10000:
                                    if rune_cd_tracker[7] == 10000:
                                        if blood_tap_cd <= current_time:
                                            blood_tap_cd = current_time + 60
                                            rotation.append("Blood Tap")
                                            rotation_time.append(current_time)
                                            rotation_status.append("Active")
                                            rotation_damage.append(0)
                                            haste_percentage = (total_haste_rating / 25.21) / 100 #Returns a result of 0 - 1 for 0% - 100%
                                            haste_rune_cd = rune_grade_timer(current_time, last_rune_change[castable], last_rune_change[castable+6])
                                            if improved_unholy_presence_points != 0:
                                                if dk_presence == 2:
                                                    haste_rune_cd = haste_rune_cd - (haste_rune_cd * ((improved_unholy_presence_points * 5) / 100))
                                            if rune_cd_tracker[0] < rune_cd_tracker[1]:
                                                castable = 0
                                                death_castable = castable + death
                                                haste_percentage = (total_haste_rating / 25.21) / 100 #Returns a result of 0 - 1 for 0% - 100%
                                                haste_rune_cd = 0
                                                rune_cd_tracker[death_castable] = rune_cd(haste_rune_cd, current_time)
                                                rune_cd_tracker[castable] = 10000 
                                            else:
                                                castable = 1
                                                death_castable = castable + death
                                                haste_percentage = (total_haste_rating / 25.21) / 100 #Returns a result of 0 - 1 for 0% - 100%
                                                haste_rune_cd = 0
                                                rune_cd_tracker[death_castable] = rune_cd(haste_rune_cd, current_time)
                                                rune_cd_tracker[castable] = 10000 
                                                
                    if skip_disease == False:
                        if dots[0] <= current_time: #Cast Icy Touch First Global
                            able_to_cast, castable, castable1, castable2, just_used_death_rune, rune_cd_tracker = use_runes(
                                rune_cd_tracker, current_time, dots, improved_unholy_presence_points, dk_presence,
                                total_haste_rating, last_rune_change,
                                n_blood=0, n_frost=1, n_unholy=0)
                            if able_to_cast == 1:
                                rotation_a, rotation_time_a, rotation_status_a, rotation_damage_a, current_time, used_gcd, rune_cd_tracker, last_dot0_damage, \
                                    current_power, rune_of_cinderglacier_active, rune_of_cinderglacier_active_count, dots, sum_it_attacks, km_procd, \
                                    deathchill_active, gcd, rune_of_cinderglacier_damage = icy_touch_cast(spell_hit_total, increased_spell_hit, target_level, km_procd, deathchill_active,
                                    total_crit, rime_points, increased_spell_crit, total_haste_rating, current_time, last_rune_change, castable,
                                    improved_unholy_presence_points, rune_grade_timer, dk_presence, input_gcd, rune_cd_tracker,
                                    sigil_of_the_frozen_conscience, current_ap, impurity_points, var_crit_amount, improved_icy_touch_points, black_ice_points,
                                    glacier_rot_points, dots, tundra_stalker_points, merciless_combat_points, rage_of_rivendale_points, hysteria_active,
                                    tricksoftt_active, fight_length, fight_sub_35percent, increased_spell_damage, increased_all_damage, sum_it_attacks,
                                    current_power, max_runic, chill_of_the_grave_points, dot_length, crypt_fever_points, rune_of_cinderglacier_active,
                                    rune_of_cinderglacier_active_count, rune_of_cinderglacier_damage)
                                rotation.extend(rotation_a)
                                rotation_time.extend(rotation_time_a)
                                rotation_status.extend(rotation_status_a)
                                rotation_damage.extend(rotation_damage_a)
                                continue

                        if dots[1] <= current_time: #Plague Strike, Second Global
                            castable = all_rune_check(unholy, current_time, rune_cd_tracker)
                            if castable == 3:
                                castable_death = all_rune_check(death, current_time, rune_cd_tracker)
                                castable_death_f = all_rune_check(death_f, current_time, rune_cd_tracker)
                                castable_death_u = all_rune_check(death_u, current_time, rune_cd_tracker)
                                if castable_death != 3:
                                    use_death_rune = True
                                    castable = castable_death
                                elif castable_death_f != 3:
                                    use_death_rune = True
                                    castable = castable_death_f
                                elif castable_death_u != 3:
                                    use_death_rune = True
                                    castable = castable_death_u
                            if castable != 3:       #Use Plague Strike as formula on how to do other attacks
                                if castable == 2: 
                                    castable = 0
                                if use_death_rune == True:
                                    use_death_rune = False
                                    if castable_death != 3:
                                        rune_cd_tracker[castable] = 0
                                        if castable_death == 2:
                                            castable_death = 0
                                        rune_cd_tracker[castable_death + 6] = 10000
                                    elif castable_death_f != 3:
                                        castable += 2
                                        rune_cd_tracker[castable] = 0
                                        if castable_death_f == 2:
                                            castable_death_f = 0
                                        rune_cd_tracker[castable_death_f + 8] = 10000
                                    elif castable_death_u != 3:
                                        castable += 4
                                        rune_cd_tracker[castable] = 0
                                        if castable_death_u == 2:
                                            castable_death_u = 0
                                        rune_cd_tracker[castable_death_u + 10] = 10000
                                else:
                                    use_death_rune = False
                                    castable += unholy
                                attack_table_results = attack_table(1, tanking, H2, True, False, hit_from_gear, hit_from_other, target_level, all_expertise_dodge, all_expertise_parry, total_crit, (annihilation_talent_points / 100 + increased_phy_crit + (scourgeborne_plate_two_set / 100) + ((vicious_strikes_points * 3) / 100)))
                                armor_red_amount = dam_reduc(current_armor, armor_penetration, target_level)
                                wep_roll = weapon_roll(mh_input_lowend_weapon_damage,mh_input_topend_weapon_damage)
                                wep_roll = wep_roll + (attack_damage_normalization * current_ap / 14)
                                #Rune Hit
                                haste_percentage = (total_haste_rating / 25.21) / 100 #Returns a result of 0 - 1 for 0% - 100%
                                haste_rune_cd = rune_grade_timer(current_time, last_rune_change[castable], last_rune_change[castable+6])
                                if improved_unholy_presence_points != 0:
                                    if dk_presence == 2:
                                        haste_rune_cd = haste_rune_cd - (haste_rune_cd * ((improved_unholy_presence_points * 5) / 100))
                                if dk_presence != 2:
                                    gcd = input_gcd / (1 + haste_percentage)
                                    if gcd < 1:
                                        gcd = 1
                                ##Rune Miss
                                haste_rune_cd_miss = 1
                                if dancing_rune_weapon_points == 1:
                                    if dancing_rune_weapon_active == True:
                                        if attack_table_results == 0:
                                            atta_num = 0
                                            rotation.append("Dancing Rune Weapon")
                                            rotation_time.append(current_time)
                                            rotation_status.append("Miss")
                                            rotation_damage.append(atta_num)
                                        elif attack_table_results == 1:
                                            atta_num = 0
                                            rotation.append("Dancing Rune Weapon")
                                            rotation_time.append(current_time)
                                            rotation_status.append("Dodge")
                                            rotation_damage.append(atta_num)
                                        elif attack_table_results == 5:
                                            #crit attack
                                            atta_num = ((189 + (wep_roll * .5)) - ((189 + (wep_roll * .5)) * armor_red_amount)) * var_crit_amount
                                            if dk_presence == 0:
                                                atta_num = atta_num + (atta_num * .15)
                                            if tundra_stalker_points != 0:
                                                if dots[0] > current_time:
                                                    atta_num = atta_num + (atta_num * (tundra_stalker_points * .03))
                                            if vicious_strikes_points != 0:
                                                atta_num = atta_num + (atta_num * ((vicious_strikes_points * 15) / 100))
                                            if outbreak_points != 0: #This need to be changed for scourge strike
                                                atta_num = atta_num + (atta_num * ((outbreak_points * 10) / 100))
                                            if rage_of_rivendale_points != 0:
                                                if dots[1] > current_time:
                                                    atta_num += atta_num * ((rage_of_rivendale_points * 2) / 100)
                                            if glyph_plague_strike == True:
                                                atta_num += atta_num * .2
                                            if hysteria_active == True:
                                                atta_num = atta_num + (atta_num * .2)
                                            if tricksoftt_active == True:
                                                atta_num = atta_num + (atta_num * .15)
                                            atta_num = atta_num + (atta_num * increased_physical_damage) + (atta_num * increased_all_damage)
                                            atta_num = atta_num * dancing_rune_weapon_damage_multi
                                            dancing_rune_weapon_damage += atta_num
                                            rotation.append("Dancing Rune Weapon")
                                            rotation_time.append(current_time)
                                            rotation_status.append("Crit")
                                            rotation_damage.append(atta_num)                                
                                            dots[1] = dot_timer(current_time, dot_length)
                                            if crypt_fever_points != 0:
                                                dots[2] = dot_timer(current_time, dot_length)
                                            trinket_hit_crit_tracker = 2
                                            last_dot1_damage = current_time - 3
                                        elif attack_table_results == 7:
                                            #normal attack
                                            atta_num = ((189 + (wep_roll * .5)) - ((189 + (wep_roll * .5)) * armor_red_amount))
                                            if dk_presence == 0:
                                                atta_num = atta_num + (atta_num * .15)
                                            if tundra_stalker_points != 0:
                                                if dots[0] > current_time:
                                                    atta_num = atta_num + (atta_num * (tundra_stalker_points * .03))
                                            if outbreak_points != 0: #This need to be changed for scourge strike
                                                atta_num = atta_num + (atta_num * ((outbreak_points * 10) / 100))
                                            if rage_of_rivendale_points != 0:
                                                if dots[1] > current_time:
                                                    atta_num += atta_num * ((rage_of_rivendale_points * 2) / 100)
                                            if glyph_plague_strike == True:
                                                atta_num += atta_num * .2
                                            if hysteria_active == True:
                                                atta_num = atta_num + (atta_num * .2)
                                            if tricksoftt_active == True:
                                                atta_num = atta_num + (atta_num * .15)
                                            atta_num = atta_num + (atta_num * increased_physical_damage) + (atta_num * increased_all_damage)
                                            atta_num = atta_num * dancing_rune_weapon_damage_multi
                                            dancing_rune_weapon_damage += atta_num
                                            rotation.append("Dancing Rune Weapon")
                                            rotation_time.append(current_time)
                                            rotation_status.append("Hit")
                                            rotation_damage.append(atta_num)
                                            dots[1] = dot_timer(current_time, dot_length)
                                            if crypt_fever_points != 0:
                                                dots[2] = dot_timer(current_time, dot_length)
                                            trinket_hit_crit_tracker = 1
                                            last_dot1_damage = current_time - 3
                                if threat_of_thassarian_points != 0:  #Off Hand Plague Strike Copy
                                    if H2 == False:
                                        threat_of_thass_roll = (threat_of_thassarian_points * 30) 
                                        if threat_of_thassarian_points == 3: 
                                            threat_of_thass_roll += 10 
                                        threat_of_t_num = random.randint(0, 100) 
                                        if threat_of_thass_roll >= threat_of_t_num: 
                                            oh_wep_roll = weapon_roll(oh_input_lowend_weapon_damage,oh_input_topend_weapon_damage)
                                            oh_wep_roll = wep_roll + (attack_damage_normalization * current_ap / 14)
                                            oh_attack_table_results = attack_table(1, tanking, H2, False, True, hit_from_gear, hit_from_other, target_level, all_expertise_dodge, all_expertise_parry, total_crit, (annihilation_talent_points / 100 + increased_phy_crit + (scourgeborne_plate_two_set / 100) + ((vicious_strikes_points * 3) / 100)))
                                            if oh_attack_table_results == 0:
                                                atta_num = 0
                                                rotation.append("OH - Plague Strike")
                                                rotation_time.append(current_time)
                                                rotation_status.append("Miss")
                                                rotation_damage.append(atta_num)
                                            elif oh_attack_table_results == 1:
                                                atta_num = 0
                                                rotation.append("OH - Plague Strike")
                                                rotation_time.append(current_time)
                                                rotation_status.append("Dodge")
                                                rotation_damage.append(atta_num)
                                            elif oh_attack_table_results == 5:
                                                #crit attack
                                                atta_num = ((189 + (oh_wep_roll * .5)) - ((189 + (oh_wep_roll * .5)) * armor_red_amount)) * var_crit_amount
                                                if dk_presence == 0:
                                                    atta_num = atta_num + (atta_num * .15)
                                                if tundra_stalker_points != 0:
                                                    if dots[0] > current_time:
                                                        atta_num = atta_num + (atta_num * (tundra_stalker_points * .03))
                                                if vicious_strikes_points != 0:
                                                    atta_num = atta_num + (atta_num * ((vicious_strikes_points * 15) / 100))
                                                if outbreak_points != 0: #This need to be changed for scourge strike
                                                    atta_num = atta_num + (atta_num * ((outbreak_points * 10) / 100))
                                                if rage_of_rivendale_points != 0:
                                                    if dots[1] > current_time:
                                                        atta_num += atta_num * ((rage_of_rivendale_points * 2) / 100)
                                                if glyph_plague_strike == True:
                                                    atta_num += atta_num * .2
                                                atta_num = atta_num * oh_wep_damage_mod
                                                if hysteria_active == True:
                                                    atta_num = atta_num + (atta_num * .2)
                                                if tricksoftt_active == True:
                                                    atta_num = atta_num + (atta_num * .15)
                                                atta_num = atta_num + (atta_num * increased_physical_damage) + (atta_num * increased_all_damage)
                                                sum_oh_ps_attacks += atta_num
                                                dots[1] = dot_timer(current_time, dot_length)
                                                if crypt_fever_points != 0:
                                                    dots[2] = dot_timer(current_time, dot_length)
                                                trinket_hit_crit_tracker = 2
                                                rotation.append("OH - Plague Strike")
                                                rotation_time.append(current_time)
                                                rotation_status.append("Crit")
                                                rotation_damage.append(atta_num)
                                            elif oh_attack_table_results == 7:
                                                #normal attack
                                                atta_num = ((189 + (oh_wep_roll * .5)) - ((189 + (oh_wep_roll * .5)) * armor_red_amount))
                                                if dk_presence == 0:
                                                    atta_num = atta_num + (atta_num * .15)
                                                if tundra_stalker_points != 0:
                                                    if dots[0] > current_time:
                                                        atta_num = atta_num + (atta_num * (tundra_stalker_points * .03))
                                                if outbreak_points != 0: #This need to be changed for scourge strike
                                                    atta_num = atta_num + (atta_num * ((outbreak_points * 10) / 100))
                                                if rage_of_rivendale_points != 0:
                                                    if dots[1] > current_time:
                                                        atta_num += atta_num * ((rage_of_rivendale_points * 2) / 100)
                                                if glyph_plague_strike == True:
                                                    atta_num += atta_num * .2
                                                atta_num = atta_num * oh_wep_damage_mod
                                                if hysteria_active == True:
                                                    atta_num = atta_num + (atta_num * .2)
                                                if tricksoftt_active == True:
                                                    atta_num = atta_num + (atta_num * .15)
                                                atta_num = atta_num + (atta_num * increased_physical_damage) + (atta_num * increased_all_damage)
                                                sum_oh_ps_attacks += atta_num
                                                dots[1] = dot_timer(current_time, dot_length)
                                                if crypt_fever_points != 0:
                                                    dots[2] = dot_timer(current_time, dot_length)
                                                trinket_hit_crit_tracker = 1
                                                rotation.append("OH - Plague Strike")
                                                rotation_time.append(current_time)
                                                rotation_status.append("Hit")
                                                rotation_damage.append(atta_num)
    
                                if attack_table_results == 0:
                                    atta_num = 0
                                    rune_cd_tracker[castable] = rune_cd(haste_rune_cd_miss, current_time)
                                    rotation.append("Plague Strike")
                                    rotation_time.append(current_time)
                                    rotation_status.append("Miss")
                                    rotation_damage.append(atta_num)
                                    current_time = current_time + gcd
                                    used_gcd = True
                                    continue
                                elif attack_table_results == 1:
                                    atta_num = 0
                                    rune_cd_tracker[castable] = rune_cd(haste_rune_cd_miss, current_time)
                                    rotation.append("Plague Strike")
                                    rotation_time.append(current_time)
                                    rotation_status.append("Dodge")
                                    rotation_damage.append(atta_num)
                                    current_time = current_time + gcd
                                    used_gcd = True
                                    continue
                                elif attack_table_results == 5:
                                    #crit attack
                                    rune_cd_tracker[castable] = rune_cd(haste_rune_cd, current_time)
                                    atta_num = ((189 + (wep_roll * .5)) - ((189 + (wep_roll * .5)) * armor_red_amount)) * var_crit_amount
                                    if dk_presence == 0:
                                        atta_num = atta_num + (atta_num * .15)
                                    if tundra_stalker_points != 0:
                                        if dots[0] > current_time:
                                            atta_num = atta_num + (atta_num * (tundra_stalker_points * .03))
                                    if vicious_strikes_points != 0:
                                        atta_num = atta_num + (atta_num * ((vicious_strikes_points * 15) / 100))
                                    if outbreak_points != 0: #This need to be changed for scourge strike
                                        atta_num = atta_num + (atta_num * ((outbreak_points * 10) / 100))
                                    if rage_of_rivendale_points != 0:
                                        if dots[1] > current_time:
                                            atta_num += atta_num * ((rage_of_rivendale_points * 2) / 100)
                                    if glyph_plague_strike == True:
                                        atta_num += atta_num * .2
                                    if hysteria_active == True:
                                        atta_num = atta_num + (atta_num * .2)
                                    if tricksoftt_active == True:
                                        atta_num = atta_num + (atta_num * .15)
                                    atta_num = atta_num + (atta_num * increased_physical_damage) + (atta_num * increased_all_damage)
                                    sum_ps_attacks += atta_num
                                    current_power = runic_power(10, current_power, max_runic)
                                    if dirge_points != 0:
                                        current_power = runic_power((dirge_points * 2.5), current_power, max_runic)
                                    dots[1] = dot_timer(current_time, dot_length)
                                    if crypt_fever_points != 0:
                                        dots[2] = dot_timer(current_time, dot_length)
                                    trinket_hit_crit_tracker = 2
                                    if sigil_of_strife == True:
                                        bonus_loop_ap += sigil_of_strife_amount
                                        sigil_of_strife_timer = current_time + 10
                                        sigil_of_strife_active = True
                                    scourge_strike_dot1_counter = 0
                                    last_dot1_damage = current_time - 3
                                    rotation.append("Plague Strike")
                                    rotation_time.append(current_time)
                                    rotation_status.append("Crit")
                                    rotation_damage.append(atta_num)
                                    current_time += gcd
                                    used_gcd = True
                                    continue
                                elif attack_table_results == 7:
                                    #normal attack
                                    rune_cd_tracker[castable] = rune_cd(haste_rune_cd, current_time)
                                    atta_num = ((189 + (wep_roll * .5)) - ((189 + (wep_roll * .5)) * armor_red_amount))
                                    if dk_presence == 0:
                                        atta_num = atta_num + (atta_num * .15)
                                    if tundra_stalker_points != 0:
                                        if dots[0] > current_time:
                                            atta_num = atta_num + (atta_num * (tundra_stalker_points * .03))
                                    if outbreak_points != 0: #This need to be changed for scourge strike
                                        atta_num = atta_num + (atta_num * ((outbreak_points * 10) / 100))
                                    if rage_of_rivendale_points != 0:
                                        if dots[1] > current_time:
                                            atta_num += atta_num * ((rage_of_rivendale_points * 2) / 100)
                                    if glyph_plague_strike == True:
                                        atta_num += atta_num * .2
                                    if hysteria_active == True:
                                        atta_num = atta_num + (atta_num * .2)
                                    if tricksoftt_active == True:
                                        atta_num = atta_num + (atta_num * .15)
                                    atta_num = atta_num + (atta_num * increased_physical_damage) + (atta_num * increased_all_damage)
                                    sum_ps_attacks += atta_num
                                    current_power = runic_power(10, current_power, max_runic)
                                    if dirge_points != 0:
                                        current_power = runic_power((dirge_points * 2.5), current_power, max_runic)
                                    dots[1] = dot_timer(current_time, dot_length)
                                    if crypt_fever_points != 0:
                                        dots[2] = dot_timer(current_time, dot_length)
                                    trinket_hit_crit_tracker = 1
                                    scourge_strike_dot1_counter = 0
                                    last_dot1_damage = current_time - 3
                                    rotation.append("Plague Strike")
                                    rotation_time.append(current_time)
                                    rotation_status.append("Hit")
                                    rotation_damage.append(atta_num)
                                    current_time += gcd
                                    used_gcd = True
                                    continue 
                    if pestilence_allow_reset == False:
                        if (dots[0] - pestilence_reset_window) > 0 and (dots[0] - pestilence_reset_window) < current_time: #Refresh Icy Touch
                            castable = all_rune_check(frost, current_time, rune_cd_tracker)
                            if castable == 3:
                                castable_death = all_rune_check(death, current_time, rune_cd_tracker)
                                castable_death_f = all_rune_check(death_f, current_time, rune_cd_tracker)
                                castable_death_u = all_rune_check(death_u, current_time, rune_cd_tracker)
                                if castable_death != 3:
                                    use_death_rune = True
                                    castable = castable_death
                                elif castable_death_f != 3:
                                    use_death_rune = True
                                    castable = castable_death_f
                                elif castable_death_u != 3:
                                    use_death_rune = True
                                    castable = castable_death_u
                            if castable != 3:      
                                if castable == 2:
                                    castable = 0
                                if use_death_rune == True:
                                    use_death_rune = False
                                    if castable_death != 3:
                                        rune_cd_tracker[castable] = 0
                                        if castable_death == 2:
                                            castable_death = 0
                                        rune_cd_tracker[castable_death + 6] = 10000
                                    elif castable_death_f != 3:
                                        castable += 2
                                        rune_cd_tracker[castable] = 0
                                        if castable_death_f == 2:
                                            castable_death_f = 0
                                        rune_cd_tracker[castable_death_f + 8] = 10000
                                    elif castable_death_u != 3:
                                        castable += 4
                                        rune_cd_tracker[castable] = 0
                                        if castable_death_u == 2:
                                            castable_death_u = 0
                                        rune_cd_tracker[castable_death_u + 10] = 10000
                                else:
                                    use_death_rune = False
                                    castable += frost
                                hit = spell_hit(spell_hit_total, increased_spell_hit, target_level)
                                if km_procd == True:
                                	km_procd = False
                                	crit = True
                                else:
                                    if deathchill_active == True:
                                    	deathchill_active = False
                                    	crit = True
                                    else:
                                        crit = spell_crit((total_crit + ((rime_points * 5) / 100)), spell_hit_total, increased_spell_hit, target_level, increased_spell_crit)
                                #Rune Hit
                                haste_percentage = (total_haste_rating / 25.21) / 100 #Returns a result of 0 - 1 for 0% - 100%
                                haste_rune_cd = rune_grade_timer(current_time, last_rune_change[castable], last_rune_change[castable+6])
                                if improved_unholy_presence_points != 0:
                                    if dk_presence == 2:
                                        haste_rune_cd = haste_rune_cd - (haste_rune_cd * ((improved_unholy_presence_points * 5) / 100))
                                if dk_presence != 2:
                                    gcd = input_gcd / (1 + haste_percentage)
                                    if gcd < 1:
                                        gcd = 1
                                if hit == True:
                                    rune_cd_tracker[castable] = rune_cd(haste_rune_cd, current_time)
                                    if crit == True:
                                        atta_num = random.randint(227, 245)
                                        if sigil_of_the_frozen_conscience == True:
                                            atta_num + 111
                                        atta_num = (atta_num + ((current_ap + (current_ap * ((impurity_points * 4) / 100))) * .1)) * var_crit_amount
                                        if dk_presence == 0:
                                            atta_num = atta_num + (atta_num * .15)
                                        if improved_icy_touch_points == 3:
                                            atta_num = atta_num + (atta_num * .15)
                                        elif improved_icy_touch_points == 2:
                                            atta_num = atta_num + (atta_num * .10)
                                        elif improved_icy_touch_points == 1:
                                            atta_num = atta_num + (atta_num * .05)
                                        if black_ice_points == 5:
                                            atta_num = atta_num + (atta_num * .1)
                                        elif black_ice_points == 4:
                                            atta_num = atta_num + (atta_num * .08)
                                        elif black_ice_points == 3:
                                            atta_num = atta_num + (atta_num * .06)
                                        elif black_ice_points == 2:
                                            atta_num = atta_num + (atta_num * .04)
                                        elif black_ice_points == 1:
                                            atta_num = atta_num + (atta_num * .02)
                                        if glacier_rot_points == 3:
                                            if dots[0] > current_time:
                                                if dots[1] > current_time:
                                                    atta_num = atta_num + (atta_num * .2)
                                        elif glacier_rot_points == 2:
                                            if dots[0] > current_time:
                                                if dots[1] > current_time:
                                                    atta_num = atta_num + (atta_num * .13)
                                        elif glacier_rot_points == 1:
                                            if dots[0] > current_time:
                                                if dots[1] > current_time:
                                                    atta_num = atta_num + (atta_num * .07)
                                        if tundra_stalker_points != 0:
                                            if dots[0] > current_time:
                                                atta_num = atta_num + (atta_num * (tundra_stalker_points * .03))
                                        if merciless_combat_points == 2:
                                            if current_time > (fight_length - (fight_length * (fight_sub_35percent / 100))):
                                                atta_num = atta_num + (atta_num * .12)
                                        elif merciless_combat_points == 1:
                                            if current_time > (fight_length - (fight_length * (fight_sub_35percent / 100))):
                                                atta_num = atta_num + (atta_num * .06)
                                        if rage_of_rivendale_points != 0:
                                            if dots[1] > current_time:
                                                atta_num += atta_num * ((rage_of_rivendale_points * 2) / 100)
                                        if hysteria_active == True:
                                            atta_num = atta_num + (atta_num * .2)
                                        if tricksoftt_active == True:
                                            atta_num = atta_num + (atta_num * .15)
                                        atta_num = atta_num + (atta_num * increased_spell_damage) + (atta_num * increased_all_damage)
                                        sum_it_attacks += atta_num
                                        current_power = runic_power(10, current_power, max_runic) 
                                        if chill_of_the_grave_points == 2:
                                            current_power = runic_power(5, current_power, max_runic)
                                        elif chill_of_the_grave_points == 1:
                                            current_power = runic_power(2.5, current_power, max_runic)
                                        dots[0] = dot_timer(current_time, dot_length)
                                        if crypt_fever_points != 0:
                                            dots[2] = dot_timer(current_time, dot_length)
                                        if rune_of_cinderglacier_active == True:
                                             rune_of_cinderglacier_damage = atta_num * .2
                                             rune_of_cinderglacier_active_count += 1
                                             rotation.append("Rune of Cinderglacier")
                                             rotation_time.append(current_time)
                                             rotation_status.append("Active")
                                             rotation_damage.append(atta_num * .2)
                                             if rune_of_cinderglacier_active_count == 2:
                                                 rune_of_cinderglacier_active = False
                                        rotation.append("Icy Touch")
                                        rotation_time.append(current_time)
                                        rotation_status.append("Crit")
                                        rotation_damage.append(atta_num)
                                        current_time += gcd
                                        used_gcd = True
                                        continue
                                    else:
                                        atta_num = random.randint(227, 245)
                                        if sigil_of_the_frozen_conscience == True:
                                            atta_num + 111
                                        atta_num = (atta_num + ((current_ap + (current_ap * ((impurity_points * 4) / 100))) * .1))
                                        if dk_presence == 0:
                                            atta_num = atta_num + (atta_num * .15)
                                        if improved_icy_touch_points == 3:
                                            atta_num = atta_num + (atta_num * .15)
                                        elif improved_icy_touch_points == 2:
                                            atta_num = atta_num + (atta_num * .10)
                                        elif improved_icy_touch_points == 1:
                                            atta_num = atta_num + (atta_num * .05)
                                        if black_ice_points == 5:
                                            atta_num = atta_num + (atta_num * .1)
                                        elif black_ice_points == 4:
                                            atta_num = atta_num + (atta_num * .08)
                                        elif black_ice_points == 3:
                                            atta_num = atta_num + (atta_num * .06)
                                        elif black_ice_points == 2:
                                            atta_num = atta_num + (atta_num * .04)
                                        elif black_ice_points == 1:
                                            atta_num = atta_num + (atta_num * .02)
                                        if glacier_rot_points == 3:
                                            if dots[0] > current_time:
                                                if dots[1] > current_time:
                                                    atta_num = atta_num + (atta_num * .2)
                                        elif glacier_rot_points == 2:
                                            if dots[0] > current_time:
                                                if dots[1] > current_time:
                                                    atta_num = atta_num + (atta_num * .13)
                                        elif glacier_rot_points == 1:
                                            if dots[0] > current_time:
                                                if dots[1] > current_time:
                                                    atta_num = atta_num + (atta_num * .07)
                                        if tundra_stalker_points != 0:
                                            if dots[0] > current_time:
                                                atta_num = atta_num + (atta_num * (tundra_stalker_points * .03))
                                        if merciless_combat_points == 2:
                                            if current_time > (fight_length - (fight_length * (fight_sub_35percent / 100))):
                                                atta_num = atta_num + (atta_num * .12)
                                        elif merciless_combat_points == 1:
                                            if current_time > (fight_length - (fight_length * (fight_sub_35percent / 100))):
                                                atta_num = atta_num + (atta_num * .06)
                                        if rage_of_rivendale_points != 0:
                                            if dots[1] > current_time:
                                                atta_num += atta_num * ((rage_of_rivendale_points * 2) / 100)
                                        if hysteria_active == True:
                                            atta_num = atta_num + (atta_num * .2)
                                        if tricksoftt_active == True:
                                            atta_num = atta_num + (atta_num * .15)
                                        atta_num = atta_num + (atta_num * increased_spell_damage) + (atta_num * increased_all_damage)
                                        sum_it_attacks += atta_num
                                        current_power = runic_power(10, current_power, max_runic)
                                        if chill_of_the_grave_points == 2:
                                            current_power = runic_power(5, current_power, max_runic)
                                        elif chill_of_the_grave_points == 1:
                                            current_power = runic_power(2.5, current_power, max_runic)
                                        dots[0] = dot_timer(current_time, dot_length)
                                        if crypt_fever_points != 0:
                                            dots[2] = dot_timer(current_time, dot_length)
                                        if rune_of_cinderglacier_active == True:
                                             rune_of_cinderglacier_damage = atta_num * .2
                                             rune_of_cinderglacier_active_count += 1
                                             rotation.append("Rune of Cinderglacier")
                                             rotation_time.append(current_time)
                                             rotation_status.append("Active")
                                             rotation_damage.append(atta_num * .2)
                                             if rune_of_cinderglacier_active_count == 2:
                                                 rune_of_cinderglacier_active = False
                                        rotation.append("Icy Touch")
                                        rotation_time.append(current_time)
                                        rotation_status.append("Hit")
                                        rotation_damage.append(atta_num)
                                        current_time += gcd
                                        used_gcd = True
                                        continue
                                if hit == False:
                                    ##Rune Miss
                                    haste_rune_cd_miss = 1
                                    rune_cd_tracker[castable] = rune_cd(haste_rune_cd_miss, current_time)
                                    rotation.append("Icy Touch")
                                    rotation_time.append(current_time)
                                    rotation_status.append("Miss")
                                    rotation_damage.append(0)
                                    current_time = current_time + gcd
                                    used_gcd = True
                                    continue
                        
                    if pestilence_allow_reset == False:
                        if (dots[1] - pestilence_reset_window) > 0 and (dots[1] - pestilence_reset_window) < current_time: #Refresh Plague Strike
                            castable = all_rune_check(unholy, current_time, rune_cd_tracker)
                            if castable == 3:
                                castable_death = all_rune_check(death, current_time, rune_cd_tracker)
                                castable_death_f = all_rune_check(death_f, current_time, rune_cd_tracker)
                                castable_death_u = all_rune_check(death_u, current_time, rune_cd_tracker)
                                if castable_death != 3:
                                    use_death_rune = True
                                    castable = castable_death
                                elif castable_death_f != 3:
                                    use_death_rune = True
                                    castable = castable_death_f
                                elif castable_death_u != 3:
                                    use_death_rune = True
                                    castable = castable_death_u
                            if castable != 3:      
                                if castable == 2: 
                                    castable = 0
                                if use_death_rune == True:
                                    use_death_rune = False
                                    if castable_death != 3:
                                        rune_cd_tracker[castable] = 0
                                        if castable_death == 2:
                                            castable_death = 0
                                        rune_cd_tracker[castable_death + 6] = 10000
                                    elif castable_death_f != 3:
                                        castable += 2
                                        rune_cd_tracker[castable] = 0
                                        if castable_death_f == 2:
                                            castable_death_f = 0
                                        rune_cd_tracker[castable_death_f + 8] = 10000
                                    elif castable_death_u != 3:
                                        castable += 4
                                        rune_cd_tracker[castable] = 0
                                        if castable_death_u == 2:
                                            castable_death_u = 0
                                        rune_cd_tracker[castable_death_u + 10] = 10000
                                else:
                                    use_death_rune = False
                                    castable += unholy
                                attack_table_results = attack_table(1, tanking, H2, True, False, hit_from_gear, hit_from_other, target_level, all_expertise_dodge, all_expertise_parry, total_crit, (annihilation_talent_points / 100 + increased_phy_crit + (scourgeborne_plate_two_set / 100) + ((vicious_strikes_points * 3) / 100)))
                                armor_red_amount = dam_reduc(current_armor, armor_penetration, target_level)
                                wep_roll = weapon_roll(mh_input_lowend_weapon_damage,mh_input_topend_weapon_damage)
                                wep_roll = wep_roll + (attack_damage_normalization * current_ap / 14)
                                #Rune Hit
                                haste_percentage = (total_haste_rating / 25.21) / 100 #Returns a result of 0 - 1 for 0% - 100%
                                haste_rune_cd = rune_grade_timer(current_time, last_rune_change[castable], last_rune_change[castable+6])
                                if improved_unholy_presence_points != 0:
                                    if dk_presence == 2:
                                        haste_rune_cd = haste_rune_cd - (haste_rune_cd * ((improved_unholy_presence_points * 5) / 100))
                                if dk_presence != 2:
                                    gcd = input_gcd / (1 + haste_percentage)
                                    if gcd < 1:
                                        gcd = 1
                                ##Rune Miss
                                haste_rune_cd_miss = 1
                                if dancing_rune_weapon_points == 1:
                                    if dancing_rune_weapon_active == True:
                                        if attack_table_results == 0:
                                            atta_num = 0
                                            rotation.append("Dancing Rune Weapon")
                                            rotation_time.append(current_time)
                                            rotation_status.append("Miss")
                                            rotation_damage.append(atta_num)
                                        elif attack_table_results == 1:
                                            atta_num = 0
                                            rotation.append("Dancing Rune Weapon")
                                            rotation_time.append(current_time)
                                            rotation_status.append("Dodge")
                                            rotation_damage.append(atta_num)
                                        elif attack_table_results == 5:
                                            #crit attack
                                            atta_num = ((189 + (wep_roll * .5)) - ((189 + (wep_roll * .5)) * armor_red_amount)) * var_crit_amount
                                            if dk_presence == 0:
                                                atta_num = atta_num + (atta_num * .15)
                                            if tundra_stalker_points != 0:
                                                if dots[0] > current_time:
                                                    atta_num = atta_num + (atta_num * (tundra_stalker_points * .03))
                                            if vicious_strikes_points != 0:
                                                atta_num = atta_num + (atta_num * ((vicious_strikes_points * 15) / 100))
                                            if outbreak_points != 0: #This need to be changed for scourge strike
                                                atta_num = atta_num + (atta_num * ((outbreak_points * 10) / 100))
                                            if rage_of_rivendale_points != 0:
                                                if dots[1] > current_time:
                                                    atta_num += atta_num * ((rage_of_rivendale_points * 2) / 100)
                                            if glyph_plague_strike == True:
                                                atta_num += atta_num * .2
                                            if hysteria_active == True:
                                                atta_num = atta_num + (atta_num * .2)
                                            if tricksoftt_active == True:
                                                atta_num = atta_num + (atta_num * .15)
                                            atta_num = atta_num + (atta_num * increased_physical_damage) + (atta_num * increased_all_damage)
                                            atta_num = atta_num * dancing_rune_weapon_damage_multi
                                            dancing_rune_weapon_damage += atta_num
                                            rotation.append("Dancing Rune Weapon")
                                            rotation_time.append(current_time)
                                            rotation_status.append("Crit")
                                            rotation_damage.append(atta_num)                                
                                            dots[1] = dot_timer(current_time, dot_length)
                                            if crypt_fever_points != 0:
                                                dots[2] = dot_timer(current_time, dot_length)
                                            trinket_hit_crit_tracker = 2
                                        elif attack_table_results == 7:
                                            #normal attack
                                            atta_num = ((189 + (wep_roll * .5)) - ((189 + (wep_roll * .5)) * armor_red_amount))
                                            if dk_presence == 0:
                                                atta_num = atta_num + (atta_num * .15)
                                            if tundra_stalker_points != 0:
                                                if dots[0] > current_time:
                                                    atta_num = atta_num + (atta_num * (tundra_stalker_points * .03))
                                            if outbreak_points != 0: #This need to be changed for scourge strike
                                                atta_num = atta_num + (atta_num * ((outbreak_points * 10) / 100))
                                            if rage_of_rivendale_points != 0:
                                                if dots[1] > current_time:
                                                    atta_num += atta_num * ((rage_of_rivendale_points * 2) / 100)
                                            if glyph_plague_strike == True:
                                                atta_num += atta_num * .2
                                            if hysteria_active == True:
                                                atta_num = atta_num + (atta_num * .2)
                                            if tricksoftt_active == True:
                                                atta_num = atta_num + (atta_num * .15)
                                            atta_num = atta_num + (atta_num * increased_physical_damage) + (atta_num * increased_all_damage)
                                            atta_num = atta_num * dancing_rune_weapon_damage_multi
                                            dancing_rune_weapon_damage += atta_num
                                            rotation.append("Dancing Rune Weapon")
                                            rotation_time.append(current_time)
                                            rotation_status.append("Hit")
                                            rotation_damage.append(atta_num)
                                            dots[1] = dot_timer(current_time, dot_length)
                                            if crypt_fever_points != 0:
                                                dots[2] = dot_timer(current_time, dot_length)
                                            trinket_hit_crit_tracker = 1
                                if threat_of_thassarian_points != 0:  #Off Hand Plague Strike Copy
                                    if H2 == False:
                                        threat_of_thass_roll = (threat_of_thassarian_points * 30) 
                                        if threat_of_thassarian_points == 3: 
                                            threat_of_thass_roll += 10 
                                        threat_of_t_num = random.randint(0, 100) 
                                        if threat_of_thass_roll >= threat_of_t_num: 
                                            oh_wep_roll = weapon_roll(oh_input_lowend_weapon_damage,oh_input_topend_weapon_damage)
                                            oh_wep_roll = wep_roll + (attack_damage_normalization * current_ap / 14)
                                            oh_attack_table_results = attack_table(1, tanking, H2, False, True, hit_from_gear, hit_from_other, target_level, all_expertise_dodge, all_expertise_parry, total_crit, (annihilation_talent_points / 100 + increased_phy_crit + (scourgeborne_plate_two_set / 100) + ((vicious_strikes_points * 3) / 100)))
                                            if oh_attack_table_results == 0:
                                                atta_num = 0
                                                rotation.append("OH - Plague Strike")
                                                rotation_time.append(current_time)
                                                rotation_status.append("Miss")
                                                rotation_damage.append(atta_num)
                                            elif oh_attack_table_results == 1:
                                                atta_num = 0
                                                rotation.append("OH - Plague Strike")
                                                rotation_time.append(current_time)
                                                rotation_status.append("Dodge")
                                                rotation_damage.append(atta_num)
                                            elif oh_attack_table_results == 5:
                                                #crit attack
                                                atta_num = ((189 + (oh_wep_roll * .5)) - ((189 + (oh_wep_roll * .5)) * armor_red_amount)) * var_crit_amount
                                                if dk_presence == 0:
                                                    atta_num = atta_num + (atta_num * .15)
                                                if tundra_stalker_points != 0:
                                                    if dots[0] > current_time:
                                                        atta_num = atta_num + (atta_num * (tundra_stalker_points * .03))
                                                if vicious_strikes_points != 0:
                                                    atta_num = atta_num + (atta_num * ((vicious_strikes_points * 15) / 100))
                                                if outbreak_points != 0: #This need to be changed for scourge strike
                                                    atta_num = atta_num + (atta_num * ((outbreak_points * 10) / 100))
                                                if rage_of_rivendale_points != 0:
                                                    if dots[1] > current_time:
                                                        atta_num += atta_num * ((rage_of_rivendale_points * 2) / 100)
                                                if glyph_plague_strike == True:
                                                    atta_num += atta_num * .2
                                                atta_num = atta_num * oh_wep_damage_mod
                                                if hysteria_active == True:
                                                    atta_num = atta_num + (atta_num * .2)
                                                if tricksoftt_active == True:
                                                    atta_num = atta_num + (atta_num * .15)
                                                atta_num = atta_num + (atta_num * increased_physical_damage) + (atta_num * increased_all_damage)
                                                sum_oh_ps_attacks += atta_num
                                                dots[1] = dot_timer(current_time, dot_length)
                                                if crypt_fever_points != 0:
                                                    dots[2] = dot_timer(current_time, dot_length)
                                                trinket_hit_crit_tracker = 2
                                                rotation.append("OH - Plague Strike")
                                                rotation_time.append(current_time)
                                                rotation_status.append("Crit")
                                                rotation_damage.append(atta_num)
                                            elif oh_attack_table_results == 7:
                                                #normal attack
                                                atta_num = ((189 + (oh_wep_roll * .5)) - ((189 + (oh_wep_roll * .5)) * armor_red_amount))
                                                if dk_presence == 0:
                                                    atta_num = atta_num + (atta_num * .15)
                                                if tundra_stalker_points != 0:
                                                    if dots[0] > current_time:
                                                        atta_num = atta_num + (atta_num * (tundra_stalker_points * .03))
                                                if outbreak_points != 0: #This need to be changed for scourge strike
                                                    atta_num = atta_num + (atta_num * ((outbreak_points * 10) / 100))
                                                if rage_of_rivendale_points != 0:
                                                    if dots[1] > current_time:
                                                        atta_num += atta_num * ((rage_of_rivendale_points * 2) / 100)
                                                if glyph_plague_strike == True:
                                                    atta_num += atta_num * .2
                                                atta_num = atta_num * oh_wep_damage_mod
                                                if hysteria_active == True:
                                                    atta_num = atta_num + (atta_num * .2)
                                                if tricksoftt_active == True:
                                                    atta_num = atta_num + (atta_num * .15)
                                                atta_num = atta_num + (atta_num * increased_physical_damage) + (atta_num * increased_all_damage)
                                                sum_oh_ps_attacks += atta_num
                                                dots[1] = dot_timer(current_time, dot_length)
                                                if crypt_fever_points != 0:
                                                    dots[2] = dot_timer(current_time, dot_length)
                                                trinket_hit_crit_tracker = 1
                                                rotation.append("OH - Plague Strike")
                                                rotation_time.append(current_time)
                                                rotation_status.append("Hit")
                                                rotation_damage.append(atta_num)

                                if attack_table_results == 0:
                                    atta_num = 0
                                    rune_cd_tracker[castable] = rune_cd(haste_rune_cd_miss, current_time)
                                    rotation.append("Plague Strike")
                                    rotation_time.append(current_time)
                                    rotation_status.append("Miss")
                                    rotation_damage.append(atta_num)
                                    current_time = current_time + gcd
                                    used_gcd = True
                                    continue
                                elif attack_table_results == 1:
                                    atta_num = 0
                                    rune_cd_tracker[castable] = rune_cd(haste_rune_cd_miss, current_time)
                                    rotation.append("Plague Strike")
                                    rotation_time.append(current_time)
                                    rotation_status.append("Dodge")
                                    rotation_damage.append(atta_num)
                                    current_time = current_time + gcd
                                    used_gcd = True
                                    continue
                                elif attack_table_results == 5:
                                    #crit attack
                                    rune_cd_tracker[castable] = rune_cd(haste_rune_cd, current_time)
                                    atta_num = ((189 + (wep_roll * .5)) - ((189 + (wep_roll * .5)) * armor_red_amount)) * var_crit_amount
                                    if dk_presence == 0:
                                        atta_num = atta_num + (atta_num * .15)
                                    if tundra_stalker_points != 0:
                                        if dots[0] > current_time:
                                            atta_num = atta_num + (atta_num * (tundra_stalker_points * .03))
                                    if vicious_strikes_points != 0:
                                        atta_num = atta_num + (atta_num * ((vicious_strikes_points * 15) / 100))
                                    if outbreak_points != 0: #This need to be changed for scourge strike
                                        atta_num = atta_num + (atta_num * ((outbreak_points * 10) / 100))
                                    if rage_of_rivendale_points != 0:
                                        if dots[1] > current_time:
                                            atta_num += atta_num * ((rage_of_rivendale_points * 2) / 100)
                                    if glyph_plague_strike == True:
                                        atta_num += atta_num * .2
                                    if hysteria_active == True:
                                        atta_num = atta_num + (atta_num * .2)
                                    if tricksoftt_active == True:
                                        atta_num = atta_num + (atta_num * .15)
                                    atta_num = atta_num + (atta_num * increased_physical_damage) + (atta_num * increased_all_damage)
                                    sum_ps_attacks += atta_num
                                    current_power = runic_power(10, current_power, max_runic)
                                    if dirge_points != 0:
                                        current_power = runic_power((dirge_points * 2.5), current_power, max_runic)
                                    dots[1] = dot_timer(current_time, dot_length)
                                    if crypt_fever_points != 0:
                                        dots[2] = dot_timer(current_time, dot_length)
                                    trinket_hit_crit_tracker = 2
                                    if sigil_of_strife == True:
                                        bonus_loop_ap += sigil_of_strife_amount
                                        sigil_of_strife_timer = current_time + 10
                                        sigil_of_strife_active = True
                                    rotation.append("Plague Strike")
                                    rotation_time.append(current_time)
                                    rotation_status.append("Crit")
                                    rotation_damage.append(atta_num)
                                    current_time += gcd
                                    used_gcd = True
                                    continue
                                elif attack_table_results == 7:
                                    #normal attack
                                    rune_cd_tracker[castable] = rune_cd(haste_rune_cd, current_time)
                                    atta_num = ((189 + (wep_roll * .5)) - ((189 + (wep_roll * .5)) * armor_red_amount))
                                    if dk_presence == 0:
                                        atta_num = atta_num + (atta_num * .15)
                                    if tundra_stalker_points != 0:
                                        if dots[0] > current_time:
                                            atta_num = atta_num + (atta_num * (tundra_stalker_points * .03))
                                    if outbreak_points != 0: #This need to be changed for scourge strike
                                        atta_num = atta_num + (atta_num * ((outbreak_points * 10) / 100))
                                    if rage_of_rivendale_points != 0:
                                        if dots[1] > current_time:
                                            atta_num += atta_num * ((rage_of_rivendale_points * 2) / 100)
                                    if glyph_plague_strike == True:
                                        atta_num += atta_num * .2
                                    if hysteria_active == True:
                                        atta_num = atta_num + (atta_num * .2)
                                    if tricksoftt_active == True:
                                        atta_num = atta_num + (atta_num * .15)
                                    atta_num = atta_num + (atta_num * increased_physical_damage) + (atta_num * increased_all_damage)
                                    sum_ps_attacks += atta_num
                                    current_power = runic_power(10, current_power, max_runic)
                                    if dirge_points != 0:
                                        current_power = runic_power((dirge_points * 2.5), current_power, max_runic)
                                    dots[1] = dot_timer(current_time, dot_length)
                                    if crypt_fever_points != 0:
                                        dots[2] = dot_timer(current_time, dot_length)
                                    trinket_hit_crit_tracker = 1
                                    rotation.append("Plague Strike")
                                    rotation_time.append(current_time)
                                    rotation_status.append("Hit")
                                    rotation_damage.append(atta_num)
                                    current_time += gcd
                                    used_gcd = True
                                    continue 

                    if (dots[0] - pestilence_reset_window) > 0 and (dots[0] - pestilence_reset_window) < current_time: #Pestilence
                        if (dots[1] - pestilence_reset_window) > 0 and (dots[1] - pestilence_reset_window) < current_time:
                            if pestilence_allow_reset == True:
                                if current_time - dots[0] == 0:
                                    continue
                                if current_time - dots[1] == 0:
                                    continue
                                castable = all_rune_check(blood, current_time, rune_cd_tracker)
                                castable_death_f = all_rune_check(death_f, current_time, rune_cd_tracker)
                                castable_death_u = all_rune_check(death_u, current_time, rune_cd_tracker)
                                if castable == 3:
                                    castable_death = all_rune_check(death, current_time, rune_cd_tracker)
                                    if castable_death != 3:
                                        use_death_rune = True
                                        just_used_death_rune = True
                                        castable = castable_death
                                    elif castable_death_f != 3:
                                        use_death_rune = True
                                        just_used_death_rune = True
                                        castable = castable_death_f
                                    elif castable_death_u != 3:
                                        use_death_rune = True
                                        just_used_death_rune = True
                                        castable = castable_death_u
                                if castable != 3:       #Use Icy Touch as formula on how to do other spells
                                    if castable == 2: #Can add abilitie modifiers later to damage math
                                        castable = 0
                                    if use_death_rune == True:
                                        use_death_rune = False
                                        if castable_death != 3:
                                            rune_cd_tracker[castable] = 0
                                            if castable_death == 2:
                                                castable_death = 0
                                            rune_cd_tracker[castable_death + 6] = 10000
                                        elif castable_death_f != 3:
                                            castable += 2
                                            rune_cd_tracker[castable] = 0
                                            if castable_death_f == 2:
                                                castable_death_f = 0
                                            rune_cd_tracker[castable_death_f + 8] = 10000
                                        elif castable_death_u != 3:
                                            castable += 4
                                            rune_cd_tracker[castable] = 0
                                            if castable_death_u == 2:
                                                castable_death_u = 0
                                            rune_cd_tracker[castable_death_u + 10] = 10000
                                    else:
                                        use_death_rune = False
                                    hit = spell_hit(spell_hit_total, increased_spell_hit, target_level)
                                    crit = spell_crit(total_crit, spell_hit_total, increased_spell_hit, target_level, increased_spell_crit)
                                    #Rune Hit
                                    haste_percentage = (total_haste_rating / 25.21) / 100 #Returns a result of 0 - 1 for 0% - 100%
                                    haste_rune_cd = rune_grade_timer(current_time, last_rune_change[castable], last_rune_change[castable+6])
                                    if improved_unholy_presence_points != 0:
                                        if dk_presence == 2:
                                            haste_rune_cd = haste_rune_cd - (haste_rune_cd * ((improved_unholy_presence_points * 5) / 100))
                                    if dk_presence != 2:
                                        gcd = input_gcd / (1 + haste_percentage)
                                        if gcd < 1:
                                            gcd = 1
                                    ##Rune Miss
                                    haste_rune_cd_miss = 1
                                    if hit == True:
                                        rune_cd_tracker[castable] = rune_cd(haste_rune_cd, current_time)
                                        scourge_strike_dot0_counter = 0
                                        scourge_strike_dot1_counter = 0
                                        if crit == True:
                                            dots[0] = dot_timer(current_time, dot_length)
                                            dots[1] = dot_timer(current_time, dot_length)
                                            multiple_adds_timer = dot_timer(current_time, dot_length)
                                            if crypt_fever_points != 0:
                                                dots[2] = dot_timer(current_time, dot_length)
                                            atta_num = random.randint(65, 79)
                                            atta_num = (atta_num) * var_crit_amount
                                            if dk_presence == 0:
                                                atta_num = atta_num + (atta_num * .15)
                                            if black_ice_points == 5:
                                                atta_num = atta_num + (atta_num * .1)
                                            elif black_ice_points == 4:
                                                atta_num = atta_num + (atta_num * .08)
                                            elif black_ice_points == 3:
                                                atta_num = atta_num + (atta_num * .06)
                                            elif black_ice_points == 2:
                                                atta_num = atta_num + (atta_num * .04)
                                            elif black_ice_points == 1:
                                                atta_num = atta_num + (atta_num * .02)
                                            if tundra_stalker_points != 0:
                                                if dots[0] > current_time:
                                                    atta_num = atta_num + (atta_num * (tundra_stalker_points * .03))
                                            if rage_of_rivendale_points != 0:
                                                if dots[1] > current_time:
                                                    atta_num += atta_num * ((rage_of_rivendale_points * 2) / 100)
                                            if hysteria_active == True:
                                                atta_num = atta_num + (atta_num * .2)
                                            if tricksoftt_active == True:
                                                atta_num = atta_num + (atta_num * .15)
                                            atta_num = atta_num + (atta_num * increased_spell_damage) + (atta_num * increased_all_damage)
                                            sum_pest_attacks += atta_num
                                            current_power = runic_power(10, current_power, max_runic)
                                            if blood_of_the_north_points != 0:
                                                if just_used_death_rune != True:
                                                    proc_num = random.randint(0, 100)
                                                    if blood_of_the_north_points < 3:
                                                        death_proc_chance = (blood_of_the_north_points * .3) * 100
                                                    elif blood_of_the_north_points == 3:
                                                        death_proc_chance = 100
                                                    if death_proc_chance >= proc_num:
                                                        death_castable = castable + death
                                                        rune_cd_tracker[death_castable] = rune_cd(haste_rune_cd, current_time)
                                                        rune_cd_tracker[castable] = 10000
                                            if reaping_points != 0:
                                                if just_used_death_rune != True:
                                                    proc_num = random.randint(0, 100)
                                                    if reaping_points < 3:
                                                        death_proc_chance = (reaping_points * .3) * 100
                                                    elif reaping_points == 3:
                                                        death_proc_chance = 100
                                                    if death_proc_chance >= proc_num:
                                                        death_castable = castable + death
                                                        rune_cd_tracker[death_castable] = rune_cd(haste_rune_cd, current_time)
                                                        rune_cd_tracker[castable] = 10000
                                            if rune_of_cinderglacier_active == True:
                                                 rune_of_cinderglacier_damage = atta_num * .2
                                                 rune_of_cinderglacier_active_count += 1
                                                 rotation.append("Rune of Cinderglacier")
                                                 rotation_time.append(current_time)
                                                 rotation_status.append("Active")
                                                 rotation_damage.append(atta_num * .2)
                                                 if rune_of_cinderglacier_active_count == 2:
                                                     rune_of_cinderglacier_active = False
                                            rotation.append("Pestilence")
                                            rotation_time.append(current_time)
                                            rotation_status.append("Crit")
                                            rotation_damage.append(atta_num)
                                            current_time += gcd
                                            used_gcd = True
                                            continue
                                        else:
                                            dots[0] = dot_timer(current_time, dot_length)
                                            dots[1] = dot_timer(current_time, dot_length)
                                            multiple_adds_timer = dot_timer(current_time, dot_length)
                                            if crypt_fever_points != 0:
                                                dots[2] = dot_timer(current_time, dot_length)
                                            atta_num = random.randint(65, 79)
                                            atta_num = (atta_num)
                                            if dk_presence == 0:
                                                atta_num = atta_num + (atta_num * .15)
                                            if black_ice_points == 5:
                                                atta_num = atta_num + (atta_num * .1)
                                            elif black_ice_points == 4:
                                                atta_num = atta_num + (atta_num * .08)
                                            elif black_ice_points == 3:
                                                atta_num = atta_num + (atta_num * .06)
                                            elif black_ice_points == 2:
                                                atta_num = atta_num + (atta_num * .04)
                                            elif black_ice_points == 1:
                                                atta_num = atta_num + (atta_num * .02)
                                            if tundra_stalker_points != 0:
                                                if dots[0] > current_time:
                                                    atta_num = atta_num + (atta_num * (tundra_stalker_points * .03))
                                            if rage_of_rivendale_points != 0:
                                                if dots[1] > current_time:
                                                    atta_num += atta_num * ((rage_of_rivendale_points * 2) / 100)
                                            if hysteria_active == True:
                                                atta_num = atta_num + (atta_num * .2)
                                            if tricksoftt_active == True:
                                                atta_num = atta_num + (atta_num * .15)
                                            atta_num = atta_num + (atta_num * increased_spell_damage) + (atta_num * increased_all_damage)
                                            sum_pest_attacks += atta_num
                                            current_power = runic_power(10, current_power, max_runic)
                                            if blood_of_the_north_points != 0:
                                                if just_used_death_rune != True:
                                                    proc_num = random.randint(0, 100)
                                                    if blood_of_the_north_points < 3:
                                                        death_proc_chance = (blood_of_the_north_points * .3) * 100
                                                    elif blood_of_the_north_points == 3:
                                                        death_proc_chance = 100
                                                    if death_proc_chance >= proc_num:
                                                        death_castable = castable + death
                                                        rune_cd_tracker[death_castable] = rune_cd(haste_rune_cd, current_time)
                                                        rune_cd_tracker[castable] = 10000  
                                            if reaping_points != 0:
                                                if just_used_death_rune != True:
                                                    proc_num = random.randint(0, 100)
                                                    if reaping_points < 3:
                                                        death_proc_chance = (reaping_points * .3) * 100
                                                    elif reaping_points == 3:
                                                        death_proc_chance = 100
                                                    if death_proc_chance >= proc_num:
                                                        death_castable = castable + death
                                                        rune_cd_tracker[death_castable] = rune_cd(haste_rune_cd, current_time)
                                                        rune_cd_tracker[castable] = 10000
                                            if rune_of_cinderglacier_active == True:
                                                 rune_of_cinderglacier_damage = atta_num * .2
                                                 rune_of_cinderglacier_active_count += 1
                                                 rotation.append("Rune of Cinderglacier")
                                                 rotation_time.append(current_time)
                                                 rotation_status.append("Active")
                                                 rotation_damage.append(atta_num * .2)
                                                 if rune_of_cinderglacier_active_count == 2:
                                                     rune_of_cinderglacier_active = False
                                            rotation.append("Pestilence")
                                            rotation_time.append(current_time)
                                            rotation_status.append("Hit")
                                            rotation_damage.append(atta_num)
                                            current_time += gcd
                                            used_gcd = True
                                            continue
                                    if hit == False:
                                        rune_cd_tracker[castable] = rune_cd(haste_rune_cd_miss, current_time)
                                        rotation.append("Pestilence")
                                        rotation_time.append(current_time)
                                        rotation_status.append("Miss")
                                        rotation_damage.append(0)
                                        current_time = current_time + gcd
                                        used_gcd = True
                                        continue
                                                
                    if dancing_rune_weapon_points == 1:
                        if dancing_rune_weapon_active == False:
                            if dancing_rune_weapon_cd < current_time:
                                dancing_rune_weapon_active = True
                                dancing_rune_weapon_length = current_time + 12
                                if glyph_dancing_rune_weapon == True:
                                    dancing_rune_weapon_length += 5
                                dancing_rune_weapon_cd = current_time + 90
                                                
                                                
                    if heart_strike_points == 1:
                        castable = all_rune_check(blood, current_time, rune_cd_tracker) #Heart Strike
                        use_death_rune = False
                        if castable == 3:   #Heart Strike
                            until_dot0 = dots[0]
                            until_dot1 = dots[1]
                            if pestilence_allow_reset == True:
                                until_dot0 -= pestilence_reset_window
                                until_dot1 -= pestilence_reset_window
                            castable_death = all_rune_check(death, current_time, rune_cd_tracker)
                            castable_death_f = all_rune_check(death_f, current_time, rune_cd_tracker)
                            castable_death_u = all_rune_check(death_u, current_time, rune_cd_tracker)
                            if castable_death != 3:
                                if until_dot0 <= current_time + haste_rune_cd:
                                    if until_dot1 <= current_time + haste_rune_cd:
                                        use_death_rune = True
                                        just_used_death_rune = True
                                        castable = castable_death
                            elif castable_death_f != 3:
                                if until_dot0 <= current_time + haste_rune_cd:
                                    if until_dot1 <= current_time + haste_rune_cd:
                                        use_death_rune = True
                                        just_used_death_rune = True
                                        castable = castable_death_f
                            elif castable_death_u != 3:
                                if until_dot0 <= current_time + haste_rune_cd:
                                    if until_dot1 <= current_time + haste_rune_cd:
                                        use_death_rune = True
                                        just_used_death_rune = True
                                        castable = castable_death_u
                        if castable != 3:  
                            if castable == 0:
                                castable_death = all_rune_check(death, current_time, rune_cd_tracker)
                                castable_death_f = all_rune_check(death_f, current_time, rune_cd_tracker)
                                castable_death_u = all_rune_check(death_u, current_time, rune_cd_tracker)
                                until_dot0 = dots[0]
                                until_dot1 = dots[1]
                                if pestilence_allow_reset == True:
                                    until_dot0 -= pestilence_reset_window
                                    until_dot1 -= pestilence_reset_window
                                if castable_death != 3:
                                    if until_dot0 <= current_time + haste_rune_cd:
                                        if until_dot1 <= current_time + haste_rune_cd:
                                            castable += 2
                                            skip_castable = 2
                                elif castable_death_f != 3:
                                    if until_dot0 <= current_time + haste_rune_cd:
                                        if until_dot1 <= current_time + haste_rune_cd:
                                            castable += 2
                                            skip_castable = 2
                                elif castable_death_u != 3:
                                    if until_dot0 <= current_time + haste_rune_cd:
                                        if until_dot1 <= current_time + haste_rune_cd:
                                            castable += 2
                                            skip_castable = 2
                            if castable == 1:
                                castable_death = all_rune_check(death, current_time, rune_cd_tracker)
                                castable_death_f = all_rune_check(death_f, current_time, rune_cd_tracker)
                                castable_death_u = all_rune_check(death_u, current_time, rune_cd_tracker)
                                until_dot0 = dots[0]
                                until_dot1 = dots[1]
                                if pestilence_allow_reset == True:
                                    until_dot0 -= pestilence_reset_window
                                    until_dot1 -= pestilence_reset_window
                                if castable_death != 3:
                                    if until_dot0 <= current_time + haste_rune_cd:
                                        if until_dot1 <= current_time + haste_rune_cd:
                                            castable += 1
                                            skip_castable = 1
                                elif castable_death_f != 3:
                                    if until_dot0 <= current_time + haste_rune_cd:
                                        if until_dot1 <= current_time + haste_rune_cd:
                                            castable += 1
                                            skip_castable = 1
                                elif castable_death_u != 3:
                                    if until_dot0 <= current_time + haste_rune_cd:
                                        if until_dot1 <= current_time + haste_rune_cd:
                                            castable += 1
                                            skip_castable = 1  
                            if castable == 2: 
                                castable = 0
                                if skip_castable == 1:
                                    castable = 1
                                    skip_castable = 0
                                if skip_castable == 2:
                                    castable = 0
                                    skip_castable = 0
                                if use_death_rune == True:
                                    use_death_rune = False
                                    if castable_death != 3:
                                        rune_cd_tracker[castable] = 0
                                        if castable_death == 2:
                                            castable_death = 0
                                        rune_cd_tracker[castable_death + 6] = 10000
                                    elif castable_death_f != 3:
                                        castable += 2
                                        rune_cd_tracker[castable] = 0
                                        if castable_death_f == 2:
                                            castable_death_f = 0
                                        rune_cd_tracker[castable_death_f + 8] = 10000
                                    elif castable_death_u != 3:
                                        castable += 4
                                        rune_cd_tracker[castable] = 0
                                        if castable_death_u == 2:
                                            castable_death_u = 0
                                        rune_cd_tracker[castable_death_u + 10] = 10000
                                else:
                                    use_death_rune = False
                                if amount_of_targets > 1:
                                    attack_table_results = attack_table(1, tanking, H2, True, False, hit_from_gear, hit_from_other, target_level, all_expertise_dodge, all_expertise_parry, total_crit, (annihilation_talent_points / 100) + increased_phy_crit + ((subversion_points * 3) / 100))
                                    armor_red_amount = dam_reduc(current_armor, armor_penetration, target_level)
                                    wep_roll = weapon_roll(mh_input_lowend_weapon_damage,mh_input_topend_weapon_damage)
                                    wep_roll = wep_roll + (attack_damage_normalization * current_ap / 14)
                                    #Rune Hit
                                    haste_percentage = (total_haste_rating / 25.21) / 100 #Returns a result of 0 - 1 for 0% - 100%
                                    haste_rune_cd = rune_grade_timer(current_time, last_rune_change[castable], last_rune_change[castable+6])
                                    if improved_unholy_presence_points != 0:
                                        if dk_presence == 2:
                                            haste_rune_cd = haste_rune_cd - (haste_rune_cd * ((improved_unholy_presence_points * 5) / 100))
                                    if dk_presence != 2:
                                        gcd = input_gcd / (1 + haste_percentage)
                                        if gcd < 1:
                                            gcd = 1
                                    ##Rune Miss
                                    haste_rune_cd_miss = 1
                                    how_many_dots_on_target = 0
                                    if dots[0] > current_time:
                                        how_many_dots_on_target += 1
                                    if dots[1] > current_time:
                                        how_many_dots_on_target += 1
                                    if dots[2] > current_time:
                                        how_many_dots_on_target += 1
                                    if multiple_adds_timer < current_time:
                                        how_many_dots_on_target = 0
                                    if dancing_rune_weapon_points == 1:
                                        if dancing_rune_weapon_active == True:
                                            if attack_table_results == 0:
                                                atta_num = 0
                                                rotation.append("Dancing Rune Weapon")
                                                rotation_time.append(current_time)
                                                rotation_status.append("Miss")
                                                rotation_damage.append(atta_num)
                                            elif attack_table_results == 1:
                                                atta_num = 0
                                                rotation.append("Dancing Rune Weapon")
                                                rotation_time.append(current_time)
                                                rotation_status.append("Dodge")
                                                rotation_damage.append(atta_num)
                                            elif attack_table_results == 5:
                                                atta_num = (((0 + (wep_roll * .25)) + (( 0 + (wep_roll * .25)) * (.1 * how_many_dots_on_target)) + (( 0 + (wep_roll * .25)) * (.1 * how_many_dots_on_target) * darkruned_battlegear_four_set)) - (((0 + (wep_roll * .25)) + (( 0 + (wep_roll * .25)) * (.1 * how_many_dots_on_target)) + (( 0 + (wep_roll * .25)) * (.1 * how_many_dots_on_target) * darkruned_battlegear_four_set)) * armor_red_amount))  * (var_crit_amount)
                                                if dk_presence == 0:
                                                    atta_num = atta_num + (atta_num * .15)
                                                if t9_tank_two_set == True:
                                                    atta_num = atta_num + (atta_num *.05)
                                                if blood_strikes_points != 0:
                                                    atta_num = atta_num + ((blood_strikes_points * 15) / 100)
                                                if might_of_mograine_points != 0:
                                                    atta_num += atta_num * ((might_of_mograine_points * 15) / 100)
                                                if scourgelords_battlegear_two_set == True:
                                                    atta_num = atta_num + (atta_num * .07)
                                                if hysteria_active == True:
                                                    atta_num = atta_num + (atta_num * .2)
                                                if tricksoftt_active == True:
                                                    atta_num = atta_num + (atta_num * .15)
                                                atta_num = atta_num + (atta_num * increased_physical_damage) + (atta_num * increased_all_damage)
                                                atta_num = atta_num * dancing_rune_weapon_damage_multi
                                                dancing_rune_weapon_damage += atta_num
                                                rotation.append("Dancing Rune Weapon")
                                                rotation_time.append(current_time)
                                                rotation_status.append("Crit") 
                                                rotation_damage.append(atta_num)
                                                trinket_hit_crit_tracker = 2
                                                if sigil_of_haunted_dreams == True:
                                                    if random.randint(0, 100) < 15:
                                                        if sigil_of_haunted_dreams_buff == False:
                                                            sigil_of_haunted_dreams_buff = True
                                                            sigil_of_haunted_dreams_timer = current_time + 10  
                                                            total_crit = total_crit + ((173 / 45.8) / 100) 
                                                if t9_dps_two_set == True:
                                                    if t9_bonus == False:
                                                        if t9_cd_timer < current_time:
                                                            if (random.randint(0, 10000)/100) < 50:
                                                                t9_bonus = True
                                                                t9_cd_timer = current_time + 45
                                                                t9_active_timer = current_time + 15
                                                                bonus_loop_str += 180
                                                                rotation.append("T9 DPS 2p Bonus")
                                                                rotation_time.append(current_time)
                                                                rotation_damage.append(0)
                                                                rotation_status.append("Proc")
                                                if sudden_doom_points != 0:  #Sudden Doom aka Free Death Coil
                                                    if (random.randint(0, 10000)/100) < sudden_doom_points * 5:
                                                        hit = spell_hit(spell_hit_total, increased_spell_hit, target_level)
                                                        crit = spell_crit((total_crit + (darkruned_battlegear_two_set / 100)), spell_hit_total, increased_spell_hit, target_level, increased_spell_crit)
                                                        if hit == True:
                                                            if crit == True:
                                                                atta_num = random.randint(443, 665)
                                                                atta_num = (atta_num + ((current_ap + (current_ap * ((impurity_points * 4) / 100))) * 0)) * var_crit_amount
                                                                if sigil_of_vengeful_heart == True:
                                                                    atta_num + 380
                                                                if sigil_of_the_wild_buck == True:
                                                                    atta_num += 80
                                                                if black_ice_points == 5:
                                                                    atta_num = atta_num + (atta_num * .1)
                                                                elif black_ice_points == 4:
                                                                    atta_num = atta_num + (atta_num * .08)
                                                                elif black_ice_points == 3:
                                                                    atta_num = atta_num + (atta_num * .06)
                                                                elif black_ice_points == 2:
                                                                    atta_num = atta_num + (atta_num * .04)
                                                                elif black_ice_points == 1:
                                                                    atta_num = atta_num + (atta_num * .02)
                                                                if dk_presence == 0:
                                                                    atta_num = atta_num + (atta_num * .15)
                                                                if tundra_stalker_points != 0:
                                                                    if dots[0] > current_time:
                                                                        atta_num = atta_num + (atta_num * (tundra_stalker_points * .03))
                                                                if glyph_death_coil == True:
                                                                    atta_num += atta_num * .15
                                                                if rage_of_rivendale_points != 0:
                                                                    if dots[1] > current_time:
                                                                        atta_num += atta_num * ((rage_of_rivendale_points * 2) / 100)
                                                                if morbitity_points != 0:
                                                                    atta_num += ((morbitity_points * 5) / 100)
                                                                if hysteria_active == True:
                                                                    atta_num = atta_num + (atta_num * .2)
                                                                if tricksoftt_active == True:
                                                                    atta_num = atta_num + (atta_num * .15)
                                                                atta_num = atta_num + (atta_num * increased_spell_damage) + (atta_num * increased_all_damage)
                                                                sudden_doom_damage += atta_num
                                                                if unholy_blight_points == 1:
                                                                    unholy_blight_amount = atta_num / 10   
                                                                    unholy_blight_timer = current_time + 10
                                                                if rune_of_cinderglacier_active == True:
                                                                     rune_of_cinderglacier_damage = atta_num * .2
                                                                     rune_of_cinderglacier_active_count += 1
                                                                     rotation.append("Rune of Cinderglacier")
                                                                     rotation_time.append(current_time)
                                                                     rotation_status.append("Active")
                                                                     rotation_damage.append(atta_num * .2)
                                                                     if rune_of_cinderglacier_active_count == 2:
                                                                         rune_of_cinderglacier_active = False
                                                                rotation.append("Sudden Doom")
                                                                rotation_time.append(current_time)
                                                                rotation_status.append("Crit")
                                                                rotation_damage.append(atta_num)
                                                            else:
                                                                atta_num = random.randint(443, 665)
                                                                atta_num = (atta_num + ((current_ap + (current_ap * ((impurity_points * 4) / 100))) * 0))
                                                                if sigil_of_vengeful_heart == True:
                                                                    atta_num + 380
                                                                if sigil_of_the_wild_buck == True:
                                                                    atta_num += 80
                                                                if black_ice_points == 5:
                                                                    atta_num = atta_num + (atta_num * .1)
                                                                elif black_ice_points == 4:
                                                                    atta_num = atta_num + (atta_num * .08)
                                                                elif black_ice_points == 3:
                                                                    atta_num = atta_num + (atta_num * .06)
                                                                elif black_ice_points == 2:
                                                                    atta_num = atta_num + (atta_num * .04)
                                                                elif black_ice_points == 1:
                                                                    atta_num = atta_num + (atta_num * .02)
                                                                if dk_presence == 0:
                                                                    atta_num = atta_num + (atta_num * .15)
                                                                if tundra_stalker_points != 0:
                                                                    if dots[0] > current_time:
                                                                        atta_num = atta_num + (atta_num * (tundra_stalker_points * .03))
                                                                if glyph_death_coil == True:
                                                                    atta_num += atta_num * .15
                                                                if rage_of_rivendale_points != 0:
                                                                    if dots[1] > current_time:
                                                                        atta_num += atta_num * ((rage_of_rivendale_points * 2) / 100)
                                                                if morbitity_points != 0:
                                                                    atta_num += ((morbitity_points * 5) / 100)
                                                                if hysteria_active == True:
                                                                    atta_num = atta_num + (atta_num * .2)
                                                                if tricksoftt_active == True:
                                                                    atta_num = atta_num + (atta_num * .15)
                                                                atta_num = atta_num + (atta_num * increased_spell_damage) + (atta_num * increased_all_damage)
                                                                sudden_doom_damage += atta_num
                                                                if unholy_blight_points == 1:
                                                                    unholy_blight_amount = atta_num / 10 
                                                                    unholy_blight_timer = current_time + 10
                                                                if rune_of_cinderglacier_active == True:
                                                                     rune_of_cinderglacier_damage = atta_num * .2
                                                                     rune_of_cinderglacier_active_count += 1
                                                                     rotation.append("Rune of Cinderglacier")
                                                                     rotation_time.append(current_time)
                                                                     rotation_status.append("Active")
                                                                     rotation_damage.append(atta_num * .2)
                                                                     if rune_of_cinderglacier_active_count == 2:
                                                                         rune_of_cinderglacier_active = False
                                                                rotation.append("Sudden Doom")
                                                                rotation_time.append(current_time)
                                                                rotation_status.append("Hit")
                                                                rotation_damage.append(atta_num)
                                                        if hit == False:
                                                            rotation.append("Sudden Doom")
                                                            rotation_time.append(current_time)
                                                            rotation_status.append("Miss")
                                                            rotation_damage.append(0)                                            
                                            elif attack_table_results == 7:
                                                atta_num = (((0 + (wep_roll * .25)) + (( 0 + (wep_roll * .25)) * (.1 * how_many_dots_on_target)) + (( 0 + (wep_roll * .25)) * (.1 * how_many_dots_on_target) * darkruned_battlegear_four_set)) - (((0 + (wep_roll * .25)) + (( 0 + (wep_roll * .25)) * (.1 * how_many_dots_on_target)) + (( 0 + (wep_roll * .25)) * (.1 * how_many_dots_on_target) * darkruned_battlegear_four_set)) * armor_red_amount))
                                                if dk_presence == 0:
                                                    atta_num = atta_num + (atta_num * .15)
                                                if t9_tank_two_set == True:
                                                    atta_num = atta_num + (atta_num *.05)
                                                if blood_strikes_points != 0:
                                                    atta_num = atta_num + ((blood_strikes_points * 15) / 100)
                                                if might_of_mograine_points != 0:
                                                    atta_num += atta_num * ((might_of_mograine_points * 15) / 100)
                                                if scourgelords_battlegear_two_set == True:
                                                    atta_num = atta_num + (atta_num * .07)
                                                if hysteria_active == True:
                                                    atta_num = atta_num + (atta_num * .2)
                                                if tricksoftt_active == True:
                                                    atta_num = atta_num + (atta_num * .15)
                                                atta_num = atta_num + (atta_num * increased_physical_damage) + (atta_num * increased_all_damage)
                                                atta_num = atta_num * dancing_rune_weapon_damage_multi
                                                dancing_rune_weapon_damage += atta_num
                                                rotation.append("Dancing Rune Weapon")
                                                rotation_time.append(current_time)
                                                rotation_status.append("Hit") 
                                                rotation_damage.append(atta_num)
                                                trinket_hit_crit_tracker = 1
                                                if sigil_of_haunted_dreams == True:
                                                    if random.randint(0, 100) < 15:
                                                        if sigil_of_haunted_dreams_buff == False:
                                                            sigil_of_haunted_dreams_buff = True
                                                            sigil_of_haunted_dreams_timer = current_time + 10  
                                                            total_crit = total_crit + ((173 / 45.8) / 100) 
                                                if t9_dps_two_set == True:
                                                    if t9_bonus == False:
                                                        if t9_cd_timer < current_time:
                                                            if (random.randint(0, 10000)/100) < 50:
                                                                t9_bonus = True
                                                                t9_cd_timer = current_time + 45
                                                                t9_active_timer = current_time + 15
                                                                bonus_loop_str += 180
                                                                rotation.append("T9 DPS 2p Bonus")
                                                                rotation_time.append(current_time)
                                                                rotation_damage.append(0)
                                                                rotation_status.append("Proc")
                                                if sudden_doom_points != 0:  #Sudden Doom aka Free Death Coil
                                                    if (random.randint(0, 10000)/100) < sudden_doom_points * 5:
                                                        hit = spell_hit(spell_hit_total, increased_spell_hit, target_level)
                                                        crit = spell_crit((total_crit + (darkruned_battlegear_two_set / 100)), spell_hit_total, increased_spell_hit, target_level, increased_spell_crit)
                                                        if hit == True:
                                                            if crit == True:
                                                                atta_num = random.randint(443, 665)
                                                                atta_num = (atta_num + ((current_ap + (current_ap * ((impurity_points * 4) / 100))) * 0)) * var_crit_amount
                                                                if sigil_of_vengeful_heart == True:
                                                                    atta_num + 380
                                                                if sigil_of_the_wild_buck == True:
                                                                    atta_num += 80
                                                                if black_ice_points == 5:
                                                                    atta_num = atta_num + (atta_num * .1)
                                                                elif black_ice_points == 4:
                                                                    atta_num = atta_num + (atta_num * .08)
                                                                elif black_ice_points == 3:
                                                                    atta_num = atta_num + (atta_num * .06)
                                                                elif black_ice_points == 2:
                                                                    atta_num = atta_num + (atta_num * .04)
                                                                elif black_ice_points == 1:
                                                                    atta_num = atta_num + (atta_num * .02)
                                                                if dk_presence == 0:
                                                                    atta_num = atta_num + (atta_num * .15)
                                                                if tundra_stalker_points != 0:
                                                                    if dots[0] > current_time:
                                                                        atta_num = atta_num + (atta_num * (tundra_stalker_points * .03))
                                                                if glyph_death_coil == True:
                                                                    atta_num += atta_num * .15
                                                                if rage_of_rivendale_points != 0:
                                                                    if dots[1] > current_time:
                                                                        atta_num += atta_num * ((rage_of_rivendale_points * 2) / 100)
                                                                if morbitity_points != 0:
                                                                    atta_num += ((morbitity_points * 5) / 100)
                                                                if hysteria_active == True:
                                                                    atta_num = atta_num + (atta_num * .2)
                                                                if tricksoftt_active == True:
                                                                    atta_num = atta_num + (atta_num * .15)
                                                                atta_num = atta_num + (atta_num * increased_spell_damage) + (atta_num * increased_all_damage)
                                                                sudden_doom_damage += atta_num
                                                                if unholy_blight_points == 1:
                                                                    unholy_blight_amount = atta_num / 10   
                                                                    unholy_blight_timer = current_time + 10
                                                                if rune_of_cinderglacier_active == True:
                                                                     rune_of_cinderglacier_damage = atta_num * .2
                                                                     rune_of_cinderglacier_active_count += 1
                                                                     rotation.append("Rune of Cinderglacier")
                                                                     rotation_time.append(current_time)
                                                                     rotation_status.append("Active")
                                                                     rotation_damage.append(atta_num * .2)
                                                                     if rune_of_cinderglacier_active_count == 2:
                                                                         rune_of_cinderglacier_active = False
                                                                rotation.append("Sudden Doom")
                                                                rotation_time.append(current_time)
                                                                rotation_status.append("Crit")
                                                                rotation_damage.append(atta_num)
                                                            else:
                                                                atta_num = random.randint(443, 665)
                                                                atta_num = (atta_num + ((current_ap + (current_ap * ((impurity_points * 4) / 100))) * 0))
                                                                if sigil_of_vengeful_heart == True:
                                                                    atta_num + 380
                                                                if sigil_of_the_wild_buck == True:
                                                                    atta_num += 80
                                                                if black_ice_points == 5:
                                                                    atta_num = atta_num + (atta_num * .1)
                                                                elif black_ice_points == 4:
                                                                    atta_num = atta_num + (atta_num * .08)
                                                                elif black_ice_points == 3:
                                                                    atta_num = atta_num + (atta_num * .06)
                                                                elif black_ice_points == 2:
                                                                    atta_num = atta_num + (atta_num * .04)
                                                                elif black_ice_points == 1:
                                                                    atta_num = atta_num + (atta_num * .02)
                                                                if dk_presence == 0:
                                                                    atta_num = atta_num + (atta_num * .15)
                                                                if tundra_stalker_points != 0:
                                                                    if dots[0] > current_time:
                                                                        atta_num = atta_num + (atta_num * (tundra_stalker_points * .03))
                                                                if glyph_death_coil == True:
                                                                    atta_num += atta_num * .15
                                                                if rage_of_rivendale_points != 0:
                                                                    if dots[1] > current_time:
                                                                        atta_num += atta_num * ((rage_of_rivendale_points * 2) / 100)
                                                                if morbitity_points != 0:
                                                                    atta_num += ((morbitity_points * 5) / 100)
                                                                if hysteria_active == True:
                                                                    atta_num = atta_num + (atta_num * .2)
                                                                if tricksoftt_active == True:
                                                                    atta_num = atta_num + (atta_num * .15)
                                                                atta_num = atta_num + (atta_num * increased_spell_damage) + (atta_num * increased_all_damage)
                                                                sudden_doom_damage += atta_num
                                                                if unholy_blight_points == 1:
                                                                    unholy_blight_amount = atta_num / 10 
                                                                    unholy_blight_timer = current_time + 10
                                                                if rune_of_cinderglacier_active == True:
                                                                     rune_of_cinderglacier_damage = atta_num * .2
                                                                     rune_of_cinderglacier_active_count += 1
                                                                     rotation.append("Rune of Cinderglacier")
                                                                     rotation_time.append(current_time)
                                                                     rotation_status.append("Active")
                                                                     rotation_damage.append(atta_num * .2)
                                                                     if rune_of_cinderglacier_active_count == 2:
                                                                         rune_of_cinderglacier_active = False
                                                                rotation.append("Sudden Doom")
                                                                rotation_time.append(current_time)
                                                                rotation_status.append("Hit")
                                                                rotation_damage.append(atta_num)
                                                        if hit == False:
                                                            rotation.append("Sudden Doom")
                                                            rotation_time.append(current_time)
                                                            rotation_status.append("Miss")
                                                            rotation_damage.append(0)   
                                    if attack_table_results == 0:
                                        atta_num = 0
                                        rotation.append("Heart Strike - Second Target")
                                        rotation_time.append(current_time)
                                        rotation_status.append("Miss")
                                        rotation_damage.append(atta_num)
                                    elif attack_table_results == 1:
                                        atta_num = 0
                                        rotation.append("Heart Strike - Second Target")
                                        rotation_time.append(current_time)
                                        rotation_status.append("Dodge")
                                        rotation_damage.append(atta_num)
                                    elif attack_table_results == 5:
                                        #crit attack
                                        atta_num = (((0 + (wep_roll * .25)) + (( 0 + (wep_roll * .25)) * (.1 * how_many_dots_on_target)) + (( 0 + (wep_roll * .25)) * (.1 * how_many_dots_on_target) * darkruned_battlegear_four_set)) - (((0 + (wep_roll * .25)) + (( 0 + (wep_roll * .25)) * (.1 * how_many_dots_on_target)) + (( 0 + (wep_roll * .25)) * (.1 * how_many_dots_on_target) * darkruned_battlegear_four_set)) * armor_red_amount))  * (var_crit_amount)
                                        if dk_presence == 0:
                                            atta_num = atta_num + (atta_num * .15)
                                        if t9_tank_two_set == True:
                                            atta_num = atta_num + (atta_num *.05)
                                        if blood_strikes_points != 0:
                                            atta_num = atta_num + ((blood_strikes_points * 15) / 100)
                                        if might_of_mograine_points != 0:
                                            atta_num += atta_num * ((might_of_mograine_points * 15) / 100)
                                        if scourgelords_battlegear_two_set == True:
                                            atta_num = atta_num + (atta_num * .07)
                                        if hysteria_active == True:
                                            atta_num = atta_num + (atta_num * .2)
                                        if tricksoftt_active == True:
                                            atta_num = atta_num + (atta_num * .15)
                                        atta_num = atta_num + (atta_num * increased_physical_damage) + (atta_num * increased_all_damage)
                                        sum_heart_strike_attacks += atta_num
                                        trinket_hit_crit_tracker = 2
                                        if sigil_of_haunted_dreams == True:
                                            if random.randint(0, 100) < 15:
                                                if sigil_of_haunted_dreams_buff == False:
                                                    sigil_of_haunted_dreams_buff = True
                                                    sigil_of_haunted_dreams_timer = current_time + 10  
                                                    total_crit = total_crit + ((173 / 45.8) / 100) 
                                        if t9_dps_two_set == True:
                                            if t9_bonus == False:
                                                if t9_cd_timer < current_time:
                                                    if (random.randint(0, 10000)/100) < 50:
                                                        t9_bonus = True
                                                        t9_cd_timer = current_time + 45
                                                        t9_active_timer = current_time + 15
                                                        bonus_loop_str += 180
                                                        rotation.append("T9 DPS 2p Bonus")
                                                        rotation_time.append(current_time)
                                                        rotation_damage.append(0)
                                                        rotation_status.append("Proc")
                                        if sudden_doom_points != 0:  #Sudden Doom aka Free Death Coil
                                            if (random.randint(0, 10000)/100) < sudden_doom_points * 5:
                                                hit = spell_hit(spell_hit_total, increased_spell_hit, target_level)
                                                crit = spell_crit((total_crit + (darkruned_battlegear_two_set / 100)), spell_hit_total, increased_spell_hit, target_level, increased_spell_crit)
                                                if hit == True:
                                                    if crit == True:
                                                        atta_num = random.randint(443, 665)
                                                        atta_num = (atta_num + ((current_ap + (current_ap * ((impurity_points * 4) / 100))) * 0)) * var_crit_amount
                                                        if sigil_of_vengeful_heart == True:
                                                            atta_num + 380
                                                        if sigil_of_the_wild_buck == True:
                                                            atta_num += 80
                                                        if black_ice_points == 5:
                                                            atta_num = atta_num + (atta_num * .1)
                                                        elif black_ice_points == 4:
                                                            atta_num = atta_num + (atta_num * .08)
                                                        elif black_ice_points == 3:
                                                            atta_num = atta_num + (atta_num * .06)
                                                        elif black_ice_points == 2:
                                                            atta_num = atta_num + (atta_num * .04)
                                                        elif black_ice_points == 1:
                                                            atta_num = atta_num + (atta_num * .02)
                                                        if dk_presence == 0:
                                                            atta_num = atta_num + (atta_num * .15)
                                                        if tundra_stalker_points != 0:
                                                            if dots[0] > current_time:
                                                                atta_num = atta_num + (atta_num * (tundra_stalker_points * .03))
                                                        if glyph_death_coil == True:
                                                            atta_num += atta_num * .15
                                                        if rage_of_rivendale_points != 0:
                                                            if dots[1] > current_time:
                                                                atta_num += atta_num * ((rage_of_rivendale_points * 2) / 100)
                                                        if morbitity_points != 0:
                                                            atta_num += ((morbitity_points * 5) / 100)
                                                        if hysteria_active == True:
                                                            atta_num = atta_num + (atta_num * .2)
                                                        if tricksoftt_active == True:
                                                            atta_num = atta_num + (atta_num * .15)
                                                        atta_num = atta_num + (atta_num * increased_spell_damage) + (atta_num * increased_all_damage)
                                                        sudden_doom_damage += atta_num
                                                        if unholy_blight_points == 1:
                                                            unholy_blight_amount = atta_num / 10   
                                                            unholy_blight_timer = current_time + 10
                                                        if rune_of_cinderglacier_active == True:
                                                             rune_of_cinderglacier_damage = atta_num * .2
                                                             rune_of_cinderglacier_active_count += 1
                                                             rotation.append("Rune of Cinderglacier")
                                                             rotation_time.append(current_time)
                                                             rotation_status.append("Active")
                                                             rotation_damage.append(atta_num * .2)
                                                             if rune_of_cinderglacier_active_count == 2:
                                                                 rune_of_cinderglacier_active = False
                                                        rotation.append("Sudden Doom")
                                                        rotation_time.append(current_time)
                                                        rotation_status.append("Crit")
                                                        rotation_damage.append(atta_num)
                                                    else:
                                                        atta_num = random.randint(443, 665)
                                                        atta_num = (atta_num + ((current_ap + (current_ap * ((impurity_points * 4) / 100))) * 0))
                                                        if sigil_of_vengeful_heart == True:
                                                            atta_num + 380
                                                        if sigil_of_the_wild_buck == True:
                                                            atta_num += 80
                                                        if black_ice_points == 5:
                                                            atta_num = atta_num + (atta_num * .1)
                                                        elif black_ice_points == 4:
                                                            atta_num = atta_num + (atta_num * .08)
                                                        elif black_ice_points == 3:
                                                            atta_num = atta_num + (atta_num * .06)
                                                        elif black_ice_points == 2:
                                                            atta_num = atta_num + (atta_num * .04)
                                                        elif black_ice_points == 1:
                                                            atta_num = atta_num + (atta_num * .02)
                                                        if dk_presence == 0:
                                                            atta_num = atta_num + (atta_num * .15)
                                                        if tundra_stalker_points != 0:
                                                            if dots[0] > current_time:
                                                                atta_num = atta_num + (atta_num * (tundra_stalker_points * .03))
                                                        if glyph_death_coil == True:
                                                            atta_num += atta_num * .15
                                                        if rage_of_rivendale_points != 0:
                                                            if dots[1] > current_time:
                                                                atta_num += atta_num * ((rage_of_rivendale_points * 2) / 100)
                                                        if morbitity_points != 0:
                                                            atta_num += ((morbitity_points * 5) / 100)
                                                        if hysteria_active == True:
                                                            atta_num = atta_num + (atta_num * .2)
                                                        if tricksoftt_active == True:
                                                            atta_num = atta_num + (atta_num * .15)
                                                        atta_num = atta_num + (atta_num * increased_spell_damage) + (atta_num * increased_all_damage)
                                                        sudden_doom_damage += atta_num
                                                        if unholy_blight_points == 1:
                                                            unholy_blight_amount = atta_num / 10 
                                                            unholy_blight_timer = current_time + 10
                                                        if rune_of_cinderglacier_active == True:
                                                             rune_of_cinderglacier_damage = atta_num * .2
                                                             rune_of_cinderglacier_active_count += 1
                                                             rotation.append("Rune of Cinderglacier")
                                                             rotation_time.append(current_time)
                                                             rotation_status.append("Active")
                                                             rotation_damage.append(atta_num * .2)
                                                             if rune_of_cinderglacier_active_count == 2:
                                                                 rune_of_cinderglacier_active = False
                                                        rotation.append("Sudden Doom")
                                                        rotation_time.append(current_time)
                                                        rotation_status.append("Hit")
                                                        rotation_damage.append(atta_num)
                                                if hit == False:
                                                    rotation.append("Sudden Doom")
                                                    rotation_time.append(current_time)
                                                    rotation_status.append("Miss")
                                                    rotation_damage.append(0)
                                        rotation.append("Heart Strike - Second Target")
                                        rotation_time.append(current_time)
                                        rotation_status.append("Crit")
                                        rotation_damage.append(atta_num)
                                    elif attack_table_results == 7:
                                        #normal attack
                                        atta_num = (((0 + (wep_roll * .25)) + (( 0 + (wep_roll * .25)) * (.1 * how_many_dots_on_target)) + (( 0 + (wep_roll * .25)) * (.1 * how_many_dots_on_target) * darkruned_battlegear_four_set)) - (((0 + (wep_roll * .25)) + (( 0 + (wep_roll * .25)) * (.1 * how_many_dots_on_target)) + (( 0 + (wep_roll * .25)) * (.1 * how_many_dots_on_target) * darkruned_battlegear_four_set)) * armor_red_amount))
                                        if dk_presence == 0:
                                            atta_num = atta_num + (atta_num * .15)
                                        if t9_tank_two_set == True:
                                            atta_num = atta_num + (atta_num *.05)
                                        if blood_strikes_points != 0:
                                            atta_num = atta_num + ((blood_strikes_points * 15) / 100)
                                        if might_of_mograine_points != 0:
                                            atta_num += atta_num * ((might_of_mograine_points * 15) / 100)
                                        if scourgelords_battlegear_two_set == True:
                                            atta_num = atta_num + (atta_num * .07)
                                        if hysteria_active == True:
                                            atta_num = atta_num + (atta_num * .2)
                                        if tricksoftt_active == True:
                                            atta_num = atta_num + (atta_num * .15)
                                        atta_num = atta_num + (atta_num * increased_physical_damage) + (atta_num * increased_all_damage)
                                        sum_heart_strike_attacks += atta_num
                                        trinket_hit_crit_tracker = 1
                                        if sigil_of_haunted_dreams == True:
                                            if random.randint(0, 100) < 15:
                                                if sigil_of_haunted_dreams_buff == False:
                                                    sigil_of_haunted_dreams_buff = True
                                                    sigil_of_haunted_dreams_timer = current_time + 10  
                                                    total_crit = total_crit + ((173 / 45.8) / 100) 
                                        if t9_dps_two_set == True:
                                            if t9_bonus == False:
                                                if t9_cd_timer < current_time:
                                                    if (random.randint(0, 10000)/100) < 50:
                                                        t9_bonus = True
                                                        t9_cd_timer = current_time + 45
                                                        t9_active_timer = current_time + 15
                                                        bonus_loop_str += 180
                                                        rotation.append("T9 DPS 2p Bonus")
                                                        rotation_time.append(current_time)
                                                        rotation_damage.append(0)
                                                        rotation_status.append("Proc")
                                        if sudden_doom_points != 0:  #Sudden Doom aka Free Death Coil
                                            if (random.randint(0, 10000)/100) < sudden_doom_points * 5:
                                                hit = spell_hit(spell_hit_total, increased_spell_hit, target_level)
                                                crit = spell_crit((total_crit + (darkruned_battlegear_two_set / 100)), spell_hit_total, increased_spell_hit, target_level, increased_spell_crit)
                                                if hit == True:
                                                    if crit == True:
                                                        atta_num = random.randint(443, 665)
                                                        atta_num = (atta_num + ((current_ap + (current_ap * ((impurity_points * 4) / 100))) * 0)) * var_crit_amount
                                                        if sigil_of_vengeful_heart == True:
                                                            atta_num + 380
                                                        if sigil_of_the_wild_buck == True:
                                                            atta_num += 80
                                                        if black_ice_points == 5:
                                                            atta_num = atta_num + (atta_num * .1)
                                                        elif black_ice_points == 4:
                                                            atta_num = atta_num + (atta_num * .08)
                                                        elif black_ice_points == 3:
                                                            atta_num = atta_num + (atta_num * .06)
                                                        elif black_ice_points == 2:
                                                            atta_num = atta_num + (atta_num * .04)
                                                        elif black_ice_points == 1:
                                                            atta_num = atta_num + (atta_num * .02)
                                                        if dk_presence == 0:
                                                            atta_num = atta_num + (atta_num * .15)
                                                        if tundra_stalker_points != 0:
                                                            if dots[0] > current_time:
                                                                atta_num = atta_num + (atta_num * (tundra_stalker_points * .03))
                                                        if glyph_death_coil == True:
                                                            atta_num += atta_num * .15
                                                        if rage_of_rivendale_points != 0:
                                                            if dots[1] > current_time:
                                                                atta_num += atta_num * ((rage_of_rivendale_points * 2) / 100)
                                                        if morbitity_points != 0:
                                                            atta_num += ((morbitity_points * 5) / 100)
                                                        if hysteria_active == True:
                                                            atta_num = atta_num + (atta_num * .2)
                                                        if tricksoftt_active == True:
                                                            atta_num = atta_num + (atta_num * .15)
                                                        atta_num = atta_num + (atta_num * increased_spell_damage) + (atta_num * increased_all_damage)
                                                        sudden_doom_damage += atta_num
                                                        if unholy_blight_points == 1:
                                                            unholy_blight_amount = atta_num / 10   
                                                            unholy_blight_timer = current_time + 10
                                                        if rune_of_cinderglacier_active == True:
                                                             rune_of_cinderglacier_damage = atta_num * .2
                                                             rune_of_cinderglacier_active_count += 1
                                                             rotation.append("Rune of Cinderglacier")
                                                             rotation_time.append(current_time)
                                                             rotation_status.append("Active")
                                                             rotation_damage.append(atta_num * .2)
                                                             if rune_of_cinderglacier_active_count == 2:
                                                                 rune_of_cinderglacier_active = False
                                                        rotation.append("Sudden Doom")
                                                        rotation_time.append(current_time)
                                                        rotation_status.append("Crit")
                                                        rotation_damage.append(atta_num)
                                                    else:
                                                        atta_num = random.randint(443, 665)
                                                        atta_num = (atta_num + ((current_ap + (current_ap * ((impurity_points * 4) / 100))) * 0))
                                                        if sigil_of_vengeful_heart == True:
                                                            atta_num + 380
                                                        if sigil_of_the_wild_buck == True:
                                                            atta_num += 80
                                                        if black_ice_points == 5:
                                                            atta_num = atta_num + (atta_num * .1)
                                                        elif black_ice_points == 4:
                                                            atta_num = atta_num + (atta_num * .08)
                                                        elif black_ice_points == 3:
                                                            atta_num = atta_num + (atta_num * .06)
                                                        elif black_ice_points == 2:
                                                            atta_num = atta_num + (atta_num * .04)
                                                        elif black_ice_points == 1:
                                                            atta_num = atta_num + (atta_num * .02)
                                                        if dk_presence == 0:
                                                            atta_num = atta_num + (atta_num * .15)
                                                        if tundra_stalker_points != 0:
                                                            if dots[0] > current_time:
                                                                atta_num = atta_num + (atta_num * (tundra_stalker_points * .03))
                                                        if glyph_death_coil == True:
                                                            atta_num += atta_num * .15
                                                        if rage_of_rivendale_points != 0:
                                                            if dots[1] > current_time:
                                                                atta_num += atta_num * ((rage_of_rivendale_points * 2) / 100)
                                                        if morbitity_points != 0:
                                                            atta_num += ((morbitity_points * 5) / 100)
                                                        if hysteria_active == True:
                                                            atta_num = atta_num + (atta_num * .2)
                                                        if tricksoftt_active == True:
                                                            atta_num = atta_num + (atta_num * .15)
                                                        atta_num = atta_num + (atta_num * increased_spell_damage) + (atta_num * increased_all_damage)
                                                        sudden_doom_damage += atta_num
                                                        if unholy_blight_points == 1:
                                                            unholy_blight_amount = atta_num / 10 
                                                            unholy_blight_timer = current_time + 10
                                                        if rune_of_cinderglacier_active == True:
                                                             rune_of_cinderglacier_damage = atta_num * .2
                                                             rune_of_cinderglacier_active_count += 1
                                                             rotation.append("Rune of Cinderglacier")
                                                             rotation_time.append(current_time)
                                                             rotation_status.append("Active")
                                                             rotation_damage.append(atta_num * .2)
                                                             if rune_of_cinderglacier_active_count == 2:
                                                                 rune_of_cinderglacier_active = False
                                                        rotation.append("Sudden Doom")
                                                        rotation_time.append(current_time)
                                                        rotation_status.append("Hit")
                                                        rotation_damage.append(atta_num)
                                                if hit == False:
                                                    rotation.append("Sudden Doom")
                                                    rotation_time.append(current_time)
                                                    rotation_status.append("Miss")
                                                    rotation_damage.append(0)
                                        rotation.append("Heart Strike - Second Target")
                                        rotation_time.append(current_time)
                                        rotation_status.append("Hit")
                                        rotation_damage.append(atta_num)
                                attack_table_results = attack_table(1, tanking, H2, True, False, hit_from_gear, hit_from_other, target_level, all_expertise_dodge, all_expertise_parry, total_crit, (annihilation_talent_points / 100) + increased_phy_crit + ((subversion_points * 3) / 100))
                                armor_red_amount = dam_reduc(current_armor, armor_penetration, target_level)
                                wep_roll = weapon_roll(mh_input_lowend_weapon_damage,mh_input_topend_weapon_damage)
                                wep_roll = wep_roll + (attack_damage_normalization * current_ap / 14)
                                #Rune Hit
                                haste_percentage = (total_haste_rating / 25.21) / 100 #Returns a result of 0 - 1 for 0% - 100%
                                haste_rune_cd = rune_grade_timer(current_time, last_rune_change[castable], last_rune_change[castable+6])
                                if improved_unholy_presence_points != 0:
                                    if dk_presence == 2:
                                        haste_rune_cd = haste_rune_cd - (haste_rune_cd * ((improved_unholy_presence_points * 5) / 100))
                                if dk_presence != 2:
                                    gcd = input_gcd / (1 + haste_percentage)
                                    if gcd < 1:
                                        gcd = 1
                                ##Rune Miss
                                haste_rune_cd_miss = 1
                                how_many_dots_on_target = 0
                                if dots[0] > current_time:
                                    how_many_dots_on_target += 1
                                if dots[1] > current_time:
                                    how_many_dots_on_target += 1
                                if dots[2] > current_time:
                                    how_many_dots_on_target += 1
                                if dancing_rune_weapon_points == 1:
                                    if dancing_rune_weapon_active == True:
                                        if attack_table_results == 0:
                                            atta_num = 0
                                            rotation.append("Dancing Rune Weapon")
                                            rotation_time.append(current_time)
                                            rotation_status.append("Miss")
                                            rotation_damage.append(atta_num)
                                        elif attack_table_results == 1:
                                            atta_num = 0
                                            rotation.append("Dancing Rune Weapon")
                                            rotation_time.append(current_time)
                                            rotation_status.append("Dodge")
                                            rotation_damage.append(atta_num)
                                        elif attack_table_results == 5:
                                            atta_num = (((0 + (wep_roll * .5)) + (( 0 + (wep_roll * .5)) * (.1 * how_many_dots_on_target)) + (( 0 + (wep_roll * .5)) * (.1 * how_many_dots_on_target) * darkruned_battlegear_four_set)) - (((0 + (wep_roll * .5)) + (( 0 + (wep_roll * .5)) * (.1 * how_many_dots_on_target)) + (( 0 + (wep_roll * .5)) * (.1 * how_many_dots_on_target) * darkruned_battlegear_four_set)) * armor_red_amount))  * (var_crit_amount)
                                            if dk_presence == 0:
                                                atta_num = atta_num + (atta_num * .15)
                                            if t9_tank_two_set == True:
                                                atta_num = atta_num + (atta_num *.05)
                                            if blood_strikes_points != 0:
                                                atta_num = atta_num + ((blood_strikes_points * 15) / 100)
                                            if might_of_mograine_points != 0:
                                                atta_num += atta_num * ((might_of_mograine_points * 15) / 100)
                                            if scourgelords_battlegear_two_set == True:
                                                atta_num = atta_num + (atta_num * .07)
                                            if hysteria_active == True:
                                                atta_num = atta_num + (atta_num * .2)
                                            if tricksoftt_active == True:
                                                atta_num = atta_num + (atta_num * .15)
                                            atta_num = atta_num + (atta_num * increased_physical_damage) + (atta_num * increased_all_damage)
                                            atta_num = atta_num * dancing_rune_weapon_damage_multi
                                            dancing_rune_weapon_damage += atta_num
                                            rotation.append("Dancing Rune Weapon")
                                            rotation_time.append(current_time)
                                            rotation_status.append("Crit") 
                                            rotation_damage.append(atta_num)
                                            trinket_hit_crit_tracker = 2
                                            if sigil_of_haunted_dreams == True:
                                                if random.randint(0, 100) < 15:
                                                    if sigil_of_haunted_dreams_buff == False:
                                                        sigil_of_haunted_dreams_buff = True
                                                        sigil_of_haunted_dreams_timer = current_time + 10  
                                                        total_crit = total_crit + ((173 / 45.8) / 100) 
                                            if t9_dps_two_set == True:
                                                if t9_bonus == False:
                                                    if t9_cd_timer < current_time:
                                                        if (random.randint(0, 10000)/100) < 50:
                                                            t9_bonus = True
                                                            t9_cd_timer = current_time + 45
                                                            t9_active_timer = current_time + 15
                                                            bonus_loop_str += 180
                                                            rotation.append("T9 DPS 2p Bonus")
                                                            rotation_time.append(current_time)
                                                            rotation_damage.append(0)
                                                            rotation_status.append("Proc")
                                            if sudden_doom_points != 0:  #Sudden Doom aka Free Death Coil
                                                if (random.randint(0, 10000)/100) < sudden_doom_points * 5:
                                                    hit = spell_hit(spell_hit_total, increased_spell_hit, target_level)
                                                    crit = spell_crit((total_crit + (darkruned_battlegear_two_set / 100)), spell_hit_total, increased_spell_hit, target_level, increased_spell_crit)
                                                    if hit == True:
                                                        if crit == True:
                                                            atta_num = random.randint(443, 665)
                                                            atta_num = (atta_num + ((current_ap + (current_ap * ((impurity_points * 4) / 100))) * 0)) * var_crit_amount
                                                            if sigil_of_vengeful_heart == True:
                                                                atta_num + 380
                                                            if sigil_of_the_wild_buck == True:
                                                                atta_num += 80
                                                            if black_ice_points == 5:
                                                                atta_num = atta_num + (atta_num * .1)
                                                            elif black_ice_points == 4:
                                                                atta_num = atta_num + (atta_num * .08)
                                                            elif black_ice_points == 3:
                                                                atta_num = atta_num + (atta_num * .06)
                                                            elif black_ice_points == 2:
                                                                atta_num = atta_num + (atta_num * .04)
                                                            elif black_ice_points == 1:
                                                                atta_num = atta_num + (atta_num * .02)
                                                            if dk_presence == 0:
                                                                atta_num = atta_num + (atta_num * .15)
                                                            if tundra_stalker_points != 0:
                                                                if dots[0] > current_time:
                                                                    atta_num = atta_num + (atta_num * (tundra_stalker_points * .03))
                                                            if glyph_death_coil == True:
                                                                atta_num += atta_num * .15
                                                            if rage_of_rivendale_points != 0:
                                                                if dots[1] > current_time:
                                                                    atta_num += atta_num * ((rage_of_rivendale_points * 2) / 100)
                                                            if morbitity_points != 0:
                                                                atta_num += ((morbitity_points * 5) / 100)
                                                            if hysteria_active == True:
                                                                atta_num = atta_num + (atta_num * .2)
                                                            if tricksoftt_active == True:
                                                                atta_num = atta_num + (atta_num * .15)
                                                            atta_num = atta_num + (atta_num * increased_spell_damage) + (atta_num * increased_all_damage)
                                                            sudden_doom_damage += atta_num
                                                            if unholy_blight_points == 1:
                                                                unholy_blight_amount = atta_num / 10   
                                                                unholy_blight_timer = current_time + 10
                                                            if rune_of_cinderglacier_active == True:
                                                                 rune_of_cinderglacier_damage = atta_num * .2
                                                                 rune_of_cinderglacier_active_count += 1
                                                                 rotation.append("Rune of Cinderglacier")
                                                                 rotation_time.append(current_time)
                                                                 rotation_status.append("Active")
                                                                 rotation_damage.append(atta_num * .2)
                                                                 if rune_of_cinderglacier_active_count == 2:
                                                                     rune_of_cinderglacier_active = False
                                                            rotation.append("Sudden Doom")
                                                            rotation_time.append(current_time)
                                                            rotation_status.append("Crit")
                                                            rotation_damage.append(atta_num)
                                                        else:
                                                            atta_num = random.randint(443, 665)
                                                            atta_num = (atta_num + ((current_ap + (current_ap * ((impurity_points * 4) / 100))) * 0))
                                                            if sigil_of_vengeful_heart == True:
                                                                atta_num + 380
                                                            if sigil_of_the_wild_buck == True:
                                                                atta_num += 80
                                                            if black_ice_points == 5:
                                                                atta_num = atta_num + (atta_num * .1)
                                                            elif black_ice_points == 4:
                                                                atta_num = atta_num + (atta_num * .08)
                                                            elif black_ice_points == 3:
                                                                atta_num = atta_num + (atta_num * .06)
                                                            elif black_ice_points == 2:
                                                                atta_num = atta_num + (atta_num * .04)
                                                            elif black_ice_points == 1:
                                                                atta_num = atta_num + (atta_num * .02)
                                                            if dk_presence == 0:
                                                                atta_num = atta_num + (atta_num * .15)
                                                            if tundra_stalker_points != 0:
                                                                if dots[0] > current_time:
                                                                    atta_num = atta_num + (atta_num * (tundra_stalker_points * .03))
                                                            if glyph_death_coil == True:
                                                                atta_num += atta_num * .15
                                                            if rage_of_rivendale_points != 0:
                                                                if dots[1] > current_time:
                                                                    atta_num += atta_num * ((rage_of_rivendale_points * 2) / 100)
                                                            if morbitity_points != 0:
                                                                atta_num += ((morbitity_points * 5) / 100)
                                                            if hysteria_active == True:
                                                                atta_num = atta_num + (atta_num * .2)
                                                            if tricksoftt_active == True:
                                                                atta_num = atta_num + (atta_num * .15)
                                                            atta_num = atta_num + (atta_num * increased_spell_damage) + (atta_num * increased_all_damage)
                                                            sudden_doom_damage += atta_num
                                                            if unholy_blight_points == 1:
                                                                unholy_blight_amount = atta_num / 10 
                                                                unholy_blight_timer = current_time + 10
                                                            if rune_of_cinderglacier_active == True:
                                                                 rune_of_cinderglacier_damage = atta_num * .2
                                                                 rune_of_cinderglacier_active_count += 1
                                                                 rotation.append("Rune of Cinderglacier")
                                                                 rotation_time.append(current_time)
                                                                 rotation_status.append("Active")
                                                                 rotation_damage.append(atta_num * .2)
                                                                 if rune_of_cinderglacier_active_count == 2:
                                                                     rune_of_cinderglacier_active = False
                                                            rotation.append("Sudden Doom")
                                                            rotation_time.append(current_time)
                                                            rotation_status.append("Hit")
                                                            rotation_damage.append(atta_num)
                                                    if hit == False:
                                                        rotation.append("Sudden Doom")
                                                        rotation_time.append(current_time)
                                                        rotation_status.append("Miss")
                                                        rotation_damage.append(0)                                            
                                        elif attack_table_results == 7:
                                            atta_num = (((0 + (wep_roll * .5)) + (( 0 + (wep_roll * .5)) * (.1 * how_many_dots_on_target)) + (( 0 + (wep_roll * .5)) * (.1 * how_many_dots_on_target) * darkruned_battlegear_four_set)) - (((0 + (wep_roll * .5)) + (( 0 + (wep_roll * .5)) * (.1 * how_many_dots_on_target)) + (( 0 + (wep_roll * .5)) * (.1 * how_many_dots_on_target) * darkruned_battlegear_four_set)) * armor_red_amount))
                                            if dk_presence == 0:
                                                atta_num = atta_num + (atta_num * .15)
                                            if t9_tank_two_set == True:
                                                atta_num = atta_num + (atta_num *.05)
                                            if blood_strikes_points != 0:
                                                atta_num = atta_num + ((blood_strikes_points * 15) / 100)
                                            if might_of_mograine_points != 0:
                                                atta_num += atta_num * ((might_of_mograine_points * 15) / 100)
                                            if scourgelords_battlegear_two_set == True:
                                                atta_num = atta_num + (atta_num * .07)
                                            if hysteria_active == True:
                                                atta_num = atta_num + (atta_num * .2)
                                            if tricksoftt_active == True:
                                                atta_num = atta_num + (atta_num * .15)
                                            atta_num = atta_num + (atta_num * increased_physical_damage) + (atta_num * increased_all_damage)
                                            atta_num = atta_num * dancing_rune_weapon_damage_multi
                                            dancing_rune_weapon_damage += atta_num
                                            rotation.append("Dancing Rune Weapon")
                                            rotation_time.append(current_time)
                                            rotation_status.append("Hit") 
                                            rotation_damage.append(atta_num)
                                            trinket_hit_crit_tracker = 1
                                            if sigil_of_haunted_dreams == True:
                                                if random.randint(0, 100) < 15:
                                                    if sigil_of_haunted_dreams_buff == False:
                                                        sigil_of_haunted_dreams_buff = True
                                                        sigil_of_haunted_dreams_timer = current_time + 10  
                                                        total_crit = total_crit + ((173 / 45.8) / 100) 
                                            if t9_dps_two_set == True:
                                                if t9_bonus == False:
                                                    if t9_cd_timer < current_time:
                                                        if (random.randint(0, 10000)/100) < 50:
                                                            t9_bonus = True
                                                            t9_cd_timer = current_time + 45
                                                            t9_active_timer = current_time + 15
                                                            bonus_loop_str += 180
                                                            rotation.append("T9 DPS 2p Bonus")
                                                            rotation_time.append(current_time)
                                                            rotation_damage.append(0)
                                                            rotation_status.append("Proc")
                                            if sudden_doom_points != 0:  #Sudden Doom aka Free Death Coil
                                                if (random.randint(0, 10000)/100) < sudden_doom_points * 5:
                                                    hit = spell_hit(spell_hit_total, increased_spell_hit, target_level)
                                                    crit = spell_crit((total_crit + (darkruned_battlegear_two_set / 100)), spell_hit_total, increased_spell_hit, target_level, increased_spell_crit)
                                                    if hit == True:
                                                        if crit == True:
                                                            atta_num = random.randint(443, 665)
                                                            atta_num = (atta_num + ((current_ap + (current_ap * ((impurity_points * 4) / 100))) * 0)) * var_crit_amount
                                                            if sigil_of_vengeful_heart == True:
                                                                atta_num + 380
                                                            if sigil_of_the_wild_buck == True:
                                                                atta_num += 80
                                                            if black_ice_points == 5:
                                                                atta_num = atta_num + (atta_num * .1)
                                                            elif black_ice_points == 4:
                                                                atta_num = atta_num + (atta_num * .08)
                                                            elif black_ice_points == 3:
                                                                atta_num = atta_num + (atta_num * .06)
                                                            elif black_ice_points == 2:
                                                                atta_num = atta_num + (atta_num * .04)
                                                            elif black_ice_points == 1:
                                                                atta_num = atta_num + (atta_num * .02)
                                                            if dk_presence == 0:
                                                                atta_num = atta_num + (atta_num * .15)
                                                            if tundra_stalker_points != 0:
                                                                if dots[0] > current_time:
                                                                    atta_num = atta_num + (atta_num * (tundra_stalker_points * .03))
                                                            if glyph_death_coil == True:
                                                                atta_num += atta_num * .15
                                                            if rage_of_rivendale_points != 0:
                                                                if dots[1] > current_time:
                                                                    atta_num += atta_num * ((rage_of_rivendale_points * 2) / 100)
                                                            if morbitity_points != 0:
                                                                atta_num += ((morbitity_points * 5) / 100)
                                                            if hysteria_active == True:
                                                                atta_num = atta_num + (atta_num * .2)
                                                            if tricksoftt_active == True:
                                                                atta_num = atta_num + (atta_num * .15)
                                                            atta_num = atta_num + (atta_num * increased_spell_damage) + (atta_num * increased_all_damage)
                                                            sudden_doom_damage += atta_num
                                                            if unholy_blight_points == 1:
                                                                unholy_blight_amount = atta_num / 10   
                                                                unholy_blight_timer = current_time + 10
                                                            if rune_of_cinderglacier_active == True:
                                                                 rune_of_cinderglacier_damage = atta_num * .2
                                                                 rune_of_cinderglacier_active_count += 1
                                                                 rotation.append("Rune of Cinderglacier")
                                                                 rotation_time.append(current_time)
                                                                 rotation_status.append("Active")
                                                                 rotation_damage.append(atta_num * .2)
                                                                 if rune_of_cinderglacier_active_count == 2:
                                                                     rune_of_cinderglacier_active = False
                                                            rotation.append("Sudden Doom")
                                                            rotation_time.append(current_time)
                                                            rotation_status.append("Crit")
                                                            rotation_damage.append(atta_num)
                                                        else:
                                                            atta_num = random.randint(443, 665)
                                                            atta_num = (atta_num + ((current_ap + (current_ap * ((impurity_points * 4) / 100))) * 0))
                                                            if sigil_of_vengeful_heart == True:
                                                                atta_num + 380
                                                            if sigil_of_the_wild_buck == True:
                                                                atta_num += 80
                                                            if black_ice_points == 5:
                                                                atta_num = atta_num + (atta_num * .1)
                                                            elif black_ice_points == 4:
                                                                atta_num = atta_num + (atta_num * .08)
                                                            elif black_ice_points == 3:
                                                                atta_num = atta_num + (atta_num * .06)
                                                            elif black_ice_points == 2:
                                                                atta_num = atta_num + (atta_num * .04)
                                                            elif black_ice_points == 1:
                                                                atta_num = atta_num + (atta_num * .02)
                                                            if dk_presence == 0:
                                                                atta_num = atta_num + (atta_num * .15)
                                                            if tundra_stalker_points != 0:
                                                                if dots[0] > current_time:
                                                                    atta_num = atta_num + (atta_num * (tundra_stalker_points * .03))
                                                            if glyph_death_coil == True:
                                                                atta_num += atta_num * .15
                                                            if rage_of_rivendale_points != 0:
                                                                if dots[1] > current_time:
                                                                    atta_num += atta_num * ((rage_of_rivendale_points * 2) / 100)
                                                            if morbitity_points != 0:
                                                                atta_num += ((morbitity_points * 5) / 100)
                                                            if hysteria_active == True:
                                                                atta_num = atta_num + (atta_num * .2)
                                                            if tricksoftt_active == True:
                                                                atta_num = atta_num + (atta_num * .15)
                                                            atta_num = atta_num + (atta_num * increased_spell_damage) + (atta_num * increased_all_damage)
                                                            sudden_doom_damage += atta_num
                                                            if unholy_blight_points == 1:
                                                                unholy_blight_amount = atta_num / 10 
                                                                unholy_blight_timer = current_time + 10
                                                            if rune_of_cinderglacier_active == True:
                                                                 rune_of_cinderglacier_damage = atta_num * .2
                                                                 rune_of_cinderglacier_active_count += 1
                                                                 rotation.append("Rune of Cinderglacier")
                                                                 rotation_time.append(current_time)
                                                                 rotation_status.append("Active")
                                                                 rotation_damage.append(atta_num * .2)
                                                                 if rune_of_cinderglacier_active_count == 2:
                                                                     rune_of_cinderglacier_active = False
                                                            rotation.append("Sudden Doom")
                                                            rotation_time.append(current_time)
                                                            rotation_status.append("Hit")
                                                            rotation_damage.append(atta_num)
                                                    if hit == False:
                                                        rotation.append("Sudden Doom")
                                                        rotation_time.append(current_time)
                                                        rotation_status.append("Miss")
                                                        rotation_damage.append(0)   
                                if attack_table_results == 0:
                                    atta_num = 0
                                    rune_cd_tracker[castable] = rune_cd(haste_rune_cd_miss, current_time)
                                    rotation.append("Heart Strike")
                                    rotation_time.append(current_time)
                                    rotation_status.append("Miss")
                                    rotation_damage.append(atta_num)
                                    current_time = current_time + gcd
                                    used_gcd = True
                                    continue
                                elif attack_table_results == 1:
                                    atta_num = 0
                                    rune_cd_tracker[castable] = rune_cd(haste_rune_cd_miss, current_time)
                                    rotation.append("Heart Strike")
                                    rotation_time.append(current_time)
                                    rotation_status.append("Dodge")
                                    rotation_damage.append(atta_num)
                                    current_time = current_time + gcd
                                    used_gcd = True
                                    continue
                                elif attack_table_results == 5:
                                    #crit attack
                                    rune_cd_tracker[castable] = rune_cd(haste_rune_cd, current_time)
                                    atta_num = (((0 + (wep_roll * .5)) + (( 0 + (wep_roll * .5)) * (.1 * how_many_dots_on_target)) + (( 0 + (wep_roll * .5)) * (.1 * how_many_dots_on_target) * darkruned_battlegear_four_set)) - (((0 + (wep_roll * .5)) + (( 0 + (wep_roll * .5)) * (.1 * how_many_dots_on_target)) + (( 0 + (wep_roll * .5)) * (.1 * how_many_dots_on_target) * darkruned_battlegear_four_set)) * armor_red_amount))  * (var_crit_amount)
                                    if dk_presence == 0:
                                        atta_num = atta_num + (atta_num * .15)
                                    if t9_tank_two_set == True:
                                        atta_num = atta_num + (atta_num *.05)
                                    if blood_strikes_points != 0:
                                        atta_num = atta_num + ((blood_strikes_points * 15) / 100)
                                    if might_of_mograine_points != 0:
                                        atta_num += atta_num * ((might_of_mograine_points * 15) / 100)
                                    if scourgelords_battlegear_two_set == True:
                                        atta_num = atta_num + (atta_num * .07)
                                    if hysteria_active == True:
                                        atta_num = atta_num + (atta_num * .2)
                                    if tricksoftt_active == True:
                                        atta_num = atta_num + (atta_num * .15)
                                    atta_num = atta_num + (atta_num * increased_physical_damage) + (atta_num * increased_all_damage)
                                    sum_heart_strike_attacks += atta_num
                                    current_power = runic_power(10, current_power, max_runic)
                                    trinket_hit_crit_tracker = 2
                                    if sigil_of_haunted_dreams == True:
                                        if random.randint(0, 100) < 15:
                                            if sigil_of_haunted_dreams_buff == False:
                                                sigil_of_haunted_dreams_buff = True
                                                sigil_of_haunted_dreams_timer = current_time + 10  
                                                total_crit = total_crit + ((173 / 45.8) / 100) 
                                    if t9_dps_two_set == True:
                                        if t9_bonus == False:
                                            if t9_cd_timer < current_time:
                                                if (random.randint(0, 10000)/100) < 50:
                                                    t9_bonus = True
                                                    t9_cd_timer = current_time + 45
                                                    t9_active_timer = current_time + 15
                                                    bonus_loop_str += 180
                                                    rotation.append("T9 DPS 2p Bonus")
                                                    rotation_time.append(current_time)
                                                    rotation_damage.append(0)
                                                    rotation_status.append("Proc")
                                    if sudden_doom_points != 0:  #Sudden Doom aka Free Death Coil
                                        if (random.randint(0, 10000)/100) < sudden_doom_points * 5:
                                            hit = spell_hit(spell_hit_total, increased_spell_hit, target_level)
                                            crit = spell_crit((total_crit + (darkruned_battlegear_two_set / 100)), spell_hit_total, increased_spell_hit, target_level, increased_spell_crit)
                                            if hit == True:
                                                if crit == True:
                                                    atta_num = random.randint(443, 665)
                                                    atta_num = (atta_num + ((current_ap + (current_ap * ((impurity_points * 4) / 100))) * 0)) * var_crit_amount
                                                    if sigil_of_vengeful_heart == True:
                                                        atta_num + 380
                                                    if sigil_of_the_wild_buck == True:
                                                        atta_num += 80
                                                    if black_ice_points == 5:
                                                        atta_num = atta_num + (atta_num * .1)
                                                    elif black_ice_points == 4:
                                                        atta_num = atta_num + (atta_num * .08)
                                                    elif black_ice_points == 3:
                                                        atta_num = atta_num + (atta_num * .06)
                                                    elif black_ice_points == 2:
                                                        atta_num = atta_num + (atta_num * .04)
                                                    elif black_ice_points == 1:
                                                        atta_num = atta_num + (atta_num * .02)
                                                    if dk_presence == 0:
                                                        atta_num = atta_num + (atta_num * .15)
                                                    if tundra_stalker_points != 0:
                                                        if dots[0] > current_time:
                                                            atta_num = atta_num + (atta_num * (tundra_stalker_points * .03))
                                                    if glyph_death_coil == True:
                                                        atta_num += atta_num * .15
                                                    if rage_of_rivendale_points != 0:
                                                        if dots[1] > current_time:
                                                            atta_num += atta_num * ((rage_of_rivendale_points * 2) / 100)
                                                    if morbitity_points != 0:
                                                        atta_num += ((morbitity_points * 5) / 100)
                                                    if hysteria_active == True:
                                                        atta_num = atta_num + (atta_num * .2)
                                                    if tricksoftt_active == True:
                                                        atta_num = atta_num + (atta_num * .15)
                                                    atta_num = atta_num + (atta_num * increased_spell_damage) + (atta_num * increased_all_damage)
                                                    sudden_doom_damage += atta_num
                                                    if unholy_blight_points == 1:
                                                        unholy_blight_amount = atta_num / 10   
                                                        unholy_blight_timer = current_time + 10
                                                    if rune_of_cinderglacier_active == True:
                                                         rune_of_cinderglacier_damage = atta_num * .2
                                                         rune_of_cinderglacier_active_count += 1
                                                         rotation.append("Rune of Cinderglacier")
                                                         rotation_time.append(current_time)
                                                         rotation_status.append("Active")
                                                         rotation_damage.append(atta_num * .2)
                                                         if rune_of_cinderglacier_active_count == 2:
                                                             rune_of_cinderglacier_active = False
                                                    rotation.append("Sudden Doom")
                                                    rotation_time.append(current_time)
                                                    rotation_status.append("Crit")
                                                    rotation_damage.append(atta_num)
                                                else:
                                                    atta_num = random.randint(443, 665)
                                                    atta_num = (atta_num + ((current_ap + (current_ap * ((impurity_points * 4) / 100))) * 0))
                                                    if sigil_of_vengeful_heart == True:
                                                        atta_num + 380
                                                    if sigil_of_the_wild_buck == True:
                                                        atta_num += 80
                                                    if black_ice_points == 5:
                                                        atta_num = atta_num + (atta_num * .1)
                                                    elif black_ice_points == 4:
                                                        atta_num = atta_num + (atta_num * .08)
                                                    elif black_ice_points == 3:
                                                        atta_num = atta_num + (atta_num * .06)
                                                    elif black_ice_points == 2:
                                                        atta_num = atta_num + (atta_num * .04)
                                                    elif black_ice_points == 1:
                                                        atta_num = atta_num + (atta_num * .02)
                                                    if dk_presence == 0:
                                                        atta_num = atta_num + (atta_num * .15)
                                                    if tundra_stalker_points != 0:
                                                        if dots[0] > current_time:
                                                            atta_num = atta_num + (atta_num * (tundra_stalker_points * .03))
                                                    if glyph_death_coil == True:
                                                        atta_num += atta_num * .15
                                                    if rage_of_rivendale_points != 0:
                                                        if dots[1] > current_time:
                                                            atta_num += atta_num * ((rage_of_rivendale_points * 2) / 100)
                                                    if morbitity_points != 0:
                                                        atta_num += ((morbitity_points * 5) / 100)
                                                    if hysteria_active == True:
                                                        atta_num = atta_num + (atta_num * .2)
                                                    if tricksoftt_active == True:
                                                        atta_num = atta_num + (atta_num * .15)
                                                    atta_num = atta_num + (atta_num * increased_spell_damage) + (atta_num * increased_all_damage)
                                                    sudden_doom_damage += atta_num
                                                    if unholy_blight_points == 1:
                                                        unholy_blight_amount = atta_num / 10 
                                                        unholy_blight_timer = current_time + 10
                                                    if rune_of_cinderglacier_active == True:
                                                         rune_of_cinderglacier_damage = atta_num * .2
                                                         rune_of_cinderglacier_active_count += 1
                                                         rotation.append("Rune of Cinderglacier")
                                                         rotation_time.append(current_time)
                                                         rotation_status.append("Active")
                                                         rotation_damage.append(atta_num * .2)
                                                         if rune_of_cinderglacier_active_count == 2:
                                                             rune_of_cinderglacier_active = False
                                                    rotation.append("Sudden Doom")
                                                    rotation_time.append(current_time)
                                                    rotation_status.append("Hit")
                                                    rotation_damage.append(atta_num)
                                            if hit == False:
                                                rotation.append("Sudden Doom")
                                                rotation_time.append(current_time)
                                                rotation_status.append("Miss")
                                                rotation_damage.append(0)
                                    rotation.append("Heart Strike")
                                    rotation_time.append(current_time)
                                    rotation_status.append("Crit")
                                    rotation_damage.append(atta_num)
                                    current_time += gcd
                                    used_gcd = True
                                    continue
                                elif attack_table_results == 7:
                                    #normal attack
                                    rune_cd_tracker[castable] = rune_cd(haste_rune_cd, current_time)
                                    atta_num = (((0 + (wep_roll * .5)) + (( 0 + (wep_roll * .5)) * (.1 * how_many_dots_on_target)) + (( 0 + (wep_roll * .5)) * (.1 * how_many_dots_on_target) * darkruned_battlegear_four_set)) - (((0 + (wep_roll * .5)) + (( 0 + (wep_roll * .5)) * (.1 * how_many_dots_on_target)) + (( 0 + (wep_roll * .5)) * (.1 * how_many_dots_on_target) * darkruned_battlegear_four_set)) * armor_red_amount))
                                    if dk_presence == 0:
                                        atta_num = atta_num + (atta_num * .15)
                                    if t9_tank_two_set == True:
                                        atta_num = atta_num + (atta_num *.05)
                                    if blood_strikes_points != 0:
                                        atta_num = atta_num + ((blood_strikes_points * 15) / 100)
                                    if might_of_mograine_points != 0:
                                        atta_num += atta_num * ((might_of_mograine_points * 15) / 100)
                                    if scourgelords_battlegear_two_set == True:
                                        atta_num = atta_num + (atta_num * .07)
                                    if hysteria_active == True:
                                        atta_num = atta_num + (atta_num * .2)
                                    if tricksoftt_active == True:
                                        atta_num = atta_num + (atta_num * .15)
                                    atta_num = atta_num + (atta_num * increased_physical_damage) + (atta_num * increased_all_damage)
                                    sum_heart_strike_attacks += atta_num
                                    current_power = runic_power(10, current_power, max_runic)
                                    trinket_hit_crit_tracker = 1
                                    if sigil_of_haunted_dreams == True:
                                        if random.randint(0, 100) < 15:
                                            if sigil_of_haunted_dreams_buff == False:
                                                sigil_of_haunted_dreams_buff = True
                                                sigil_of_haunted_dreams_timer = current_time + 10  
                                                total_crit = total_crit + ((173 / 45.8) / 100) 
                                    if t9_dps_two_set == True:
                                        if t9_bonus == False:
                                            if t9_cd_timer < current_time:
                                                if (random.randint(0, 10000)/100) < 50:
                                                    t9_bonus = True
                                                    t9_cd_timer = current_time + 45
                                                    t9_active_timer = current_time + 15
                                                    bonus_loop_str += 180
                                                    rotation.append("T9 DPS 2p Bonus")
                                                    rotation_time.append(current_time)
                                                    rotation_damage.append(0)
                                                    rotation_status.append("Proc")
                                    if sudden_doom_points != 0:  #Sudden Doom aka Free Death Coil
                                        if (random.randint(0, 10000)/100) < sudden_doom_points * 5:
                                            hit = spell_hit(spell_hit_total, increased_spell_hit, target_level)
                                            crit = spell_crit((total_crit + (darkruned_battlegear_two_set / 100)), spell_hit_total, increased_spell_hit, target_level, increased_spell_crit)
                                            if hit == True:
                                                if crit == True:
                                                    atta_num = random.randint(443, 665)
                                                    atta_num = (atta_num + ((current_ap + (current_ap * ((impurity_points * 4) / 100))) * 0)) * var_crit_amount
                                                    if sigil_of_vengeful_heart == True:
                                                        atta_num + 380
                                                    if sigil_of_the_wild_buck == True:
                                                        atta_num += 80
                                                    if black_ice_points == 5:
                                                        atta_num = atta_num + (atta_num * .1)
                                                    elif black_ice_points == 4:
                                                        atta_num = atta_num + (atta_num * .08)
                                                    elif black_ice_points == 3:
                                                        atta_num = atta_num + (atta_num * .06)
                                                    elif black_ice_points == 2:
                                                        atta_num = atta_num + (atta_num * .04)
                                                    elif black_ice_points == 1:
                                                        atta_num = atta_num + (atta_num * .02)
                                                    if dk_presence == 0:
                                                        atta_num = atta_num + (atta_num * .15)
                                                    if tundra_stalker_points != 0:
                                                        if dots[0] > current_time:
                                                            atta_num = atta_num + (atta_num * (tundra_stalker_points * .03))
                                                    if glyph_death_coil == True:
                                                        atta_num += atta_num * .15
                                                    if rage_of_rivendale_points != 0:
                                                        if dots[1] > current_time:
                                                            atta_num += atta_num * ((rage_of_rivendale_points * 2) / 100)
                                                    if morbitity_points != 0:
                                                        atta_num += ((morbitity_points * 5) / 100)
                                                    if hysteria_active == True:
                                                        atta_num = atta_num + (atta_num * .2)
                                                    if tricksoftt_active == True:
                                                        atta_num = atta_num + (atta_num * .15)
                                                    atta_num = atta_num + (atta_num * increased_spell_damage) + (atta_num * increased_all_damage)
                                                    sudden_doom_damage += atta_num
                                                    if unholy_blight_points == 1:
                                                        unholy_blight_amount = atta_num / 10   
                                                        unholy_blight_timer = current_time + 10
                                                    if rune_of_cinderglacier_active == True:
                                                         rune_of_cinderglacier_damage = atta_num * .2
                                                         rune_of_cinderglacier_active_count += 1
                                                         rotation.append("Rune of Cinderglacier")
                                                         rotation_time.append(current_time)
                                                         rotation_status.append("Active")
                                                         rotation_damage.append(atta_num * .2)
                                                         if rune_of_cinderglacier_active_count == 2:
                                                             rune_of_cinderglacier_active = False
                                                    rotation.append("Sudden Doom")
                                                    rotation_time.append(current_time)
                                                    rotation_status.append("Crit")
                                                    rotation_damage.append(atta_num)
                                                else:
                                                    atta_num = random.randint(443, 665)
                                                    atta_num = (atta_num + ((current_ap + (current_ap * ((impurity_points * 4) / 100))) * 0))
                                                    if sigil_of_vengeful_heart == True:
                                                        atta_num + 380
                                                    if sigil_of_the_wild_buck == True:
                                                        atta_num += 80
                                                    if black_ice_points == 5:
                                                        atta_num = atta_num + (atta_num * .1)
                                                    elif black_ice_points == 4:
                                                        atta_num = atta_num + (atta_num * .08)
                                                    elif black_ice_points == 3:
                                                        atta_num = atta_num + (atta_num * .06)
                                                    elif black_ice_points == 2:
                                                        atta_num = atta_num + (atta_num * .04)
                                                    elif black_ice_points == 1:
                                                        atta_num = atta_num + (atta_num * .02)
                                                    if dk_presence == 0:
                                                        atta_num = atta_num + (atta_num * .15)
                                                    if tundra_stalker_points != 0:
                                                        if dots[0] > current_time:
                                                            atta_num = atta_num + (atta_num * (tundra_stalker_points * .03))
                                                    if glyph_death_coil == True:
                                                        atta_num += atta_num * .15
                                                    if rage_of_rivendale_points != 0:
                                                        if dots[1] > current_time:
                                                            atta_num += atta_num * ((rage_of_rivendale_points * 2) / 100)
                                                    if morbitity_points != 0:
                                                        atta_num += ((morbitity_points * 5) / 100)
                                                    if hysteria_active == True:
                                                        atta_num = atta_num + (atta_num * .2)
                                                    if tricksoftt_active == True:
                                                        atta_num = atta_num + (atta_num * .15)
                                                    atta_num = atta_num + (atta_num * increased_spell_damage) + (atta_num * increased_all_damage)
                                                    sudden_doom_damage += atta_num
                                                    if unholy_blight_points == 1:
                                                        unholy_blight_amount = atta_num / 10 
                                                        unholy_blight_timer = current_time + 10
                                                    if rune_of_cinderglacier_active == True:
                                                         rune_of_cinderglacier_damage = atta_num * .2
                                                         rune_of_cinderglacier_active_count += 1
                                                         rotation.append("Rune of Cinderglacier")
                                                         rotation_time.append(current_time)
                                                         rotation_status.append("Active")
                                                         rotation_damage.append(atta_num * .2)
                                                         if rune_of_cinderglacier_active_count == 2:
                                                             rune_of_cinderglacier_active = False
                                                    rotation.append("Sudden Doom")
                                                    rotation_time.append(current_time)
                                                    rotation_status.append("Hit")
                                                    rotation_damage.append(atta_num)
                                            if hit == False:
                                                rotation.append("Sudden Doom")
                                                rotation_time.append(current_time)
                                                rotation_status.append("Miss")
                                                rotation_damage.append(0)
                                    rotation.append("Heart Strike")
                                    rotation_time.append(current_time)
                                    rotation_status.append("Hit")
                                    rotation_damage.append(atta_num)
                                    current_time += gcd
                                    used_gcd = True
                                    continue
                            opp_castable = castable
                            opp_castable = castable - 1
                            if opp_castable == -1:
                                opp_castable = 1
                            castable_death = all_rune_check(death, current_time, rune_cd_tracker)
                            castable_death_f = all_rune_check(death_f, current_time, rune_cd_tracker)
                            castable_death_u = all_rune_check(death_u, current_time, rune_cd_tracker)
                            if castable_death != 3:
                                opp_castable += 6
                            elif castable_death_f != 3:
                                opp_castable += 8
                            elif castable_death_u != 3:
                                opp_castable += 10
                            until_dot0 = dots[0]
                            until_dot1 = dots[1]
                            if pestilence_allow_reset == True:
                                until_dot0 -= pestilence_reset_window
                                until_dot1 -= pestilence_reset_window
                            if rune_cd_tracker[opp_castable] < until_dot0:
                                if rune_cd_tracker[opp_castable] < until_dot1:
                                    #castable = opp_castable   
                                    if use_death_rune == True:
                                        use_death_rune = False
                                        if castable_death != 3:
                                            rune_cd_tracker[castable] = 0
                                            if castable_death == 2:
                                                castable_death = 0
                                            rune_cd_tracker[castable_death + 6] = 10000
                                        elif castable_death_f != 3:
                                            castable += 2
                                            rune_cd_tracker[castable] = 0
                                            if castable_death_f == 2:
                                                castable_death_f = 0
                                            rune_cd_tracker[castable_death_f + 8] = 10000
                                        elif castable_death_u != 3:
                                            castable += 4
                                            rune_cd_tracker[castable] = 0
                                            if castable_death_u == 2:
                                                castable_death_u = 0
                                            rune_cd_tracker[castable_death_u + 10] = 10000
                                    else:
                                        use_death_rune = False
                                    if amount_of_targets > 1:
                                        attack_table_results = attack_table(1, tanking, H2, True, False, hit_from_gear, hit_from_other, target_level, all_expertise_dodge, all_expertise_parry, total_crit, (annihilation_talent_points / 100) + increased_phy_crit + ((subversion_points * 3) / 100))
                                        armor_red_amount = dam_reduc(current_armor, armor_penetration, target_level)
                                        wep_roll = weapon_roll(mh_input_lowend_weapon_damage,mh_input_topend_weapon_damage)
                                        wep_roll = wep_roll + (attack_damage_normalization * current_ap / 14)
                                        #Rune Hit
                                        haste_percentage = (total_haste_rating / 25.21) / 100 #Returns a result of 0 - 1 for 0% - 100%
                                        haste_rune_cd = rune_grade_timer(current_time, last_rune_change[castable], last_rune_change[castable+6])
                                        if improved_unholy_presence_points != 0:
                                            if dk_presence == 2:
                                                haste_rune_cd = haste_rune_cd - (haste_rune_cd * ((improved_unholy_presence_points * 5) / 100))
                                        if dk_presence != 2:
                                            gcd = input_gcd / (1 + haste_percentage)
                                            if gcd < 1:
                                                gcd = 1
                                        ##Rune Miss
                                        haste_rune_cd_miss = 1
                                        how_many_dots_on_target = 0
                                        if dots[0] > current_time:
                                            how_many_dots_on_target += 1
                                        if dots[1] > current_time:
                                            how_many_dots_on_target += 1
                                        if dots[2] > current_time:
                                            how_many_dots_on_target += 1
                                        if multiple_adds_timer < current_time:
                                            how_many_dots_on_target = 0
                                        if dancing_rune_weapon_points == 1:
                                            if dancing_rune_weapon_active == True:
                                                if attack_table_results == 0:
                                                    atta_num = 0
                                                    rotation.append("Dancing Rune Weapon")
                                                    rotation_time.append(current_time)
                                                    rotation_status.append("Miss")
                                                    rotation_damage.append(atta_num)
                                                elif attack_table_results == 1:
                                                    atta_num = 0
                                                    rotation.append("Dancing Rune Weapon")
                                                    rotation_time.append(current_time)
                                                    rotation_status.append("Dodge")
                                                    rotation_damage.append(atta_num)
                                                elif attack_table_results == 5:
                                                    atta_num = (((0 + (wep_roll * .25)) + (( 0 + (wep_roll * .25)) * (.1 * how_many_dots_on_target)) + (( 0 + (wep_roll * .25)) * (.1 * how_many_dots_on_target) * darkruned_battlegear_four_set)) - (((0 + (wep_roll * .25)) + (( 0 + (wep_roll * .25)) * (.1 * how_many_dots_on_target)) + (( 0 + (wep_roll * .25)) * (.1 * how_many_dots_on_target) * darkruned_battlegear_four_set)) * armor_red_amount))  * (var_crit_amount)
                                                    if dk_presence == 0:
                                                        atta_num = atta_num + (atta_num * .15)
                                                    if t9_tank_two_set == True:
                                                        atta_num = atta_num + (atta_num *.05)
                                                    if blood_strikes_points != 0:
                                                        atta_num = atta_num + ((blood_strikes_points * 15) / 100)
                                                    if might_of_mograine_points != 0:
                                                        atta_num += atta_num * ((might_of_mograine_points * 15) / 100)
                                                    if scourgelords_battlegear_two_set == True:
                                                        atta_num = atta_num + (atta_num * .07)
                                                    if hysteria_active == True:
                                                        atta_num = atta_num + (atta_num * .2)
                                                    if tricksoftt_active == True:
                                                        atta_num = atta_num + (atta_num * .15)
                                                    atta_num = atta_num + (atta_num * increased_physical_damage) + (atta_num * increased_all_damage)
                                                    atta_num = atta_num * dancing_rune_weapon_damage_multi
                                                    dancing_rune_weapon_damage += atta_num
                                                    rotation.append("Dancing Rune Weapon")
                                                    rotation_time.append(current_time)
                                                    rotation_status.append("Crit") 
                                                    rotation_damage.append(atta_num)
                                                    trinket_hit_crit_tracker = 2
                                                    if sigil_of_haunted_dreams == True:
                                                        if random.randint(0, 100) < 15:
                                                            if sigil_of_haunted_dreams_buff == False:
                                                                sigil_of_haunted_dreams_buff = True
                                                                sigil_of_haunted_dreams_timer = current_time + 10  
                                                                total_crit = total_crit + ((173 / 45.8) / 100) 
                                                    if t9_dps_two_set == True:
                                                        if t9_bonus == False:
                                                            if t9_cd_timer < current_time:
                                                                if (random.randint(0, 10000)/100) < 50:
                                                                    t9_bonus = True
                                                                    t9_cd_timer = current_time + 45
                                                                    t9_active_timer = current_time + 15
                                                                    bonus_loop_str += 180
                                                                    rotation.append("T9 DPS 2p Bonus")
                                                                    rotation_time.append(current_time)
                                                                    rotation_damage.append(0)
                                                                    rotation_status.append("Proc")
                                                    if sudden_doom_points != 0:  #Sudden Doom aka Free Death Coil
                                                        if (random.randint(0, 10000)/100) < sudden_doom_points * 5:
                                                            hit = spell_hit(spell_hit_total, increased_spell_hit, target_level)
                                                            crit = spell_crit((total_crit + (darkruned_battlegear_two_set / 100)), spell_hit_total, increased_spell_hit, target_level, increased_spell_crit)
                                                            if hit == True:
                                                                if crit == True:
                                                                    atta_num = random.randint(443, 665)
                                                                    atta_num = (atta_num + ((current_ap + (current_ap * ((impurity_points * 4) / 100))) * 0)) * var_crit_amount
                                                                    if sigil_of_vengeful_heart == True:
                                                                        atta_num + 380
                                                                    if sigil_of_the_wild_buck == True:
                                                                        atta_num += 80
                                                                    if black_ice_points == 5:
                                                                        atta_num = atta_num + (atta_num * .1)
                                                                    elif black_ice_points == 4:
                                                                        atta_num = atta_num + (atta_num * .08)
                                                                    elif black_ice_points == 3:
                                                                        atta_num = atta_num + (atta_num * .06)
                                                                    elif black_ice_points == 2:
                                                                        atta_num = atta_num + (atta_num * .04)
                                                                    elif black_ice_points == 1:
                                                                        atta_num = atta_num + (atta_num * .02)
                                                                    if dk_presence == 0:
                                                                        atta_num = atta_num + (atta_num * .15)
                                                                    if tundra_stalker_points != 0:
                                                                        if dots[0] > current_time:
                                                                            atta_num = atta_num + (atta_num * (tundra_stalker_points * .03))
                                                                    if glyph_death_coil == True:
                                                                        atta_num += atta_num * .15
                                                                    if rage_of_rivendale_points != 0:
                                                                        if dots[1] > current_time:
                                                                            atta_num += atta_num * ((rage_of_rivendale_points * 2) / 100)
                                                                    if morbitity_points != 0:
                                                                        atta_num += ((morbitity_points * 5) / 100)
                                                                    if hysteria_active == True:
                                                                        atta_num = atta_num + (atta_num * .2)
                                                                    if tricksoftt_active == True:
                                                                        atta_num = atta_num + (atta_num * .15)
                                                                    atta_num = atta_num + (atta_num * increased_spell_damage) + (atta_num * increased_all_damage)
                                                                    sudden_doom_damage += atta_num
                                                                    if unholy_blight_points == 1:
                                                                        unholy_blight_amount = atta_num / 10   
                                                                        unholy_blight_timer = current_time + 10
                                                                    if rune_of_cinderglacier_active == True:
                                                                         rune_of_cinderglacier_damage = atta_num * .2
                                                                         rune_of_cinderglacier_active_count += 1
                                                                         rotation.append("Rune of Cinderglacier")
                                                                         rotation_time.append(current_time)
                                                                         rotation_status.append("Active")
                                                                         rotation_damage.append(atta_num * .2)
                                                                         if rune_of_cinderglacier_active_count == 2:
                                                                             rune_of_cinderglacier_active = False
                                                                    rotation.append("Sudden Doom")
                                                                    rotation_time.append(current_time)
                                                                    rotation_status.append("Crit")
                                                                    rotation_damage.append(atta_num)
                                                                else:
                                                                    atta_num = random.randint(443, 665)
                                                                    atta_num = (atta_num + ((current_ap + (current_ap * ((impurity_points * 4) / 100))) * 0))
                                                                    if sigil_of_vengeful_heart == True:
                                                                        atta_num + 380
                                                                    if sigil_of_the_wild_buck == True:
                                                                        atta_num += 80
                                                                    if black_ice_points == 5:
                                                                        atta_num = atta_num + (atta_num * .1)
                                                                    elif black_ice_points == 4:
                                                                        atta_num = atta_num + (atta_num * .08)
                                                                    elif black_ice_points == 3:
                                                                        atta_num = atta_num + (atta_num * .06)
                                                                    elif black_ice_points == 2:
                                                                        atta_num = atta_num + (atta_num * .04)
                                                                    elif black_ice_points == 1:
                                                                        atta_num = atta_num + (atta_num * .02)
                                                                    if dk_presence == 0:
                                                                        atta_num = atta_num + (atta_num * .15)
                                                                    if tundra_stalker_points != 0:
                                                                        if dots[0] > current_time:
                                                                            atta_num = atta_num + (atta_num * (tundra_stalker_points * .03))
                                                                    if glyph_death_coil == True:
                                                                        atta_num += atta_num * .15
                                                                    if rage_of_rivendale_points != 0:
                                                                        if dots[1] > current_time:
                                                                            atta_num += atta_num * ((rage_of_rivendale_points * 2) / 100)
                                                                    if morbitity_points != 0:
                                                                        atta_num += ((morbitity_points * 5) / 100)
                                                                    if hysteria_active == True:
                                                                        atta_num = atta_num + (atta_num * .2)
                                                                    if tricksoftt_active == True:
                                                                        atta_num = atta_num + (atta_num * .15)
                                                                    atta_num = atta_num + (atta_num * increased_spell_damage) + (atta_num * increased_all_damage)
                                                                    sudden_doom_damage += atta_num
                                                                    if unholy_blight_points == 1:
                                                                        unholy_blight_amount = atta_num / 10 
                                                                        unholy_blight_timer = current_time + 10
                                                                    if rune_of_cinderglacier_active == True:
                                                                         rune_of_cinderglacier_damage = atta_num * .2
                                                                         rune_of_cinderglacier_active_count += 1
                                                                         rotation.append("Rune of Cinderglacier")
                                                                         rotation_time.append(current_time)
                                                                         rotation_status.append("Active")
                                                                         rotation_damage.append(atta_num * .2)
                                                                         if rune_of_cinderglacier_active_count == 2:
                                                                             rune_of_cinderglacier_active = False
                                                                    rotation.append("Sudden Doom")
                                                                    rotation_time.append(current_time)
                                                                    rotation_status.append("Hit")
                                                                    rotation_damage.append(atta_num)
                                                            if hit == False:
                                                                rotation.append("Sudden Doom")
                                                                rotation_time.append(current_time)
                                                                rotation_status.append("Miss")
                                                                rotation_damage.append(0)                                            
                                                elif attack_table_results == 7:
                                                    atta_num = (((0 + (wep_roll * .25)) + (( 0 + (wep_roll * .25)) * (.1 * how_many_dots_on_target)) + (( 0 + (wep_roll * .25)) * (.1 * how_many_dots_on_target) * darkruned_battlegear_four_set)) - (((0 + (wep_roll * .25)) + (( 0 + (wep_roll * .25)) * (.1 * how_many_dots_on_target)) + (( 0 + (wep_roll * .25)) * (.1 * how_many_dots_on_target) * darkruned_battlegear_four_set)) * armor_red_amount))
                                                    if dk_presence == 0:
                                                        atta_num = atta_num + (atta_num * .15)
                                                    if t9_tank_two_set == True:
                                                        atta_num = atta_num + (atta_num *.05)
                                                    if blood_strikes_points != 0:
                                                        atta_num = atta_num + ((blood_strikes_points * 15) / 100)
                                                    if might_of_mograine_points != 0:
                                                        atta_num += atta_num * ((might_of_mograine_points * 15) / 100)
                                                    if scourgelords_battlegear_two_set == True:
                                                        atta_num = atta_num + (atta_num * .07)
                                                    if hysteria_active == True:
                                                        atta_num = atta_num + (atta_num * .2)
                                                    if tricksoftt_active == True:
                                                        atta_num = atta_num + (atta_num * .15)
                                                    atta_num = atta_num + (atta_num * increased_physical_damage) + (atta_num * increased_all_damage)
                                                    atta_num = atta_num * dancing_rune_weapon_damage_multi
                                                    dancing_rune_weapon_damage += atta_num
                                                    rotation.append("Dancing Rune Weapon")
                                                    rotation_time.append(current_time)
                                                    rotation_status.append("Hit") 
                                                    rotation_damage.append(atta_num)
                                                    trinket_hit_crit_tracker = 1
                                                    if sigil_of_haunted_dreams == True:
                                                        if random.randint(0, 100) < 15:
                                                            if sigil_of_haunted_dreams_buff == False:
                                                                sigil_of_haunted_dreams_buff = True
                                                                sigil_of_haunted_dreams_timer = current_time + 10  
                                                                total_crit = total_crit + ((173 / 45.8) / 100) 
                                                    if t9_dps_two_set == True:
                                                        if t9_bonus == False:
                                                            if t9_cd_timer < current_time:
                                                                if (random.randint(0, 10000)/100) < 50:
                                                                    t9_bonus = True
                                                                    t9_cd_timer = current_time + 45
                                                                    t9_active_timer = current_time + 15
                                                                    bonus_loop_str += 180
                                                                    rotation.append("T9 DPS 2p Bonus")
                                                                    rotation_time.append(current_time)
                                                                    rotation_damage.append(0)
                                                                    rotation_status.append("Proc")
                                                    if sudden_doom_points != 0:  #Sudden Doom aka Free Death Coil
                                                        if (random.randint(0, 10000)/100) < sudden_doom_points * 5:
                                                            hit = spell_hit(spell_hit_total, increased_spell_hit, target_level)
                                                            crit = spell_crit((total_crit + (darkruned_battlegear_two_set / 100)), spell_hit_total, increased_spell_hit, target_level, increased_spell_crit)
                                                            if hit == True:
                                                                if crit == True:
                                                                    atta_num = random.randint(443, 665)
                                                                    atta_num = (atta_num + ((current_ap + (current_ap * ((impurity_points * 4) / 100))) * 0)) * var_crit_amount
                                                                    if sigil_of_vengeful_heart == True:
                                                                        atta_num + 380
                                                                    if sigil_of_the_wild_buck == True:
                                                                        atta_num += 80
                                                                    if black_ice_points == 5:
                                                                        atta_num = atta_num + (atta_num * .1)
                                                                    elif black_ice_points == 4:
                                                                        atta_num = atta_num + (atta_num * .08)
                                                                    elif black_ice_points == 3:
                                                                        atta_num = atta_num + (atta_num * .06)
                                                                    elif black_ice_points == 2:
                                                                        atta_num = atta_num + (atta_num * .04)
                                                                    elif black_ice_points == 1:
                                                                        atta_num = atta_num + (atta_num * .02)
                                                                    if dk_presence == 0:
                                                                        atta_num = atta_num + (atta_num * .15)
                                                                    if tundra_stalker_points != 0:
                                                                        if dots[0] > current_time:
                                                                            atta_num = atta_num + (atta_num * (tundra_stalker_points * .03))
                                                                    if glyph_death_coil == True:
                                                                        atta_num += atta_num * .15
                                                                    if rage_of_rivendale_points != 0:
                                                                        if dots[1] > current_time:
                                                                            atta_num += atta_num * ((rage_of_rivendale_points * 2) / 100)
                                                                    if morbitity_points != 0:
                                                                        atta_num += ((morbitity_points * 5) / 100)
                                                                    if hysteria_active == True:
                                                                        atta_num = atta_num + (atta_num * .2)
                                                                    if tricksoftt_active == True:
                                                                        atta_num = atta_num + (atta_num * .15)
                                                                    atta_num = atta_num + (atta_num * increased_spell_damage) + (atta_num * increased_all_damage)
                                                                    sudden_doom_damage += atta_num
                                                                    if unholy_blight_points == 1:
                                                                        unholy_blight_amount = atta_num / 10   
                                                                        unholy_blight_timer = current_time + 10
                                                                    if rune_of_cinderglacier_active == True:
                                                                         rune_of_cinderglacier_damage = atta_num * .2
                                                                         rune_of_cinderglacier_active_count += 1
                                                                         rotation.append("Rune of Cinderglacier")
                                                                         rotation_time.append(current_time)
                                                                         rotation_status.append("Active")
                                                                         rotation_damage.append(atta_num * .2)
                                                                         if rune_of_cinderglacier_active_count == 2:
                                                                             rune_of_cinderglacier_active = False
                                                                    rotation.append("Sudden Doom")
                                                                    rotation_time.append(current_time)
                                                                    rotation_status.append("Crit")
                                                                    rotation_damage.append(atta_num)
                                                                else:
                                                                    atta_num = random.randint(443, 665)
                                                                    atta_num = (atta_num + ((current_ap + (current_ap * ((impurity_points * 4) / 100))) * 0))
                                                                    if sigil_of_vengeful_heart == True:
                                                                        atta_num + 380
                                                                    if sigil_of_the_wild_buck == True:
                                                                        atta_num += 80
                                                                    if black_ice_points == 5:
                                                                        atta_num = atta_num + (atta_num * .1)
                                                                    elif black_ice_points == 4:
                                                                        atta_num = atta_num + (atta_num * .08)
                                                                    elif black_ice_points == 3:
                                                                        atta_num = atta_num + (atta_num * .06)
                                                                    elif black_ice_points == 2:
                                                                        atta_num = atta_num + (atta_num * .04)
                                                                    elif black_ice_points == 1:
                                                                        atta_num = atta_num + (atta_num * .02)
                                                                    if dk_presence == 0:
                                                                        atta_num = atta_num + (atta_num * .15)
                                                                    if tundra_stalker_points != 0:
                                                                        if dots[0] > current_time:
                                                                            atta_num = atta_num + (atta_num * (tundra_stalker_points * .03))
                                                                    if glyph_death_coil == True:
                                                                        atta_num += atta_num * .15
                                                                    if rage_of_rivendale_points != 0:
                                                                        if dots[1] > current_time:
                                                                            atta_num += atta_num * ((rage_of_rivendale_points * 2) / 100)
                                                                    if morbitity_points != 0:
                                                                        atta_num += ((morbitity_points * 5) / 100)
                                                                    if hysteria_active == True:
                                                                        atta_num = atta_num + (atta_num * .2)
                                                                    if tricksoftt_active == True:
                                                                        atta_num = atta_num + (atta_num * .15)
                                                                    atta_num = atta_num + (atta_num * increased_spell_damage) + (atta_num * increased_all_damage)
                                                                    sudden_doom_damage += atta_num
                                                                    if unholy_blight_points == 1:
                                                                        unholy_blight_amount = atta_num / 10 
                                                                        unholy_blight_timer = current_time + 10
                                                                    if rune_of_cinderglacier_active == True:
                                                                         rune_of_cinderglacier_damage = atta_num * .2
                                                                         rune_of_cinderglacier_active_count += 1
                                                                         rotation.append("Rune of Cinderglacier")
                                                                         rotation_time.append(current_time)
                                                                         rotation_status.append("Active")
                                                                         rotation_damage.append(atta_num * .2)
                                                                         if rune_of_cinderglacier_active_count == 2:
                                                                             rune_of_cinderglacier_active = False
                                                                    rotation.append("Sudden Doom")
                                                                    rotation_time.append(current_time)
                                                                    rotation_status.append("Hit")
                                                                    rotation_damage.append(atta_num)
                                                            if hit == False:
                                                                rotation.append("Sudden Doom")
                                                                rotation_time.append(current_time)
                                                                rotation_status.append("Miss")
                                                                rotation_damage.append(0)   
                                        if attack_table_results == 0:
                                            atta_num = 0
                                            rotation.append("Heart Strike - Second Target")
                                            rotation_time.append(current_time)
                                            rotation_status.append("Miss")
                                            rotation_damage.append(atta_num)
                                        elif attack_table_results == 1:
                                            atta_num = 0
                                            rotation.append("Heart Strike - Second Target")
                                            rotation_time.append(current_time)
                                            rotation_status.append("Dodge")
                                            rotation_damage.append(atta_num)
                                        elif attack_table_results == 5:
                                            #crit attack
                                            atta_num = (((0 + (wep_roll * .25)) + (( 0 + (wep_roll * .25)) * (.1 * how_many_dots_on_target)) + (( 0 + (wep_roll * .25)) * (.1 * how_many_dots_on_target) * darkruned_battlegear_four_set)) - (((0 + (wep_roll * .25)) + (( 0 + (wep_roll * .25)) * (.1 * how_many_dots_on_target)) + (( 0 + (wep_roll * .25)) * (.1 * how_many_dots_on_target) * darkruned_battlegear_four_set)) * armor_red_amount))  * (var_crit_amount)
                                            if dk_presence == 0:
                                                atta_num = atta_num + (atta_num * .15)
                                            if t9_tank_two_set == True:
                                                atta_num = atta_num + (atta_num *.05)
                                            if blood_strikes_points != 0:
                                                atta_num = atta_num + ((blood_strikes_points * 15) / 100)
                                            if might_of_mograine_points != 0:
                                                atta_num += atta_num * ((might_of_mograine_points * 15) / 100)
                                            if scourgelords_battlegear_two_set == True:
                                                atta_num = atta_num + (atta_num * .07)
                                            if hysteria_active == True:
                                                atta_num = atta_num + (atta_num * .2)
                                            if tricksoftt_active == True:
                                                atta_num = atta_num + (atta_num * .15)
                                            atta_num = atta_num + (atta_num * increased_physical_damage) + (atta_num * increased_all_damage)
                                            sum_heart_strike_attacks += atta_num
                                            trinket_hit_crit_tracker = 2
                                            if sigil_of_haunted_dreams == True:
                                                if random.randint(0, 100) < 15:
                                                    if sigil_of_haunted_dreams_buff == False:
                                                        sigil_of_haunted_dreams_buff = True
                                                        sigil_of_haunted_dreams_timer = current_time + 10  
                                                        total_crit = total_crit + ((173 / 45.8) / 100) 
                                            if t9_dps_two_set == True:
                                                if t9_bonus == False:
                                                    if t9_cd_timer < current_time:
                                                        if (random.randint(0, 10000)/100) < 50:
                                                            t9_bonus = True
                                                            t9_cd_timer = current_time + 45
                                                            t9_active_timer = current_time + 15
                                                            bonus_loop_str += 180
                                                            rotation.append("T9 DPS 2p Bonus")
                                                            rotation_time.append(current_time)
                                                            rotation_damage.append(0)
                                                            rotation_status.append("Proc")
                                            if sudden_doom_points != 0:  #Sudden Doom aka Free Death Coil
                                                if (random.randint(0, 10000)/100) < sudden_doom_points * 5:
                                                    hit = spell_hit(spell_hit_total, increased_spell_hit, target_level)
                                                    crit = spell_crit((total_crit + (darkruned_battlegear_two_set / 100)), spell_hit_total, increased_spell_hit, target_level, increased_spell_crit)
                                                    if hit == True:
                                                        if crit == True:
                                                            atta_num = random.randint(443, 665)
                                                            atta_num = (atta_num + ((current_ap + (current_ap * ((impurity_points * 4) / 100))) * 0)) * var_crit_amount
                                                            if sigil_of_vengeful_heart == True:
                                                                atta_num + 380
                                                            if sigil_of_the_wild_buck == True:
                                                                atta_num += 80
                                                            if black_ice_points == 5:
                                                                atta_num = atta_num + (atta_num * .1)
                                                            elif black_ice_points == 4:
                                                                atta_num = atta_num + (atta_num * .08)
                                                            elif black_ice_points == 3:
                                                                atta_num = atta_num + (atta_num * .06)
                                                            elif black_ice_points == 2:
                                                                atta_num = atta_num + (atta_num * .04)
                                                            elif black_ice_points == 1:
                                                                atta_num = atta_num + (atta_num * .02)
                                                            if dk_presence == 0:
                                                                atta_num = atta_num + (atta_num * .15)
                                                            if tundra_stalker_points != 0:
                                                                if dots[0] > current_time:
                                                                    atta_num = atta_num + (atta_num * (tundra_stalker_points * .03))
                                                            if glyph_death_coil == True:
                                                                atta_num += atta_num * .15
                                                            if rage_of_rivendale_points != 0:
                                                                if dots[1] > current_time:
                                                                    atta_num += atta_num * ((rage_of_rivendale_points * 2) / 100)
                                                            if morbitity_points != 0:
                                                                atta_num += ((morbitity_points * 5) / 100)
                                                            if hysteria_active == True:
                                                                atta_num = atta_num + (atta_num * .2)
                                                            if tricksoftt_active == True:
                                                                atta_num = atta_num + (atta_num * .15)
                                                            atta_num = atta_num + (atta_num * increased_spell_damage) + (atta_num * increased_all_damage)
                                                            sudden_doom_damage += atta_num
                                                            if unholy_blight_points == 1:
                                                                unholy_blight_amount = atta_num / 10   
                                                                unholy_blight_timer = current_time + 10
                                                            if rune_of_cinderglacier_active == True:
                                                                 rune_of_cinderglacier_damage = atta_num * .2
                                                                 rune_of_cinderglacier_active_count += 1
                                                                 rotation.append("Rune of Cinderglacier")
                                                                 rotation_time.append(current_time)
                                                                 rotation_status.append("Active")
                                                                 rotation_damage.append(atta_num * .2)
                                                                 if rune_of_cinderglacier_active_count == 2:
                                                                     rune_of_cinderglacier_active = False
                                                            rotation.append("Sudden Doom")
                                                            rotation_time.append(current_time)
                                                            rotation_status.append("Crit")
                                                            rotation_damage.append(atta_num)
                                                        else:
                                                            atta_num = random.randint(443, 665)
                                                            atta_num = (atta_num + ((current_ap + (current_ap * ((impurity_points * 4) / 100))) * 0))
                                                            if sigil_of_vengeful_heart == True:
                                                                atta_num + 380
                                                            if sigil_of_the_wild_buck == True:
                                                                atta_num += 80
                                                            if black_ice_points == 5:
                                                                atta_num = atta_num + (atta_num * .1)
                                                            elif black_ice_points == 4:
                                                                atta_num = atta_num + (atta_num * .08)
                                                            elif black_ice_points == 3:
                                                                atta_num = atta_num + (atta_num * .06)
                                                            elif black_ice_points == 2:
                                                                atta_num = atta_num + (atta_num * .04)
                                                            elif black_ice_points == 1:
                                                                atta_num = atta_num + (atta_num * .02)
                                                            if dk_presence == 0:
                                                                atta_num = atta_num + (atta_num * .15)
                                                            if tundra_stalker_points != 0:
                                                                if dots[0] > current_time:
                                                                    atta_num = atta_num + (atta_num * (tundra_stalker_points * .03))
                                                            if glyph_death_coil == True:
                                                                atta_num += atta_num * .15
                                                            if rage_of_rivendale_points != 0:
                                                                if dots[1] > current_time:
                                                                    atta_num += atta_num * ((rage_of_rivendale_points * 2) / 100)
                                                            if morbitity_points != 0:
                                                                atta_num += ((morbitity_points * 5) / 100)
                                                            if hysteria_active == True:
                                                                atta_num = atta_num + (atta_num * .2)
                                                            if tricksoftt_active == True:
                                                                atta_num = atta_num + (atta_num * .15)
                                                            atta_num = atta_num + (atta_num * increased_spell_damage) + (atta_num * increased_all_damage)
                                                            sudden_doom_damage += atta_num
                                                            if unholy_blight_points == 1:
                                                                unholy_blight_amount = atta_num / 10 
                                                                unholy_blight_timer = current_time + 10
                                                            if rune_of_cinderglacier_active == True:
                                                                 rune_of_cinderglacier_damage = atta_num * .2
                                                                 rune_of_cinderglacier_active_count += 1
                                                                 rotation.append("Rune of Cinderglacier")
                                                                 rotation_time.append(current_time)
                                                                 rotation_status.append("Active")
                                                                 rotation_damage.append(atta_num * .2)
                                                                 if rune_of_cinderglacier_active_count == 2:
                                                                     rune_of_cinderglacier_active = False
                                                            rotation.append("Sudden Doom")
                                                            rotation_time.append(current_time)
                                                            rotation_status.append("Hit")
                                                            rotation_damage.append(atta_num)
                                                    if hit == False:
                                                        rotation.append("Sudden Doom")
                                                        rotation_time.append(current_time)
                                                        rotation_status.append("Miss")
                                                        rotation_damage.append(0)
                                            rotation.append("Heart Strike - Second Target")
                                            rotation_time.append(current_time)
                                            rotation_status.append("Crit")
                                            rotation_damage.append(atta_num)
                                        elif attack_table_results == 7:
                                            #normal attack
                                            atta_num = (((0 + (wep_roll * .25)) + (( 0 + (wep_roll * .25)) * (.1 * how_many_dots_on_target)) + (( 0 + (wep_roll * .25)) * (.1 * how_many_dots_on_target) * darkruned_battlegear_four_set)) - (((0 + (wep_roll * .25)) + (( 0 + (wep_roll * .25)) * (.1 * how_many_dots_on_target)) + (( 0 + (wep_roll * .25)) * (.1 * how_many_dots_on_target) * darkruned_battlegear_four_set)) * armor_red_amount))
                                            if dk_presence == 0:
                                                atta_num = atta_num + (atta_num * .15)
                                            if t9_tank_two_set == True:
                                                atta_num = atta_num + (atta_num *.05)
                                            if blood_strikes_points != 0:
                                                atta_num = atta_num + ((blood_strikes_points * 15) / 100)
                                            if might_of_mograine_points != 0:
                                                atta_num += atta_num * ((might_of_mograine_points * 15) / 100)
                                            if scourgelords_battlegear_two_set == True:
                                                atta_num = atta_num + (atta_num * .07)
                                            if hysteria_active == True:
                                                atta_num = atta_num + (atta_num * .2)
                                            if tricksoftt_active == True:
                                                atta_num = atta_num + (atta_num * .15)
                                            atta_num = atta_num + (atta_num * increased_physical_damage) + (atta_num * increased_all_damage)
                                            sum_heart_strike_attacks += atta_num
                                            trinket_hit_crit_tracker = 1
                                            if sigil_of_haunted_dreams == True:
                                                if random.randint(0, 100) < 15:
                                                    if sigil_of_haunted_dreams_buff == False:
                                                        sigil_of_haunted_dreams_buff = True
                                                        sigil_of_haunted_dreams_timer = current_time + 10  
                                                        total_crit = total_crit + ((173 / 45.8) / 100) 
                                            if t9_dps_two_set == True:
                                                if t9_bonus == False:
                                                    if t9_cd_timer < current_time:
                                                        if (random.randint(0, 10000)/100) < 50:
                                                            t9_bonus = True
                                                            t9_cd_timer = current_time + 45
                                                            t9_active_timer = current_time + 15
                                                            bonus_loop_str += 180
                                                            rotation.append("T9 DPS 2p Bonus")
                                                            rotation_time.append(current_time)
                                                            rotation_damage.append(0)
                                                            rotation_status.append("Proc")
                                            if sudden_doom_points != 0:  #Sudden Doom aka Free Death Coil
                                                if (random.randint(0, 10000)/100) < sudden_doom_points * 5:
                                                    hit = spell_hit(spell_hit_total, increased_spell_hit, target_level)
                                                    crit = spell_crit((total_crit + (darkruned_battlegear_two_set / 100)), spell_hit_total, increased_spell_hit, target_level, increased_spell_crit)
                                                    if hit == True:
                                                        if crit == True:
                                                            atta_num = random.randint(443, 665)
                                                            atta_num = (atta_num + ((current_ap + (current_ap * ((impurity_points * 4) / 100))) * 0)) * var_crit_amount
                                                            if sigil_of_vengeful_heart == True:
                                                                atta_num + 380
                                                            if sigil_of_the_wild_buck == True:
                                                                atta_num += 80
                                                            if black_ice_points == 5:
                                                                atta_num = atta_num + (atta_num * .1)
                                                            elif black_ice_points == 4:
                                                                atta_num = atta_num + (atta_num * .08)
                                                            elif black_ice_points == 3:
                                                                atta_num = atta_num + (atta_num * .06)
                                                            elif black_ice_points == 2:
                                                                atta_num = atta_num + (atta_num * .04)
                                                            elif black_ice_points == 1:
                                                                atta_num = atta_num + (atta_num * .02)
                                                            if dk_presence == 0:
                                                                atta_num = atta_num + (atta_num * .15)
                                                            if tundra_stalker_points != 0:
                                                                if dots[0] > current_time:
                                                                    atta_num = atta_num + (atta_num * (tundra_stalker_points * .03))
                                                            if glyph_death_coil == True:
                                                                atta_num += atta_num * .15
                                                            if rage_of_rivendale_points != 0:
                                                                if dots[1] > current_time:
                                                                    atta_num += atta_num * ((rage_of_rivendale_points * 2) / 100)
                                                            if morbitity_points != 0:
                                                                atta_num += ((morbitity_points * 5) / 100)
                                                            if hysteria_active == True:
                                                                atta_num = atta_num + (atta_num * .2)
                                                            if tricksoftt_active == True:
                                                                atta_num = atta_num + (atta_num * .15)
                                                            atta_num = atta_num + (atta_num * increased_spell_damage) + (atta_num * increased_all_damage)
                                                            sudden_doom_damage += atta_num
                                                            if unholy_blight_points == 1:
                                                                unholy_blight_amount = atta_num / 10   
                                                                unholy_blight_timer = current_time + 10
                                                            if rune_of_cinderglacier_active == True:
                                                                 rune_of_cinderglacier_damage = atta_num * .2
                                                                 rune_of_cinderglacier_active_count += 1
                                                                 rotation.append("Rune of Cinderglacier")
                                                                 rotation_time.append(current_time)
                                                                 rotation_status.append("Active")
                                                                 rotation_damage.append(atta_num * .2)
                                                                 if rune_of_cinderglacier_active_count == 2:
                                                                     rune_of_cinderglacier_active = False
                                                            rotation.append("Sudden Doom")
                                                            rotation_time.append(current_time)
                                                            rotation_status.append("Crit")
                                                            rotation_damage.append(atta_num)
                                                        else:
                                                            atta_num = random.randint(443, 665)
                                                            atta_num = (atta_num + ((current_ap + (current_ap * ((impurity_points * 4) / 100))) * 0))
                                                            if sigil_of_vengeful_heart == True:
                                                                atta_num + 380
                                                            if sigil_of_the_wild_buck == True:
                                                                atta_num += 80
                                                            if black_ice_points == 5:
                                                                atta_num = atta_num + (atta_num * .1)
                                                            elif black_ice_points == 4:
                                                                atta_num = atta_num + (atta_num * .08)
                                                            elif black_ice_points == 3:
                                                                atta_num = atta_num + (atta_num * .06)
                                                            elif black_ice_points == 2:
                                                                atta_num = atta_num + (atta_num * .04)
                                                            elif black_ice_points == 1:
                                                                atta_num = atta_num + (atta_num * .02)
                                                            if dk_presence == 0:
                                                                atta_num = atta_num + (atta_num * .15)
                                                            if tundra_stalker_points != 0:
                                                                if dots[0] > current_time:
                                                                    atta_num = atta_num + (atta_num * (tundra_stalker_points * .03))
                                                            if glyph_death_coil == True:
                                                                atta_num += atta_num * .15
                                                            if rage_of_rivendale_points != 0:
                                                                if dots[1] > current_time:
                                                                    atta_num += atta_num * ((rage_of_rivendale_points * 2) / 100)
                                                            if morbitity_points != 0:
                                                                atta_num += ((morbitity_points * 5) / 100)
                                                            if hysteria_active == True:
                                                                atta_num = atta_num + (atta_num * .2)
                                                            if tricksoftt_active == True:
                                                                atta_num = atta_num + (atta_num * .15)
                                                            atta_num = atta_num + (atta_num * increased_spell_damage) + (atta_num * increased_all_damage)
                                                            sudden_doom_damage += atta_num
                                                            if unholy_blight_points == 1:
                                                                unholy_blight_amount = atta_num / 10 
                                                                unholy_blight_timer = current_time + 10
                                                            if rune_of_cinderglacier_active == True:
                                                                 rune_of_cinderglacier_damage = atta_num * .2
                                                                 rune_of_cinderglacier_active_count += 1
                                                                 rotation.append("Rune of Cinderglacier")
                                                                 rotation_time.append(current_time)
                                                                 rotation_status.append("Active")
                                                                 rotation_damage.append(atta_num * .2)
                                                                 if rune_of_cinderglacier_active_count == 2:
                                                                     rune_of_cinderglacier_active = False
                                                            rotation.append("Sudden Doom")
                                                            rotation_time.append(current_time)
                                                            rotation_status.append("Hit")
                                                            rotation_damage.append(atta_num)
                                                    if hit == False:
                                                        rotation.append("Sudden Doom")
                                                        rotation_time.append(current_time)
                                                        rotation_status.append("Miss")
                                                        rotation_damage.append(0)
                                            rotation.append("Heart Strike - Second Target")
                                            rotation_time.append(current_time)
                                            rotation_status.append("Hit")
                                            rotation_damage.append(atta_num)
                                    attack_table_results = attack_table(1, tanking, H2, True, False, hit_from_gear, hit_from_other, target_level, all_expertise_dodge, all_expertise_parry, total_crit, (annihilation_talent_points / 100) + increased_phy_crit + ((subversion_points * 3) / 100))
                                    armor_red_amount = dam_reduc(current_armor, armor_penetration, target_level)
                                    wep_roll = weapon_roll(mh_input_lowend_weapon_damage,mh_input_topend_weapon_damage)
                                    wep_roll = wep_roll + (attack_damage_normalization * current_ap / 14)
                                    #Rune Hit
                                    haste_percentage = (total_haste_rating / 25.21) / 100 #Returns a result of 0 - 1 for 0% - 100%
                                    haste_rune_cd = rune_grade_timer(current_time, last_rune_change[castable], last_rune_change[castable+6])
                                    if improved_unholy_presence_points != 0:
                                        if dk_presence == 2:
                                            haste_rune_cd = haste_rune_cd - (haste_rune_cd * ((improved_unholy_presence_points * 5) / 100))
                                    if dk_presence != 2:
                                        gcd = input_gcd / (1 + haste_percentage)
                                        if gcd < 1:
                                            gcd = 1
                                    ##Rune Miss
                                    haste_rune_cd_miss = 1
                                    how_many_dots_on_target = 0
                                    if dots[0] > current_time:
                                        how_many_dots_on_target += 1
                                    if dots[1] > current_time:
                                        how_many_dots_on_target += 1
                                    if dots[2] > current_time:
                                        how_many_dots_on_target += 1
                                    if dancing_rune_weapon_points == 1:
                                        if dancing_rune_weapon_active == True:
                                            if attack_table_results == 0:
                                                atta_num = 0
                                                rotation.append("Dancing Rune Weapon")
                                                rotation_time.append(current_time)
                                                rotation_status.append("Miss")
                                                rotation_damage.append(atta_num)
                                            elif attack_table_results == 1:
                                                atta_num = 0
                                                rotation.append("Dancing Rune Weapon")
                                                rotation_time.append(current_time)
                                                rotation_status.append("Dodge")
                                                rotation_damage.append(atta_num)
                                            elif attack_table_results == 5:
                                                atta_num = (((0 + (wep_roll * .5)) + (( 0 + (wep_roll * .5)) * (.1 * how_many_dots_on_target)) + (( 0 + (wep_roll * .5)) * (.1 * how_many_dots_on_target) * darkruned_battlegear_four_set)) - (((0 + (wep_roll * .5)) + (( 0 + (wep_roll * .5)) * (.1 * how_many_dots_on_target)) + (( 0 + (wep_roll * .5)) * (.1 * how_many_dots_on_target) * darkruned_battlegear_four_set)) * armor_red_amount))  * (var_crit_amount)
                                                if dk_presence == 0:
                                                    atta_num = atta_num + (atta_num * .15)
                                                if t9_tank_two_set == True:
                                                    atta_num = atta_num + (atta_num *.05)
                                                if blood_strikes_points != 0:
                                                    atta_num = atta_num + ((blood_strikes_points * 15) / 100)
                                                if might_of_mograine_points != 0:
                                                    atta_num += atta_num * ((might_of_mograine_points * 15) / 100)
                                                if scourgelords_battlegear_two_set == True:
                                                    atta_num = atta_num + (atta_num * .07)
                                                if hysteria_active == True:
                                                    atta_num = atta_num + (atta_num * .2)
                                                if tricksoftt_active == True:
                                                    atta_num = atta_num + (atta_num * .15)
                                                atta_num = atta_num + (atta_num * increased_physical_damage) + (atta_num * increased_all_damage)
                                                atta_num = atta_num * dancing_rune_weapon_damage_multi
                                                dancing_rune_weapon_damage += atta_num
                                                rotation.append("Dancing Rune Weapon")
                                                rotation_time.append(current_time)
                                                rotation_status.append("Crit") 
                                                rotation_damage.append(atta_num)
                                                trinket_hit_crit_tracker = 2
                                                if sigil_of_haunted_dreams == True:
                                                    if random.randint(0, 100) < 15:
                                                        if sigil_of_haunted_dreams_buff == False:
                                                            sigil_of_haunted_dreams_buff = True
                                                            sigil_of_haunted_dreams_timer = current_time + 10  
                                                            total_crit = total_crit + ((173 / 45.8) / 100) 
                                                if t9_dps_two_set == True:
                                                    if t9_bonus == False:
                                                        if t9_cd_timer < current_time:
                                                            if (random.randint(0, 10000)/100) < 50:
                                                                t9_bonus = True
                                                                t9_cd_timer = current_time + 45
                                                                t9_active_timer = current_time + 15
                                                                bonus_loop_str += 180
                                                                rotation.append("T9 DPS 2p Bonus")
                                                                rotation_time.append(current_time)
                                                                rotation_damage.append(0)
                                                                rotation_status.append("Proc")
                                                if sudden_doom_points != 0:  #Sudden Doom aka Free Death Coil
                                                    if (random.randint(0, 10000)/100) < sudden_doom_points * 5:
                                                        hit = spell_hit(spell_hit_total, increased_spell_hit, target_level)
                                                        crit = spell_crit((total_crit + (darkruned_battlegear_two_set / 100)), spell_hit_total, increased_spell_hit, target_level, increased_spell_crit)
                                                        if hit == True:
                                                            if crit == True:
                                                                atta_num = random.randint(443, 665)
                                                                atta_num = (atta_num + ((current_ap + (current_ap * ((impurity_points * 4) / 100))) * 0)) * var_crit_amount
                                                                if sigil_of_vengeful_heart == True:
                                                                    atta_num + 380
                                                                if sigil_of_the_wild_buck == True:
                                                                    atta_num += 80
                                                                if black_ice_points == 5:
                                                                    atta_num = atta_num + (atta_num * .1)
                                                                elif black_ice_points == 4:
                                                                    atta_num = atta_num + (atta_num * .08)
                                                                elif black_ice_points == 3:
                                                                    atta_num = atta_num + (atta_num * .06)
                                                                elif black_ice_points == 2:
                                                                    atta_num = atta_num + (atta_num * .04)
                                                                elif black_ice_points == 1:
                                                                    atta_num = atta_num + (atta_num * .02)
                                                                if dk_presence == 0:
                                                                    atta_num = atta_num + (atta_num * .15)
                                                                if tundra_stalker_points != 0:
                                                                    if dots[0] > current_time:
                                                                        atta_num = atta_num + (atta_num * (tundra_stalker_points * .03))
                                                                if glyph_death_coil == True:
                                                                    atta_num += atta_num * .15
                                                                if rage_of_rivendale_points != 0:
                                                                    if dots[1] > current_time:
                                                                        atta_num += atta_num * ((rage_of_rivendale_points * 2) / 100)
                                                                if morbitity_points != 0:
                                                                    atta_num += ((morbitity_points * 5) / 100)
                                                                if hysteria_active == True:
                                                                    atta_num = atta_num + (atta_num * .2)
                                                                if tricksoftt_active == True:
                                                                    atta_num = atta_num + (atta_num * .15)
                                                                atta_num = atta_num + (atta_num * increased_spell_damage) + (atta_num * increased_all_damage)
                                                                sudden_doom_damage += atta_num
                                                                if unholy_blight_points == 1:
                                                                    unholy_blight_amount = atta_num / 10   
                                                                    unholy_blight_timer = current_time + 10
                                                                if rune_of_cinderglacier_active == True:
                                                                     rune_of_cinderglacier_damage = atta_num * .2
                                                                     rune_of_cinderglacier_active_count += 1
                                                                     rotation.append("Rune of Cinderglacier")
                                                                     rotation_time.append(current_time)
                                                                     rotation_status.append("Active")
                                                                     rotation_damage.append(atta_num * .2)
                                                                     if rune_of_cinderglacier_active_count == 2:
                                                                         rune_of_cinderglacier_active = False
                                                                rotation.append("Sudden Doom")
                                                                rotation_time.append(current_time)
                                                                rotation_status.append("Crit")
                                                                rotation_damage.append(atta_num)
                                                            else:
                                                                atta_num = random.randint(443, 665)
                                                                atta_num = (atta_num + ((current_ap + (current_ap * ((impurity_points * 4) / 100))) * 0))
                                                                if sigil_of_vengeful_heart == True:
                                                                    atta_num + 380
                                                                if sigil_of_the_wild_buck == True:
                                                                    atta_num += 80
                                                                if black_ice_points == 5:
                                                                    atta_num = atta_num + (atta_num * .1)
                                                                elif black_ice_points == 4:
                                                                    atta_num = atta_num + (atta_num * .08)
                                                                elif black_ice_points == 3:
                                                                    atta_num = atta_num + (atta_num * .06)
                                                                elif black_ice_points == 2:
                                                                    atta_num = atta_num + (atta_num * .04)
                                                                elif black_ice_points == 1:
                                                                    atta_num = atta_num + (atta_num * .02)
                                                                if dk_presence == 0:
                                                                    atta_num = atta_num + (atta_num * .15)
                                                                if tundra_stalker_points != 0:
                                                                    if dots[0] > current_time:
                                                                        atta_num = atta_num + (atta_num * (tundra_stalker_points * .03))
                                                                if glyph_death_coil == True:
                                                                    atta_num += atta_num * .15
                                                                if rage_of_rivendale_points != 0:
                                                                    if dots[1] > current_time:
                                                                        atta_num += atta_num * ((rage_of_rivendale_points * 2) / 100)
                                                                if morbitity_points != 0:
                                                                    atta_num += ((morbitity_points * 5) / 100)
                                                                if hysteria_active == True:
                                                                    atta_num = atta_num + (atta_num * .2)
                                                                if tricksoftt_active == True:
                                                                    atta_num = atta_num + (atta_num * .15)
                                                                atta_num = atta_num + (atta_num * increased_spell_damage) + (atta_num * increased_all_damage)
                                                                sudden_doom_damage += atta_num
                                                                if unholy_blight_points == 1:
                                                                    unholy_blight_amount = atta_num / 10 
                                                                    unholy_blight_timer = current_time + 10
                                                                if rune_of_cinderglacier_active == True:
                                                                     rune_of_cinderglacier_damage = atta_num * .2
                                                                     rune_of_cinderglacier_active_count += 1
                                                                     rotation.append("Rune of Cinderglacier")
                                                                     rotation_time.append(current_time)
                                                                     rotation_status.append("Active")
                                                                     rotation_damage.append(atta_num * .2)
                                                                     if rune_of_cinderglacier_active_count == 2:
                                                                         rune_of_cinderglacier_active = False
                                                                rotation.append("Sudden Doom")
                                                                rotation_time.append(current_time)
                                                                rotation_status.append("Hit")
                                                                rotation_damage.append(atta_num)
                                                        if hit == False:
                                                            rotation.append("Sudden Doom")
                                                            rotation_time.append(current_time)
                                                            rotation_status.append("Miss")
                                                            rotation_damage.append(0)                                            
                                            elif attack_table_results == 7:
                                                atta_num = (((0 + (wep_roll * .5)) + (( 0 + (wep_roll * .5)) * (.1 * how_many_dots_on_target)) + (( 0 + (wep_roll * .5)) * (.1 * how_many_dots_on_target) * darkruned_battlegear_four_set)) - (((0 + (wep_roll * .5)) + (( 0 + (wep_roll * .5)) * (.1 * how_many_dots_on_target)) + (( 0 + (wep_roll * .5)) * (.1 * how_many_dots_on_target) * darkruned_battlegear_four_set)) * armor_red_amount))
                                                if dk_presence == 0:
                                                    atta_num = atta_num + (atta_num * .15)
                                                if t9_tank_two_set == True:
                                                    atta_num = atta_num + (atta_num *.05)
                                                if blood_strikes_points != 0:
                                                    atta_num = atta_num + ((blood_strikes_points * 15) / 100)
                                                if might_of_mograine_points != 0:
                                                    atta_num += atta_num * ((might_of_mograine_points * 15) / 100)
                                                if scourgelords_battlegear_two_set == True:
                                                    atta_num = atta_num + (atta_num * .07)
                                                if hysteria_active == True:
                                                    atta_num = atta_num + (atta_num * .2)
                                                if tricksoftt_active == True:
                                                    atta_num = atta_num + (atta_num * .15)
                                                atta_num = atta_num + (atta_num * increased_physical_damage) + (atta_num * increased_all_damage)
                                                atta_num = atta_num * dancing_rune_weapon_damage_multi
                                                dancing_rune_weapon_damage += atta_num
                                                rotation.append("Dancing Rune Weapon")
                                                rotation_time.append(current_time)
                                                rotation_status.append("Hit")
                                                rotation_damage.append(atta_num)
                                                trinket_hit_crit_tracker = 1
                                                if sigil_of_haunted_dreams == True:
                                                    if random.randint(0, 100) < 15:
                                                        if sigil_of_haunted_dreams_buff == False:
                                                            sigil_of_haunted_dreams_buff = True
                                                            sigil_of_haunted_dreams_timer = current_time + 10  
                                                            total_crit = total_crit + ((173 / 45.8) / 100) 
                                                if t9_dps_two_set == True:
                                                    if t9_bonus == False:
                                                        if t9_cd_timer < current_time:
                                                            if (random.randint(0, 10000)/100) < 50:
                                                                t9_bonus = True
                                                                t9_cd_timer = current_time + 45
                                                                t9_active_timer = current_time + 15
                                                                bonus_loop_str += 180
                                                                rotation.append("T9 DPS 2p Bonus")
                                                                rotation_time.append(current_time)
                                                                rotation_damage.append(0)
                                                                rotation_status.append("Proc")
                                                if sudden_doom_points != 0:  #Sudden Doom aka Free Death Coil
                                                    if (random.randint(0, 10000)/100) < sudden_doom_points * 5:
                                                        hit = spell_hit(spell_hit_total, increased_spell_hit, target_level)
                                                        crit = spell_crit((total_crit + (darkruned_battlegear_two_set / 100)), spell_hit_total, increased_spell_hit, target_level, increased_spell_crit)
                                                        if hit == True:
                                                            if crit == True:
                                                                atta_num = random.randint(443, 665)
                                                                atta_num = (atta_num + ((current_ap + (current_ap * ((impurity_points * 4) / 100))) * 0)) * var_crit_amount
                                                                if sigil_of_vengeful_heart == True:
                                                                    atta_num + 380
                                                                if sigil_of_the_wild_buck == True:
                                                                    atta_num += 80
                                                                if black_ice_points == 5:
                                                                    atta_num = atta_num + (atta_num * .1)
                                                                elif black_ice_points == 4:
                                                                    atta_num = atta_num + (atta_num * .08)
                                                                elif black_ice_points == 3:
                                                                    atta_num = atta_num + (atta_num * .06)
                                                                elif black_ice_points == 2:
                                                                    atta_num = atta_num + (atta_num * .04)
                                                                elif black_ice_points == 1:
                                                                    atta_num = atta_num + (atta_num * .02)
                                                                if dk_presence == 0:
                                                                    atta_num = atta_num + (atta_num * .15)
                                                                if tundra_stalker_points != 0:
                                                                    if dots[0] > current_time:
                                                                        atta_num = atta_num + (atta_num * (tundra_stalker_points * .03))
                                                                if glyph_death_coil == True:
                                                                    atta_num += atta_num * .15
                                                                if rage_of_rivendale_points != 0:
                                                                    if dots[1] > current_time:
                                                                        atta_num += atta_num * ((rage_of_rivendale_points * 2) / 100)
                                                                if morbitity_points != 0:
                                                                    atta_num += ((morbitity_points * 5) / 100)
                                                                if hysteria_active == True:
                                                                    atta_num = atta_num + (atta_num * .2)
                                                                if tricksoftt_active == True:
                                                                    atta_num = atta_num + (atta_num * .15)
                                                                atta_num = atta_num + (atta_num * increased_spell_damage) + (atta_num * increased_all_damage)
                                                                sudden_doom_damage += atta_num
                                                                if unholy_blight_points == 1:
                                                                    unholy_blight_amount = atta_num / 10   
                                                                    unholy_blight_timer = current_time + 10
                                                                if rune_of_cinderglacier_active == True:
                                                                     rune_of_cinderglacier_damage = atta_num * .2
                                                                     rune_of_cinderglacier_active_count += 1
                                                                     rotation.append("Rune of Cinderglacier")
                                                                     rotation_time.append(current_time)
                                                                     rotation_status.append("Active")
                                                                     rotation_damage.append(atta_num * .2)
                                                                     if rune_of_cinderglacier_active_count == 2:
                                                                         rune_of_cinderglacier_active = False
                                                                rotation.append("Sudden Doom")
                                                                rotation_time.append(current_time)
                                                                rotation_status.append("Crit")
                                                                rotation_damage.append(atta_num)
                                                            else:
                                                                atta_num = random.randint(443, 665)
                                                                atta_num = (atta_num + ((current_ap + (current_ap * ((impurity_points * 4) / 100))) * 0))
                                                                if sigil_of_vengeful_heart == True:
                                                                    atta_num + 380
                                                                if sigil_of_the_wild_buck == True:
                                                                    atta_num += 80
                                                                if black_ice_points == 5:
                                                                    atta_num = atta_num + (atta_num * .1)
                                                                elif black_ice_points == 4:
                                                                    atta_num = atta_num + (atta_num * .08)
                                                                elif black_ice_points == 3:
                                                                    atta_num = atta_num + (atta_num * .06)
                                                                elif black_ice_points == 2:
                                                                    atta_num = atta_num + (atta_num * .04)
                                                                elif black_ice_points == 1:
                                                                    atta_num = atta_num + (atta_num * .02)
                                                                if dk_presence == 0:
                                                                    atta_num = atta_num + (atta_num * .15)
                                                                if tundra_stalker_points != 0:
                                                                    if dots[0] > current_time:
                                                                        atta_num = atta_num + (atta_num * (tundra_stalker_points * .03))
                                                                if glyph_death_coil == True:
                                                                    atta_num += atta_num * .15
                                                                if rage_of_rivendale_points != 0:
                                                                    if dots[1] > current_time:
                                                                        atta_num += atta_num * ((rage_of_rivendale_points * 2) / 100)
                                                                if morbitity_points != 0:
                                                                    atta_num += ((morbitity_points * 5) / 100)
                                                                if hysteria_active == True:
                                                                    atta_num = atta_num + (atta_num * .2)
                                                                if tricksoftt_active == True:
                                                                    atta_num = atta_num + (atta_num * .15)
                                                                atta_num = atta_num + (atta_num * increased_spell_damage) + (atta_num * increased_all_damage)
                                                                sudden_doom_damage += atta_num
                                                                if unholy_blight_points == 1:
                                                                    unholy_blight_amount = atta_num / 10 
                                                                    unholy_blight_timer = current_time + 10
                                                                if rune_of_cinderglacier_active == True:
                                                                     rune_of_cinderglacier_damage = atta_num * .2
                                                                     rune_of_cinderglacier_active_count += 1
                                                                     rotation.append("Rune of Cinderglacier")
                                                                     rotation_time.append(current_time)
                                                                     rotation_status.append("Active")
                                                                     rotation_damage.append(atta_num * .2)
                                                                     if rune_of_cinderglacier_active_count == 2:
                                                                         rune_of_cinderglacier_active = False
                                                                rotation.append("Sudden Doom")
                                                                rotation_time.append(current_time)
                                                                rotation_status.append("Hit")
                                                                rotation_damage.append(atta_num)
                                                        if hit == False:
                                                            rotation.append("Sudden Doom")
                                                            rotation_time.append(current_time)
                                                            rotation_status.append("Miss")
                                                            rotation_damage.append(0)   
                                    if attack_table_results == 0:
                                        atta_num = 0
                                        rune_cd_tracker[castable] = rune_cd(haste_rune_cd_miss, current_time)
                                        rotation.append("Heart Strike")
                                        rotation_time.append(current_time)
                                        rotation_status.append("Miss")
                                        rotation_damage.append(atta_num)
                                        current_time = current_time + gcd
                                        used_gcd = True
                                        continue
                                    elif attack_table_results == 1:
                                        atta_num = 0
                                        rune_cd_tracker[castable] = rune_cd(haste_rune_cd_miss, current_time)
                                        rotation.append("Heart Strike")
                                        rotation_time.append(current_time)
                                        rotation_status.append("Dodge")
                                        rotation_damage.append(atta_num)
                                        current_time = current_time + gcd
                                        used_gcd = True
                                        continue
                                    elif attack_table_results == 5:
                                        #crit attack
                                        rune_cd_tracker[castable] = rune_cd(haste_rune_cd, current_time)
                                        atta_num = (((0 + (wep_roll * .5)) + (( 0 + (wep_roll * .5)) * (.1 * how_many_dots_on_target)) + (( 0 + (wep_roll * .5)) * (.1 * how_many_dots_on_target) * darkruned_battlegear_four_set)) - (((0 + (wep_roll * .5)) + (( 0 + (wep_roll * .5)) * (.1 * how_many_dots_on_target)) + (( 0 + (wep_roll * .5)) * (.1 * how_many_dots_on_target) * darkruned_battlegear_four_set)) * armor_red_amount))  * (var_crit_amount)
                                        if dk_presence == 0:
                                            atta_num = atta_num + (atta_num * .15)
                                        if t9_tank_two_set == True:
                                            atta_num = atta_num + (atta_num *.05)
                                        if blood_strikes_points != 0:
                                            atta_num = atta_num + ((blood_strikes_points * 15) / 100)
                                        if might_of_mograine_points != 0:
                                            atta_num += atta_num * ((might_of_mograine_points * 15) / 100)
                                        if scourgelords_battlegear_two_set == True:
                                            atta_num = atta_num + (atta_num * .07)
                                        if hysteria_active == True:
                                            atta_num = atta_num + (atta_num * .2)
                                        if tricksoftt_active == True:
                                            atta_num = atta_num + (atta_num * .15)
                                        atta_num = atta_num + (atta_num * increased_physical_damage) + (atta_num * increased_all_damage)
                                        sum_heart_strike_attacks += atta_num
                                        current_power = runic_power(10, current_power, max_runic)
                                        trinket_hit_crit_tracker = 2
                                        if sigil_of_haunted_dreams == True:
                                            if random.randint(0, 100) < 15:
                                                if sigil_of_haunted_dreams_buff == False:
                                                    sigil_of_haunted_dreams_buff = True
                                                    sigil_of_haunted_dreams_timer = current_time + 10  
                                                    total_crit = total_crit + ((173 / 45.8) / 100) 
                                        if t9_dps_two_set == True:
                                            if t9_bonus == False:
                                                if t9_cd_timer < current_time:
                                                    if (random.randint(0, 10000)/100) < 50:
                                                        t9_bonus = True
                                                        t9_cd_timer = current_time + 45
                                                        t9_active_timer = current_time + 15
                                                        bonus_loop_str += 180
                                                        rotation.append("T9 DPS 2p Bonus")
                                                        rotation_time.append(current_time)
                                                        rotation_damage.append(0)
                                                        rotation_status.append("Proc")
                                        if sudden_doom_points != 0:  #Sudden Doom aka Free Death Coil
                                            if (random.randint(0, 10000)/100) < sudden_doom_points * 5:
                                                hit = spell_hit(spell_hit_total, increased_spell_hit, target_level)
                                                crit = spell_crit((total_crit + (darkruned_battlegear_two_set / 100)), spell_hit_total, increased_spell_hit, target_level, increased_spell_crit)
                                                if hit == True:
                                                    if crit == True:
                                                        atta_num = random.randint(443, 665)
                                                        atta_num = (atta_num + ((current_ap + (current_ap * ((impurity_points * 4) / 100))) * 0)) * var_crit_amount
                                                        if sigil_of_vengeful_heart == True:
                                                            atta_num + 380
                                                        if sigil_of_the_wild_buck == True:
                                                            atta_num += 80
                                                        if black_ice_points == 5:
                                                            atta_num = atta_num + (atta_num * .1)
                                                        elif black_ice_points == 4:
                                                            atta_num = atta_num + (atta_num * .08)
                                                        elif black_ice_points == 3:
                                                            atta_num = atta_num + (atta_num * .06)
                                                        elif black_ice_points == 2:
                                                            atta_num = atta_num + (atta_num * .04)
                                                        elif black_ice_points == 1:
                                                            atta_num = atta_num + (atta_num * .02)
                                                        if dk_presence == 0:
                                                            atta_num = atta_num + (atta_num * .15)
                                                        if tundra_stalker_points != 0:
                                                            if dots[0] > current_time:
                                                                atta_num = atta_num + (atta_num * (tundra_stalker_points * .03))
                                                        if glyph_death_coil == True:
                                                            atta_num += atta_num * .15
                                                        if rage_of_rivendale_points != 0:
                                                            if dots[1] > current_time:
                                                                atta_num += atta_num * ((rage_of_rivendale_points * 2) / 100)
                                                        if morbitity_points != 0:
                                                            atta_num += ((morbitity_points * 5) / 100)
                                                        if hysteria_active == True:
                                                            atta_num = atta_num + (atta_num * .2)
                                                        if tricksoftt_active == True:
                                                            atta_num = atta_num + (atta_num * .15)
                                                        atta_num = atta_num + (atta_num * increased_spell_damage) + (atta_num * increased_all_damage)
                                                        sudden_doom_damage += atta_num
                                                        if unholy_blight_points == 1:
                                                            unholy_blight_amount = atta_num / 10   
                                                            unholy_blight_timer = current_time + 10
                                                        if rune_of_cinderglacier_active == True:
                                                             rune_of_cinderglacier_damage = atta_num * .2
                                                             rune_of_cinderglacier_active_count += 1
                                                             rotation.append("Rune of Cinderglacier")
                                                             rotation_time.append(current_time)
                                                             rotation_status.append("Active")
                                                             rotation_damage.append(atta_num * .2)
                                                             if rune_of_cinderglacier_active_count == 2:
                                                                 rune_of_cinderglacier_active = False
                                                        rotation.append("Sudden Doom")
                                                        rotation_time.append(current_time)
                                                        rotation_status.append("Crit")
                                                        rotation_damage.append(atta_num)
                                                    else:
                                                        atta_num = random.randint(443, 665)
                                                        atta_num = (atta_num + ((current_ap + (current_ap * ((impurity_points * 4) / 100))) * 0))
                                                        if sigil_of_vengeful_heart == True:
                                                            atta_num + 380
                                                        if sigil_of_the_wild_buck == True:
                                                            atta_num += 80
                                                        if black_ice_points == 5:
                                                            atta_num = atta_num + (atta_num * .1)
                                                        elif black_ice_points == 4:
                                                            atta_num = atta_num + (atta_num * .08)
                                                        elif black_ice_points == 3:
                                                            atta_num = atta_num + (atta_num * .06)
                                                        elif black_ice_points == 2:
                                                            atta_num = atta_num + (atta_num * .04)
                                                        elif black_ice_points == 1:
                                                            atta_num = atta_num + (atta_num * .02)
                                                        if dk_presence == 0:
                                                            atta_num = atta_num + (atta_num * .15)
                                                        if tundra_stalker_points != 0:
                                                            if dots[0] > current_time:
                                                                atta_num = atta_num + (atta_num * (tundra_stalker_points * .03))
                                                        if glyph_death_coil == True:
                                                            atta_num += atta_num * .15
                                                        if rage_of_rivendale_points != 0:
                                                            if dots[1] > current_time:
                                                                atta_num += atta_num * ((rage_of_rivendale_points * 2) / 100)
                                                        if morbitity_points != 0:
                                                            atta_num += ((morbitity_points * 5) / 100)
                                                        if hysteria_active == True:
                                                            atta_num = atta_num + (atta_num * .2)
                                                        if tricksoftt_active == True:
                                                            atta_num = atta_num + (atta_num * .15)
                                                        atta_num = atta_num + (atta_num * increased_spell_damage) + (atta_num * increased_all_damage)
                                                        sudden_doom_damage += atta_num
                                                        if unholy_blight_points == 1:
                                                            unholy_blight_amount = atta_num / 10 
                                                            unholy_blight_timer = current_time + 10
                                                        if rune_of_cinderglacier_active == True:
                                                             rune_of_cinderglacier_damage = atta_num * .2
                                                             rune_of_cinderglacier_active_count += 1
                                                             rotation.append("Rune of Cinderglacier")
                                                             rotation_time.append(current_time)
                                                             rotation_status.append("Active")
                                                             rotation_damage.append(atta_num * .2)
                                                             if rune_of_cinderglacier_active_count == 2:
                                                                 rune_of_cinderglacier_active = False
                                                        rotation.append("Sudden Doom")
                                                        rotation_time.append(current_time)
                                                        rotation_status.append("Hit")
                                                        rotation_damage.append(atta_num)
                                                if hit == False:
                                                    rotation.append("Sudden Doom")
                                                    rotation_time.append(current_time)
                                                    rotation_status.append("Miss")
                                                    rotation_damage.append(0)
                                        rotation.append("Heart Strike")
                                        rotation_time.append(current_time)
                                        rotation_status.append("Crit")
                                        rotation_damage.append(atta_num)
                                        current_time += gcd
                                        used_gcd = True
                                        continue
                                    elif attack_table_results == 7:
                                        #normal attack
                                        rune_cd_tracker[castable] = rune_cd(haste_rune_cd, current_time)
                                        atta_num = (((0 + (wep_roll * .5)) + (( 0 + (wep_roll * .5)) * (.1 * how_many_dots_on_target)) + (( 0 + (wep_roll * .5)) * (.1 * how_many_dots_on_target) * darkruned_battlegear_four_set)) - (((0 + (wep_roll * .5)) + (( 0 + (wep_roll * .5)) * (.1 * how_many_dots_on_target)) + (( 0 + (wep_roll * .5)) * (.1 * how_many_dots_on_target) * darkruned_battlegear_four_set)) * armor_red_amount))
                                        if dk_presence == 0:
                                            atta_num = atta_num + (atta_num * .15)
                                        if t9_tank_two_set == True:
                                            atta_num = atta_num + (atta_num *.05)
                                        if blood_strikes_points != 0:
                                            atta_num = atta_num + ((blood_strikes_points * 15) / 100)
                                        if might_of_mograine_points != 0:
                                            atta_num += atta_num * ((might_of_mograine_points * 15) / 100)
                                        if scourgelords_battlegear_two_set == True:
                                            atta_num = atta_num + (atta_num * .07)
                                        if hysteria_active == True:
                                            atta_num = atta_num + (atta_num * .2)
                                        if tricksoftt_active == True:
                                            atta_num = atta_num + (atta_num * .15)
                                        atta_num = atta_num + (atta_num * increased_physical_damage) + (atta_num * increased_all_damage)
                                        sum_heart_strike_attacks += atta_num
                                        current_power = runic_power(10, current_power, max_runic)
                                        trinket_hit_crit_tracker = 1
                                        if sigil_of_haunted_dreams == True:
                                            if random.randint(0, 100) < 15:
                                                if sigil_of_haunted_dreams_buff == False:
                                                    sigil_of_haunted_dreams_buff = True
                                                    sigil_of_haunted_dreams_timer = current_time + 10  
                                                    total_crit = total_crit + ((173 / 45.8) / 100) 
                                        if t9_dps_two_set == True:
                                            if t9_bonus == False:
                                                if t9_cd_timer < current_time:
                                                    if (random.randint(0, 10000)/100) < 50:
                                                        t9_bonus = True
                                                        t9_cd_timer = current_time + 45
                                                        t9_active_timer = current_time + 15
                                                        bonus_loop_str += 180
                                                        rotation.append("T9 DPS 2p Bonus")
                                                        rotation_time.append(current_time)
                                                        rotation_damage.append(0)
                                                        rotation_status.append("Proc")
                                        if sudden_doom_points != 0:  #Sudden Doom aka Free Death Coil
                                            if (random.randint(0, 10000)/100) < sudden_doom_points * 5:
                                                hit = spell_hit(spell_hit_total, increased_spell_hit, target_level)
                                                crit = spell_crit((total_crit + (darkruned_battlegear_two_set / 100)), spell_hit_total, increased_spell_hit, target_level, increased_spell_crit)
                                                if hit == True:
                                                    if crit == True:
                                                        atta_num = random.randint(443, 665)
                                                        atta_num = (atta_num + ((current_ap + (current_ap * ((impurity_points * 4) / 100))) * 0)) * var_crit_amount
                                                        if sigil_of_vengeful_heart == True:
                                                            atta_num + 380
                                                        if sigil_of_the_wild_buck == True:
                                                            atta_num += 80
                                                        if black_ice_points == 5:
                                                            atta_num = atta_num + (atta_num * .1)
                                                        elif black_ice_points == 4:
                                                            atta_num = atta_num + (atta_num * .08)
                                                        elif black_ice_points == 3:
                                                            atta_num = atta_num + (atta_num * .06)
                                                        elif black_ice_points == 2:
                                                            atta_num = atta_num + (atta_num * .04)
                                                        elif black_ice_points == 1:
                                                            atta_num = atta_num + (atta_num * .02)
                                                        if dk_presence == 0:
                                                            atta_num = atta_num + (atta_num * .15)
                                                        if tundra_stalker_points != 0:
                                                            if dots[0] > current_time:
                                                                atta_num = atta_num + (atta_num * (tundra_stalker_points * .03))
                                                        if glyph_death_coil == True:
                                                            atta_num += atta_num * .15
                                                        if rage_of_rivendale_points != 0:
                                                            if dots[1] > current_time:
                                                                atta_num += atta_num * ((rage_of_rivendale_points * 2) / 100)
                                                        if morbitity_points != 0:
                                                            atta_num += ((morbitity_points * 5) / 100)
                                                        if hysteria_active == True:
                                                            atta_num = atta_num + (atta_num * .2)
                                                        if tricksoftt_active == True:
                                                            atta_num = atta_num + (atta_num * .15)
                                                        atta_num = atta_num + (atta_num * increased_spell_damage) + (atta_num * increased_all_damage)
                                                        sudden_doom_damage += atta_num
                                                        if unholy_blight_points == 1:
                                                            unholy_blight_amount = atta_num / 10   
                                                            unholy_blight_timer = current_time + 10
                                                        if rune_of_cinderglacier_active == True:
                                                             rune_of_cinderglacier_damage = atta_num * .2
                                                             rune_of_cinderglacier_active_count += 1
                                                             rotation.append("Rune of Cinderglacier")
                                                             rotation_time.append(current_time)
                                                             rotation_status.append("Active")
                                                             rotation_damage.append(atta_num * .2)
                                                             if rune_of_cinderglacier_active_count == 2:
                                                                 rune_of_cinderglacier_active = False
                                                        rotation.append("Sudden Doom")
                                                        rotation_time.append(current_time)
                                                        rotation_status.append("Crit")
                                                        rotation_damage.append(atta_num)
                                                    else:
                                                        atta_num = random.randint(443, 665)
                                                        atta_num = (atta_num + ((current_ap + (current_ap * ((impurity_points * 4) / 100))) * 0))
                                                        if sigil_of_vengeful_heart == True:
                                                            atta_num + 380
                                                        if sigil_of_the_wild_buck == True:
                                                            atta_num += 80
                                                        if black_ice_points == 5:
                                                            atta_num = atta_num + (atta_num * .1)
                                                        elif black_ice_points == 4:
                                                            atta_num = atta_num + (atta_num * .08)
                                                        elif black_ice_points == 3:
                                                            atta_num = atta_num + (atta_num * .06)
                                                        elif black_ice_points == 2:
                                                            atta_num = atta_num + (atta_num * .04)
                                                        elif black_ice_points == 1:
                                                            atta_num = atta_num + (atta_num * .02)
                                                        if dk_presence == 0:
                                                            atta_num = atta_num + (atta_num * .15)
                                                        if tundra_stalker_points != 0:
                                                            if dots[0] > current_time:
                                                                atta_num = atta_num + (atta_num * (tundra_stalker_points * .03))
                                                        if glyph_death_coil == True:
                                                            atta_num += atta_num * .15
                                                        if rage_of_rivendale_points != 0:
                                                            if dots[1] > current_time:
                                                                atta_num += atta_num * ((rage_of_rivendale_points * 2) / 100)
                                                        if morbitity_points != 0:
                                                            atta_num += ((morbitity_points * 5) / 100)
                                                        if hysteria_active == True:
                                                            atta_num = atta_num + (atta_num * .2)
                                                        if tricksoftt_active == True:
                                                            atta_num = atta_num + (atta_num * .15)
                                                        atta_num = atta_num + (atta_num * increased_spell_damage) + (atta_num * increased_all_damage)
                                                        sudden_doom_damage += atta_num
                                                        if unholy_blight_points == 1:
                                                            unholy_blight_amount = atta_num / 10 
                                                            unholy_blight_timer = current_time + 10
                                                        if rune_of_cinderglacier_active == True:
                                                             rune_of_cinderglacier_damage = atta_num * .2
                                                             rune_of_cinderglacier_active_count += 1
                                                             rotation.append("Rune of Cinderglacier")
                                                             rotation_time.append(current_time)
                                                             rotation_status.append("Active")
                                                             rotation_damage.append(atta_num * .2)
                                                             if rune_of_cinderglacier_active_count == 2:
                                                                 rune_of_cinderglacier_active = False
                                                        rotation.append("Sudden Doom")
                                                        rotation_time.append(current_time)
                                                        rotation_status.append("Hit")
                                                        rotation_damage.append(atta_num)
                                                if hit == False:
                                                    rotation.append("Sudden Doom")
                                                    rotation_time.append(current_time)
                                                    rotation_status.append("Miss")
                                                    rotation_damage.append(0)
                                        rotation.append("Heart Strike")
                                        rotation_time.append(current_time)
                                        rotation_status.append("Hit")
                                        rotation_damage.append(atta_num)
                                        current_time += gcd
                                        used_gcd = True
                                        continue
                                        

                    if pestilence_allow_reset == False:
                        if heart_strike_points == 1:
                            castable = all_rune_check(blood, current_time, rune_cd_tracker) #Heart Strike if pest reset if false
                            use_death_rune = False
                            if castable == 3:   #Blood Strike
                                until_dot0 = dots[0]
                                until_dot1 = dots[1]
                                if pestilence_allow_reset == True:
                                    until_dot0 -= pestilence_reset_window
                                    until_dot1 -= pestilence_reset_window
                                castable_death = all_rune_check(death, current_time, rune_cd_tracker)
                                castable_death_f = all_rune_check(death_f, current_time, rune_cd_tracker)
                                castable_death_u = all_rune_check(death_u, current_time, rune_cd_tracker)
                                if castable_death != 3:
                                    if until_dot0 <= current_time + haste_rune_cd:
                                        if until_dot1 <= current_time + haste_rune_cd:
                                            use_death_rune = True
                                            just_used_death_rune = True
                                            castable = castable_death
                                elif castable_death_f != 3:
                                    if until_dot0 <= current_time + haste_rune_cd:
                                        if until_dot1 <= current_time + haste_rune_cd:
                                            use_death_rune = True
                                            just_used_death_rune = True
                                            castable = castable_death_f
                                elif castable_death_u != 3:
                                    if until_dot0 <= current_time + haste_rune_cd:
                                        if until_dot1 <= current_time + haste_rune_cd:
                                            use_death_rune = True
                                            just_used_death_rune = True
                                            castable = castable_death_u
                            if castable != 3:  
                                if castable == 2: 
                                    castable = 0
                                if use_death_rune == True:
                                    use_death_rune = False
                                    if castable_death != 3:
                                        rune_cd_tracker[castable] = 0
                                        if castable_death == 2:
                                            castable_death = 0
                                        rune_cd_tracker[castable_death + 6] = 10000
                                    elif castable_death_f != 3:
                                        castable += 2
                                        rune_cd_tracker[castable] = 0
                                        if castable_death_f == 2:
                                            castable_death_f = 0
                                        rune_cd_tracker[castable_death_f + 8] = 10000
                                    elif castable_death_u != 3:
                                        castable += 4
                                        rune_cd_tracker[castable] = 0
                                        if castable_death_u == 2:
                                            castable_death_u = 0
                                        rune_cd_tracker[castable_death_u + 10] = 10000
                                else:
                                    use_death_rune = False
                                if amount_of_targets > 1:
                                    attack_table_results = attack_table(1, tanking, H2, True, False, hit_from_gear, hit_from_other, target_level, all_expertise_dodge, all_expertise_parry, total_crit, (annihilation_talent_points / 100) + increased_phy_crit + ((subversion_points * 3) / 100))
                                    armor_red_amount = dam_reduc(current_armor, armor_penetration, target_level)
                                    wep_roll = weapon_roll(mh_input_lowend_weapon_damage,mh_input_topend_weapon_damage)
                                    wep_roll = wep_roll + (attack_damage_normalization * current_ap / 14)
                                    #Rune Hit
                                    haste_percentage = (total_haste_rating / 25.21) / 100 #Returns a result of 0 - 1 for 0% - 100%
                                    haste_rune_cd = rune_grade_timer(current_time, last_rune_change[castable], last_rune_change[castable+6])
                                    if improved_unholy_presence_points != 0:
                                        if dk_presence == 2:
                                            haste_rune_cd = haste_rune_cd - (haste_rune_cd * ((improved_unholy_presence_points * 5) / 100))
                                    if dk_presence != 2:
                                        gcd = input_gcd / (1 + haste_percentage)
                                        if gcd < 1:
                                            gcd = 1
                                    ##Rune Miss
                                    haste_rune_cd_miss = 1
                                    how_many_dots_on_target = 0
                                    if dots[0] > current_time:
                                        how_many_dots_on_target += 1
                                    if dots[1] > current_time:
                                        how_many_dots_on_target += 1
                                    if dots[2] > current_time:
                                        how_many_dots_on_target += 1
                                    if multiple_adds_timer < current_time:
                                        how_many_dots_on_target = 0
                                    if dancing_rune_weapon_points == 1:
                                        if dancing_rune_weapon_active == True:
                                            if attack_table_results == 0:
                                                atta_num = 0
                                                rotation.append("Dancing Rune Weapon")
                                                rotation_time.append(current_time)
                                                rotation_status.append("Miss")
                                                rotation_damage.append(atta_num)
                                            elif attack_table_results == 1:
                                                atta_num = 0
                                                rotation.append("Dancing Rune Weapon")
                                                rotation_time.append(current_time)
                                                rotation_status.append("Dodge")
                                                rotation_damage.append(atta_num)
                                            elif attack_table_results == 5:
                                                atta_num = (((0 + (wep_roll * .25)) + (( 0 + (wep_roll * .25)) * (.1 * how_many_dots_on_target)) + (( 0 + (wep_roll * .25)) * (.1 * how_many_dots_on_target) * darkruned_battlegear_four_set)) - (((0 + (wep_roll * .25)) + (( 0 + (wep_roll * .25)) * (.1 * how_many_dots_on_target)) + (( 0 + (wep_roll * .25)) * (.1 * how_many_dots_on_target) * darkruned_battlegear_four_set)) * armor_red_amount))  * (var_crit_amount)
                                                if dk_presence == 0:
                                                    atta_num = atta_num + (atta_num * .15)
                                                if t9_tank_two_set == True:
                                                    atta_num = atta_num + (atta_num *.05)
                                                if blood_strikes_points != 0:
                                                    atta_num = atta_num + ((blood_strikes_points * 15) / 100)
                                                if might_of_mograine_points != 0:
                                                    atta_num += atta_num * ((might_of_mograine_points * 15) / 100)
                                                if scourgelords_battlegear_two_set == True:
                                                    atta_num = atta_num + (atta_num * .07)
                                                if hysteria_active == True:
                                                    atta_num = atta_num + (atta_num * .2)
                                                if tricksoftt_active == True:
                                                    atta_num = atta_num + (atta_num * .15)
                                                atta_num = atta_num + (atta_num * increased_physical_damage) + (atta_num * increased_all_damage)
                                                atta_num = atta_num * dancing_rune_weapon_damage_multi
                                                dancing_rune_weapon_damage += atta_num
                                                rotation.append("Dancing Rune Weapon")
                                                rotation_time.append(current_time)
                                                rotation_status.append("Crit") 
                                                rotation_damage.append(atta_num)
                                                trinket_hit_crit_tracker = 2
                                                if sigil_of_haunted_dreams == True:
                                                    if random.randint(0, 100) < 15:
                                                        if sigil_of_haunted_dreams_buff == False:
                                                            sigil_of_haunted_dreams_buff = True
                                                            sigil_of_haunted_dreams_timer = current_time + 10  
                                                            total_crit = total_crit + ((173 / 45.8) / 100) 
                                                if t9_dps_two_set == True:
                                                    if t9_bonus == False:
                                                        if t9_cd_timer < current_time:
                                                            if (random.randint(0, 10000)/100) < 50:
                                                                t9_bonus = True
                                                                t9_cd_timer = current_time + 45
                                                                t9_active_timer = current_time + 15
                                                                bonus_loop_str += 180
                                                                rotation.append("T9 DPS 2p Bonus")
                                                                rotation_time.append(current_time)
                                                                rotation_damage.append(0)
                                                                rotation_status.append("Proc")
                                                if sudden_doom_points != 0:  #Sudden Doom aka Free Death Coil
                                                    if (random.randint(0, 10000)/100) < sudden_doom_points * 5:
                                                        hit = spell_hit(spell_hit_total, increased_spell_hit, target_level)
                                                        crit = spell_crit((total_crit + (darkruned_battlegear_two_set / 100)), spell_hit_total, increased_spell_hit, target_level, increased_spell_crit)
                                                        if hit == True:
                                                            if crit == True:
                                                                atta_num = random.randint(443, 665)
                                                                atta_num = (atta_num + ((current_ap + (current_ap * ((impurity_points * 4) / 100))) * 0)) * var_crit_amount
                                                                if sigil_of_vengeful_heart == True:
                                                                    atta_num + 380
                                                                if sigil_of_the_wild_buck == True:
                                                                    atta_num += 80
                                                                if black_ice_points == 5:
                                                                    atta_num = atta_num + (atta_num * .1)
                                                                elif black_ice_points == 4:
                                                                    atta_num = atta_num + (atta_num * .08)
                                                                elif black_ice_points == 3:
                                                                    atta_num = atta_num + (atta_num * .06)
                                                                elif black_ice_points == 2:
                                                                    atta_num = atta_num + (atta_num * .04)
                                                                elif black_ice_points == 1:
                                                                    atta_num = atta_num + (atta_num * .02)
                                                                if dk_presence == 0:
                                                                    atta_num = atta_num + (atta_num * .15)
                                                                if tundra_stalker_points != 0:
                                                                    if dots[0] > current_time:
                                                                        atta_num = atta_num + (atta_num * (tundra_stalker_points * .03))
                                                                if glyph_death_coil == True:
                                                                    atta_num += atta_num * .15
                                                                if rage_of_rivendale_points != 0:
                                                                    if dots[1] > current_time:
                                                                        atta_num += atta_num * ((rage_of_rivendale_points * 2) / 100)
                                                                if morbitity_points != 0:
                                                                    atta_num += ((morbitity_points * 5) / 100)
                                                                if hysteria_active == True:
                                                                    atta_num = atta_num + (atta_num * .2)
                                                                if tricksoftt_active == True:
                                                                    atta_num = atta_num + (atta_num * .15)
                                                                atta_num = atta_num + (atta_num * increased_spell_damage) + (atta_num * increased_all_damage)
                                                                sudden_doom_damage += atta_num
                                                                if unholy_blight_points == 1:
                                                                    unholy_blight_amount = atta_num / 10   
                                                                    unholy_blight_timer = current_time + 10
                                                                if rune_of_cinderglacier_active == True:
                                                                     rune_of_cinderglacier_damage = atta_num * .2
                                                                     rune_of_cinderglacier_active_count += 1
                                                                     rotation.append("Rune of Cinderglacier")
                                                                     rotation_time.append(current_time)
                                                                     rotation_status.append("Active")
                                                                     rotation_damage.append(atta_num * .2)
                                                                     if rune_of_cinderglacier_active_count == 2:
                                                                         rune_of_cinderglacier_active = False
                                                                rotation.append("Sudden Doom")
                                                                rotation_time.append(current_time)
                                                                rotation_status.append("Crit")
                                                                rotation_damage.append(atta_num)
                                                            else:
                                                                atta_num = random.randint(443, 665)
                                                                atta_num = (atta_num + ((current_ap + (current_ap * ((impurity_points * 4) / 100))) * 0))
                                                                if sigil_of_vengeful_heart == True:
                                                                    atta_num + 380
                                                                if sigil_of_the_wild_buck == True:
                                                                    atta_num += 80
                                                                if black_ice_points == 5:
                                                                    atta_num = atta_num + (atta_num * .1)
                                                                elif black_ice_points == 4:
                                                                    atta_num = atta_num + (atta_num * .08)
                                                                elif black_ice_points == 3:
                                                                    atta_num = atta_num + (atta_num * .06)
                                                                elif black_ice_points == 2:
                                                                    atta_num = atta_num + (atta_num * .04)
                                                                elif black_ice_points == 1:
                                                                    atta_num = atta_num + (atta_num * .02)
                                                                if dk_presence == 0:
                                                                    atta_num = atta_num + (atta_num * .15)
                                                                if tundra_stalker_points != 0:
                                                                    if dots[0] > current_time:
                                                                        atta_num = atta_num + (atta_num * (tundra_stalker_points * .03))
                                                                if glyph_death_coil == True:
                                                                    atta_num += atta_num * .15
                                                                if rage_of_rivendale_points != 0:
                                                                    if dots[1] > current_time:
                                                                        atta_num += atta_num * ((rage_of_rivendale_points * 2) / 100)
                                                                if morbitity_points != 0:
                                                                    atta_num += ((morbitity_points * 5) / 100)
                                                                if hysteria_active == True:
                                                                    atta_num = atta_num + (atta_num * .2)
                                                                if tricksoftt_active == True:
                                                                    atta_num = atta_num + (atta_num * .15)
                                                                atta_num = atta_num + (atta_num * increased_spell_damage) + (atta_num * increased_all_damage)
                                                                sudden_doom_damage += atta_num
                                                                if unholy_blight_points == 1:
                                                                    unholy_blight_amount = atta_num / 10 
                                                                    unholy_blight_timer = current_time + 10
                                                                if rune_of_cinderglacier_active == True:
                                                                     rune_of_cinderglacier_damage = atta_num * .2
                                                                     rune_of_cinderglacier_active_count += 1
                                                                     rotation.append("Rune of Cinderglacier")
                                                                     rotation_time.append(current_time)
                                                                     rotation_status.append("Active")
                                                                     rotation_damage.append(atta_num * .2)
                                                                     if rune_of_cinderglacier_active_count == 2:
                                                                         rune_of_cinderglacier_active = False
                                                                rotation.append("Sudden Doom")
                                                                rotation_time.append(current_time)
                                                                rotation_status.append("Hit")
                                                                rotation_damage.append(atta_num)
                                                        if hit == False:
                                                            rotation.append("Sudden Doom")
                                                            rotation_time.append(current_time)
                                                            rotation_status.append("Miss")
                                                            rotation_damage.append(0)                                            
                                            elif attack_table_results == 7:
                                                atta_num = (((0 + (wep_roll * .25)) + (( 0 + (wep_roll * .25)) * (.1 * how_many_dots_on_target)) + (( 0 + (wep_roll * .25)) * (.1 * how_many_dots_on_target) * darkruned_battlegear_four_set)) - (((0 + (wep_roll * .25)) + (( 0 + (wep_roll * .25)) * (.1 * how_many_dots_on_target)) + (( 0 + (wep_roll * .25)) * (.1 * how_many_dots_on_target) * darkruned_battlegear_four_set)) * armor_red_amount))
                                                if dk_presence == 0:
                                                    atta_num = atta_num + (atta_num * .15)
                                                if t9_tank_two_set == True:
                                                    atta_num = atta_num + (atta_num *.05)
                                                if blood_strikes_points != 0:
                                                    atta_num = atta_num + ((blood_strikes_points * 15) / 100)
                                                if might_of_mograine_points != 0:
                                                    atta_num += atta_num * ((might_of_mograine_points * 15) / 100)
                                                if scourgelords_battlegear_two_set == True:
                                                    atta_num = atta_num + (atta_num * .07)
                                                if hysteria_active == True:
                                                    atta_num = atta_num + (atta_num * .2)
                                                if tricksoftt_active == True:
                                                    atta_num = atta_num + (atta_num * .15)
                                                atta_num = atta_num + (atta_num * increased_physical_damage) + (atta_num * increased_all_damage)
                                                atta_num = atta_num * dancing_rune_weapon_damage_multi
                                                dancing_rune_weapon_damage += atta_num
                                                rotation.append("Dancing Rune Weapon")
                                                rotation_time.append(current_time)
                                                rotation_status.append("Hit") 
                                                rotation_damage.append(atta_num)
                                                trinket_hit_crit_tracker = 1
                                                if sigil_of_haunted_dreams == True:
                                                    if random.randint(0, 100) < 15:
                                                        if sigil_of_haunted_dreams_buff == False:
                                                            sigil_of_haunted_dreams_buff = True
                                                            sigil_of_haunted_dreams_timer = current_time + 10  
                                                            total_crit = total_crit + ((173 / 45.8) / 100) 
                                                if t9_dps_two_set == True:
                                                    if t9_bonus == False:
                                                        if t9_cd_timer < current_time:
                                                            if (random.randint(0, 10000)/100) < 50:
                                                                t9_bonus = True
                                                                t9_cd_timer = current_time + 45
                                                                t9_active_timer = current_time + 15
                                                                bonus_loop_str += 180
                                                                rotation.append("T9 DPS 2p Bonus")
                                                                rotation_time.append(current_time)
                                                                rotation_damage.append(0)
                                                                rotation_status.append("Proc")
                                                if sudden_doom_points != 0:  #Sudden Doom aka Free Death Coil
                                                    if (random.randint(0, 10000)/100) < sudden_doom_points * 5:
                                                        hit = spell_hit(spell_hit_total, increased_spell_hit, target_level)
                                                        crit = spell_crit((total_crit + (darkruned_battlegear_two_set / 100)), spell_hit_total, increased_spell_hit, target_level, increased_spell_crit)
                                                        if hit == True:
                                                            if crit == True:
                                                                atta_num = random.randint(443, 665)
                                                                atta_num = (atta_num + ((current_ap + (current_ap * ((impurity_points * 4) / 100))) * 0)) * var_crit_amount
                                                                if sigil_of_vengeful_heart == True:
                                                                    atta_num + 380
                                                                if sigil_of_the_wild_buck == True:
                                                                    atta_num += 80
                                                                if black_ice_points == 5:
                                                                    atta_num = atta_num + (atta_num * .1)
                                                                elif black_ice_points == 4:
                                                                    atta_num = atta_num + (atta_num * .08)
                                                                elif black_ice_points == 3:
                                                                    atta_num = atta_num + (atta_num * .06)
                                                                elif black_ice_points == 2:
                                                                    atta_num = atta_num + (atta_num * .04)
                                                                elif black_ice_points == 1:
                                                                    atta_num = atta_num + (atta_num * .02)
                                                                if dk_presence == 0:
                                                                    atta_num = atta_num + (atta_num * .15)
                                                                if tundra_stalker_points != 0:
                                                                    if dots[0] > current_time:
                                                                        atta_num = atta_num + (atta_num * (tundra_stalker_points * .03))
                                                                if glyph_death_coil == True:
                                                                    atta_num += atta_num * .15
                                                                if rage_of_rivendale_points != 0:
                                                                    if dots[1] > current_time:
                                                                        atta_num += atta_num * ((rage_of_rivendale_points * 2) / 100)
                                                                if morbitity_points != 0:
                                                                    atta_num += ((morbitity_points * 5) / 100)
                                                                if hysteria_active == True:
                                                                    atta_num = atta_num + (atta_num * .2)
                                                                if tricksoftt_active == True:
                                                                    atta_num = atta_num + (atta_num * .15)
                                                                atta_num = atta_num + (atta_num * increased_spell_damage) + (atta_num * increased_all_damage)
                                                                sudden_doom_damage += atta_num
                                                                if unholy_blight_points == 1:
                                                                    unholy_blight_amount = atta_num / 10   
                                                                    unholy_blight_timer = current_time + 10
                                                                if rune_of_cinderglacier_active == True:
                                                                     rune_of_cinderglacier_damage = atta_num * .2
                                                                     rune_of_cinderglacier_active_count += 1
                                                                     rotation.append("Rune of Cinderglacier")
                                                                     rotation_time.append(current_time)
                                                                     rotation_status.append("Active")
                                                                     rotation_damage.append(atta_num * .2)
                                                                     if rune_of_cinderglacier_active_count == 2:
                                                                         rune_of_cinderglacier_active = False
                                                                rotation.append("Sudden Doom")
                                                                rotation_time.append(current_time)
                                                                rotation_status.append("Crit")
                                                                rotation_damage.append(atta_num)
                                                            else:
                                                                atta_num = random.randint(443, 665)
                                                                atta_num = (atta_num + ((current_ap + (current_ap * ((impurity_points * 4) / 100))) * 0))
                                                                if sigil_of_vengeful_heart == True:
                                                                    atta_num + 380
                                                                if sigil_of_the_wild_buck == True:
                                                                    atta_num += 80
                                                                if black_ice_points == 5:
                                                                    atta_num = atta_num + (atta_num * .1)
                                                                elif black_ice_points == 4:
                                                                    atta_num = atta_num + (atta_num * .08)
                                                                elif black_ice_points == 3:
                                                                    atta_num = atta_num + (atta_num * .06)
                                                                elif black_ice_points == 2:
                                                                    atta_num = atta_num + (atta_num * .04)
                                                                elif black_ice_points == 1:
                                                                    atta_num = atta_num + (atta_num * .02)
                                                                if dk_presence == 0:
                                                                    atta_num = atta_num + (atta_num * .15)
                                                                if tundra_stalker_points != 0:
                                                                    if dots[0] > current_time:
                                                                        atta_num = atta_num + (atta_num * (tundra_stalker_points * .03))
                                                                if glyph_death_coil == True:
                                                                    atta_num += atta_num * .15
                                                                if rage_of_rivendale_points != 0:
                                                                    if dots[1] > current_time:
                                                                        atta_num += atta_num * ((rage_of_rivendale_points * 2) / 100)
                                                                if morbitity_points != 0:
                                                                    atta_num += ((morbitity_points * 5) / 100)
                                                                if hysteria_active == True:
                                                                    atta_num = atta_num + (atta_num * .2)
                                                                if tricksoftt_active == True:
                                                                    atta_num = atta_num + (atta_num * .15)
                                                                atta_num = atta_num + (atta_num * increased_spell_damage) + (atta_num * increased_all_damage)
                                                                sudden_doom_damage += atta_num
                                                                if unholy_blight_points == 1:
                                                                    unholy_blight_amount = atta_num / 10 
                                                                    unholy_blight_timer = current_time + 10
                                                                if rune_of_cinderglacier_active == True:
                                                                     rune_of_cinderglacier_damage = atta_num * .2
                                                                     rune_of_cinderglacier_active_count += 1
                                                                     rotation.append("Rune of Cinderglacier")
                                                                     rotation_time.append(current_time)
                                                                     rotation_status.append("Active")
                                                                     rotation_damage.append(atta_num * .2)
                                                                     if rune_of_cinderglacier_active_count == 2:
                                                                         rune_of_cinderglacier_active = False
                                                                rotation.append("Sudden Doom")
                                                                rotation_time.append(current_time)
                                                                rotation_status.append("Hit")
                                                                rotation_damage.append(atta_num)
                                                        if hit == False:
                                                            rotation.append("Sudden Doom")
                                                            rotation_time.append(current_time)
                                                            rotation_status.append("Miss")
                                                            rotation_damage.append(0)   
                                    if attack_table_results == 0:
                                        atta_num = 0
                                        rotation.append("Heart Strike - Second Target")
                                        rotation_time.append(current_time)
                                        rotation_status.append("Miss")
                                        rotation_damage.append(atta_num)
                                    elif attack_table_results == 1:
                                        atta_num = 0
                                        rotation.append("Heart Strike - Second Target")
                                        rotation_time.append(current_time)
                                        rotation_status.append("Dodge")
                                        rotation_damage.append(atta_num)
                                    elif attack_table_results == 5:
                                        #crit attack
                                        atta_num = (((0 + (wep_roll * .25)) + (( 0 + (wep_roll * .25)) * (.1 * how_many_dots_on_target)) + (( 0 + (wep_roll * .25)) * (.1 * how_many_dots_on_target) * darkruned_battlegear_four_set)) - (((0 + (wep_roll * .25)) + (( 0 + (wep_roll * .25)) * (.1 * how_many_dots_on_target)) + (( 0 + (wep_roll * .25)) * (.1 * how_many_dots_on_target) * darkruned_battlegear_four_set)) * armor_red_amount))  * (var_crit_amount)
                                        if dk_presence == 0:
                                            atta_num = atta_num + (atta_num * .15)
                                        if t9_tank_two_set == True:
                                            atta_num = atta_num + (atta_num *.05)
                                        if blood_strikes_points != 0:
                                            atta_num = atta_num + ((blood_strikes_points * 15) / 100)
                                        if might_of_mograine_points != 0:
                                            atta_num += atta_num * ((might_of_mograine_points * 15) / 100)
                                        if scourgelords_battlegear_two_set == True:
                                            atta_num = atta_num + (atta_num * .07)
                                        if hysteria_active == True:
                                            atta_num = atta_num + (atta_num * .2)
                                        if tricksoftt_active == True:
                                            atta_num = atta_num + (atta_num * .15)
                                        atta_num = atta_num + (atta_num * increased_physical_damage) + (atta_num * increased_all_damage)
                                        sum_heart_strike_attacks += atta_num
                                        trinket_hit_crit_tracker = 2
                                        if sigil_of_haunted_dreams == True:
                                            if random.randint(0, 100) < 15:
                                                if sigil_of_haunted_dreams_buff == False:
                                                    sigil_of_haunted_dreams_buff = True
                                                    sigil_of_haunted_dreams_timer = current_time + 10  
                                                    total_crit = total_crit + ((173 / 45.8) / 100) 
                                        if t9_dps_two_set == True:
                                            if t9_bonus == False:
                                                if t9_cd_timer < current_time:
                                                    if (random.randint(0, 10000)/100) < 50:
                                                        t9_bonus = True
                                                        t9_cd_timer = current_time + 45
                                                        t9_active_timer = current_time + 15
                                                        bonus_loop_str += 180
                                                        rotation.append("T9 DPS 2p Bonus")
                                                        rotation_time.append(current_time)
                                                        rotation_damage.append(0)
                                                        rotation_status.append("Proc")
                                        if sudden_doom_points != 0:  #Sudden Doom aka Free Death Coil
                                            if (random.randint(0, 10000)/100) < sudden_doom_points * 5:
                                                hit = spell_hit(spell_hit_total, increased_spell_hit, target_level)
                                                crit = spell_crit((total_crit + (darkruned_battlegear_two_set / 100)), spell_hit_total, increased_spell_hit, target_level, increased_spell_crit)
                                                if hit == True:
                                                    if crit == True:
                                                        atta_num = random.randint(443, 665)
                                                        atta_num = (atta_num + ((current_ap + (current_ap * ((impurity_points * 4) / 100))) * 0)) * var_crit_amount
                                                        if sigil_of_vengeful_heart == True:
                                                            atta_num + 380
                                                        if sigil_of_the_wild_buck == True:
                                                            atta_num += 80
                                                        if black_ice_points == 5:
                                                            atta_num = atta_num + (atta_num * .1)
                                                        elif black_ice_points == 4:
                                                            atta_num = atta_num + (atta_num * .08)
                                                        elif black_ice_points == 3:
                                                            atta_num = atta_num + (atta_num * .06)
                                                        elif black_ice_points == 2:
                                                            atta_num = atta_num + (atta_num * .04)
                                                        elif black_ice_points == 1:
                                                            atta_num = atta_num + (atta_num * .02)
                                                        if dk_presence == 0:
                                                            atta_num = atta_num + (atta_num * .15)
                                                        if tundra_stalker_points != 0:
                                                            if dots[0] > current_time:
                                                                atta_num = atta_num + (atta_num * (tundra_stalker_points * .03))
                                                        if glyph_death_coil == True:
                                                            atta_num += atta_num * .15
                                                        if rage_of_rivendale_points != 0:
                                                            if dots[1] > current_time:
                                                                atta_num += atta_num * ((rage_of_rivendale_points * 2) / 100)
                                                        if morbitity_points != 0:
                                                            atta_num += ((morbitity_points * 5) / 100)
                                                        if hysteria_active == True:
                                                            atta_num = atta_num + (atta_num * .2)
                                                        if tricksoftt_active == True:
                                                            atta_num = atta_num + (atta_num * .15)
                                                        atta_num = atta_num + (atta_num * increased_spell_damage) + (atta_num * increased_all_damage)
                                                        sudden_doom_damage += atta_num
                                                        if unholy_blight_points == 1:
                                                            unholy_blight_amount = atta_num / 10   
                                                            unholy_blight_timer = current_time + 10
                                                        if rune_of_cinderglacier_active == True:
                                                             rune_of_cinderglacier_damage = atta_num * .2
                                                             rune_of_cinderglacier_active_count += 1
                                                             rotation.append("Rune of Cinderglacier")
                                                             rotation_time.append(current_time)
                                                             rotation_status.append("Active")
                                                             rotation_damage.append(atta_num * .2)
                                                             if rune_of_cinderglacier_active_count == 2:
                                                                 rune_of_cinderglacier_active = False
                                                        rotation.append("Sudden Doom")
                                                        rotation_time.append(current_time)
                                                        rotation_status.append("Crit")
                                                        rotation_damage.append(atta_num)
                                                    else:
                                                        atta_num = random.randint(443, 665)
                                                        atta_num = (atta_num + ((current_ap + (current_ap * ((impurity_points * 4) / 100))) * 0))
                                                        if sigil_of_vengeful_heart == True:
                                                            atta_num + 380
                                                        if sigil_of_the_wild_buck == True:
                                                            atta_num += 80
                                                        if black_ice_points == 5:
                                                            atta_num = atta_num + (atta_num * .1)
                                                        elif black_ice_points == 4:
                                                            atta_num = atta_num + (atta_num * .08)
                                                        elif black_ice_points == 3:
                                                            atta_num = atta_num + (atta_num * .06)
                                                        elif black_ice_points == 2:
                                                            atta_num = atta_num + (atta_num * .04)
                                                        elif black_ice_points == 1:
                                                            atta_num = atta_num + (atta_num * .02)
                                                        if dk_presence == 0:
                                                            atta_num = atta_num + (atta_num * .15)
                                                        if tundra_stalker_points != 0:
                                                            if dots[0] > current_time:
                                                                atta_num = atta_num + (atta_num * (tundra_stalker_points * .03))
                                                        if glyph_death_coil == True:
                                                            atta_num += atta_num * .15
                                                        if rage_of_rivendale_points != 0:
                                                            if dots[1] > current_time:
                                                                atta_num += atta_num * ((rage_of_rivendale_points * 2) / 100)
                                                        if morbitity_points != 0:
                                                            atta_num += ((morbitity_points * 5) / 100)
                                                        if hysteria_active == True:
                                                            atta_num = atta_num + (atta_num * .2)
                                                        if tricksoftt_active == True:
                                                            atta_num = atta_num + (atta_num * .15)
                                                        atta_num = atta_num + (atta_num * increased_spell_damage) + (atta_num * increased_all_damage)
                                                        sudden_doom_damage += atta_num
                                                        if unholy_blight_points == 1:
                                                            unholy_blight_amount = atta_num / 10 
                                                            unholy_blight_timer = current_time + 10
                                                        if rune_of_cinderglacier_active == True:
                                                             rune_of_cinderglacier_damage = atta_num * .2
                                                             rune_of_cinderglacier_active_count += 1
                                                             rotation.append("Rune of Cinderglacier")
                                                             rotation_time.append(current_time)
                                                             rotation_status.append("Active")
                                                             rotation_damage.append(atta_num * .2)
                                                             if rune_of_cinderglacier_active_count == 2:
                                                                 rune_of_cinderglacier_active = False
                                                        rotation.append("Sudden Doom")
                                                        rotation_time.append(current_time)
                                                        rotation_status.append("Hit")
                                                        rotation_damage.append(atta_num)
                                                if hit == False:
                                                    rotation.append("Sudden Doom")
                                                    rotation_time.append(current_time)
                                                    rotation_status.append("Miss")
                                                    rotation_damage.append(0)
                                        rotation.append("Heart Strike - Second Target")
                                        rotation_time.append(current_time)
                                        rotation_status.append("Crit")
                                        rotation_damage.append(atta_num)
                                    elif attack_table_results == 7:
                                        #normal attack
                                        atta_num = (((0 + (wep_roll * .25)) + (( 0 + (wep_roll * .25)) * (.1 * how_many_dots_on_target)) + (( 0 + (wep_roll * .25)) * (.1 * how_many_dots_on_target) * darkruned_battlegear_four_set)) - (((0 + (wep_roll * .25)) + (( 0 + (wep_roll * .25)) * (.1 * how_many_dots_on_target)) + (( 0 + (wep_roll * .25)) * (.1 * how_many_dots_on_target) * darkruned_battlegear_four_set)) * armor_red_amount))
                                        if dk_presence == 0:
                                            atta_num = atta_num + (atta_num * .15)
                                        if t9_tank_two_set == True:
                                            atta_num = atta_num + (atta_num *.05)
                                        if blood_strikes_points != 0:
                                            atta_num = atta_num + ((blood_strikes_points * 15) / 100)
                                        if might_of_mograine_points != 0:
                                            atta_num += atta_num * ((might_of_mograine_points * 15) / 100)
                                        if scourgelords_battlegear_two_set == True:
                                            atta_num = atta_num + (atta_num * .07)
                                        if hysteria_active == True:
                                            atta_num = atta_num + (atta_num * .2)
                                        if tricksoftt_active == True:
                                            atta_num = atta_num + (atta_num * .15)
                                        atta_num = atta_num + (atta_num * increased_physical_damage) + (atta_num * increased_all_damage)
                                        sum_heart_strike_attacks += atta_num
                                        trinket_hit_crit_tracker = 1
                                        if sigil_of_haunted_dreams == True:
                                            if random.randint(0, 100) < 15:
                                                if sigil_of_haunted_dreams_buff == False:
                                                    sigil_of_haunted_dreams_buff = True
                                                    sigil_of_haunted_dreams_timer = current_time + 10  
                                                    total_crit = total_crit + ((173 / 45.8) / 100) 
                                        if t9_dps_two_set == True:
                                            if t9_bonus == False:
                                                if t9_cd_timer < current_time:
                                                    if (random.randint(0, 10000)/100) < 50:
                                                        t9_bonus = True
                                                        t9_cd_timer = current_time + 45
                                                        t9_active_timer = current_time + 15
                                                        bonus_loop_str += 180
                                                        rotation.append("T9 DPS 2p Bonus")
                                                        rotation_time.append(current_time)
                                                        rotation_damage.append(0)
                                                        rotation_status.append("Proc")
                                        if sudden_doom_points != 0:  #Sudden Doom aka Free Death Coil
                                            if (random.randint(0, 10000)/100) < sudden_doom_points * 5:
                                                hit = spell_hit(spell_hit_total, increased_spell_hit, target_level)
                                                crit = spell_crit((total_crit + (darkruned_battlegear_two_set / 100)), spell_hit_total, increased_spell_hit, target_level, increased_spell_crit)
                                                if hit == True:
                                                    if crit == True:
                                                        atta_num = random.randint(443, 665)
                                                        atta_num = (atta_num + ((current_ap + (current_ap * ((impurity_points * 4) / 100))) * 0)) * var_crit_amount
                                                        if sigil_of_vengeful_heart == True:
                                                            atta_num + 380
                                                        if sigil_of_the_wild_buck == True:
                                                            atta_num += 80
                                                        if black_ice_points == 5:
                                                            atta_num = atta_num + (atta_num * .1)
                                                        elif black_ice_points == 4:
                                                            atta_num = atta_num + (atta_num * .08)
                                                        elif black_ice_points == 3:
                                                            atta_num = atta_num + (atta_num * .06)
                                                        elif black_ice_points == 2:
                                                            atta_num = atta_num + (atta_num * .04)
                                                        elif black_ice_points == 1:
                                                            atta_num = atta_num + (atta_num * .02)
                                                        if dk_presence == 0:
                                                            atta_num = atta_num + (atta_num * .15)
                                                        if tundra_stalker_points != 0:
                                                            if dots[0] > current_time:
                                                                atta_num = atta_num + (atta_num * (tundra_stalker_points * .03))
                                                        if glyph_death_coil == True:
                                                            atta_num += atta_num * .15
                                                        if rage_of_rivendale_points != 0:
                                                            if dots[1] > current_time:
                                                                atta_num += atta_num * ((rage_of_rivendale_points * 2) / 100)
                                                        if morbitity_points != 0:
                                                            atta_num += ((morbitity_points * 5) / 100)
                                                        if hysteria_active == True:
                                                            atta_num = atta_num + (atta_num * .2)
                                                        if tricksoftt_active == True:
                                                            atta_num = atta_num + (atta_num * .15)
                                                        atta_num = atta_num + (atta_num * increased_spell_damage) + (atta_num * increased_all_damage)
                                                        sudden_doom_damage += atta_num
                                                        if unholy_blight_points == 1:
                                                            unholy_blight_amount = atta_num / 10   
                                                            unholy_blight_timer = current_time + 10
                                                        if rune_of_cinderglacier_active == True:
                                                             rune_of_cinderglacier_damage = atta_num * .2
                                                             rune_of_cinderglacier_active_count += 1
                                                             rotation.append("Rune of Cinderglacier")
                                                             rotation_time.append(current_time)
                                                             rotation_status.append("Active")
                                                             rotation_damage.append(atta_num * .2)
                                                             if rune_of_cinderglacier_active_count == 2:
                                                                 rune_of_cinderglacier_active = False
                                                        rotation.append("Sudden Doom")
                                                        rotation_time.append(current_time)
                                                        rotation_status.append("Crit")
                                                        rotation_damage.append(atta_num)
                                                    else:
                                                        atta_num = random.randint(443, 665)
                                                        atta_num = (atta_num + ((current_ap + (current_ap * ((impurity_points * 4) / 100))) * 0))
                                                        if sigil_of_vengeful_heart == True:
                                                            atta_num + 380
                                                        if sigil_of_the_wild_buck == True:
                                                            atta_num += 80
                                                        if black_ice_points == 5:
                                                            atta_num = atta_num + (atta_num * .1)
                                                        elif black_ice_points == 4:
                                                            atta_num = atta_num + (atta_num * .08)
                                                        elif black_ice_points == 3:
                                                            atta_num = atta_num + (atta_num * .06)
                                                        elif black_ice_points == 2:
                                                            atta_num = atta_num + (atta_num * .04)
                                                        elif black_ice_points == 1:
                                                            atta_num = atta_num + (atta_num * .02)
                                                        if dk_presence == 0:
                                                            atta_num = atta_num + (atta_num * .15)
                                                        if tundra_stalker_points != 0:
                                                            if dots[0] > current_time:
                                                                atta_num = atta_num + (atta_num * (tundra_stalker_points * .03))
                                                        if glyph_death_coil == True:
                                                            atta_num += atta_num * .15
                                                        if rage_of_rivendale_points != 0:
                                                            if dots[1] > current_time:
                                                                atta_num += atta_num * ((rage_of_rivendale_points * 2) / 100)
                                                        if morbitity_points != 0:
                                                            atta_num += ((morbitity_points * 5) / 100)
                                                        if hysteria_active == True:
                                                            atta_num = atta_num + (atta_num * .2)
                                                        if tricksoftt_active == True:
                                                            atta_num = atta_num + (atta_num * .15)
                                                        atta_num = atta_num + (atta_num * increased_spell_damage) + (atta_num * increased_all_damage)
                                                        sudden_doom_damage += atta_num
                                                        if unholy_blight_points == 1:
                                                            unholy_blight_amount = atta_num / 10 
                                                            unholy_blight_timer = current_time + 10
                                                        if rune_of_cinderglacier_active == True:
                                                             rune_of_cinderglacier_damage = atta_num * .2
                                                             rune_of_cinderglacier_active_count += 1
                                                             rotation.append("Rune of Cinderglacier")
                                                             rotation_time.append(current_time)
                                                             rotation_status.append("Active")
                                                             rotation_damage.append(atta_num * .2)
                                                             if rune_of_cinderglacier_active_count == 2:
                                                                 rune_of_cinderglacier_active = False
                                                        rotation.append("Sudden Doom")
                                                        rotation_time.append(current_time)
                                                        rotation_status.append("Hit")
                                                        rotation_damage.append(atta_num)
                                                if hit == False:
                                                    rotation.append("Sudden Doom")
                                                    rotation_time.append(current_time)
                                                    rotation_status.append("Miss")
                                                    rotation_damage.append(0)
                                        rotation.append("Heart Strike - Second Target")
                                        rotation_time.append(current_time)
                                        rotation_status.append("Hit")
                                        rotation_damage.append(atta_num)
                                attack_table_results = attack_table(1, tanking, H2, True, False, hit_from_gear, hit_from_other, target_level, all_expertise_dodge, all_expertise_parry, total_crit, (annihilation_talent_points / 100) + increased_phy_crit + ((subversion_points * 3) / 100))
                                armor_red_amount = dam_reduc(current_armor, armor_penetration, target_level)
                                wep_roll = weapon_roll(mh_input_lowend_weapon_damage,mh_input_topend_weapon_damage)
                                wep_roll = wep_roll + (attack_damage_normalization * current_ap / 14)
                                #Rune Hit
                                haste_percentage = (total_haste_rating / 25.21) / 100 #Returns a result of 0 - 1 for 0% - 100%
                                haste_rune_cd = rune_grade_timer(current_time, last_rune_change[castable], last_rune_change[castable+6])
                                if improved_unholy_presence_points != 0:
                                    if dk_presence == 2:
                                        haste_rune_cd = haste_rune_cd - (haste_rune_cd * ((improved_unholy_presence_points * 5) / 100))
                                if dk_presence != 2:
                                    gcd = input_gcd / (1 + haste_percentage)
                                    if gcd < 1:
                                        gcd = 1
                                ##Rune Miss
                                haste_rune_cd_miss = 1
                                how_many_dots_on_target = 0
                                if dots[0] > current_time:
                                    how_many_dots_on_target += 1
                                if dots[1] > current_time:
                                    how_many_dots_on_target += 1
                                if dots[2] > current_time:
                                    how_many_dots_on_target += 1
                                if dancing_rune_weapon_points == 1:
                                    if dancing_rune_weapon_active == True:
                                        if attack_table_results == 0:
                                            atta_num = 0
                                            rotation.append("Dancing Rune Weapon")
                                            rotation_time.append(current_time)
                                            rotation_status.append("Miss")
                                            rotation_damage.append(atta_num)
                                        elif attack_table_results == 1:
                                            atta_num = 0
                                            rotation.append("Dancing Rune Weapon")
                                            rotation_time.append(current_time)
                                            rotation_status.append("Dodge")
                                            rotation_damage.append(atta_num)
                                        elif attack_table_results == 5:
                                            atta_num = (((0 + (wep_roll * .5)) + (( 0 + (wep_roll * .5)) * (.1 * how_many_dots_on_target)) + (( 0 + (wep_roll * .5)) * (.1 * how_many_dots_on_target) * darkruned_battlegear_four_set)) - (((0 + (wep_roll * .5)) + (( 0 + (wep_roll * .5)) * (.1 * how_many_dots_on_target)) + (( 0 + (wep_roll * .5)) * (.1 * how_many_dots_on_target) * darkruned_battlegear_four_set)) * armor_red_amount))  * (var_crit_amount)
                                            if dk_presence == 0:
                                                atta_num = atta_num + (atta_num * .15)
                                            if t9_tank_two_set == True:
                                                atta_num = atta_num + (atta_num *.05)
                                            if blood_strikes_points != 0:
                                                atta_num = atta_num + ((blood_strikes_points * 15) / 100)
                                            if might_of_mograine_points != 0:
                                                atta_num += atta_num * ((might_of_mograine_points * 15) / 100)
                                            if scourgelords_battlegear_two_set == True:
                                                atta_num = atta_num + (atta_num * .07)
                                            if hysteria_active == True:
                                                atta_num = atta_num + (atta_num * .2)
                                            if tricksoftt_active == True:
                                                atta_num = atta_num + (atta_num * .15)
                                            atta_num = atta_num + (atta_num * increased_physical_damage) + (atta_num * increased_all_damage)
                                            atta_num = atta_num * dancing_rune_weapon_damage_multi
                                            dancing_rune_weapon_damage += atta_num
                                            rotation.append("Dancing Rune Weapon")
                                            rotation_time.append(current_time)
                                            rotation_status.append("Crit") 
                                            rotation_damage.append(atta_num)
                                            trinket_hit_crit_tracker = 2
                                            if sigil_of_haunted_dreams == True:
                                                if random.randint(0, 100) < 15:
                                                    if sigil_of_haunted_dreams_buff == False:
                                                        sigil_of_haunted_dreams_buff = True
                                                        sigil_of_haunted_dreams_timer = current_time + 10  
                                                        total_crit = total_crit + ((173 / 45.8) / 100) 
                                            if t9_dps_two_set == True:
                                                if t9_bonus == False:
                                                    if t9_cd_timer < current_time:
                                                        if (random.randint(0, 10000)/100) < 50:
                                                            t9_bonus = True
                                                            t9_cd_timer = current_time + 45
                                                            t9_active_timer = current_time + 15
                                                            bonus_loop_str += 180
                                                            rotation.append("T9 DPS 2p Bonus")
                                                            rotation_time.append(current_time)
                                                            rotation_damage.append(0)
                                                            rotation_status.append("Proc")
                                            if sudden_doom_points != 0:  #Sudden Doom aka Free Death Coil
                                                if (random.randint(0, 10000)/100) < sudden_doom_points * 5:
                                                    hit = spell_hit(spell_hit_total, increased_spell_hit, target_level)
                                                    crit = spell_crit((total_crit + (darkruned_battlegear_two_set / 100)), spell_hit_total, increased_spell_hit, target_level, increased_spell_crit)
                                                    if hit == True:
                                                        if crit == True:
                                                            atta_num = random.randint(443, 665)
                                                            atta_num = (atta_num + ((current_ap + (current_ap * ((impurity_points * 4) / 100))) * 0)) * var_crit_amount
                                                            if sigil_of_vengeful_heart == True:
                                                                atta_num + 380
                                                            if sigil_of_the_wild_buck == True:
                                                                atta_num += 80
                                                            if black_ice_points == 5:
                                                                atta_num = atta_num + (atta_num * .1)
                                                            elif black_ice_points == 4:
                                                                atta_num = atta_num + (atta_num * .08)
                                                            elif black_ice_points == 3:
                                                                atta_num = atta_num + (atta_num * .06)
                                                            elif black_ice_points == 2:
                                                                atta_num = atta_num + (atta_num * .04)
                                                            elif black_ice_points == 1:
                                                                atta_num = atta_num + (atta_num * .02)
                                                            if dk_presence == 0:
                                                                atta_num = atta_num + (atta_num * .15)
                                                            if tundra_stalker_points != 0:
                                                                if dots[0] > current_time:
                                                                    atta_num = atta_num + (atta_num * (tundra_stalker_points * .03))
                                                            if glyph_death_coil == True:
                                                                atta_num += atta_num * .15
                                                            if rage_of_rivendale_points != 0:
                                                                if dots[1] > current_time:
                                                                    atta_num += atta_num * ((rage_of_rivendale_points * 2) / 100)
                                                            if morbitity_points != 0:
                                                                atta_num += ((morbitity_points * 5) / 100)
                                                            if hysteria_active == True:
                                                                atta_num = atta_num + (atta_num * .2)
                                                            if tricksoftt_active == True:
                                                                atta_num = atta_num + (atta_num * .15)
                                                            atta_num = atta_num + (atta_num * increased_spell_damage) + (atta_num * increased_all_damage)
                                                            sudden_doom_damage += atta_num
                                                            if unholy_blight_points == 1:
                                                                unholy_blight_amount = atta_num / 10   
                                                                unholy_blight_timer = current_time + 10
                                                            if rune_of_cinderglacier_active == True:
                                                                 rune_of_cinderglacier_damage = atta_num * .2
                                                                 rune_of_cinderglacier_active_count += 1
                                                                 rotation.append("Rune of Cinderglacier")
                                                                 rotation_time.append(current_time)
                                                                 rotation_status.append("Active")
                                                                 rotation_damage.append(atta_num * .2)
                                                                 if rune_of_cinderglacier_active_count == 2:
                                                                     rune_of_cinderglacier_active = False
                                                            rotation.append("Sudden Doom")
                                                            rotation_time.append(current_time)
                                                            rotation_status.append("Crit")
                                                            rotation_damage.append(atta_num)
                                                        else:
                                                            atta_num = random.randint(443, 665)
                                                            atta_num = (atta_num + ((current_ap + (current_ap * ((impurity_points * 4) / 100))) * 0))
                                                            if sigil_of_vengeful_heart == True:
                                                                atta_num + 380
                                                            if sigil_of_the_wild_buck == True:
                                                                atta_num += 80
                                                            if black_ice_points == 5:
                                                                atta_num = atta_num + (atta_num * .1)
                                                            elif black_ice_points == 4:
                                                                atta_num = atta_num + (atta_num * .08)
                                                            elif black_ice_points == 3:
                                                                atta_num = atta_num + (atta_num * .06)
                                                            elif black_ice_points == 2:
                                                                atta_num = atta_num + (atta_num * .04)
                                                            elif black_ice_points == 1:
                                                                atta_num = atta_num + (atta_num * .02)
                                                            if dk_presence == 0:
                                                                atta_num = atta_num + (atta_num * .15)
                                                            if tundra_stalker_points != 0:
                                                                if dots[0] > current_time:
                                                                    atta_num = atta_num + (atta_num * (tundra_stalker_points * .03))
                                                            if glyph_death_coil == True:
                                                                atta_num += atta_num * .15
                                                            if rage_of_rivendale_points != 0:
                                                                if dots[1] > current_time:
                                                                    atta_num += atta_num * ((rage_of_rivendale_points * 2) / 100)
                                                            if morbitity_points != 0:
                                                                atta_num += ((morbitity_points * 5) / 100)
                                                            if hysteria_active == True:
                                                                atta_num = atta_num + (atta_num * .2)
                                                            if tricksoftt_active == True:
                                                                atta_num = atta_num + (atta_num * .15)
                                                            atta_num = atta_num + (atta_num * increased_spell_damage) + (atta_num * increased_all_damage)
                                                            sudden_doom_damage += atta_num
                                                            if unholy_blight_points == 1:
                                                                unholy_blight_amount = atta_num / 10 
                                                                unholy_blight_timer = current_time + 10
                                                            if rune_of_cinderglacier_active == True:
                                                                 rune_of_cinderglacier_damage = atta_num * .2
                                                                 rune_of_cinderglacier_active_count += 1
                                                                 rotation.append("Rune of Cinderglacier")
                                                                 rotation_time.append(current_time)
                                                                 rotation_status.append("Active")
                                                                 rotation_damage.append(atta_num * .2)
                                                                 if rune_of_cinderglacier_active_count == 2:
                                                                     rune_of_cinderglacier_active = False
                                                            rotation.append("Sudden Doom")
                                                            rotation_time.append(current_time)
                                                            rotation_status.append("Hit")
                                                            rotation_damage.append(atta_num)
                                                    if hit == False:
                                                        rotation.append("Sudden Doom")
                                                        rotation_time.append(current_time)
                                                        rotation_status.append("Miss")
                                                        rotation_damage.append(0)                                            
                                        elif attack_table_results == 7:
                                            atta_num = (((0 + (wep_roll * .5)) + (( 0 + (wep_roll * .5)) * (.1 * how_many_dots_on_target)) + (( 0 + (wep_roll * .5)) * (.1 * how_many_dots_on_target) * darkruned_battlegear_four_set)) - (((0 + (wep_roll * .5)) + (( 0 + (wep_roll * .5)) * (.1 * how_many_dots_on_target)) + (( 0 + (wep_roll * .5)) * (.1 * how_many_dots_on_target) * darkruned_battlegear_four_set)) * armor_red_amount))
                                            if dk_presence == 0:
                                                atta_num = atta_num + (atta_num * .15)
                                            if t9_tank_two_set == True:
                                                atta_num = atta_num + (atta_num *.05)
                                            if blood_strikes_points != 0:
                                                atta_num = atta_num + ((blood_strikes_points * 15) / 100)
                                            if might_of_mograine_points != 0:
                                                atta_num += atta_num * ((might_of_mograine_points * 15) / 100)
                                            if scourgelords_battlegear_two_set == True:
                                                atta_num = atta_num + (atta_num * .07)
                                            if hysteria_active == True:
                                                atta_num = atta_num + (atta_num * .2)
                                            if tricksoftt_active == True:
                                                atta_num = atta_num + (atta_num * .15)
                                            atta_num = atta_num + (atta_num * increased_physical_damage) + (atta_num * increased_all_damage)
                                            atta_num = atta_num * dancing_rune_weapon_damage_multi
                                            dancing_rune_weapon_damage += atta_num
                                            rotation.append("Dancing Rune Weapon")
                                            rotation_time.append(current_time)
                                            rotation_status.append("Hit") 
                                            rotation_damage.append(atta_num)
                                            trinket_hit_crit_tracker = 1
                                            if sigil_of_haunted_dreams == True:
                                                if random.randint(0, 100) < 15:
                                                    if sigil_of_haunted_dreams_buff == False:
                                                        sigil_of_haunted_dreams_buff = True
                                                        sigil_of_haunted_dreams_timer = current_time + 10  
                                                        total_crit = total_crit + ((173 / 45.8) / 100) 
                                            if t9_dps_two_set == True:
                                                if t9_bonus == False:
                                                    if t9_cd_timer < current_time:
                                                        if (random.randint(0, 10000)/100) < 50:
                                                            t9_bonus = True
                                                            t9_cd_timer = current_time + 45
                                                            t9_active_timer = current_time + 15
                                                            bonus_loop_str += 180
                                                            rotation.append("T9 DPS 2p Bonus")
                                                            rotation_time.append(current_time)
                                                            rotation_damage.append(0)
                                                            rotation_status.append("Proc")
                                            if sudden_doom_points != 0:  #Sudden Doom aka Free Death Coil
                                                if (random.randint(0, 10000)/100) < sudden_doom_points * 5:
                                                    hit = spell_hit(spell_hit_total, increased_spell_hit, target_level)
                                                    crit = spell_crit((total_crit + (darkruned_battlegear_two_set / 100)), spell_hit_total, increased_spell_hit, target_level, increased_spell_crit)
                                                    if hit == True:
                                                        if crit == True:
                                                            atta_num = random.randint(443, 665)
                                                            atta_num = (atta_num + ((current_ap + (current_ap * ((impurity_points * 4) / 100))) * 0)) * var_crit_amount
                                                            if sigil_of_vengeful_heart == True:
                                                                atta_num + 380
                                                            if sigil_of_the_wild_buck == True:
                                                                atta_num += 80
                                                            if black_ice_points == 5:
                                                                atta_num = atta_num + (atta_num * .1)
                                                            elif black_ice_points == 4:
                                                                atta_num = atta_num + (atta_num * .08)
                                                            elif black_ice_points == 3:
                                                                atta_num = atta_num + (atta_num * .06)
                                                            elif black_ice_points == 2:
                                                                atta_num = atta_num + (atta_num * .04)
                                                            elif black_ice_points == 1:
                                                                atta_num = atta_num + (atta_num * .02)
                                                            if dk_presence == 0:
                                                                atta_num = atta_num + (atta_num * .15)
                                                            if tundra_stalker_points != 0:
                                                                if dots[0] > current_time:
                                                                    atta_num = atta_num + (atta_num * (tundra_stalker_points * .03))
                                                            if glyph_death_coil == True:
                                                                atta_num += atta_num * .15
                                                            if rage_of_rivendale_points != 0:
                                                                if dots[1] > current_time:
                                                                    atta_num += atta_num * ((rage_of_rivendale_points * 2) / 100)
                                                            if morbitity_points != 0:
                                                                atta_num += ((morbitity_points * 5) / 100)
                                                            if hysteria_active == True:
                                                                atta_num = atta_num + (atta_num * .2)
                                                            if tricksoftt_active == True:
                                                                atta_num = atta_num + (atta_num * .15)
                                                            atta_num = atta_num + (atta_num * increased_spell_damage) + (atta_num * increased_all_damage)
                                                            sudden_doom_damage += atta_num
                                                            if unholy_blight_points == 1:
                                                                unholy_blight_amount = atta_num / 10   
                                                                unholy_blight_timer = current_time + 10
                                                            if rune_of_cinderglacier_active == True:
                                                                 rune_of_cinderglacier_damage = atta_num * .2
                                                                 rune_of_cinderglacier_active_count += 1
                                                                 rotation.append("Rune of Cinderglacier")
                                                                 rotation_time.append(current_time)
                                                                 rotation_status.append("Active")
                                                                 rotation_damage.append(atta_num * .2)
                                                                 if rune_of_cinderglacier_active_count == 2:
                                                                     rune_of_cinderglacier_active = False
                                                            rotation.append("Sudden Doom")
                                                            rotation_time.append(current_time)
                                                            rotation_status.append("Crit")
                                                            rotation_damage.append(atta_num)
                                                        else:
                                                            atta_num = random.randint(443, 665)
                                                            atta_num = (atta_num + ((current_ap + (current_ap * ((impurity_points * 4) / 100))) * 0))
                                                            if sigil_of_vengeful_heart == True:
                                                                atta_num + 380
                                                            if sigil_of_the_wild_buck == True:
                                                                atta_num += 80
                                                            if black_ice_points == 5:
                                                                atta_num = atta_num + (atta_num * .1)
                                                            elif black_ice_points == 4:
                                                                atta_num = atta_num + (atta_num * .08)
                                                            elif black_ice_points == 3:
                                                                atta_num = atta_num + (atta_num * .06)
                                                            elif black_ice_points == 2:
                                                                atta_num = atta_num + (atta_num * .04)
                                                            elif black_ice_points == 1:
                                                                atta_num = atta_num + (atta_num * .02)
                                                            if dk_presence == 0:
                                                                atta_num = atta_num + (atta_num * .15)
                                                            if tundra_stalker_points != 0:
                                                                if dots[0] > current_time:
                                                                    atta_num = atta_num + (atta_num * (tundra_stalker_points * .03))
                                                            if glyph_death_coil == True:
                                                                atta_num += atta_num * .15
                                                            if rage_of_rivendale_points != 0:
                                                                if dots[1] > current_time:
                                                                    atta_num += atta_num * ((rage_of_rivendale_points * 2) / 100)
                                                            if morbitity_points != 0:
                                                                atta_num += ((morbitity_points * 5) / 100)
                                                            if hysteria_active == True:
                                                                atta_num = atta_num + (atta_num * .2)
                                                            if tricksoftt_active == True:
                                                                atta_num = atta_num + (atta_num * .15)
                                                            atta_num = atta_num + (atta_num * increased_spell_damage) + (atta_num * increased_all_damage)
                                                            sudden_doom_damage += atta_num
                                                            if unholy_blight_points == 1:
                                                                unholy_blight_amount = atta_num / 10 
                                                                unholy_blight_timer = current_time + 10
                                                            if rune_of_cinderglacier_active == True:
                                                                 rune_of_cinderglacier_damage = atta_num * .2
                                                                 rune_of_cinderglacier_active_count += 1
                                                                 rotation.append("Rune of Cinderglacier")
                                                                 rotation_time.append(current_time)
                                                                 rotation_status.append("Active")
                                                                 rotation_damage.append(atta_num * .2)
                                                                 if rune_of_cinderglacier_active_count == 2:
                                                                     rune_of_cinderglacier_active = False
                                                            rotation.append("Sudden Doom")
                                                            rotation_time.append(current_time)
                                                            rotation_status.append("Hit")
                                                            rotation_damage.append(atta_num)
                                                    if hit == False:
                                                        rotation.append("Sudden Doom")
                                                        rotation_time.append(current_time)
                                                        rotation_status.append("Miss")
                                                        rotation_damage.append(0)   
                                if attack_table_results == 0:
                                    atta_num = 0
                                    rune_cd_tracker[castable] = rune_cd(haste_rune_cd_miss, current_time)
                                    rotation.append("Heart Strike")
                                    rotation_time.append(current_time)
                                    rotation_status.append("Miss")
                                    rotation_damage.append(atta_num)
                                    current_time = current_time + gcd
                                    used_gcd = True
                                    continue
                                elif attack_table_results == 1:
                                    atta_num = 0
                                    rune_cd_tracker[castable] = rune_cd(haste_rune_cd_miss, current_time)
                                    rotation.append("Heart Strike")
                                    rotation_time.append(current_time)
                                    rotation_status.append("Dodge")
                                    rotation_damage.append(atta_num)
                                    current_time = current_time + gcd
                                    used_gcd = True
                                    continue
                                elif attack_table_results == 5:
                                    #crit attack
                                    rune_cd_tracker[castable] = rune_cd(haste_rune_cd, current_time)
                                    atta_num = (((0 + (wep_roll * .5)) + (( 0 + (wep_roll * .5)) * (.1 * how_many_dots_on_target)) + (( 0 + (wep_roll * .5)) * (.1 * how_many_dots_on_target) * darkruned_battlegear_four_set)) - (((0 + (wep_roll * .5)) + (( 0 + (wep_roll * .5)) * (.1 * how_many_dots_on_target)) + (( 0 + (wep_roll * .5)) * (.1 * how_many_dots_on_target) * darkruned_battlegear_four_set)) * armor_red_amount))  * (var_crit_amount)
                                    if dk_presence == 0:
                                        atta_num = atta_num + (atta_num * .15)
                                    if t9_tank_two_set == True:
                                        atta_num = atta_num + (atta_num *.05)
                                    if blood_strikes_points != 0:
                                        atta_num = atta_num + ((blood_strikes_points * 15) / 100)
                                    if might_of_mograine_points != 0:
                                        atta_num += atta_num * ((might_of_mograine_points * 15) / 100)
                                    if scourgelords_battlegear_two_set == True:
                                        atta_num = atta_num + (atta_num * .07)
                                    if hysteria_active == True:
                                        atta_num = atta_num + (atta_num * .2)
                                    if tricksoftt_active == True:
                                        atta_num = atta_num + (atta_num * .15)
                                    atta_num = atta_num + (atta_num * increased_physical_damage) + (atta_num * increased_all_damage)
                                    sum_heart_strike_attacks += atta_num
                                    current_power = runic_power(10, current_power, max_runic)
                                    trinket_hit_crit_tracker = 2
                                    if sigil_of_haunted_dreams == True:
                                        if random.randint(0, 100) < 15:
                                            if sigil_of_haunted_dreams_buff == False:
                                                sigil_of_haunted_dreams_buff = True
                                                sigil_of_haunted_dreams_timer = current_time + 10  
                                                total_crit = total_crit + ((173 / 45.8) / 100) 
                                    if t9_dps_two_set == True:
                                        if t9_bonus == False:
                                            if t9_cd_timer < current_time:
                                                if (random.randint(0, 10000)/100) < 50:
                                                    t9_bonus = True
                                                    t9_cd_timer = current_time + 45
                                                    t9_active_timer = current_time + 15
                                                    bonus_loop_str += 180
                                                    rotation.append("T9 DPS 2p Bonus")
                                                    rotation_time.append(current_time)
                                                    rotation_damage.append(0)
                                                    rotation_status.append("Proc")
                                    if sudden_doom_points != 0:  #Sudden Doom aka Free Death Coil
                                        if (random.randint(0, 10000)/100) < sudden_doom_points * 5:
                                            hit = spell_hit(spell_hit_total, increased_spell_hit, target_level)
                                            crit = spell_crit((total_crit + (darkruned_battlegear_two_set / 100)), spell_hit_total, increased_spell_hit, target_level, increased_spell_crit)
                                            if hit == True:
                                                if crit == True:
                                                    atta_num = random.randint(443, 665)
                                                    atta_num = (atta_num + ((current_ap + (current_ap * ((impurity_points * 4) / 100))) * 0)) * var_crit_amount
                                                    if sigil_of_vengeful_heart == True:
                                                        atta_num + 380
                                                    if sigil_of_the_wild_buck == True:
                                                        atta_num += 80
                                                    if black_ice_points == 5:
                                                        atta_num = atta_num + (atta_num * .1)
                                                    elif black_ice_points == 4:
                                                        atta_num = atta_num + (atta_num * .08)
                                                    elif black_ice_points == 3:
                                                        atta_num = atta_num + (atta_num * .06)
                                                    elif black_ice_points == 2:
                                                        atta_num = atta_num + (atta_num * .04)
                                                    elif black_ice_points == 1:
                                                        atta_num = atta_num + (atta_num * .02)
                                                    if dk_presence == 0:
                                                        atta_num = atta_num + (atta_num * .15)
                                                    if tundra_stalker_points != 0:
                                                        if dots[0] > current_time:
                                                            atta_num = atta_num + (atta_num * (tundra_stalker_points * .03))
                                                    if glyph_death_coil == True:
                                                        atta_num += atta_num * .15
                                                    if rage_of_rivendale_points != 0:
                                                        if dots[1] > current_time:
                                                            atta_num += atta_num * ((rage_of_rivendale_points * 2) / 100)
                                                    if morbitity_points != 0:
                                                        atta_num += ((morbitity_points * 5) / 100)
                                                    if hysteria_active == True:
                                                        atta_num = atta_num + (atta_num * .2)
                                                    if tricksoftt_active == True:
                                                        atta_num = atta_num + (atta_num * .15)
                                                    atta_num = atta_num + (atta_num * increased_spell_damage) + (atta_num * increased_all_damage)
                                                    sudden_doom_damage += atta_num
                                                    if unholy_blight_points == 1:
                                                        unholy_blight_amount = atta_num / 10   
                                                        unholy_blight_timer = current_time + 10
                                                    if rune_of_cinderglacier_active == True:
                                                         rune_of_cinderglacier_damage = atta_num * .2
                                                         rune_of_cinderglacier_active_count += 1
                                                         rotation.append("Rune of Cinderglacier")
                                                         rotation_time.append(current_time)
                                                         rotation_status.append("Active")
                                                         rotation_damage.append(atta_num * .2)
                                                         if rune_of_cinderglacier_active_count == 2:
                                                             rune_of_cinderglacier_active = False
                                                    rotation.append("Sudden Doom")
                                                    rotation_time.append(current_time)
                                                    rotation_status.append("Crit")
                                                    rotation_damage.append(atta_num)
                                                else:
                                                    atta_num = random.randint(443, 665)
                                                    atta_num = (atta_num + ((current_ap + (current_ap * ((impurity_points * 4) / 100))) * 0))
                                                    if sigil_of_vengeful_heart == True:
                                                        atta_num + 380
                                                    if sigil_of_the_wild_buck == True:
                                                        atta_num += 80
                                                    if black_ice_points == 5:
                                                        atta_num = atta_num + (atta_num * .1)
                                                    elif black_ice_points == 4:
                                                        atta_num = atta_num + (atta_num * .08)
                                                    elif black_ice_points == 3:
                                                        atta_num = atta_num + (atta_num * .06)
                                                    elif black_ice_points == 2:
                                                        atta_num = atta_num + (atta_num * .04)
                                                    elif black_ice_points == 1:
                                                        atta_num = atta_num + (atta_num * .02)
                                                    if dk_presence == 0:
                                                        atta_num = atta_num + (atta_num * .15)
                                                    if tundra_stalker_points != 0:
                                                        if dots[0] > current_time:
                                                            atta_num = atta_num + (atta_num * (tundra_stalker_points * .03))
                                                    if glyph_death_coil == True:
                                                        atta_num += atta_num * .15
                                                    if rage_of_rivendale_points != 0:
                                                        if dots[1] > current_time:
                                                            atta_num += atta_num * ((rage_of_rivendale_points * 2) / 100)
                                                    if morbitity_points != 0:
                                                        atta_num += ((morbitity_points * 5) / 100)
                                                    if hysteria_active == True:
                                                        atta_num = atta_num + (atta_num * .2)
                                                    if tricksoftt_active == True:
                                                        atta_num = atta_num + (atta_num * .15)
                                                    atta_num = atta_num + (atta_num * increased_spell_damage) + (atta_num * increased_all_damage)
                                                    sudden_doom_damage += atta_num
                                                    if unholy_blight_points == 1:
                                                        unholy_blight_amount = atta_num / 10 
                                                        unholy_blight_timer = current_time + 10
                                                    if rune_of_cinderglacier_active == True:
                                                         rune_of_cinderglacier_damage = atta_num * .2
                                                         rune_of_cinderglacier_active_count += 1
                                                         rotation.append("Rune of Cinderglacier")
                                                         rotation_time.append(current_time)
                                                         rotation_status.append("Active")
                                                         rotation_damage.append(atta_num * .2)
                                                         if rune_of_cinderglacier_active_count == 2:
                                                             rune_of_cinderglacier_active = False
                                                    rotation.append("Sudden Doom")
                                                    rotation_time.append(current_time)
                                                    rotation_status.append("Hit")
                                                    rotation_damage.append(atta_num)
                                            if hit == False:
                                                rotation.append("Sudden Doom")
                                                rotation_time.append(current_time)
                                                rotation_status.append("Miss")
                                                rotation_damage.append(0)
                                    rotation.append("Heart Strike")
                                    rotation_time.append(current_time)
                                    rotation_status.append("Crit")
                                    rotation_damage.append(atta_num)
                                    current_time += gcd
                                    used_gcd = True
                                    continue
                                elif attack_table_results == 7:
                                    #normal attack
                                    rune_cd_tracker[castable] = rune_cd(haste_rune_cd, current_time)
                                    atta_num = (((0 + (wep_roll * .5)) + (( 0 + (wep_roll * .5)) * (.1 * how_many_dots_on_target)) + (( 0 + (wep_roll * .5)) * (.1 * how_many_dots_on_target) * darkruned_battlegear_four_set)) - (((0 + (wep_roll * .5)) + (( 0 + (wep_roll * .5)) * (.1 * how_many_dots_on_target)) + (( 0 + (wep_roll * .5)) * (.1 * how_many_dots_on_target) * darkruned_battlegear_four_set)) * armor_red_amount))
                                    if dk_presence == 0:
                                        atta_num = atta_num + (atta_num * .15)
                                    if t9_tank_two_set == True:
                                        atta_num = atta_num + (atta_num *.05)
                                    if blood_strikes_points != 0:
                                        atta_num = atta_num + ((blood_strikes_points * 15) / 100)
                                    if might_of_mograine_points != 0:
                                        atta_num += atta_num * ((might_of_mograine_points * 15) / 100)
                                    if scourgelords_battlegear_two_set == True:
                                        atta_num = atta_num + (atta_num * .07)
                                    if hysteria_active == True:
                                        atta_num = atta_num + (atta_num * .2)
                                    if tricksoftt_active == True:
                                        atta_num = atta_num + (atta_num * .15)
                                    atta_num = atta_num + (atta_num * increased_physical_damage) + (atta_num * increased_all_damage)
                                    sum_heart_strike_attacks += atta_num
                                    current_power = runic_power(10, current_power, max_runic)
                                    trinket_hit_crit_tracker = 1
                                    if sigil_of_haunted_dreams == True:
                                        if random.randint(0, 100) < 15:
                                            if sigil_of_haunted_dreams_buff == False:
                                                sigil_of_haunted_dreams_buff = True
                                                sigil_of_haunted_dreams_timer = current_time + 10  
                                                total_crit = total_crit + ((173 / 45.8) / 100) 
                                    if t9_dps_two_set == True:
                                        if t9_bonus == False:
                                            if t9_cd_timer < current_time:
                                                if (random.randint(0, 10000)/100) < 50:
                                                    t9_bonus = True
                                                    t9_cd_timer = current_time + 45
                                                    t9_active_timer = current_time + 15
                                                    bonus_loop_str += 180
                                                    rotation.append("T9 DPS 2p Bonus")
                                                    rotation_time.append(current_time)
                                                    rotation_damage.append(0)
                                                    rotation_status.append("Proc")
                                    if sudden_doom_points != 0:  #Sudden Doom aka Free Death Coil
                                        if (random.randint(0, 10000)/100) < sudden_doom_points * 5:
                                            hit = spell_hit(spell_hit_total, increased_spell_hit, target_level)
                                            crit = spell_crit((total_crit + (darkruned_battlegear_two_set / 100)), spell_hit_total, increased_spell_hit, target_level, increased_spell_crit)
                                            if hit == True:
                                                if crit == True:
                                                    atta_num = random.randint(443, 665)
                                                    atta_num = (atta_num + ((current_ap + (current_ap * ((impurity_points * 4) / 100))) * 0)) * var_crit_amount
                                                    if sigil_of_vengeful_heart == True:
                                                        atta_num + 380
                                                    if sigil_of_the_wild_buck == True:
                                                        atta_num += 80
                                                    if black_ice_points == 5:
                                                        atta_num = atta_num + (atta_num * .1)
                                                    elif black_ice_points == 4:
                                                        atta_num = atta_num + (atta_num * .08)
                                                    elif black_ice_points == 3:
                                                        atta_num = atta_num + (atta_num * .06)
                                                    elif black_ice_points == 2:
                                                        atta_num = atta_num + (atta_num * .04)
                                                    elif black_ice_points == 1:
                                                        atta_num = atta_num + (atta_num * .02)
                                                    if dk_presence == 0:
                                                        atta_num = atta_num + (atta_num * .15)
                                                    if tundra_stalker_points != 0:
                                                        if dots[0] > current_time:
                                                            atta_num = atta_num + (atta_num * (tundra_stalker_points * .03))
                                                    if glyph_death_coil == True:
                                                        atta_num += atta_num * .15
                                                    if rage_of_rivendale_points != 0:
                                                        if dots[1] > current_time:
                                                            atta_num += atta_num * ((rage_of_rivendale_points * 2) / 100)
                                                    if morbitity_points != 0:
                                                        atta_num += ((morbitity_points * 5) / 100)
                                                    if hysteria_active == True:
                                                        atta_num = atta_num + (atta_num * .2)
                                                    if tricksoftt_active == True:
                                                        atta_num = atta_num + (atta_num * .15)
                                                    atta_num = atta_num + (atta_num * increased_spell_damage) + (atta_num * increased_all_damage)
                                                    sudden_doom_damage += atta_num
                                                    if unholy_blight_points == 1:
                                                        unholy_blight_amount = atta_num / 10   
                                                        unholy_blight_timer = current_time + 10
                                                    if rune_of_cinderglacier_active == True:
                                                         rune_of_cinderglacier_damage = atta_num * .2
                                                         rune_of_cinderglacier_active_count += 1
                                                         rotation.append("Rune of Cinderglacier")
                                                         rotation_time.append(current_time)
                                                         rotation_status.append("Active")
                                                         rotation_damage.append(atta_num * .2)
                                                         if rune_of_cinderglacier_active_count == 2:
                                                             rune_of_cinderglacier_active = False
                                                    rotation.append("Sudden Doom")
                                                    rotation_time.append(current_time)
                                                    rotation_status.append("Crit")
                                                    rotation_damage.append(atta_num)
                                                else:
                                                    atta_num = random.randint(443, 665)
                                                    atta_num = (atta_num + ((current_ap + (current_ap * ((impurity_points * 4) / 100))) * 0))
                                                    if sigil_of_vengeful_heart == True:
                                                        atta_num + 380
                                                    if sigil_of_the_wild_buck == True:
                                                        atta_num += 80
                                                    if black_ice_points == 5:
                                                        atta_num = atta_num + (atta_num * .1)
                                                    elif black_ice_points == 4:
                                                        atta_num = atta_num + (atta_num * .08)
                                                    elif black_ice_points == 3:
                                                        atta_num = atta_num + (atta_num * .06)
                                                    elif black_ice_points == 2:
                                                        atta_num = atta_num + (atta_num * .04)
                                                    elif black_ice_points == 1:
                                                        atta_num = atta_num + (atta_num * .02)
                                                    if dk_presence == 0:
                                                        atta_num = atta_num + (atta_num * .15)
                                                    if tundra_stalker_points != 0:
                                                        if dots[0] > current_time:
                                                            atta_num = atta_num + (atta_num * (tundra_stalker_points * .03))
                                                    if glyph_death_coil == True:
                                                        atta_num += atta_num * .15
                                                    if rage_of_rivendale_points != 0:
                                                        if dots[1] > current_time:
                                                            atta_num += atta_num * ((rage_of_rivendale_points * 2) / 100)
                                                    if morbitity_points != 0:
                                                        atta_num += ((morbitity_points * 5) / 100)
                                                    if hysteria_active == True:
                                                        atta_num = atta_num + (atta_num * .2)
                                                    if tricksoftt_active == True:
                                                        atta_num = atta_num + (atta_num * .15)
                                                    atta_num = atta_num + (atta_num * increased_spell_damage) + (atta_num * increased_all_damage)
                                                    sudden_doom_damage += atta_num
                                                    if unholy_blight_points == 1:
                                                        unholy_blight_amount = atta_num / 10 
                                                        unholy_blight_timer = current_time + 10
                                                    if rune_of_cinderglacier_active == True:
                                                         rune_of_cinderglacier_damage = atta_num * .2
                                                         rune_of_cinderglacier_active_count += 1
                                                         rotation.append("Rune of Cinderglacier")
                                                         rotation_time.append(current_time)
                                                         rotation_status.append("Active")
                                                         rotation_damage.append(atta_num * .2)
                                                         if rune_of_cinderglacier_active_count == 2:
                                                             rune_of_cinderglacier_active = False
                                                    rotation.append("Sudden Doom")
                                                    rotation_time.append(current_time)
                                                    rotation_status.append("Hit")
                                                    rotation_damage.append(atta_num)
                                            if hit == False:
                                                rotation.append("Sudden Doom")
                                                rotation_time.append(current_time)
                                                rotation_status.append("Miss")
                                                rotation_damage.append(0)
                                    rotation.append("Heart Strike")
                                    rotation_time.append(current_time)
                                    rotation_status.append("Hit")
                                    rotation_damage.append(atta_num)
                                    current_time += gcd
                                    used_gcd = True
                                    continue
                                      

                    if heart_strike_points == 0:
                        castable = all_rune_check(blood, current_time, rune_cd_tracker) #Blood Strike
                        use_death_rune = False
                        if castable == 3:   #Blood Strike
                            until_dot0 = dots[0]
                            until_dot1 = dots[1]
                            if pestilence_allow_reset == True:
                                until_dot0 -= pestilence_reset_window
                                until_dot1 -= pestilence_reset_window
                            castable_death = all_rune_check(death, current_time, rune_cd_tracker)
                            castable_death_f = all_rune_check(death_f, current_time, rune_cd_tracker)
                            castable_death_u = all_rune_check(death_u, current_time, rune_cd_tracker)
                            if castable_death != 3:
                                if until_dot0 <= current_time + haste_rune_cd:
                                    if until_dot1 <= current_time + haste_rune_cd:
                                        use_death_rune = True
                                        just_used_death_rune = True
                                        castable = castable_death
                            elif castable_death_f != 3:
                                if until_dot0 <= current_time + haste_rune_cd:
                                    if until_dot1 <= current_time + haste_rune_cd:
                                        use_death_rune = True
                                        just_used_death_rune = True
                                        castable = castable_death_f
                            elif castable_death_u != 3:
                                if until_dot0 <= current_time + haste_rune_cd:
                                    if until_dot1 <= current_time + haste_rune_cd:
                                        use_death_rune = True
                                        just_used_death_rune = True
                                        castable = castable_death_u
                        if castable != 3:  
                            if castable == 0:
                                castable_death = all_rune_check(death, current_time, rune_cd_tracker)
                                castable_death_f = all_rune_check(death_f, current_time, rune_cd_tracker)
                                castable_death_u = all_rune_check(death_u, current_time, rune_cd_tracker)
                                until_dot0 = dots[0]
                                until_dot1 = dots[1]
                                if pestilence_allow_reset == True:
                                    until_dot0 -= pestilence_reset_window
                                    until_dot1 -= pestilence_reset_window
                                if castable_death != 3:
                                    if until_dot0 <= current_time + haste_rune_cd:
                                        if until_dot1 <= current_time + haste_rune_cd:
                                            castable += 2
                                            skip_castable = 2
                                elif castable_death_f != 3:
                                    if until_dot0 <= current_time + haste_rune_cd:
                                        if until_dot1 <= current_time + haste_rune_cd:
                                            castable += 2
                                            skip_castable = 2
                                elif castable_death_u != 3:
                                    if until_dot0 <= current_time + haste_rune_cd:
                                        if until_dot1 <= current_time + haste_rune_cd:
                                            castable += 2
                                            skip_castable = 2
                            if castable == 1:
                                castable_death = all_rune_check(death, current_time, rune_cd_tracker)
                                castable_death_f = all_rune_check(death_f, current_time, rune_cd_tracker)
                                castable_death_u = all_rune_check(death_u, current_time, rune_cd_tracker)
                                until_dot0 = dots[0]
                                until_dot1 = dots[1]
                                if pestilence_allow_reset == True:
                                    until_dot0 -= pestilence_reset_window
                                    until_dot1 -= pestilence_reset_window
                                if castable_death != 3:
                                    if until_dot0 <= current_time + haste_rune_cd:
                                        if until_dot1 <= current_time + haste_rune_cd:
                                            castable += 1
                                            skip_castable = 1
                                elif castable_death_f != 3:
                                    if until_dot0 <= current_time + haste_rune_cd:
                                        if until_dot1 <= current_time + haste_rune_cd:
                                            castable += 1
                                            skip_castable = 1
                                elif castable_death_u != 3:
                                    if until_dot0 <= current_time + haste_rune_cd:
                                        if until_dot1 <= current_time + haste_rune_cd:
                                            castable += 1
                                            skip_castable = 1  
                            if castable == 2: 
                                castable = 0
                                if skip_castable == 1:
                                    castable = 1
                                    skip_castable = 0
                                if skip_castable == 2:
                                    castable = 0
                                    skip_castable = 0
                                if use_death_rune == True:
                                    use_death_rune = False
                                    if castable_death != 3:
                                        rune_cd_tracker[castable] = 0
                                        if castable_death == 2:
                                            castable_death = 0
                                        rune_cd_tracker[castable_death + 6] = 10000
                                    elif castable_death_f != 3:
                                        castable += 2
                                        rune_cd_tracker[castable] = 0
                                        if castable_death_f == 2:
                                            castable_death_f = 0
                                        rune_cd_tracker[castable_death_f + 8] = 10000
                                    elif castable_death_u != 3:
                                        castable += 4
                                        rune_cd_tracker[castable] = 0
                                        if castable_death_u == 2:
                                            castable_death_u = 0
                                        rune_cd_tracker[castable_death_u + 10] = 10000
                                else:
                                    use_death_rune = False
                                attack_table_results = attack_table(1, tanking, H2, True, False, hit_from_gear, hit_from_other, target_level, all_expertise_dodge, all_expertise_parry, total_crit, (annihilation_talent_points / 100) + increased_phy_crit + ((subversion_points * 3) / 100))
                                armor_red_amount = dam_reduc(current_armor, armor_penetration, target_level)
                                wep_roll = weapon_roll(mh_input_lowend_weapon_damage,mh_input_topend_weapon_damage)
                                wep_roll = wep_roll + (attack_damage_normalization * current_ap / 14)
                                #Rune Hit
                                haste_percentage = (total_haste_rating / 25.21) / 100 #Returns a result of 0 - 1 for 0% - 100%
                                haste_rune_cd = rune_grade_timer(current_time, last_rune_change[castable], last_rune_change[castable+6])
                                if improved_unholy_presence_points != 0:
                                    if dk_presence == 2:
                                        haste_rune_cd = haste_rune_cd - (haste_rune_cd * ((improved_unholy_presence_points * 5) / 100))
                                if dk_presence != 2:
                                    gcd = input_gcd / (1 + haste_percentage)
                                    if gcd < 1:
                                        gcd = 1
                                ##Rune Miss
                                haste_rune_cd_miss = 1
                                how_many_dots_on_target = 0
                                if dots[0] > current_time:
                                    how_many_dots_on_target += 1
                                if dots[1] > current_time:
                                    how_many_dots_on_target += 1
                                if dots[2] > current_time:
                                    how_many_dots_on_target += 1
                                if dancing_rune_weapon_points == 1:
                                    if dancing_rune_weapon_active == True:
                                        if attack_table_results == 0:
                                            atta_num = 0
                                            rotation.append("Dancing Rune Weapon")
                                            rotation_time.append(current_time)
                                            rotation_status.append("Miss")
                                            rotation_damage.append(atta_num)
                                        elif attack_table_results == 1:
                                            atta_num = 0
                                            rotation.append("Dancing Rune Weapon")
                                            rotation_time.append(current_time)
                                            rotation_status.append("Dodge")
                                            rotation_damage.append(atta_num)
                                        elif attack_table_results == 5:
                                            atta_num = (((746 + (wep_roll * .4)) + (( 746 + (wep_roll * .4)) * (.125 * how_many_dots_on_target)) + (( 746 + (wep_roll * .4)) * (.125 * how_many_dots_on_target) * darkruned_battlegear_four_set)) - (((746 + (wep_roll * .4)) + (( 746 + (wep_roll * .4)) * (.125 * how_many_dots_on_target)) + (( 746 + (wep_roll * .4)) * (.125 * how_many_dots_on_target) * darkruned_battlegear_four_set)) * armor_red_amount))  * (var_crit_amount + (guile_of_gorefiend_points * .15))
                                            if dk_presence == 0:
                                                atta_num = atta_num + (atta_num * .15)
                                            if tundra_stalker_points != 0:
                                                if dots[0] > current_time:
                                                    atta_num = atta_num + (atta_num * (tundra_stalker_points * .03))
                                            if blood_of_the_north_points != 0:
                                                if blood_of_the_north_points < 3:
                                                    atta_num = atta_num + (atta_num * (blood_of_the_north_points * .03))
                                                elif blood_of_the_north_points == 3:
                                                    atta_num = atta_num + (atta_num * .1)
                                            if t9_tank_two_set == True:
                                                atta_num = atta_num + (atta_num *.05)
                                            if rage_of_rivendale_points != 0:
                                                if dots[1] > current_time:
                                                    atta_num += atta_num * ((rage_of_rivendale_points * 2) / 100)
                                            if blood_strikes_points != 0:
                                                atta_num = atta_num + ((blood_strikes_points * 5) / 100)
                                            if might_of_mograine_points != 0:
                                                atta_num += atta_num * ((might_of_mograine_points * 15) / 100)
                                            if hysteria_active == True:
                                                atta_num = atta_num + (atta_num * .2)
                                            if tricksoftt_active == True:
                                                atta_num = atta_num + (atta_num * .15)
                                            atta_num = atta_num + (atta_num * increased_physical_damage) + (atta_num * increased_all_damage)
                                            atta_num = atta_num * dancing_rune_weapon_damage_multi
                                            dancing_rune_weapon_damage += atta_num
                                            rotation.append("Dancing Rune Weapon")
                                            rotation_time.append(current_time)
                                            rotation_status.append("Crit")
                                            rotation_damage.append(atta_num)
                                            trinket_hit_crit_tracker = 2
                                            if blood_of_the_north_points != 0:
                                                if just_used_death_rune != True:
                                                    proc_num = random.randint(0, 100)
                                                    if blood_of_the_north_points < 3:
                                                        death_proc_chance = (blood_of_the_north_points * .3) * 100
                                                    elif blood_of_the_north_points == 3:
                                                        death_proc_chance = 100
                                                    if death_proc_chance >= proc_num:
                                                        death_castable = castable + death
                                                        rune_cd_tracker[death_castable] = rune_cd(haste_rune_cd, current_time)
                                                        rune_cd_tracker[castable] = 10000
                                            if reaping_points != 0:
                                                if just_used_death_rune != True:
                                                    proc_num = random.randint(0, 100)
                                                    if reaping_points < 3:
                                                        death_proc_chance = (reaping_points * .3) * 100
                                                    elif reaping_points == 3:
                                                        death_proc_chance = 100
                                                    if death_proc_chance >= proc_num:
                                                        death_castable = castable + death
                                                        rune_cd_tracker[death_castable] = rune_cd(haste_rune_cd, current_time)
                                                        rune_cd_tracker[castable] = 10000
                                            if sigil_of_haunted_dreams == True:
                                                if random.randint(0, 100) < 15:
                                                    if sigil_of_haunted_dreams_buff == False:
                                                        sigil_of_haunted_dreams_buff = True
                                                        sigil_of_haunted_dreams_timer = current_time + 10  
                                                        total_crit = total_crit + ((173 / 45.8) / 100) 
                                            if t9_dps_two_set == True:
                                                if t9_bonus == False:
                                                    if t9_cd_timer < current_time:
                                                        if (random.randint(0, 10000)/100) < 50:
                                                            t9_bonus = True
                                                            t9_cd_timer = current_time + 45
                                                            t9_active_timer = current_time + 15
                                                            bonus_loop_str += 180
                                                            rotation.append("T9 DPS 2p Bonus")
                                                            rotation_time.append(current_time)
                                                            rotation_damage.append(0)
                                                            rotation_status.append("Proc")
                                            if desolation_points != 0:
                                                if desolation_buff == False:
                                                    increased_all_damage += (desolation_points / 100)
                                                    desolation_buff_timer = current_time + 20
                                                    rotation.append("Desolation")
                                                    rotation_time.append(current_time)
                                                    rotation_damage.append(0)
                                                    rotation_status.append("Applied")
                                                    desolation_buff = True
                                                else:
                                                    desolation_buff_timer = current_time + 20
                                                    rotation.append("Desolation")
                                                    rotation_time.append(current_time)
                                                    rotation_damage.append(0)
                                                    rotation_status.append("Refresh")
                                            if sudden_doom_points != 0:  #Sudden Doom aka Free Death Coil
                                                if (random.randint(0, 10000)/100) < sudden_doom_points * 5:
                                                    hit = spell_hit(spell_hit_total, increased_spell_hit, target_level)
                                                    crit = spell_crit((total_crit + (darkruned_battlegear_two_set / 100)), spell_hit_total, increased_spell_hit, target_level, increased_spell_crit)
                                                    if hit == True:
                                                        if crit == True:
                                                            atta_num = random.randint(443, 665)
                                                            atta_num = (atta_num + ((current_ap + (current_ap * ((impurity_points * 4) / 100))) * 0)) * var_crit_amount
                                                            if sigil_of_vengeful_heart == True:
                                                                atta_num + 380
                                                            if sigil_of_the_wild_buck == True:
                                                                atta_num += 80
                                                            if black_ice_points == 5:
                                                                atta_num = atta_num + (atta_num * .1)
                                                            elif black_ice_points == 4:
                                                                atta_num = atta_num + (atta_num * .08)
                                                            elif black_ice_points == 3:
                                                                atta_num = atta_num + (atta_num * .06)
                                                            elif black_ice_points == 2:
                                                                atta_num = atta_num + (atta_num * .04)
                                                            elif black_ice_points == 1:
                                                                atta_num = atta_num + (atta_num * .02)
                                                            if dk_presence == 0:
                                                                atta_num = atta_num + (atta_num * .15)
                                                            if tundra_stalker_points != 0:
                                                                if dots[0] > current_time:
                                                                    atta_num = atta_num + (atta_num * (tundra_stalker_points * .03))
                                                            if glyph_death_coil == True:
                                                                atta_num += atta_num * .15
                                                            if rage_of_rivendale_points != 0:
                                                                if dots[1] > current_time:
                                                                    atta_num += atta_num * ((rage_of_rivendale_points * 2) / 100)
                                                            if morbitity_points != 0:
                                                                atta_num += ((morbitity_points * 5) / 100)
                                                            if hysteria_active == True:
                                                                atta_num = atta_num + (atta_num * .2)
                                                            if tricksoftt_active == True:
                                                                atta_num = atta_num + (atta_num * .15)
                                                            atta_num = atta_num + (atta_num * increased_spell_damage) + (atta_num * increased_all_damage)
                                                            sudden_doom_damage += atta_num
                                                            if unholy_blight_points == 1:
                                                                unholy_blight_amount = atta_num / 10   
                                                                unholy_blight_timer = current_time + 10
                                                            if rune_of_cinderglacier_active == True:
                                                                 rune_of_cinderglacier_damage = atta_num * .2
                                                                 rune_of_cinderglacier_active_count += 1
                                                                 rotation.append("Rune of Cinderglacier")
                                                                 rotation_time.append(current_time)
                                                                 rotation_status.append("Active")
                                                                 rotation_damage.append(atta_num * .2)
                                                                 if rune_of_cinderglacier_active_count == 2:
                                                                     rune_of_cinderglacier_active = False
                                                            rotation.append("Sudden Doom")
                                                            rotation_time.append(current_time)
                                                            rotation_status.append("Crit")
                                                            rotation_damage.append(atta_num)
                                                        else:
                                                            atta_num = random.randint(443, 665)
                                                            atta_num = (atta_num + ((current_ap + (current_ap * ((impurity_points * 4) / 100))) * 0))
                                                            if sigil_of_vengeful_heart == True:
                                                                atta_num + 380
                                                            if sigil_of_the_wild_buck == True:
                                                                atta_num += 80
                                                            if black_ice_points == 5:
                                                                atta_num = atta_num + (atta_num * .1)
                                                            elif black_ice_points == 4:
                                                                atta_num = atta_num + (atta_num * .08)
                                                            elif black_ice_points == 3:
                                                                atta_num = atta_num + (atta_num * .06)
                                                            elif black_ice_points == 2:
                                                                atta_num = atta_num + (atta_num * .04)
                                                            elif black_ice_points == 1:
                                                                atta_num = atta_num + (atta_num * .02)
                                                            if dk_presence == 0:
                                                                atta_num = atta_num + (atta_num * .15)
                                                            if tundra_stalker_points != 0:
                                                                if dots[0] > current_time:
                                                                    atta_num = atta_num + (atta_num * (tundra_stalker_points * .03))
                                                            if glyph_death_coil == True:
                                                                atta_num += atta_num * .15
                                                            if rage_of_rivendale_points != 0:
                                                                if dots[1] > current_time:
                                                                    atta_num += atta_num * ((rage_of_rivendale_points * 2) / 100)
                                                            if morbitity_points != 0:
                                                                atta_num += ((morbitity_points * 5) / 100)
                                                            if hysteria_active == True:
                                                                atta_num = atta_num + (atta_num * .2)
                                                            if tricksoftt_active == True:
                                                                atta_num = atta_num + (atta_num * .15)
                                                            atta_num = atta_num + (atta_num * increased_spell_damage) + (atta_num * increased_all_damage)
                                                            sudden_doom_damage += atta_num
                                                            if unholy_blight_points == 1:
                                                                unholy_blight_amount = atta_num / 10 
                                                                unholy_blight_timer = current_time + 10
                                                            if rune_of_cinderglacier_active == True:
                                                                 rune_of_cinderglacier_damage = atta_num * .2
                                                                 rune_of_cinderglacier_active_count += 1
                                                                 rotation.append("Rune of Cinderglacier")
                                                                 rotation_time.append(current_time)
                                                                 rotation_status.append("Active")
                                                                 rotation_damage.append(atta_num * .2)
                                                                 if rune_of_cinderglacier_active_count == 2:
                                                                     rune_of_cinderglacier_active = False
                                                            rotation.append("Sudden Doom")
                                                            rotation_time.append(current_time)
                                                            rotation_status.append("Hit")
                                                            rotation_damage.append(atta_num)
                                                    if hit == False:
                                                        rotation.append("Sudden Doom")
                                                        rotation_time.append(current_time)
                                                        rotation_status.append("Miss")
                                                        rotation_damage.append(0)
                                        elif attack_table_results == 7:
                                            atta_num = ((746 + (wep_roll * .4)) + (( 746 + (wep_roll * .4)) * (.125 * how_many_dots_on_target)) + (( 746 + (wep_roll * .4)) * (.125 * how_many_dots_on_target) * darkruned_battlegear_four_set)) - (((746 + (wep_roll * .4)) + (( 746 + (wep_roll * .4)) * (.125 * how_many_dots_on_target)) + (( 746 + (wep_roll * .4)) * (.125 * how_many_dots_on_target) * darkruned_battlegear_four_set)) * armor_red_amount)
                                            if dk_presence == 0:
                                                atta_num = atta_num + (atta_num * .15)
                                            if tundra_stalker_points != 0:
                                                if dots[0] > current_time:
                                                    atta_num = atta_num + (atta_num * (tundra_stalker_points * .03))
                                            if blood_of_the_north_points != 0:
                                                if blood_of_the_north_points < 3:
                                                    atta_num = atta_num + (atta_num * (blood_of_the_north_points * .03))
                                                elif blood_of_the_north_points == 3:
                                                    atta_num = atta_num + (atta_num * .1)
                                            if t9_tank_two_set == True:
                                                atta_num = atta_num + (atta_num *.05)
                                            if rage_of_rivendale_points != 0:
                                                if dots[1] > current_time:
                                                    atta_num += atta_num * ((rage_of_rivendale_points * 2) / 100)
                                            if blood_strikes_points != 0:
                                                atta_num = atta_num + ((blood_strikes_points * 5) / 100)
                                            if hysteria_active == True:
                                                atta_num = atta_num + (atta_num * .2)
                                            if tricksoftt_active == True:
                                                atta_num = atta_num + (atta_num * .15)
                                            atta_num = atta_num + (atta_num * increased_physical_damage) + (atta_num * increased_all_damage)
                                            atta_num = atta_num * dancing_rune_weapon_damage_multi
                                            dancing_rune_weapon_damage += atta_num
                                            rotation.append("Dancing Rune Weapon")
                                            rotation_time.append(current_time)
                                            rotation_status.append("Hit")
                                            rotation_damage.append(atta_num)
                                            trinket_hit_crit_tracker = 1
                                            if blood_of_the_north_points != 0:
                                                if just_used_death_rune != True:
                                                    proc_num = random.randint(0, 100)
                                                    if blood_of_the_north_points < 3:
                                                        death_proc_chance = (blood_of_the_north_points * .3) * 100
                                                    elif blood_of_the_north_points == 3:
                                                        death_proc_chance = 100
                                                    if death_proc_chance >= proc_num:
                                                        death_castable = castable + death
                                                        rune_cd_tracker[death_castable] = rune_cd(haste_rune_cd, current_time)
                                                        rune_cd_tracker[castable] = 10000  
                                            if reaping_points != 0:
                                                if just_used_death_rune != True:
                                                    proc_num = random.randint(0, 100)
                                                    if reaping_points < 3:
                                                        death_proc_chance = (reaping_points * .3) * 100
                                                    elif reaping_points == 3:
                                                        death_proc_chance = 100
                                                    if death_proc_chance >= proc_num:
                                                        death_castable = castable + death
                                                        rune_cd_tracker[death_castable] = rune_cd(haste_rune_cd, current_time)
                                                        rune_cd_tracker[castable] = 10000 
                                            if sigil_of_haunted_dreams == True:
                                                if random.randint(0, 100) < 15:
                                                    if sigil_of_haunted_dreams_buff == False:
                                                        sigil_of_haunted_dreams_buff = True
                                                        sigil_of_haunted_dreams_timer = current_time + 10  
                                                        total_crit = total_crit + ((173 / 45.8) / 100) 
                                            if t9_dps_two_set == True:
                                                if t9_bonus == False:
                                                    if t9_cd_timer < current_time:
                                                        if (random.randint(0, 10000)/100) < 50:
                                                            t9_bonus = True
                                                            t9_cd_timer = current_time + 45
                                                            t9_active_timer = current_time + 15
                                                            bonus_loop_str += 180
                                                            rotation.append("T9 DPS 2p Bonus")
                                                            rotation_time.append(current_time)
                                                            rotation_damage.append(0)
                                                            rotation_status.append("Proc")
                                            if desolation_points != 0:
                                                if desolation_buff == False:
                                                    increased_all_damage += (desolation_points / 100)
                                                    desolation_buff_timer = current_time + 20
                                                    rotation.append("Desolation")
                                                    rotation_time.append(current_time)
                                                    rotation_damage.append(0)
                                                    rotation_status.append("Applied")
                                                    desolation_buff = True
                                                else:
                                                    desolation_buff_timer = current_time + 20
                                                    rotation.append("Desolation")
                                                    rotation_time.append(current_time)
                                                    rotation_damage.append(0)
                                                    rotation_status.append("Refresh")
                                            if sudden_doom_points != 0:  #Sudden Doom aka Free Death Coil
                                                if (random.randint(0, 10000)/100) < sudden_doom_points * 5:
                                                    hit = spell_hit(spell_hit_total, increased_spell_hit, target_level)
                                                    crit = spell_crit((total_crit + (darkruned_battlegear_two_set / 100)), spell_hit_total, increased_spell_hit, target_level, increased_spell_crit)
                                                    if hit == True:
                                                        if crit == True:
                                                            atta_num = random.randint(443, 665)
                                                            atta_num = (atta_num + ((current_ap + (current_ap * ((impurity_points * 4) / 100))) * 0)) * var_crit_amount
                                                            if sigil_of_vengeful_heart == True:
                                                                atta_num + 380
                                                            if sigil_of_the_wild_buck == True:
                                                                atta_num += 80
                                                            if black_ice_points == 5:
                                                                atta_num = atta_num + (atta_num * .1)
                                                            elif black_ice_points == 4:
                                                                atta_num = atta_num + (atta_num * .08)
                                                            elif black_ice_points == 3:
                                                                atta_num = atta_num + (atta_num * .06)
                                                            elif black_ice_points == 2:
                                                                atta_num = atta_num + (atta_num * .04)
                                                            elif black_ice_points == 1:
                                                                atta_num = atta_num + (atta_num * .02)
                                                            if dk_presence == 0:
                                                                atta_num = atta_num + (atta_num * .15)
                                                            if tundra_stalker_points != 0:
                                                                if dots[0] > current_time:
                                                                    atta_num = atta_num + (atta_num * (tundra_stalker_points * .03))
                                                            if glyph_death_coil == True:
                                                                atta_num += atta_num * .15
                                                            if rage_of_rivendale_points != 0:
                                                                if dots[1] > current_time:
                                                                    atta_num += atta_num * ((rage_of_rivendale_points * 2) / 100)
                                                            if morbitity_points != 0:
                                                                atta_num += ((morbitity_points * 5) / 100)
                                                            if hysteria_active == True:
                                                                atta_num = atta_num + (atta_num * .2)
                                                            if tricksoftt_active == True:
                                                                atta_num = atta_num + (atta_num * .15)
                                                            atta_num = atta_num + (atta_num * increased_spell_damage) + (atta_num * increased_all_damage)
                                                            sudden_doom_damage += atta_num
                                                            if unholy_blight_points == 1:
                                                                unholy_blight_amount = atta_num / 10   
                                                                unholy_blight_timer = current_time + 10
                                                            if rune_of_cinderglacier_active == True:
                                                                 rune_of_cinderglacier_damage = atta_num * .2
                                                                 rune_of_cinderglacier_active_count += 1
                                                                 rotation.append("Rune of Cinderglacier")
                                                                 rotation_time.append(current_time)
                                                                 rotation_status.append("Active")
                                                                 rotation_damage.append(atta_num * .2)
                                                                 if rune_of_cinderglacier_active_count == 2:
                                                                     rune_of_cinderglacier_active = False
                                                            rotation.append("Sudden Doom")
                                                            rotation_time.append(current_time)
                                                            rotation_status.append("Crit")
                                                            rotation_damage.append(atta_num)
                                                        else:
                                                            atta_num = random.randint(443, 665)
                                                            atta_num = (atta_num + ((current_ap + (current_ap * ((impurity_points * 4) / 100))) * 0))
                                                            if sigil_of_vengeful_heart == True:
                                                                atta_num + 380
                                                            if sigil_of_the_wild_buck == True:
                                                                atta_num += 80
                                                            if black_ice_points == 5:
                                                                atta_num = atta_num + (atta_num * .1)
                                                            elif black_ice_points == 4:
                                                                atta_num = atta_num + (atta_num * .08)
                                                            elif black_ice_points == 3:
                                                                atta_num = atta_num + (atta_num * .06)
                                                            elif black_ice_points == 2:
                                                                atta_num = atta_num + (atta_num * .04)
                                                            elif black_ice_points == 1:
                                                                atta_num = atta_num + (atta_num * .02)
                                                            if dk_presence == 0:
                                                                atta_num = atta_num + (atta_num * .15)
                                                            if tundra_stalker_points != 0:
                                                                if dots[0] > current_time:
                                                                    atta_num = atta_num + (atta_num * (tundra_stalker_points * .03))
                                                            if glyph_death_coil == True:
                                                                atta_num += atta_num * .15
                                                            if rage_of_rivendale_points != 0:
                                                                if dots[1] > current_time:
                                                                    atta_num += atta_num * ((rage_of_rivendale_points * 2) / 100)
                                                            if morbitity_points != 0:
                                                                atta_num += ((morbitity_points * 5) / 100)
                                                            if hysteria_active == True:
                                                                atta_num = atta_num + (atta_num * .2)
                                                            if tricksoftt_active == True:
                                                                atta_num = atta_num + (atta_num * .15)
                                                            atta_num = atta_num + (atta_num * increased_spell_damage) + (atta_num * increased_all_damage)
                                                            sudden_doom_damage += atta_num
                                                            if unholy_blight_points == 1:
                                                                unholy_blight_amount = atta_num / 10 
                                                                unholy_blight_timer = current_time + 10
                                                            if rune_of_cinderglacier_active == True:
                                                                 rune_of_cinderglacier_damage = atta_num * .2
                                                                 rune_of_cinderglacier_active_count += 1
                                                                 rotation.append("Rune of Cinderglacier")
                                                                 rotation_time.append(current_time)
                                                                 rotation_status.append("Active")
                                                                 rotation_damage.append(atta_num * .2)
                                                                 if rune_of_cinderglacier_active_count == 2:
                                                                     rune_of_cinderglacier_active = False
                                                            rotation.append("Sudden Doom")
                                                            rotation_time.append(current_time)
                                                            rotation_status.append("Hit")
                                                            rotation_damage.append(atta_num)
                                                    if hit == False:
                                                        rotation.append("Sudden Doom")
                                                        rotation_time.append(current_time)
                                                        rotation_status.append("Miss")
                                                        rotation_damage.append(0)
                                if threat_of_thassarian_points != 0:  #Off Hand Blood Strike
                                    if H2 == False:
                                        threat_of_thass_roll = (threat_of_thassarian_points * 30) 
                                        if threat_of_thassarian_points == 3: 
                                            threat_of_thass_roll += 10 
                                        threat_of_t_num = random.randint(0, 100) 
                                        if threat_of_thass_roll >= threat_of_t_num: 
                                            oh_wep_roll = weapon_roll(oh_input_lowend_weapon_damage,oh_input_topend_weapon_damage)
                                            oh_wep_roll = wep_roll + (attack_damage_normalization * current_ap / 14)
                                            oh_attack_table_results = attack_table(1, tanking, H2, False, True, hit_from_gear, hit_from_other, target_level, all_expertise_dodge, all_expertise_parry, total_crit, (annihilation_talent_points / 100) + increased_phy_crit + ((subversion_points * 3) / 100))
                                            if oh_attack_table_results == 0:
                                                atta_num = 0
                                                rotation.append("OH - Blood Strike")
                                                rotation_time.append(current_time)
                                                rotation_status.append("Miss")
                                                rotation_damage.append(atta_num)
                                            elif oh_attack_table_results == 1:
                                                atta_num = 0
                                                rotation.append("OH - Blood Strike")
                                                rotation_time.append(current_time)
                                                rotation_status.append("Dodge")
                                                rotation_damage.append(atta_num)
                                            elif oh_attack_table_results == 5:
                                                #crit attack
                                                atta_num = (((746 + (oh_wep_roll * .4)) + (( 746 + (oh_wep_roll * .4)) * (.125 * how_many_dots_on_target)) + (( 746 + (oh_wep_roll * .4)) * (.125 * how_many_dots_on_target) * darkruned_battlegear_four_set )) - (((746 + (oh_wep_roll * .4)) + (( 746 + (oh_wep_roll * .4)) * (.125 * how_many_dots_on_target)) + (( 746 + (oh_wep_roll * .4)) * (.125 * how_many_dots_on_target) * darkruned_battlegear_four_set)) * armor_red_amount))  * (var_crit_amount + (guile_of_gorefiend_points * .15))
                                                if dk_presence == 0:
                                                    atta_num = atta_num + (atta_num * .15)
                                                if tundra_stalker_points != 0:
                                                    if dots[0] > current_time:
                                                        atta_num = atta_num + (atta_num * (tundra_stalker_points * .03))
                                                if blood_of_the_north_points != 0:
                                                    if blood_of_the_north_points < 3:
                                                        atta_num = atta_num + (atta_num * (blood_of_the_north_points * .03))
                                                    elif blood_of_the_north_points == 3:
                                                        atta_num = atta_num + (atta_num * .1)
                                                if t9_tank_two_set == True:
                                                    atta_num = atta_num + (atta_num *.05)
                                                if rage_of_rivendale_points != 0:
                                                    if dots[1] > current_time:
                                                        atta_num += atta_num * ((rage_of_rivendale_points * 2) / 100)
                                                if blood_strikes_points != 0:
                                                    atta_num = atta_num + ((blood_strikes_points * 5) / 100)
                                                if might_of_mograine_points != 0:
                                                    atta_num += atta_num * ((might_of_mograine_points * 15) / 100)
                                                atta_num = atta_num * oh_wep_damage_mod
                                                if hysteria_active == True:
                                                    atta_num = atta_num + (atta_num * .2)
                                                if tricksoftt_active == True:
                                                    atta_num = atta_num + (atta_num * .15)
                                                atta_num = atta_num + (atta_num * increased_physical_damage) + (atta_num * increased_all_damage)
                                                sum_oh_bs_attacks += atta_num
                                                trinket_hit_crit_tracker = 2
                                                if blood_of_the_north_points != 0:
                                                    if just_used_death_rune != True:
                                                        proc_num = random.randint(0, 100)
                                                        if blood_of_the_north_points < 3:
                                                            death_proc_chance = (blood_of_the_north_points * .3) * 100
                                                        elif blood_of_the_north_points == 3:
                                                            death_proc_chance = 100
                                                        if death_proc_chance >= proc_num:
                                                            death_castable = castable + death
                                                            rune_cd_tracker[death_castable] = rune_cd(haste_rune_cd, current_time)
                                                            rune_cd_tracker[castable] = 10000 
                                                if reaping_points != 0:
                                                    if just_used_death_rune != True:
                                                        proc_num = random.randint(0, 100)
                                                        if reaping_points < 3:
                                                            death_proc_chance = (reaping_points * .3) * 100
                                                        elif reaping_points == 3:
                                                            death_proc_chance = 100
                                                        if death_proc_chance >= proc_num:
                                                            death_castable = castable + death
                                                            rune_cd_tracker[death_castable] = rune_cd(haste_rune_cd, current_time)
                                                            rune_cd_tracker[castable] = 10000 
                                                if sigil_of_haunted_dreams == True:
                                                    if random.randint(0, 100) < 15:
                                                        if sigil_of_haunted_dreams_buff == False:
                                                            sigil_of_haunted_dreams_buff = True
                                                            sigil_of_haunted_dreams_timer = current_time + 10  
                                                            total_crit = total_crit + ((173 / 45.8) / 100)  
                                                if t9_dps_two_set == True:
                                                    if t9_bonus == False:
                                                        if t9_cd_timer < current_time:
                                                            if (random.randint(0, 10000)/100) < 50:
                                                                t9_bonus = True
                                                                t9_cd_timer = current_time + 45
                                                                t9_active_timer = current_time + 15
                                                                bonus_loop_str += 180
                                                                rotation.append("T9 DPS 2p Bonus")
                                                                rotation_time.append(current_time)
                                                                rotation_damage.append(0)
                                                                rotation_status.append("Proc")
                                                if desolation_points != 0:
                                                    if desolation_buff == False:
                                                        increased_all_damage += (desolation_points / 100)
                                                        desolation_buff_timer = current_time + 20
                                                        rotation.append("Desolation")
                                                        rotation_time.append(current_time)
                                                        rotation_damage.append(0)
                                                        rotation_status.append("Applied")
                                                        desolation_buff = True
                                                    else:
                                                        desolation_buff_timer = current_time + 20
                                                        rotation.append("Desolation")
                                                        rotation_time.append(current_time)
                                                        rotation_damage.append(0)
                                                        rotation_status.append("Refresh")
                                                if sudden_doom_points != 0:  #Sudden Doom aka Free Death Coil
                                                    if (random.randint(0, 10000)/100) < sudden_doom_points * 5:
                                                        hit = spell_hit(spell_hit_total, increased_spell_hit, target_level)
                                                        crit = spell_crit((total_crit + (darkruned_battlegear_two_set / 100)), spell_hit_total, increased_spell_hit, target_level, increased_spell_crit)
                                                        if hit == True:
                                                            if crit == True:
                                                                atta_num = random.randint(443, 665)
                                                                atta_num = (atta_num + ((current_ap + (current_ap * ((impurity_points * 4) / 100))) * 0)) * var_crit_amount
                                                                if sigil_of_vengeful_heart == True:
                                                                    atta_num + 380
                                                                if black_ice_points == 5:
                                                                    atta_num = atta_num + (atta_num * .1)
                                                                elif black_ice_points == 4:
                                                                    atta_num = atta_num + (atta_num * .08)
                                                                elif black_ice_points == 3:
                                                                    atta_num = atta_num + (atta_num * .06)
                                                                elif black_ice_points == 2:
                                                                    atta_num = atta_num + (atta_num * .04)
                                                                elif black_ice_points == 1:
                                                                    atta_num = atta_num + (atta_num * .02)
                                                                if dk_presence == 0:
                                                                    atta_num = atta_num + (atta_num * .15)
                                                                if tundra_stalker_points != 0:
                                                                    if dots[0] > current_time:
                                                                        atta_num = atta_num + (atta_num * (tundra_stalker_points * .03))
                                                                if glyph_death_coil == True:
                                                                    atta_num += atta_num * .15
                                                                if rage_of_rivendale_points != 0:
                                                                    if dots[1] > current_time:
                                                                        atta_num += atta_num * ((rage_of_rivendale_points * 2) / 100)
                                                                if morbitity_points != 0:
                                                                    atta_num += ((morbitity_points * 5) / 100)
                                                                if hysteria_active == True:
                                                                    atta_num = atta_num + (atta_num * .2)
                                                                if tricksoftt_active == True:
                                                                    atta_num = atta_num + (atta_num * .15)
                                                                atta_num = atta_num + (atta_num * increased_spell_damage) + (atta_num * increased_all_damage)
                                                                sudden_doom_damage += atta_num
                                                                if unholy_blight_points == 1:
                                                                    unholy_blight_amount = atta_num / 10   
                                                                    unholy_blight_timer = current_time + 10
                                                                if rune_of_cinderglacier_active == True:
                                                                     rune_of_cinderglacier_damage = atta_num * .2
                                                                     rune_of_cinderglacier_active_count += 1
                                                                     rotation.append("Rune of Cinderglacier")
                                                                     rotation_time.append(current_time)
                                                                     rotation_status.append("Active")
                                                                     rotation_damage.append(atta_num * .2)
                                                                     if rune_of_cinderglacier_active_count == 2:
                                                                         rune_of_cinderglacier_active = False
                                                                rotation.append("Sudden Doom")
                                                                rotation_time.append(current_time)
                                                                rotation_status.append("Crit")
                                                                rotation_damage.append(atta_num)
                                                            else:
                                                                atta_num = random.randint(443, 665)
                                                                atta_num = (atta_num + ((current_ap + (current_ap * ((impurity_points * 4) / 100))) * 0))
                                                                if sigil_of_vengeful_heart == True:
                                                                    atta_num + 380
                                                                if black_ice_points == 5:
                                                                    atta_num = atta_num + (atta_num * .1)
                                                                elif black_ice_points == 4:
                                                                    atta_num = atta_num + (atta_num * .08)
                                                                elif black_ice_points == 3:
                                                                    atta_num = atta_num + (atta_num * .06)
                                                                elif black_ice_points == 2:
                                                                    atta_num = atta_num + (atta_num * .04)
                                                                elif black_ice_points == 1:
                                                                    atta_num = atta_num + (atta_num * .02)
                                                                if dk_presence == 0:
                                                                    atta_num = atta_num + (atta_num * .15)
                                                                if tundra_stalker_points != 0:
                                                                    if dots[0] > current_time:
                                                                        atta_num = atta_num + (atta_num * (tundra_stalker_points * .03))
                                                                if glyph_death_coil == True:
                                                                    atta_num += atta_num * .15
                                                                if rage_of_rivendale_points != 0:
                                                                    if dots[1] > current_time:
                                                                        atta_num += atta_num * ((rage_of_rivendale_points * 2) / 100)
                                                                if morbitity_points != 0:
                                                                    atta_num += ((morbitity_points * 5) / 100)
                                                                if hysteria_active == True:
                                                                    atta_num = atta_num + (atta_num * .2)
                                                                if tricksoftt_active == True:
                                                                    atta_num = atta_num + (atta_num * .15)
                                                                atta_num = atta_num + (atta_num * increased_spell_damage) + (atta_num * increased_all_damage)
                                                                sudden_doom_damage += atta_num
                                                                if unholy_blight_points == 1:
                                                                    unholy_blight_amount = atta_num / 10 
                                                                    unholy_blight_timer = current_time + 10
                                                                if rune_of_cinderglacier_active == True:
                                                                     rune_of_cinderglacier_damage = atta_num * .2
                                                                     rune_of_cinderglacier_active_count += 1
                                                                     rotation.append("Rune of Cinderglacier")
                                                                     rotation_time.append(current_time)
                                                                     rotation_status.append("Active")
                                                                     rotation_damage.append(atta_num * .2)
                                                                     if rune_of_cinderglacier_active_count == 2:
                                                                         rune_of_cinderglacier_active = False
                                                                rotation.append("Sudden Doom")
                                                                rotation_time.append(current_time)
                                                                rotation_status.append("Hit")
                                                                rotation_damage.append(atta_num)
                                                        if hit == False:
                                                            rotation.append("Sudden Doom")
                                                            rotation_time.append(current_time)
                                                            rotation_status.append("Miss")
                                                            rotation_damage.append(0)
                                                rotation.append("OH - Blood Strike")
                                                rotation_time.append(current_time)
                                                rotation_status.append("Crit")
                                                rotation_damage.append(atta_num)
                                            elif oh_attack_table_results == 7:
                                                #normal attack
                                                atta_num = ((746 + (oh_wep_roll * .4)) + (( 746 + (oh_wep_roll * .4)) * (.125 * how_many_dots_on_target)) + + (( 746 + (oh_wep_roll * .4)) * (.125 * how_many_dots_on_target) * darkruned_battlegear_four_set)) - (((746 + (oh_wep_roll * .4)) + (( 746 + (oh_wep_roll * .4)) * (.125 * how_many_dots_on_target)) + + (( 746 + (oh_wep_roll * .4)) * (.125 * how_many_dots_on_target) * darkruned_battlegear_four_set)) * armor_red_amount)
                                                if dk_presence == 0:
                                                    atta_num = atta_num + (atta_num * .15)
                                                if tundra_stalker_points != 0:
                                                    if dots[0] > current_time:
                                                        atta_num = atta_num + (atta_num * (tundra_stalker_points * .03))
                                                if blood_of_the_north_points != 0:
                                                    if blood_of_the_north_points < 3:
                                                        atta_num = atta_num + (atta_num * (blood_of_the_north_points * .03))
                                                    elif blood_of_the_north_points == 3:
                                                        atta_num = atta_num + (atta_num * .1)
                                                if t9_tank_two_set == True:
                                                    atta_num = atta_num + (atta_num *.05)
                                                if rage_of_rivendale_points != 0:
                                                    if dots[1] > current_time:
                                                        atta_num += atta_num * ((rage_of_rivendale_points * 2) / 100)
                                                if blood_strikes_points != 0:
                                                    atta_num = atta_num + ((blood_strikes_points * 5) / 100)
                                                atta_num = atta_num * oh_wep_damage_mod
                                                if hysteria_active == True:
                                                    atta_num = atta_num + (atta_num * .2)
                                                if tricksoftt_active == True:
                                                    atta_num = atta_num + (atta_num * .15)
                                                atta_num = atta_num + (atta_num * increased_physical_damage) + (atta_num * increased_all_damage)
                                                sum_oh_bs_attacks += atta_num
                                                trinket_hit_crit_tracker = 1
                                                if blood_of_the_north_points != 0:
                                                    if just_used_death_rune != True:
                                                        proc_num = random.randint(0, 100)
                                                        if blood_of_the_north_points < 3:
                                                            death_proc_chance = (blood_of_the_north_points * .3) * 100
                                                        elif blood_of_the_north_points == 3:
                                                            death_proc_chance = 100
                                                        if death_proc_chance >= proc_num:
                                                            death_castable = castable + death
                                                            rune_cd_tracker[death_castable] = rune_cd(haste_rune_cd, current_time)
                                                            rune_cd_tracker[castable] = 10000  
                                                if reaping_points != 0:
                                                    if just_used_death_rune != True:
                                                        proc_num = random.randint(0, 100)
                                                        if reaping_points < 3:
                                                            death_proc_chance = (reaping_points * .3) * 100
                                                        elif reaping_points == 3:
                                                            death_proc_chance = 100
                                                        if death_proc_chance >= proc_num:
                                                            death_castable = castable + death
                                                            rune_cd_tracker[death_castable] = rune_cd(haste_rune_cd, current_time)
                                                            rune_cd_tracker[castable] = 10000 
                                                if sigil_of_haunted_dreams == True:
                                                    if random.randint(0, 100) < 15:
                                                        if sigil_of_haunted_dreams_buff == False:
                                                            sigil_of_haunted_dreams_buff = True
                                                            sigil_of_haunted_dreams_timer = current_time + 10  
                                                            total_crit = total_crit + ((173 / 45.8) / 100) 
                                                if t9_dps_two_set == True:
                                                    if t9_bonus == False:
                                                        if t9_cd_timer < current_time:
                                                            if (random.randint(0, 10000)/100) < 50:
                                                                t9_bonus = True
                                                                t9_cd_timer = current_time + 45
                                                                t9_active_timer = current_time + 15
                                                                bonus_loop_str += 180
                                                                rotation.append("T9 DPS 2p Bonus")
                                                                rotation_time.append(current_time)
                                                                rotation_damage.append(0)
                                                                rotation_status.append("Proc")
                                                if desolation_points != 0:
                                                    if desolation_buff == False:
                                                        increased_all_damage += (desolation_points / 100)
                                                        desolation_buff_timer = current_time + 20
                                                        rotation.append("Desolation")
                                                        rotation_time.append(current_time)
                                                        rotation_damage.append(0)
                                                        rotation_status.append("Applied")
                                                        desolation_buff = True
                                                    else:
                                                        desolation_buff_timer = current_time + 20
                                                        rotation.append("Desolation")
                                                        rotation_time.append(current_time)
                                                        rotation_damage.append(0)
                                                        rotation_status.append("Refresh")
                                                if sudden_doom_points != 0:  #Sudden Doom aka Free Death Coil
                                                    if (random.randint(0, 10000)/100) < sudden_doom_points * 5:
                                                        hit = spell_hit(spell_hit_total, increased_spell_hit, target_level)
                                                        crit = spell_crit((total_crit + (darkruned_battlegear_two_set / 100)), spell_hit_total, increased_spell_hit, target_level, increased_spell_crit)
                                                        if hit == True:
                                                            if crit == True:
                                                                atta_num = random.randint(443, 665)
                                                                atta_num = (atta_num + ((current_ap + (current_ap * ((impurity_points * 4) / 100))) * 0)) * var_crit_amount
                                                                if sigil_of_vengeful_heart == True:
                                                                    atta_num + 380
                                                                if sigil_of_the_wild_buck == True:
                                                                    atta_num += 80
                                                                if black_ice_points == 5:
                                                                    atta_num = atta_num + (atta_num * .1)
                                                                elif black_ice_points == 4:
                                                                    atta_num = atta_num + (atta_num * .08)
                                                                elif black_ice_points == 3:
                                                                    atta_num = atta_num + (atta_num * .06)
                                                                elif black_ice_points == 2:
                                                                    atta_num = atta_num + (atta_num * .04)
                                                                elif black_ice_points == 1:
                                                                    atta_num = atta_num + (atta_num * .02)
                                                                if dk_presence == 0:
                                                                    atta_num = atta_num + (atta_num * .15)
                                                                if tundra_stalker_points != 0:
                                                                    if dots[0] > current_time:
                                                                        atta_num = atta_num + (atta_num * (tundra_stalker_points * .03))
                                                                if glyph_death_coil == True:
                                                                    atta_num += atta_num * .15
                                                                if rage_of_rivendale_points != 0:
                                                                    if dots[1] > current_time:
                                                                        atta_num += atta_num * ((rage_of_rivendale_points * 2) / 100)
                                                                if morbitity_points != 0:
                                                                    atta_num += ((morbitity_points * 5) / 100)
                                                                if hysteria_active == True:
                                                                    atta_num = atta_num + (atta_num * .2)
                                                                if tricksoftt_active == True:
                                                                    atta_num = atta_num + (atta_num * .15)
                                                                atta_num = atta_num + (atta_num * increased_spell_damage) + (atta_num * increased_all_damage)
                                                                sudden_doom_damage += atta_num
                                                                if unholy_blight_points == 1:
                                                                    unholy_blight_amount = atta_num / 10   
                                                                    unholy_blight_timer = current_time + 10
                                                                if rune_of_cinderglacier_active == True:
                                                                     rune_of_cinderglacier_damage = atta_num * .2
                                                                     rune_of_cinderglacier_active_count += 1
                                                                     rotation.append("Rune of Cinderglacier")
                                                                     rotation_time.append(current_time)
                                                                     rotation_status.append("Active")
                                                                     rotation_damage.append(atta_num * .2)
                                                                     if rune_of_cinderglacier_active_count == 2:
                                                                         rune_of_cinderglacier_active = False
                                                                rotation.append("Sudden Doom")
                                                                rotation_time.append(current_time)
                                                                rotation_status.append("Crit")
                                                                rotation_damage.append(atta_num)
                                                            else:
                                                                atta_num = random.randint(443, 665)
                                                                atta_num = (atta_num + ((current_ap + (current_ap * ((impurity_points * 4) / 100))) * 0))
                                                                if sigil_of_vengeful_heart == True:
                                                                    atta_num + 380
                                                                if sigil_of_the_wild_buck == True:
                                                                    atta_num += 80
                                                                if black_ice_points == 5:
                                                                    atta_num = atta_num + (atta_num * .1)
                                                                elif black_ice_points == 4:
                                                                    atta_num = atta_num + (atta_num * .08)
                                                                elif black_ice_points == 3:
                                                                    atta_num = atta_num + (atta_num * .06)
                                                                elif black_ice_points == 2:
                                                                    atta_num = atta_num + (atta_num * .04)
                                                                elif black_ice_points == 1:
                                                                    atta_num = atta_num + (atta_num * .02)
                                                                if dk_presence == 0:
                                                                    atta_num = atta_num + (atta_num * .15)
                                                                if tundra_stalker_points != 0:
                                                                    if dots[0] > current_time:
                                                                        atta_num = atta_num + (atta_num * (tundra_stalker_points * .03))
                                                                if glyph_death_coil == True:
                                                                    atta_num += atta_num * .15
                                                                if rage_of_rivendale_points != 0:
                                                                    if dots[1] > current_time:
                                                                        atta_num += atta_num * ((rage_of_rivendale_points * 2) / 100)
                                                                if morbitity_points != 0:
                                                                    atta_num += ((morbitity_points * 5) / 100)
                                                                if hysteria_active == True:
                                                                    atta_num = atta_num + (atta_num * .2)
                                                                if tricksoftt_active == True:
                                                                    atta_num = atta_num + (atta_num * .15)
                                                                atta_num = atta_num + (atta_num * increased_spell_damage) + (atta_num * increased_all_damage)
                                                                sudden_doom_damage += atta_num
                                                                if unholy_blight_points == 1:
                                                                    unholy_blight_amount = atta_num / 10 
                                                                    unholy_blight_timer = current_time + 10
                                                                if rune_of_cinderglacier_active == True:
                                                                     rune_of_cinderglacier_damage = atta_num * .2
                                                                     rune_of_cinderglacier_active_count += 1
                                                                     rotation.append("Rune of Cinderglacier")
                                                                     rotation_time.append(current_time)
                                                                     rotation_status.append("Active")
                                                                     rotation_damage.append(atta_num * .2)
                                                                     if rune_of_cinderglacier_active_count == 2:
                                                                         rune_of_cinderglacier_active = False
                                                                rotation.append("Sudden Doom")
                                                                rotation_time.append(current_time)
                                                                rotation_status.append("Hit")
                                                                rotation_damage.append(atta_num)
                                                        if hit == False:
                                                            rotation.append("Sudden Doom")
                                                            rotation_time.append(current_time)
                                                            rotation_status.append("Miss")
                                                            rotation_damage.append(0)
                                                rotation.append("OH - Blood Strike")
                                                rotation_time.append(current_time)
                                                rotation_status.append("Hit")
                                                rotation_damage.append(atta_num)
        
                                    
                                
                                if attack_table_results == 0:
                                    atta_num = 0
                                    rune_cd_tracker[castable] = rune_cd(haste_rune_cd_miss, current_time)
                                    rotation.append("Blood Strike")
                                    rotation_time.append(current_time)
                                    rotation_status.append("Miss")
                                    rotation_damage.append(atta_num)
                                    current_time = current_time + gcd
                                    used_gcd = True
                                    continue
                                elif attack_table_results == 1:
                                    atta_num = 0
                                    rune_cd_tracker[castable] = rune_cd(haste_rune_cd_miss, current_time)
                                    rotation.append("Blood Strike")
                                    rotation_time.append(current_time)
                                    rotation_status.append("Dodge")
                                    rotation_damage.append(atta_num)
                                    current_time = current_time + gcd
                                    used_gcd = True
                                    continue
                                elif attack_table_results == 5:
                                    #crit attack
                                    rune_cd_tracker[castable] = rune_cd(haste_rune_cd, current_time)
                                    atta_num = (((746 + (wep_roll * .4)) + (( 746 + (wep_roll * .4)) * (.125 * how_many_dots_on_target)) + (( 746 + (wep_roll * .4)) * (.125 * how_many_dots_on_target) * darkruned_battlegear_four_set)) - (((746 + (wep_roll * .4)) + (( 746 + (wep_roll * .4)) * (.125 * how_many_dots_on_target)) + (( 746 + (wep_roll * .4)) * (.125 * how_many_dots_on_target) * darkruned_battlegear_four_set)) * armor_red_amount))  * (var_crit_amount + (guile_of_gorefiend_points * .15))
                                    if dk_presence == 0:
                                        atta_num = atta_num + (atta_num * .15)
                                    if tundra_stalker_points != 0:
                                        if dots[0] > current_time:
                                            atta_num = atta_num + (atta_num * (tundra_stalker_points * .03))
                                    if blood_of_the_north_points != 0:
                                        if blood_of_the_north_points < 3:
                                            atta_num = atta_num + (atta_num * (blood_of_the_north_points * .03))
                                        elif blood_of_the_north_points == 3:
                                            atta_num = atta_num + (atta_num * .1)
                                    if t9_tank_two_set == True:
                                        atta_num = atta_num + (atta_num *.05)
                                    if rage_of_rivendale_points != 0:
                                        if dots[1] > current_time:
                                            atta_num += atta_num * ((rage_of_rivendale_points * 2) / 100)
                                    if blood_strikes_points != 0:
                                        atta_num = atta_num + ((blood_strikes_points * 5) / 100)
                                    if might_of_mograine_points != 0:
                                        atta_num += atta_num * ((might_of_mograine_points * 15) / 100)
                                    if hysteria_active == True:
                                        atta_num = atta_num + (atta_num * .2)
                                    if tricksoftt_active == True:
                                        atta_num = atta_num + (atta_num * .15)
                                    atta_num = atta_num + (atta_num * increased_physical_damage) + (atta_num * increased_all_damage)
                                    sum_bs_attacks += atta_num
                                    current_power = runic_power(10, current_power, max_runic)
                                    trinket_hit_crit_tracker = 2
                                    if blood_of_the_north_points != 0:
                                        if just_used_death_rune != True:
                                            proc_num = random.randint(0, 100)
                                            if blood_of_the_north_points < 3:
                                                death_proc_chance = (blood_of_the_north_points * .3) * 100
                                            elif blood_of_the_north_points == 3:
                                                death_proc_chance = 100
                                            if death_proc_chance >= proc_num:
                                                death_castable = castable + death
                                                rune_cd_tracker[death_castable] = rune_cd(haste_rune_cd, current_time)
                                                rune_cd_tracker[castable] = 10000  
                                    if reaping_points != 0:
                                        if just_used_death_rune != True:
                                            proc_num = random.randint(0, 100)
                                            if reaping_points < 3:
                                                death_proc_chance = (reaping_points * .3) * 100
                                            elif reaping_points == 3:
                                                death_proc_chance = 100
                                            if death_proc_chance >= proc_num:
                                                death_castable = castable + death
                                                rune_cd_tracker[death_castable] = rune_cd(haste_rune_cd, current_time)
                                                rune_cd_tracker[castable] = 10000 
                                    if sigil_of_haunted_dreams == True:
                                        if random.randint(0, 100) < 15:
                                            if sigil_of_haunted_dreams_buff == False:
                                                sigil_of_haunted_dreams_buff = True
                                                sigil_of_haunted_dreams_timer = current_time + 10  
                                                total_crit = total_crit + ((173 / 45.8) / 100) 
                                    if t9_dps_two_set == True:
                                        if t9_bonus == False:
                                            if t9_cd_timer < current_time:
                                                if (random.randint(0, 10000)/100) < 50:
                                                    t9_bonus = True
                                                    t9_cd_timer = current_time + 45
                                                    t9_active_timer = current_time + 15
                                                    bonus_loop_str += 180
                                                    rotation.append("T9 DPS 2p Bonus")
                                                    rotation_time.append(current_time)
                                                    rotation_damage.append(0)
                                                    rotation_status.append("Proc")
                                    if desolation_points != 0:
                                        if desolation_buff == False:
                                            increased_all_damage += (desolation_points / 100)
                                            desolation_buff_timer = current_time + 20
                                            rotation.append("Desolation")
                                            rotation_time.append(current_time)
                                            rotation_damage.append(0)
                                            rotation_status.append("Applied")
                                            desolation_buff = True
                                        else:
                                            desolation_buff_timer = current_time + 20
                                            rotation.append("Desolation")
                                            rotation_time.append(current_time)
                                            rotation_damage.append(0)
                                            rotation_status.append("Refresh")
                                    if sudden_doom_points != 0:  #Sudden Doom aka Free Death Coil
                                        if (random.randint(0, 10000)/100) < sudden_doom_points * 5:
                                            hit = spell_hit(spell_hit_total, increased_spell_hit, target_level)
                                            crit = spell_crit((total_crit + (darkruned_battlegear_two_set / 100)), spell_hit_total, increased_spell_hit, target_level, increased_spell_crit)
                                            if hit == True:
                                                if crit == True:
                                                    atta_num = random.randint(443, 665)
                                                    atta_num = (atta_num + ((current_ap + (current_ap * ((impurity_points * 4) / 100))) * 0)) * var_crit_amount
                                                    if sigil_of_vengeful_heart == True:
                                                        atta_num + 380
                                                    if sigil_of_the_wild_buck == True:
                                                        atta_num += 80
                                                    if black_ice_points == 5:
                                                        atta_num = atta_num + (atta_num * .1)
                                                    elif black_ice_points == 4:
                                                        atta_num = atta_num + (atta_num * .08)
                                                    elif black_ice_points == 3:
                                                        atta_num = atta_num + (atta_num * .06)
                                                    elif black_ice_points == 2:
                                                        atta_num = atta_num + (atta_num * .04)
                                                    elif black_ice_points == 1:
                                                        atta_num = atta_num + (atta_num * .02)
                                                    if dk_presence == 0:
                                                        atta_num = atta_num + (atta_num * .15)
                                                    if tundra_stalker_points != 0:
                                                        if dots[0] > current_time:
                                                            atta_num = atta_num + (atta_num * (tundra_stalker_points * .03))
                                                    if glyph_death_coil == True:
                                                        atta_num += atta_num * .15
                                                    if rage_of_rivendale_points != 0:
                                                        if dots[1] > current_time:
                                                            atta_num += atta_num * ((rage_of_rivendale_points * 2) / 100)
                                                    if morbitity_points != 0:
                                                        atta_num += ((morbitity_points * 5) / 100)
                                                    if hysteria_active == True:
                                                        atta_num = atta_num + (atta_num * .2)
                                                    if tricksoftt_active == True:
                                                        atta_num = atta_num + (atta_num * .15)
                                                    atta_num = atta_num + (atta_num * increased_spell_damage) + (atta_num * increased_all_damage)
                                                    sudden_doom_damage += atta_num
                                                    if unholy_blight_points == 1:
                                                        unholy_blight_amount = atta_num / 10   
                                                        unholy_blight_timer = current_time + 10
                                                    if rune_of_cinderglacier_active == True:
                                                         rune_of_cinderglacier_damage = atta_num * .2
                                                         rune_of_cinderglacier_active_count += 1
                                                         rotation.append("Rune of Cinderglacier")
                                                         rotation_time.append(current_time)
                                                         rotation_status.append("Active")
                                                         rotation_damage.append(atta_num * .2)
                                                         if rune_of_cinderglacier_active_count == 2:
                                                             rune_of_cinderglacier_active = False
                                                    rotation.append("Sudden Doom")
                                                    rotation_time.append(current_time)
                                                    rotation_status.append("Crit")
                                                    rotation_damage.append(atta_num)
                                                else:
                                                    atta_num = random.randint(443, 665)
                                                    atta_num = (atta_num + ((current_ap + (current_ap * ((impurity_points * 4) / 100))) * 0))
                                                    if sigil_of_vengeful_heart == True:
                                                        atta_num + 380
                                                    if sigil_of_the_wild_buck == True:
                                                        atta_num += 80
                                                    if black_ice_points == 5:
                                                        atta_num = atta_num + (atta_num * .1)
                                                    elif black_ice_points == 4:
                                                        atta_num = atta_num + (atta_num * .08)
                                                    elif black_ice_points == 3:
                                                        atta_num = atta_num + (atta_num * .06)
                                                    elif black_ice_points == 2:
                                                        atta_num = atta_num + (atta_num * .04)
                                                    elif black_ice_points == 1:
                                                        atta_num = atta_num + (atta_num * .02)
                                                    if dk_presence == 0:
                                                        atta_num = atta_num + (atta_num * .15)
                                                    if tundra_stalker_points != 0:
                                                        if dots[0] > current_time:
                                                            atta_num = atta_num + (atta_num * (tundra_stalker_points * .03))
                                                    if glyph_death_coil == True:
                                                        atta_num += atta_num * .15
                                                    if rage_of_rivendale_points != 0:
                                                        if dots[1] > current_time:
                                                            atta_num += atta_num * ((rage_of_rivendale_points * 2) / 100)
                                                    if morbitity_points != 0:
                                                        atta_num += ((morbitity_points * 5) / 100)
                                                    if hysteria_active == True:
                                                        atta_num = atta_num + (atta_num * .2)
                                                    if tricksoftt_active == True:
                                                        atta_num = atta_num + (atta_num * .15)
                                                    atta_num = atta_num + (atta_num * increased_spell_damage) + (atta_num * increased_all_damage)
                                                    sudden_doom_damage += atta_num
                                                    if unholy_blight_points == 1:
                                                        unholy_blight_amount = atta_num / 10 
                                                        unholy_blight_timer = current_time + 10
                                                    if rune_of_cinderglacier_active == True:
                                                         rune_of_cinderglacier_damage = atta_num * .2
                                                         rune_of_cinderglacier_active_count += 1
                                                         rotation.append("Rune of Cinderglacier")
                                                         rotation_time.append(current_time)
                                                         rotation_status.append("Active")
                                                         rotation_damage.append(atta_num * .2)
                                                         if rune_of_cinderglacier_active_count == 2:
                                                             rune_of_cinderglacier_active = False
                                                    rotation.append("Sudden Doom")
                                                    rotation_time.append(current_time)
                                                    rotation_status.append("Hit")
                                                    rotation_damage.append(atta_num)
                                            if hit == False:
                                                rotation.append("Sudden Doom")
                                                rotation_time.append(current_time)
                                                rotation_status.append("Miss")
                                                rotation_damage.append(0)
                                    rotation.append("Blood Strike")
                                    rotation_time.append(current_time)
                                    rotation_status.append("Crit")
                                    rotation_damage.append(atta_num)
                                    current_time += gcd
                                    used_gcd = True
                                    # print("Blood Strike Crit - " + str(atta_num))
                                    continue
                                elif attack_table_results == 7:
                                    #normal attack
                                    rune_cd_tracker[castable] = rune_cd(haste_rune_cd, current_time)
                                    atta_num = ((746 + (wep_roll * .4)) + (( 746 + (wep_roll * .4)) * (.125 * how_many_dots_on_target)) + (( 746 + (wep_roll * .4)) * (.125 * how_many_dots_on_target) * darkruned_battlegear_four_set)) - (((746 + (wep_roll * .4)) + (( 746 + (wep_roll * .4)) * (.125 * how_many_dots_on_target)) + (( 746 + (wep_roll * .4)) * (.125 * how_many_dots_on_target) * darkruned_battlegear_four_set)) * armor_red_amount)
                                    if dk_presence == 0:
                                        atta_num = atta_num + (atta_num * .15)
                                    if tundra_stalker_points != 0:
                                        if dots[0] > current_time:
                                            atta_num = atta_num + (atta_num * (tundra_stalker_points * .03))
                                    if blood_of_the_north_points != 0:
                                        if blood_of_the_north_points < 3:
                                            atta_num = atta_num + (atta_num * (blood_of_the_north_points * .03))
                                        elif blood_of_the_north_points == 3:
                                            atta_num = atta_num + (atta_num * .1)
                                    if t9_tank_two_set == True:
                                        atta_num = atta_num + (atta_num *.05)
                                    if rage_of_rivendale_points != 0:
                                        if dots[1] > current_time:
                                            atta_num += atta_num * ((rage_of_rivendale_points * 2) / 100)
                                    if blood_strikes_points != 0:
                                        atta_num = atta_num + ((blood_strikes_points * 5) / 100)
                                    if hysteria_active == True:
                                        atta_num = atta_num + (atta_num * .2)
                                    if tricksoftt_active == True:
                                        atta_num = atta_num + (atta_num * .15)
                                    atta_num = atta_num + (atta_num * increased_physical_damage) + (atta_num * increased_all_damage)
                                    sum_bs_attacks += atta_num
                                    current_power = runic_power(10, current_power, max_runic)
                                    trinket_hit_crit_tracker = 1
                                    if blood_of_the_north_points != 0:
                                        if just_used_death_rune != True:
                                            proc_num = random.randint(0, 100)
                                            if blood_of_the_north_points < 3:
                                                death_proc_chance = (blood_of_the_north_points * .3) * 100
                                            elif blood_of_the_north_points == 3:
                                                death_proc_chance = 100
                                            if death_proc_chance >= proc_num:
                                                death_castable = castable + death
                                                rune_cd_tracker[death_castable] = rune_cd(haste_rune_cd, current_time)
                                                rune_cd_tracker[castable] = 10000  
                                    if reaping_points != 0:
                                        if just_used_death_rune != True:
                                            proc_num = random.randint(0, 100)
                                            if reaping_points < 3:
                                                death_proc_chance = (reaping_points * .3) * 100
                                            elif reaping_points == 3:
                                                death_proc_chance = 100
                                            if death_proc_chance >= proc_num:
                                                death_castable = castable + death
                                                rune_cd_tracker[death_castable] = rune_cd(haste_rune_cd, current_time)
                                                rune_cd_tracker[castable] = 10000 
                                    if sigil_of_haunted_dreams == True:
                                        if random.randint(0, 100) < 15:
                                            if sigil_of_haunted_dreams_buff == False:
                                                sigil_of_haunted_dreams_buff = True
                                                sigil_of_haunted_dreams_timer = current_time + 10  
                                                total_crit = total_crit + ((173 / 45.8) / 100) 
                                    if t9_dps_two_set == True:
                                        if t9_bonus == False:
                                            if t9_cd_timer < current_time:
                                                if (random.randint(0, 10000)/100) < 50:
                                                    t9_bonus = True
                                                    t9_cd_timer = current_time + 45
                                                    t9_active_timer = current_time + 15
                                                    bonus_loop_str += 180
                                                    rotation.append("T9 DPS 2p Bonus")
                                                    rotation_time.append(current_time)
                                                    rotation_damage.append(0)
                                                    rotation_status.append("Proc")
                                    if desolation_points != 0:
                                        if desolation_buff == False:
                                            increased_all_damage += (desolation_points / 100)
                                            desolation_buff_timer = current_time + 20
                                            rotation.append("Desolation")
                                            rotation_time.append(current_time)
                                            rotation_damage.append(0)
                                            rotation_status.append("Applied")
                                            desolation_buff = True
                                        else:
                                            desolation_buff_timer = current_time + 20
                                            rotation.append("Desolation")
                                            rotation_time.append(current_time)
                                            rotation_damage.append(0)
                                            rotation_status.append("Refresh")
                                    if sudden_doom_points != 0:  #Sudden Doom aka Free Death Coil
                                        if (random.randint(0, 10000)/100) < sudden_doom_points * 5:
                                            hit = spell_hit(spell_hit_total, increased_spell_hit, target_level)
                                            crit = spell_crit((total_crit + (darkruned_battlegear_two_set / 100)), spell_hit_total, increased_spell_hit, target_level, increased_spell_crit)
                                            if hit == True:
                                                if crit == True:
                                                    atta_num = random.randint(443, 665)
                                                    atta_num = (atta_num + ((current_ap + (current_ap * ((impurity_points * 4) / 100))) * 0)) * var_crit_amount
                                                    if sigil_of_vengeful_heart == True:
                                                        atta_num + 380
                                                    if sigil_of_the_wild_buck == True:
                                                        atta_num += 80
                                                    if black_ice_points == 5:
                                                        atta_num = atta_num + (atta_num * .1)
                                                    elif black_ice_points == 4:
                                                        atta_num = atta_num + (atta_num * .08)
                                                    elif black_ice_points == 3:
                                                        atta_num = atta_num + (atta_num * .06)
                                                    elif black_ice_points == 2:
                                                        atta_num = atta_num + (atta_num * .04)
                                                    elif black_ice_points == 1:
                                                        atta_num = atta_num + (atta_num * .02)
                                                    if dk_presence == 0:
                                                        atta_num = atta_num + (atta_num * .15)
                                                    if tundra_stalker_points != 0:
                                                        if dots[0] > current_time:
                                                            atta_num = atta_num + (atta_num * (tundra_stalker_points * .03))
                                                    if glyph_death_coil == True:
                                                        atta_num += atta_num * .15
                                                    if rage_of_rivendale_points != 0:
                                                        if dots[1] > current_time:
                                                            atta_num += atta_num * ((rage_of_rivendale_points * 2) / 100)
                                                    if morbitity_points != 0:
                                                        atta_num += ((morbitity_points * 5) / 100)
                                                    if hysteria_active == True:
                                                        atta_num = atta_num + (atta_num * .2)
                                                    if tricksoftt_active == True:
                                                        atta_num = atta_num + (atta_num * .15)
                                                    atta_num = atta_num + (atta_num * increased_spell_damage) + (atta_num * increased_all_damage)
                                                    sudden_doom_damage += atta_num
                                                    if unholy_blight_points == 1:
                                                        unholy_blight_amount = atta_num / 10   
                                                        unholy_blight_timer = current_time + 10
                                                    if rune_of_cinderglacier_active == True:
                                                         rune_of_cinderglacier_damage = atta_num * .2
                                                         rune_of_cinderglacier_active_count += 1
                                                         rotation.append("Rune of Cinderglacier")
                                                         rotation_time.append(current_time)
                                                         rotation_status.append("Active")
                                                         rotation_damage.append(atta_num * .2)
                                                         if rune_of_cinderglacier_active_count == 2:
                                                             rune_of_cinderglacier_active = False
                                                    rotation.append("Sudden Doom")
                                                    rotation_time.append(current_time)
                                                    rotation_status.append("Crit")
                                                    rotation_damage.append(atta_num)
                                                else:
                                                    atta_num = random.randint(443, 665)
                                                    atta_num = (atta_num + ((current_ap + (current_ap * ((impurity_points * 4) / 100))) * 0))
                                                    if sigil_of_vengeful_heart == True:
                                                        atta_num + 380
                                                    if sigil_of_the_wild_buck == True:
                                                        atta_num += 80
                                                    if black_ice_points == 5:
                                                        atta_num = atta_num + (atta_num * .1)
                                                    elif black_ice_points == 4:
                                                        atta_num = atta_num + (atta_num * .08)
                                                    elif black_ice_points == 3:
                                                        atta_num = atta_num + (atta_num * .06)
                                                    elif black_ice_points == 2:
                                                        atta_num = atta_num + (atta_num * .04)
                                                    elif black_ice_points == 1:
                                                        atta_num = atta_num + (atta_num * .02)
                                                    if dk_presence == 0:
                                                        atta_num = atta_num + (atta_num * .15)
                                                    if tundra_stalker_points != 0:
                                                        if dots[0] > current_time:
                                                            atta_num = atta_num + (atta_num * (tundra_stalker_points * .03))
                                                    if glyph_death_coil == True:
                                                        atta_num += atta_num * .15
                                                    if rage_of_rivendale_points != 0:
                                                        if dots[1] > current_time:
                                                            atta_num += atta_num * ((rage_of_rivendale_points * 2) / 100)
                                                    if morbitity_points != 0:
                                                        atta_num += ((morbitity_points * 5) / 100)
                                                    if hysteria_active == True:
                                                        atta_num = atta_num + (atta_num * .2)
                                                    if tricksoftt_active == True:
                                                        atta_num = atta_num + (atta_num * .15)
                                                    atta_num = atta_num + (atta_num * increased_spell_damage) + (atta_num * increased_all_damage)
                                                    sudden_doom_damage += atta_num
                                                    if unholy_blight_points == 1:
                                                        unholy_blight_amount = atta_num / 10 
                                                        unholy_blight_timer = current_time + 10
                                                    if rune_of_cinderglacier_active == True:
                                                         rune_of_cinderglacier_damage = atta_num * .2
                                                         rune_of_cinderglacier_active_count += 1
                                                         rotation.append("Rune of Cinderglacier")
                                                         rotation_time.append(current_time)
                                                         rotation_status.append("Active")
                                                         rotation_damage.append(atta_num * .2)
                                                         if rune_of_cinderglacier_active_count == 2:
                                                             rune_of_cinderglacier_active = False
                                                    rotation.append("Sudden Doom")
                                                    rotation_time.append(current_time)
                                                    rotation_status.append("Hit")
                                                    rotation_damage.append(atta_num)
                                            if hit == False:
                                                rotation.append("Sudden Doom")
                                                rotation_time.append(current_time)
                                                rotation_status.append("Miss")
                                                rotation_damage.append(0)
                                    rotation.append("Blood Strike")
                                    rotation_time.append(current_time)
                                    rotation_status.append("Hit")
                                    rotation_damage.append(atta_num)
                                    current_time += gcd
                                    used_gcd = True
                                    # print("Blood Strike - " + str(atta_num))
                                    continue
                            opp_castable = castable
                            opp_castable = castable - 1
                            if opp_castable == -1:
                                opp_castable = 1
                            castable_death = all_rune_check(death, current_time, rune_cd_tracker)
                            castable_death_f = all_rune_check(death_f, current_time, rune_cd_tracker)
                            castable_death_u = all_rune_check(death_u, current_time, rune_cd_tracker)
                            if castable_death != 3:
                                opp_castable += 6
                            elif castable_death_f != 3:
                                opp_castable += 8
                            elif castable_death_u != 3:
                                opp_castable += 10
                            until_dot0 = dots[0]
                            until_dot1 = dots[1]
                            if pestilence_allow_reset == True:
                                until_dot0 -= pestilence_reset_window
                                until_dot1 -= pestilence_reset_window
                            if rune_cd_tracker[opp_castable] < until_dot0:
                                if rune_cd_tracker[opp_castable] < until_dot1:
                                    #castable = opp_castable   
                                    if use_death_rune == True:
                                        use_death_rune = False
                                        if castable_death != 3:
                                            rune_cd_tracker[castable] = 0
                                            if castable_death == 2:
                                                castable_death = 0
                                            rune_cd_tracker[castable_death + 6] = 10000
                                        elif castable_death_f != 3:
                                            castable += 2
                                            rune_cd_tracker[castable] = 0
                                            if castable_death_f == 2:
                                                castable_death_f = 0
                                            rune_cd_tracker[castable_death_f + 8] = 10000
                                        elif castable_death_u != 3:
                                            castable += 4
                                            rune_cd_tracker[castable] = 0
                                            if castable_death_u == 2:
                                                castable_death_u = 0
                                            rune_cd_tracker[castable_death_u + 10] = 10000
                                    else:
                                        use_death_rune = False
                                    attack_table_results = attack_table(1, tanking, H2, True, False, hit_from_gear, hit_from_other, target_level, all_expertise_dodge, all_expertise_parry, total_crit, (annihilation_talent_points / 100) + increased_phy_crit + ((subversion_points * 3) / 100))
                                    armor_red_amount = dam_reduc(current_armor, armor_penetration, target_level)
                                    wep_roll = weapon_roll(mh_input_lowend_weapon_damage,mh_input_topend_weapon_damage)
                                    wep_roll = wep_roll + (attack_damage_normalization * current_ap / 14)
                                    #Rune Hit
                                    haste_percentage = (total_haste_rating / 25.21) / 100 #Returns a result of 0 - 1 for 0% - 100%
                                    haste_rune_cd = rune_grade_timer(current_time, last_rune_change[castable], last_rune_change[castable+6])
                                    if improved_unholy_presence_points != 0:
                                        if dk_presence == 2:
                                            haste_rune_cd = haste_rune_cd - (haste_rune_cd * ((improved_unholy_presence_points * 5) / 100))
                                    if dk_presence != 2:
                                        gcd = input_gcd / (1 + haste_percentage)
                                        if gcd < 1:
                                            gcd = 1
                                    ##Rune Miss
                                    haste_rune_cd_miss = 1
                                    how_many_dots_on_target = 0
                                    if dots[0] > current_time:
                                        how_many_dots_on_target += 1
                                    if dots[1] > current_time:
                                        how_many_dots_on_target += 1
                                    if dots[2] > current_time:
                                        how_many_dots_on_target += 1
                                        
                                    if dancing_rune_weapon_points == 1:
                                        if dancing_rune_weapon_active == True:
                                            if attack_table_results == 0:
                                                atta_num = 0
                                                rotation.append("Dancing Rune Weapon")
                                                rotation_time.append(current_time)
                                                rotation_status.append("Miss")
                                                rotation_damage.append(atta_num)
                                            elif attack_table_results == 1:
                                                atta_num = 0
                                                rotation.append("Dancing Rune Weapon")
                                                rotation_time.append(current_time)
                                                rotation_status.append("Dodge")
                                                rotation_damage.append(atta_num)
                                            elif attack_table_results == 5:
                                                atta_num = (((746 + (wep_roll * .4)) + (( 746 + (wep_roll * .4)) * (.125 * how_many_dots_on_target)) + (( 746 + (wep_roll * .4)) * (.125 * how_many_dots_on_target) * darkruned_battlegear_four_set)) - (((746 + (wep_roll * .4)) + (( 746 + (wep_roll * .4)) * (.125 * how_many_dots_on_target)) + (( 746 + (wep_roll * .4)) * (.125 * how_many_dots_on_target) * darkruned_battlegear_four_set)) * armor_red_amount))  * (var_crit_amount + (guile_of_gorefiend_points * .15))
                                                if dk_presence == 0:
                                                    atta_num = atta_num + (atta_num * .15)
                                                if tundra_stalker_points != 0:
                                                    if dots[0] > current_time:
                                                        atta_num = atta_num + (atta_num * (tundra_stalker_points * .03))
                                                if blood_of_the_north_points != 0:
                                                    if blood_of_the_north_points < 3:
                                                        atta_num = atta_num + (atta_num * (blood_of_the_north_points * .03))
                                                    elif blood_of_the_north_points == 3:
                                                        atta_num = atta_num + (atta_num * .1)
                                                if t9_tank_two_set == True:
                                                    atta_num = atta_num + (atta_num *.05)
                                                if rage_of_rivendale_points != 0:
                                                    if dots[1] > current_time:
                                                        atta_num += atta_num * ((rage_of_rivendale_points * 2) / 100)
                                                if blood_strikes_points != 0:
                                                    atta_num = atta_num + ((blood_strikes_points * 5) / 100)
                                                if might_of_mograine_points != 0:
                                                    atta_num += atta_num * ((might_of_mograine_points * 15) / 100)
                                                if hysteria_active == True:
                                                    atta_num = atta_num + (atta_num * .2)
                                                if tricksoftt_active == True:
                                                    atta_num = atta_num + (atta_num * .15)
                                                atta_num = atta_num + (atta_num * increased_physical_damage) + (atta_num * increased_all_damage)
                                                atta_num = atta_num * dancing_rune_weapon_damage_multi
                                                dancing_rune_weapon_damage += atta_num
                                                rotation.append("Dancing Rune Weapon")
                                                rotation_time.append(current_time)
                                                rotation_status.append("Crit")
                                                rotation_damage.append(atta_num)
                                                trinket_hit_crit_tracker = 2
                                                if blood_of_the_north_points != 0:
                                                    if just_used_death_rune != True:
                                                        proc_num = random.randint(0, 100)
                                                        if blood_of_the_north_points < 3:
                                                            death_proc_chance = (blood_of_the_north_points * .3) * 100
                                                        elif blood_of_the_north_points == 3:
                                                            death_proc_chance = 100
                                                        if death_proc_chance >= proc_num:
                                                            death_castable = castable + death
                                                            rune_cd_tracker[death_castable] = rune_cd(haste_rune_cd, current_time)
                                                            rune_cd_tracker[castable] = 10000  
                                                if reaping_points != 0:
                                                    if just_used_death_rune != True:
                                                        proc_num = random.randint(0, 100)
                                                        if reaping_points < 3:
                                                            death_proc_chance = (reaping_points * .3) * 100
                                                        elif reaping_points == 3:
                                                            death_proc_chance = 100
                                                        if death_proc_chance >= proc_num:
                                                            death_castable = castable + death
                                                            rune_cd_tracker[death_castable] = rune_cd(haste_rune_cd, current_time)
                                                            rune_cd_tracker[castable] = 10000 
                                                if sigil_of_haunted_dreams == True:
                                                    if random.randint(0, 100) < 15:
                                                        if sigil_of_haunted_dreams_buff == False:
                                                            sigil_of_haunted_dreams_buff = True
                                                            sigil_of_haunted_dreams_timer = current_time + 10  
                                                            total_crit = total_crit + ((173 / 45.8) / 100) 
                                                if t9_dps_two_set == True:
                                                    if t9_bonus == False:
                                                        if t9_cd_timer < current_time:
                                                            if (random.randint(0, 10000)/100) < 50:
                                                                t9_bonus = True
                                                                t9_cd_timer = current_time + 45
                                                                t9_active_timer = current_time + 15
                                                                bonus_loop_str += 180
                                                                rotation.append("T9 DPS 2p Bonus")
                                                                rotation_time.append(current_time)
                                                                rotation_damage.append(0)
                                                                rotation_status.append("Proc")
                                                if desolation_points != 0:
                                                    if desolation_buff == False:
                                                        increased_all_damage += (desolation_points / 100)
                                                        desolation_buff_timer = current_time + 20
                                                        rotation.append("Desolation")
                                                        rotation_time.append(current_time)
                                                        rotation_damage.append(0)
                                                        rotation_status.append("Applied")
                                                        desolation_buff = True
                                                    else:
                                                        desolation_buff_timer = current_time + 20
                                                        rotation.append("Desolation")
                                                        rotation_time.append(current_time)
                                                        rotation_damage.append(0)
                                                        rotation_status.append("Refresh")
                                                if sudden_doom_points != 0:  #Sudden Doom aka Free Death Coil
                                                    if (random.randint(0, 10000)/100) < sudden_doom_points * 5:
                                                        hit = spell_hit(spell_hit_total, increased_spell_hit, target_level)
                                                        crit = spell_crit((total_crit + (darkruned_battlegear_two_set / 100)), spell_hit_total, increased_spell_hit, target_level, increased_spell_crit)
                                                        if hit == True:
                                                            if crit == True:
                                                                atta_num = random.randint(443, 665)
                                                                atta_num = (atta_num + ((current_ap + (current_ap * ((impurity_points * 4) / 100))) * 0)) * var_crit_amount
                                                                if sigil_of_vengeful_heart == True:
                                                                    atta_num + 380
                                                                if sigil_of_the_wild_buck == True:
                                                                    atta_num += 80
                                                                if black_ice_points == 5:
                                                                    atta_num = atta_num + (atta_num * .1)
                                                                elif black_ice_points == 4:
                                                                    atta_num = atta_num + (atta_num * .08)
                                                                elif black_ice_points == 3:
                                                                    atta_num = atta_num + (atta_num * .06)
                                                                elif black_ice_points == 2:
                                                                    atta_num = atta_num + (atta_num * .04)
                                                                elif black_ice_points == 1:
                                                                    atta_num = atta_num + (atta_num * .02)
                                                                if dk_presence == 0:
                                                                    atta_num = atta_num + (atta_num * .15)
                                                                if tundra_stalker_points != 0:
                                                                    if dots[0] > current_time:
                                                                        atta_num = atta_num + (atta_num * (tundra_stalker_points * .03))
                                                                if glyph_death_coil == True:
                                                                    atta_num += atta_num * .15
                                                                if rage_of_rivendale_points != 0:
                                                                    if dots[1] > current_time:
                                                                        atta_num += atta_num * ((rage_of_rivendale_points * 2) / 100)
                                                                if morbitity_points != 0:
                                                                    atta_num += ((morbitity_points * 5) / 100)
                                                                if hysteria_active == True:
                                                                    atta_num = atta_num + (atta_num * .2)
                                                                if tricksoftt_active == True:
                                                                    atta_num = atta_num + (atta_num * .15)
                                                                atta_num = atta_num + (atta_num * increased_spell_damage) + (atta_num * increased_all_damage)
                                                                sudden_doom_damage += atta_num
                                                                if unholy_blight_points == 1:
                                                                    unholy_blight_amount = atta_num / 10   
                                                                    unholy_blight_timer = current_time + 10
                                                                if rune_of_cinderglacier_active == True:
                                                                     rune_of_cinderglacier_damage = atta_num * .2
                                                                     rune_of_cinderglacier_active_count += 1
                                                                     rotation.append("Rune of Cinderglacier")
                                                                     rotation_time.append(current_time)
                                                                     rotation_status.append("Active")
                                                                     rotation_damage.append(atta_num * .2)
                                                                     if rune_of_cinderglacier_active_count == 2:
                                                                         rune_of_cinderglacier_active = False
                                                                rotation.append("Sudden Doom")
                                                                rotation_time.append(current_time)
                                                                rotation_status.append("Crit")
                                                                rotation_damage.append(atta_num)
                                                            else:
                                                                atta_num = random.randint(443, 665)
                                                                atta_num = (atta_num + ((current_ap + (current_ap * ((impurity_points * 4) / 100))) * 0))
                                                                if sigil_of_vengeful_heart == True:
                                                                    atta_num + 380
                                                                if sigil_of_the_wild_buck == True:
                                                                    atta_num += 80
                                                                if black_ice_points == 5:
                                                                    atta_num = atta_num + (atta_num * .1)
                                                                elif black_ice_points == 4:
                                                                    atta_num = atta_num + (atta_num * .08)
                                                                elif black_ice_points == 3:
                                                                    atta_num = atta_num + (atta_num * .06)
                                                                elif black_ice_points == 2:
                                                                    atta_num = atta_num + (atta_num * .04)
                                                                elif black_ice_points == 1:
                                                                    atta_num = atta_num + (atta_num * .02)
                                                                if dk_presence == 0:
                                                                    atta_num = atta_num + (atta_num * .15)
                                                                if tundra_stalker_points != 0:
                                                                    if dots[0] > current_time:
                                                                        atta_num = atta_num + (atta_num * (tundra_stalker_points * .03))
                                                                if glyph_death_coil == True:
                                                                    atta_num += atta_num * .15
                                                                if rage_of_rivendale_points != 0:
                                                                    if dots[1] > current_time:
                                                                        atta_num += atta_num * ((rage_of_rivendale_points * 2) / 100)
                                                                if morbitity_points != 0:
                                                                    atta_num += ((morbitity_points * 5) / 100)
                                                                if hysteria_active == True:
                                                                    atta_num = atta_num + (atta_num * .2)
                                                                if tricksoftt_active == True:
                                                                    atta_num = atta_num + (atta_num * .15)
                                                                atta_num = atta_num + (atta_num * increased_spell_damage) + (atta_num * increased_all_damage)
                                                                sudden_doom_damage += atta_num
                                                                if unholy_blight_points == 1:
                                                                    unholy_blight_amount = atta_num / 10 
                                                                    unholy_blight_timer = current_time + 10
                                                                if rune_of_cinderglacier_active == True:
                                                                     rune_of_cinderglacier_damage = atta_num * .2
                                                                     rune_of_cinderglacier_active_count += 1
                                                                     rotation.append("Rune of Cinderglacier")
                                                                     rotation_time.append(current_time)
                                                                     rotation_status.append("Active")
                                                                     rotation_damage.append(atta_num * .2)
                                                                     if rune_of_cinderglacier_active_count == 2:
                                                                         rune_of_cinderglacier_active = False
                                                                rotation.append("Sudden Doom")
                                                                rotation_time.append(current_time)
                                                                rotation_status.append("Hit")
                                                                rotation_damage.append(atta_num)
                                                        if hit == False:
                                                            rotation.append("Sudden Doom")
                                                            rotation_time.append(current_time)
                                                            rotation_status.append("Miss")
                                                            rotation_damage.append(0)
                                            elif attack_table_results == 7:
                                                atta_num = ((746 + (wep_roll * .4)) + (( 746 + (wep_roll * .4)) * (.125 * how_many_dots_on_target)) + (( 746 + (wep_roll * .4)) * (.125 * how_many_dots_on_target) * darkruned_battlegear_four_set)) - (((746 + (wep_roll * .4)) + (( 746 + (wep_roll * .4)) * (.125 * how_many_dots_on_target)) + (( 746 + (wep_roll * .4)) * (.125 * how_many_dots_on_target) * darkruned_battlegear_four_set)) * armor_red_amount)
                                                if dk_presence == 0:
                                                    atta_num = atta_num + (atta_num * .15)
                                                if tundra_stalker_points != 0:
                                                    if dots[0] > current_time:
                                                        atta_num = atta_num + (atta_num * (tundra_stalker_points * .03))
                                                if blood_of_the_north_points != 0:
                                                    if blood_of_the_north_points < 3:
                                                        atta_num = atta_num + (atta_num * (blood_of_the_north_points * .03))
                                                    elif blood_of_the_north_points == 3:
                                                        atta_num = atta_num + (atta_num * .1)
                                                if t9_tank_two_set == True:
                                                    atta_num = atta_num + (atta_num *.05)
                                                if rage_of_rivendale_points != 0:
                                                    if dots[1] > current_time:
                                                        atta_num += atta_num * ((rage_of_rivendale_points * 2) / 100)
                                                if blood_strikes_points != 0:
                                                    atta_num = atta_num + ((blood_strikes_points * 5) / 100)
                                                if hysteria_active == True:
                                                    atta_num = atta_num + (atta_num * .2)
                                                if tricksoftt_active == True:
                                                    atta_num = atta_num + (atta_num * .15)
                                                atta_num = atta_num + (atta_num * increased_physical_damage) + (atta_num * increased_all_damage)
                                                atta_num = atta_num * dancing_rune_weapon_damage_multi
                                                dancing_rune_weapon_damage += atta_num
                                                rotation.append("Dancing Rune Weapon")
                                                rotation_time.append(current_time)
                                                rotation_status.append("Hit")
                                                rotation_damage.append(atta_num)
                                                trinket_hit_crit_tracker = 1
                                                if blood_of_the_north_points != 0:
                                                    if just_used_death_rune != True:
                                                        proc_num = random.randint(0, 100)
                                                        if blood_of_the_north_points < 3:
                                                            death_proc_chance = (blood_of_the_north_points * .3) * 100
                                                        elif blood_of_the_north_points == 3:
                                                            death_proc_chance = 100
                                                        if death_proc_chance >= proc_num:
                                                            death_castable = castable + death
                                                            rune_cd_tracker[death_castable] = rune_cd(haste_rune_cd, current_time)
                                                            rune_cd_tracker[castable] = 10000  
                                                if reaping_points != 0:
                                                    if just_used_death_rune != True:
                                                        proc_num = random.randint(0, 100)
                                                        if reaping_points < 3:
                                                            death_proc_chance = (reaping_points * .3) * 100
                                                        elif reaping_points == 3:
                                                            death_proc_chance = 100
                                                        if death_proc_chance >= proc_num:
                                                            death_castable = castable + death
                                                            rune_cd_tracker[death_castable] = rune_cd(haste_rune_cd, current_time)
                                                            rune_cd_tracker[castable] = 10000 
                                                if sigil_of_haunted_dreams == True:
                                                    if random.randint(0, 100) < 15:
                                                        if sigil_of_haunted_dreams_buff == False:
                                                            sigil_of_haunted_dreams_buff = True
                                                            sigil_of_haunted_dreams_timer = current_time + 10  
                                                            total_crit = total_crit + ((173 / 45.8) / 100) 
                                                if t9_dps_two_set == True:
                                                    if t9_bonus == False:
                                                        if t9_cd_timer < current_time:
                                                            if (random.randint(0, 10000)/100) < 50:
                                                                t9_bonus = True
                                                                t9_cd_timer = current_time + 45
                                                                t9_active_timer = current_time + 15
                                                                bonus_loop_str += 180
                                                                rotation.append("T9 DPS 2p Bonus")
                                                                rotation_time.append(current_time)
                                                                rotation_damage.append(0)
                                                                rotation_status.append("Proc")
                                                if desolation_points != 0:
                                                    if desolation_buff == False:
                                                        increased_all_damage += (desolation_points / 100)
                                                        desolation_buff_timer = current_time + 20
                                                        rotation.append("Desolation")
                                                        rotation_time.append(current_time)
                                                        rotation_damage.append(0)
                                                        rotation_status.append("Applied")
                                                        desolation_buff = True
                                                    else:
                                                        desolation_buff_timer = current_time + 20
                                                        rotation.append("Desolation")
                                                        rotation_time.append(current_time)
                                                        rotation_damage.append(0)
                                                        rotation_status.append("Refresh")
                                                if sudden_doom_points != 0:  #Sudden Doom aka Free Death Coil
                                                    if (random.randint(0, 10000)/100) < sudden_doom_points * 5:
                                                        hit = spell_hit(spell_hit_total, increased_spell_hit, target_level)
                                                        crit = spell_crit((total_crit + (darkruned_battlegear_two_set / 100)), spell_hit_total, increased_spell_hit, target_level, increased_spell_crit)
                                                        if hit == True:
                                                            if crit == True:
                                                                atta_num = random.randint(443, 665)
                                                                atta_num = (atta_num + ((current_ap + (current_ap * ((impurity_points * 4) / 100))) * 0)) * var_crit_amount
                                                                if sigil_of_vengeful_heart == True:
                                                                    atta_num + 380
                                                                if sigil_of_the_wild_buck == True:
                                                                    atta_num += 80
                                                                if black_ice_points == 5:
                                                                    atta_num = atta_num + (atta_num * .1)
                                                                elif black_ice_points == 4:
                                                                    atta_num = atta_num + (atta_num * .08)
                                                                elif black_ice_points == 3:
                                                                    atta_num = atta_num + (atta_num * .06)
                                                                elif black_ice_points == 2:
                                                                    atta_num = atta_num + (atta_num * .04)
                                                                elif black_ice_points == 1:
                                                                    atta_num = atta_num + (atta_num * .02)
                                                                if dk_presence == 0:
                                                                    atta_num = atta_num + (atta_num * .15)
                                                                if tundra_stalker_points != 0:
                                                                    if dots[0] > current_time:
                                                                        atta_num = atta_num + (atta_num * (tundra_stalker_points * .03))
                                                                if glyph_death_coil == True:
                                                                    atta_num += atta_num * .15
                                                                if rage_of_rivendale_points != 0:
                                                                    if dots[1] > current_time:
                                                                        atta_num += atta_num * ((rage_of_rivendale_points * 2) / 100)
                                                                if morbitity_points != 0:
                                                                    atta_num += ((morbitity_points * 5) / 100)
                                                                if hysteria_active == True:
                                                                    atta_num = atta_num + (atta_num * .2)
                                                                if tricksoftt_active == True:
                                                                    atta_num = atta_num + (atta_num * .15)
                                                                atta_num = atta_num + (atta_num * increased_spell_damage) + (atta_num * increased_all_damage)
                                                                sudden_doom_damage += atta_num
                                                                if unholy_blight_points == 1:
                                                                    unholy_blight_amount = atta_num / 10   
                                                                    unholy_blight_timer = current_time + 10
                                                                if rune_of_cinderglacier_active == True:
                                                                     rune_of_cinderglacier_damage = atta_num * .2
                                                                     rune_of_cinderglacier_active_count += 1
                                                                     rotation.append("Rune of Cinderglacier")
                                                                     rotation_time.append(current_time)
                                                                     rotation_status.append("Active")
                                                                     rotation_damage.append(atta_num * .2)
                                                                     if rune_of_cinderglacier_active_count == 2:
                                                                         rune_of_cinderglacier_active = False
                                                                rotation.append("Sudden Doom")
                                                                rotation_time.append(current_time)
                                                                rotation_status.append("Crit")
                                                                rotation_damage.append(atta_num)
                                                            else:
                                                                atta_num = random.randint(443, 665)
                                                                atta_num = (atta_num + ((current_ap + (current_ap * ((impurity_points * 4) / 100))) * 0))
                                                                if sigil_of_vengeful_heart == True:
                                                                    atta_num + 380
                                                                if sigil_of_the_wild_buck == True:
                                                                    atta_num += 80
                                                                if black_ice_points == 5:
                                                                    atta_num = atta_num + (atta_num * .1)
                                                                elif black_ice_points == 4:
                                                                    atta_num = atta_num + (atta_num * .08)
                                                                elif black_ice_points == 3:
                                                                    atta_num = atta_num + (atta_num * .06)
                                                                elif black_ice_points == 2:
                                                                    atta_num = atta_num + (atta_num * .04)
                                                                elif black_ice_points == 1:
                                                                    atta_num = atta_num + (atta_num * .02)
                                                                if dk_presence == 0:
                                                                    atta_num = atta_num + (atta_num * .15)
                                                                if tundra_stalker_points != 0:
                                                                    if dots[0] > current_time:
                                                                        atta_num = atta_num + (atta_num * (tundra_stalker_points * .03))
                                                                if glyph_death_coil == True:
                                                                    atta_num += atta_num * .15
                                                                if rage_of_rivendale_points != 0:
                                                                    if dots[1] > current_time:
                                                                        atta_num += atta_num * ((rage_of_rivendale_points * 2) / 100)
                                                                if morbitity_points != 0:
                                                                    atta_num += ((morbitity_points * 5) / 100)
                                                                if hysteria_active == True:
                                                                    atta_num = atta_num + (atta_num * .2)
                                                                if tricksoftt_active == True:
                                                                    atta_num = atta_num + (atta_num * .15)
                                                                atta_num = atta_num + (atta_num * increased_spell_damage) + (atta_num * increased_all_damage)
                                                                sudden_doom_damage += atta_num
                                                                if unholy_blight_points == 1:
                                                                    unholy_blight_amount = atta_num / 10 
                                                                    unholy_blight_timer = current_time + 10
                                                                if rune_of_cinderglacier_active == True:
                                                                     rune_of_cinderglacier_damage = atta_num * .2
                                                                     rune_of_cinderglacier_active_count += 1
                                                                     rotation.append("Rune of Cinderglacier")
                                                                     rotation_time.append(current_time)
                                                                     rotation_status.append("Active")
                                                                     rotation_damage.append(atta_num * .2)
                                                                     if rune_of_cinderglacier_active_count == 2:
                                                                         rune_of_cinderglacier_active = False
                                                                rotation.append("Sudden Doom")
                                                                rotation_time.append(current_time)
                                                                rotation_status.append("Hit")
                                                                rotation_damage.append(atta_num)
                                                        if hit == False:
                                                            rotation.append("Sudden Doom")
                                                            rotation_time.append(current_time)
                                                            rotation_status.append("Miss")
                                                            rotation_damage.append(0)
                                    
                                    
                                        
                                    if threat_of_thassarian_points != 0:    #Off Hand Blood Strike
                                        if H2 == False:
                                            threat_of_thass_roll = (threat_of_thassarian_points * 30) 
                                            if threat_of_thassarian_points == 3: 
                                                threat_of_thass_roll += 10 
                                            threat_of_t_num = random.randint(0, 100) 
                                            if threat_of_thass_roll >= threat_of_t_num: 
                                                oh_wep_roll = weapon_roll(oh_input_lowend_weapon_damage,oh_input_topend_weapon_damage)
                                                oh_wep_roll = wep_roll + (attack_damage_normalization * current_ap / 14)
                                                oh_attack_table_results = attack_table(1, tanking, H2, False, True, hit_from_gear, hit_from_other, target_level, all_expertise_dodge, all_expertise_parry, total_crit, (annihilation_talent_points / 100) + increased_phy_crit + ((subversion_points * 3) / 100))
                                                if oh_attack_table_results == 0:
                                                    atta_num = 0
                                                    rotation.append("OH - Blood Strike")
                                                    rotation_time.append(current_time)
                                                    rotation_status.append("Miss")
                                                    rotation_damage.append(atta_num)
                                                elif oh_attack_table_results == 1:
                                                    atta_num = 0
                                                    rotation.append("OH - Blood Strike")
                                                    rotation_time.append(current_time)
                                                    rotation_status.append("Dodge")
                                                    rotation_damage.append(atta_num)
                                                elif oh_attack_table_results == 5:
                                                    #crit attack
                                                    atta_num = (((746 + (oh_wep_roll * .4)) + (( 746 + (oh_wep_roll * .4)) * (.125 * how_many_dots_on_target)) + (( 746 + (oh_wep_roll * .4)) * (.125 * how_many_dots_on_target) * darkruned_battlegear_four_set )) - (((746 + (oh_wep_roll * .4)) + (( 746 + (oh_wep_roll * .4)) * (.125 * how_many_dots_on_target)) + (( 746 + (oh_wep_roll * .4)) * (.125 * how_many_dots_on_target) * darkruned_battlegear_four_set )) * armor_red_amount))  * (var_crit_amount + (guile_of_gorefiend_points * .15))
                                                    if dk_presence == 0:
                                                        atta_num = atta_num + (atta_num * .15)
                                                    if tundra_stalker_points != 0:
                                                        if dots[0] > current_time:
                                                            atta_num = atta_num + (atta_num * (tundra_stalker_points * .03))
                                                    if blood_of_the_north_points != 0:
                                                        if blood_of_the_north_points < 3:
                                                            atta_num = atta_num + (atta_num * (blood_of_the_north_points * .03))
                                                        elif blood_of_the_north_points == 3:
                                                            atta_num = atta_num + (atta_num * .1)
                                                    if t9_tank_two_set == True:
                                                        atta_num = atta_num + (atta_num *.05)
                                                    if rage_of_rivendale_points != 0:
                                                        if dots[1] > current_time:
                                                            atta_num += atta_num * ((rage_of_rivendale_points * 2) / 100)
                                                    if blood_strikes_points != 0:
                                                        atta_num = atta_num + ((blood_strikes_points * 5) / 100)
                                                    if might_of_mograine_points != 0:
                                                        atta_num += atta_num * ((might_of_mograine_points * 15) / 100)
                                                    atta_num = atta_num * oh_wep_damage_mod
                                                    if hysteria_active == True:
                                                        atta_num = atta_num + (atta_num * .2)
                                                    if tricksoftt_active == True:
                                                        atta_num = atta_num + (atta_num * .15)
                                                    atta_num = atta_num + (atta_num * increased_physical_damage) + (atta_num * increased_all_damage)
                                                    sum_oh_bs_attacks += atta_num
                                                    trinket_hit_crit_tracker = 2
                                                    if blood_of_the_north_points != 0:
                                                        if just_used_death_rune != True:
                                                            proc_num = random.randint(0, 100)
                                                            if blood_of_the_north_points < 3:
                                                                death_proc_chance = (blood_of_the_north_points * .3) * 100
                                                            elif blood_of_the_north_points == 3:
                                                                death_proc_chance = 100
                                                            if death_proc_chance >= proc_num:
                                                                death_castable = castable + death
                                                                rune_cd_tracker[death_castable] = rune_cd(haste_rune_cd, current_time)
                                                                rune_cd_tracker[castable] = 10000  
                                                    if reaping_points != 0:
                                                        if just_used_death_rune != True:
                                                            proc_num = random.randint(0, 100)
                                                            if reaping_points < 3:
                                                                death_proc_chance = (reaping_points * .3) * 100
                                                            elif reaping_points == 3:
                                                                death_proc_chance = 100
                                                            if death_proc_chance >= proc_num:
                                                                death_castable = castable + death
                                                                rune_cd_tracker[death_castable] = rune_cd(haste_rune_cd, current_time)
                                                                rune_cd_tracker[castable] = 10000 
                                                    if sigil_of_haunted_dreams == True:
                                                        if random.randint(0, 100) < 15:
                                                            if sigil_of_haunted_dreams_buff == False:
                                                                sigil_of_haunted_dreams_buff = True
                                                                sigil_of_haunted_dreams_timer = current_time + 10  
                                                                total_crit = total_crit + ((173 / 45.8) / 100)
                                                    if t9_dps_two_set == True:
                                                        if t9_bonus == False:
                                                            if t9_cd_timer < current_time:
                                                                if (random.randint(0, 10000)/100) < 50:
                                                                    t9_bonus = True
                                                                    t9_cd_timer = current_time + 45
                                                                    t9_active_timer = current_time + 15
                                                                    bonus_loop_str += 180
                                                                    rotation.append("T9 DPS 2p Bonus")
                                                                    rotation_time.append(current_time)
                                                                    rotation_damage.append(0)
                                                                    rotation_status.append("Proc")
                                                    if desolation_points != 0:
                                                        if desolation_buff == False:
                                                            increased_all_damage += (desolation_points / 100)
                                                            desolation_buff_timer = current_time + 20
                                                            rotation.append("Desolation")
                                                            rotation_time.append(current_time)
                                                            rotation_damage.append(0)
                                                            rotation_status.append("Applied")
                                                            desolation_buff = True
                                                        else:
                                                            desolation_buff_timer = current_time + 20
                                                            rotation.append("Desolation")
                                                            rotation_time.append(current_time)
                                                            rotation_damage.append(0)
                                                            rotation_status.append("Refresh")
                                                    if sudden_doom_points != 0:  #Sudden Doom aka Free Death Coil
                                                        if (random.randint(0, 10000)/100) < sudden_doom_points * 5:
                                                            hit = spell_hit(spell_hit_total, increased_spell_hit, target_level)
                                                            crit = spell_crit((total_crit + (darkruned_battlegear_two_set / 100)), spell_hit_total, increased_spell_hit, target_level, increased_spell_crit)
                                                            if hit == True:
                                                                if crit == True:
                                                                    atta_num = random.randint(443, 665)
                                                                    atta_num = (atta_num + ((current_ap + (current_ap * ((impurity_points * 4) / 100))) * 0)) * var_crit_amount
                                                                    if sigil_of_vengeful_heart == True:
                                                                        atta_num + 380
                                                                    if sigil_of_the_wild_buck == True:
                                                                        atta_num += 80
                                                                    if black_ice_points == 5:
                                                                        atta_num = atta_num + (atta_num * .1)
                                                                    elif black_ice_points == 4:
                                                                        atta_num = atta_num + (atta_num * .08)
                                                                    elif black_ice_points == 3:
                                                                        atta_num = atta_num + (atta_num * .06)
                                                                    elif black_ice_points == 2:
                                                                        atta_num = atta_num + (atta_num * .04)
                                                                    elif black_ice_points == 1:
                                                                        atta_num = atta_num + (atta_num * .02)
                                                                    if dk_presence == 0:
                                                                        atta_num = atta_num + (atta_num * .15)
                                                                    if tundra_stalker_points != 0:
                                                                        if dots[0] > current_time:
                                                                            atta_num = atta_num + (atta_num * (tundra_stalker_points * .03))
                                                                    if glyph_death_coil == True:
                                                                        atta_num += atta_num * .15
                                                                    if rage_of_rivendale_points != 0:
                                                                        if dots[1] > current_time:
                                                                            atta_num += atta_num * ((rage_of_rivendale_points * 2) / 100)
                                                                    if morbitity_points != 0:
                                                                        atta_num += ((morbitity_points * 5) / 100)
                                                                    if hysteria_active == True:
                                                                        atta_num = atta_num + (atta_num * .2)
                                                                    if tricksoftt_active == True:
                                                                        atta_num = atta_num + (atta_num * .15)
                                                                    atta_num = atta_num + (atta_num * increased_spell_damage) + (atta_num * increased_all_damage)
                                                                    sudden_doom_damage += atta_num
                                                                    if unholy_blight_points == 1:
                                                                        unholy_blight_amount = atta_num / 10   
                                                                        unholy_blight_timer = current_time + 10
                                                                    if rune_of_cinderglacier_active == True:
                                                                         rune_of_cinderglacier_damage = atta_num * .2
                                                                         rune_of_cinderglacier_active_count += 1
                                                                         rotation.append("Rune of Cinderglacier")
                                                                         rotation_time.append(current_time)
                                                                         rotation_status.append("Active")
                                                                         rotation_damage.append(atta_num * .2)
                                                                         if rune_of_cinderglacier_active_count == 2:
                                                                             rune_of_cinderglacier_active = False
                                                                    rotation.append("Sudden Doom")
                                                                    rotation_time.append(current_time)
                                                                    rotation_status.append("Crit")
                                                                    rotation_damage.append(atta_num)
                                                                else:
                                                                    atta_num = random.randint(443, 665)
                                                                    atta_num = (atta_num + ((current_ap + (current_ap * ((impurity_points * 4) / 100))) * 0))
                                                                    if sigil_of_vengeful_heart == True:
                                                                        atta_num + 380
                                                                    if sigil_of_the_wild_buck == True:
                                                                        atta_num += 80
                                                                    if black_ice_points == 5:
                                                                        atta_num = atta_num + (atta_num * .1)
                                                                    elif black_ice_points == 4:
                                                                        atta_num = atta_num + (atta_num * .08)
                                                                    elif black_ice_points == 3:
                                                                        atta_num = atta_num + (atta_num * .06)
                                                                    elif black_ice_points == 2:
                                                                        atta_num = atta_num + (atta_num * .04)
                                                                    elif black_ice_points == 1:
                                                                        atta_num = atta_num + (atta_num * .02)
                                                                    if dk_presence == 0:
                                                                        atta_num = atta_num + (atta_num * .15)
                                                                    if tundra_stalker_points != 0:
                                                                        if dots[0] > current_time:
                                                                            atta_num = atta_num + (atta_num * (tundra_stalker_points * .03))
                                                                    if glyph_death_coil == True:
                                                                        atta_num += atta_num * .15
                                                                    if rage_of_rivendale_points != 0:
                                                                        if dots[1] > current_time:
                                                                            atta_num += atta_num * ((rage_of_rivendale_points * 2) / 100)
                                                                    if morbitity_points != 0:
                                                                        atta_num += ((morbitity_points * 5) / 100)
                                                                    if hysteria_active == True:
                                                                        atta_num = atta_num + (atta_num * .2)
                                                                    if tricksoftt_active == True:
                                                                        atta_num = atta_num + (atta_num * .15)
                                                                    atta_num = atta_num + (atta_num * increased_spell_damage) + (atta_num * increased_all_damage)
                                                                    sudden_doom_damage += atta_num
                                                                    if unholy_blight_points == 1:
                                                                        unholy_blight_amount = atta_num / 10 
                                                                        unholy_blight_timer = current_time + 10
                                                                    if rune_of_cinderglacier_active == True:
                                                                         rune_of_cinderglacier_damage = atta_num * .2
                                                                         rune_of_cinderglacier_active_count += 1
                                                                         rotation.append("Rune of Cinderglacier")
                                                                         rotation_time.append(current_time)
                                                                         rotation_status.append("Active")
                                                                         rotation_damage.append(atta_num * .2)
                                                                         if rune_of_cinderglacier_active_count == 2:
                                                                             rune_of_cinderglacier_active = False
                                                                    rotation.append("Sudden Doom")
                                                                    rotation_time.append(current_time)
                                                                    rotation_status.append("Hit")
                                                                    rotation_damage.append(atta_num)
                                                            if hit == False:
                                                                rotation.append("Sudden Doom")
                                                                rotation_time.append(current_time)
                                                                rotation_status.append("Miss")
                                                                rotation_damage.append(0)
                                                    rotation.append("OH - Blood Strike")
                                                    rotation_time.append(current_time)
                                                    rotation_status.append("Crit")
                                                    rotation_damage.append(atta_num)
                                                elif oh_attack_table_results == 7:
                                                    #normal attack
                                                    atta_num = ((746 + (oh_wep_roll * .4)) + (( 746 + (oh_wep_roll * .4)) * (.125 * how_many_dots_on_target)) + (( 746 + (oh_wep_roll * .4)) * (.125 * how_many_dots_on_target) * darkruned_battlegear_four_set )) - (((746 + (oh_wep_roll * .4)) + (( 746 + (oh_wep_roll * .4)) * (.125 * how_many_dots_on_target)) + (( 746 + (oh_wep_roll * .4)) * (.125 * how_many_dots_on_target) * darkruned_battlegear_four_set )) * armor_red_amount)
                                                    if dk_presence == 0:
                                                        atta_num = atta_num + (atta_num * .15)
                                                    if tundra_stalker_points != 0:
                                                        if dots[0] > current_time:
                                                            atta_num = atta_num + (atta_num * (tundra_stalker_points * .03))
                                                    if blood_of_the_north_points != 0:
                                                        if blood_of_the_north_points < 3:
                                                            atta_num = atta_num + (atta_num * (blood_of_the_north_points * .03))
                                                        elif blood_of_the_north_points == 3:
                                                            atta_num = atta_num + (atta_num * .1)
                                                    if t9_tank_two_set == True:
                                                        atta_num = atta_num + (atta_num *.05)
                                                    if rage_of_rivendale_points != 0:
                                                        if dots[1] > current_time:
                                                            atta_num += atta_num * ((rage_of_rivendale_points * 2) / 100)
                                                    if blood_strikes_points != 0:
                                                        atta_num = atta_num + ((blood_strikes_points * 5) / 100)
                                                    atta_num = atta_num * oh_wep_damage_mod
                                                    if hysteria_active == True:
                                                        atta_num = atta_num + (atta_num * .2)
                                                    if tricksoftt_active == True:
                                                        atta_num = atta_num + (atta_num * .15)
                                                    atta_num = atta_num + (atta_num * increased_physical_damage) + (atta_num * increased_all_damage)
                                                    sum_oh_bs_attacks += atta_num
                                                    trinket_hit_crit_tracker = 1
                                                    if blood_of_the_north_points != 0:
                                                        if just_used_death_rune != True:
                                                            proc_num = random.randint(0, 100)
                                                            if blood_of_the_north_points < 3:
                                                                death_proc_chance = (blood_of_the_north_points * .3) * 100
                                                            elif blood_of_the_north_points == 3:
                                                                death_proc_chance = 100
                                                            if death_proc_chance >= proc_num:
                                                                death_castable = castable + death
                                                                rune_cd_tracker[death_castable] = rune_cd(haste_rune_cd, current_time)
                                                                rune_cd_tracker[castable] = 10000  
                                                    if reaping_points != 0:
                                                        if just_used_death_rune != True:
                                                            proc_num = random.randint(0, 100)
                                                            if reaping_points < 3:
                                                                death_proc_chance = (reaping_points * .3) * 100
                                                            elif reaping_points == 3:
                                                                death_proc_chance = 100
                                                            if death_proc_chance >= proc_num:
                                                                death_castable = castable + death
                                                                rune_cd_tracker[death_castable] = rune_cd(haste_rune_cd, current_time)
                                                                rune_cd_tracker[castable] = 10000 
                                                    if sigil_of_haunted_dreams == True:
                                                        if random.randint(0, 100) < 15:
                                                            if sigil_of_haunted_dreams_buff == False:
                                                                sigil_of_haunted_dreams_buff = True
                                                                sigil_of_haunted_dreams_timer = current_time + 10  
                                                                total_crit = total_crit + ((173 / 45.8) / 100) 
                                                    if t9_dps_two_set == True:
                                                        if t9_bonus == False:
                                                            if t9_cd_timer < current_time:
                                                                if (random.randint(0, 10000)/100) < 50:
                                                                    t9_bonus = True
                                                                    t9_cd_timer = current_time + 45
                                                                    t9_active_timer = current_time + 15
                                                                    bonus_loop_str += 180
                                                                    rotation.append("T9 DPS 2p Bonus")
                                                                    rotation_time.append(current_time)
                                                                    rotation_damage.append(0)
                                                                    rotation_status.append("Proc")
                                                    if desolation_points != 0:
                                                        if desolation_buff == False:
                                                            increased_all_damage += (desolation_points / 100)
                                                            desolation_buff_timer = current_time + 20
                                                            rotation.append("Desolation")
                                                            rotation_time.append(current_time)
                                                            rotation_damage.append(0)
                                                            rotation_status.append("Applied")
                                                            desolation_buff = True
                                                        else:
                                                            desolation_buff_timer = current_time + 20
                                                            rotation.append("Desolation")
                                                            rotation_time.append(current_time)
                                                            rotation_damage.append(0)
                                                            rotation_status.append("Refresh")
                                                    if sudden_doom_points != 0:  #Sudden Doom aka Free Death Coil
                                                        if (random.randint(0, 10000)/100) < sudden_doom_points * 5:
                                                            hit = spell_hit(spell_hit_total, increased_spell_hit, target_level)
                                                            crit = spell_crit((total_crit + (darkruned_battlegear_two_set / 100)), spell_hit_total, increased_spell_hit, target_level, increased_spell_crit)
                                                            if hit == True:
                                                                if crit == True:
                                                                    atta_num = random.randint(443, 665)
                                                                    atta_num = (atta_num + ((current_ap + (current_ap * ((impurity_points * 4) / 100))) * 0)) * var_crit_amount
                                                                    if sigil_of_vengeful_heart == True:
                                                                        atta_num + 380
                                                                    if sigil_of_the_wild_buck == True:
                                                                        atta_num += 80
                                                                    if black_ice_points == 5:
                                                                        atta_num = atta_num + (atta_num * .1)
                                                                    elif black_ice_points == 4:
                                                                        atta_num = atta_num + (atta_num * .08)
                                                                    elif black_ice_points == 3:
                                                                        atta_num = atta_num + (atta_num * .06)
                                                                    elif black_ice_points == 2:
                                                                        atta_num = atta_num + (atta_num * .04)
                                                                    elif black_ice_points == 1:
                                                                        atta_num = atta_num + (atta_num * .02)
                                                                    if dk_presence == 0:
                                                                        atta_num = atta_num + (atta_num * .15)
                                                                    if tundra_stalker_points != 0:
                                                                        if dots[0] > current_time:
                                                                            atta_num = atta_num + (atta_num * (tundra_stalker_points * .03))
                                                                    if glyph_death_coil == True:
                                                                        atta_num += atta_num * .15
                                                                    if rage_of_rivendale_points != 0:
                                                                        if dots[1] > current_time:
                                                                            atta_num += atta_num * ((rage_of_rivendale_points * 2) / 100)
                                                                    if morbitity_points != 0:
                                                                        atta_num += ((morbitity_points * 5) / 100)
                                                                    if hysteria_active == True:
                                                                        atta_num = atta_num + (atta_num * .2)
                                                                    if tricksoftt_active == True:
                                                                        atta_num = atta_num + (atta_num * .15)
                                                                    atta_num = atta_num + (atta_num * increased_spell_damage) + (atta_num * increased_all_damage)
                                                                    sudden_doom_damage += atta_num
                                                                    if unholy_blight_points == 1:
                                                                        unholy_blight_amount = atta_num / 10   
                                                                        unholy_blight_timer = current_time + 10
                                                                    if rune_of_cinderglacier_active == True:
                                                                         rune_of_cinderglacier_damage = atta_num * .2
                                                                         rune_of_cinderglacier_active_count += 1
                                                                         rotation.append("Rune of Cinderglacier")
                                                                         rotation_time.append(current_time)
                                                                         rotation_status.append("Active")
                                                                         rotation_damage.append(atta_num * .2)
                                                                         if rune_of_cinderglacier_active_count == 2:
                                                                             rune_of_cinderglacier_active = False
                                                                    rotation.append("Sudden Doom")
                                                                    rotation_time.append(current_time)
                                                                    rotation_status.append("Crit")
                                                                    rotation_damage.append(atta_num)
                                                                else:
                                                                    atta_num = random.randint(443, 665)
                                                                    atta_num = (atta_num + ((current_ap + (current_ap * ((impurity_points * 4) / 100))) * 0))
                                                                    if sigil_of_vengeful_heart == True:
                                                                        atta_num + 380
                                                                    if sigil_of_the_wild_buck == True:
                                                                        atta_num += 80
                                                                    if black_ice_points == 5:
                                                                        atta_num = atta_num + (atta_num * .1)
                                                                    elif black_ice_points == 4:
                                                                        atta_num = atta_num + (atta_num * .08)
                                                                    elif black_ice_points == 3:
                                                                        atta_num = atta_num + (atta_num * .06)
                                                                    elif black_ice_points == 2:
                                                                        atta_num = atta_num + (atta_num * .04)
                                                                    elif black_ice_points == 1:
                                                                        atta_num = atta_num + (atta_num * .02)
                                                                    if dk_presence == 0:
                                                                        atta_num = atta_num + (atta_num * .15)
                                                                    if tundra_stalker_points != 0:
                                                                        if dots[0] > current_time:
                                                                            atta_num = atta_num + (atta_num * (tundra_stalker_points * .03))
                                                                    if glyph_death_coil == True:
                                                                        atta_num += atta_num * .15
                                                                    if rage_of_rivendale_points != 0:
                                                                        if dots[1] > current_time:
                                                                            atta_num += atta_num * ((rage_of_rivendale_points * 2) / 100)
                                                                    if morbitity_points != 0:
                                                                        atta_num += ((morbitity_points * 5) / 100)
                                                                    if hysteria_active == True:
                                                                        atta_num = atta_num + (atta_num * .2)
                                                                    if tricksoftt_active == True:
                                                                        atta_num = atta_num + (atta_num * .15)
                                                                    atta_num = atta_num + (atta_num * increased_spell_damage) + (atta_num * increased_all_damage)
                                                                    sudden_doom_damage += atta_num
                                                                    if unholy_blight_points == 1:
                                                                        unholy_blight_amount = atta_num / 10 
                                                                        unholy_blight_timer = current_time + 10
                                                                    if rune_of_cinderglacier_active == True:
                                                                         rune_of_cinderglacier_damage = atta_num * .2
                                                                         rune_of_cinderglacier_active_count += 1
                                                                         rotation.append("Rune of Cinderglacier")
                                                                         rotation_time.append(current_time)
                                                                         rotation_status.append("Active")
                                                                         rotation_damage.append(atta_num * .2)
                                                                         if rune_of_cinderglacier_active_count == 2:
                                                                             rune_of_cinderglacier_active = False
                                                                    rotation.append("Sudden Doom")
                                                                    rotation_time.append(current_time)
                                                                    rotation_status.append("Hit")
                                                                    rotation_damage.append(atta_num)
                                                            if hit == False:
                                                                rotation.append("Sudden Doom")
                                                                rotation_time.append(current_time)
                                                                rotation_status.append("Miss")
                                                                rotation_damage.append(0)
                                                    rotation.append("OH - Blood Strike")
                                                    rotation_time.append(current_time)
                                                    rotation_status.append("Hit")
                                                    rotation_damage.append(atta_num)

                                    
                                    
                                    if attack_table_results == 0:
                                        atta_num = 0
                                        rune_cd_tracker[castable] = rune_cd(haste_rune_cd_miss, current_time)
                                        rotation.append("Blood Strike")
                                        rotation_time.append(current_time)
                                        rotation_status.append("Miss")
                                        rotation_damage.append(atta_num)
                                        current_time = current_time + gcd
                                        used_gcd = True
                                        continue
                                    elif attack_table_results == 1:
                                        atta_num = 0
                                        rune_cd_tracker[castable] = rune_cd(haste_rune_cd_miss, current_time)
                                        rotation.append("Blood Strike")
                                        rotation_time.append(current_time)
                                        rotation_status.append("Dodge")
                                        rotation_damage.append(atta_num)
                                        current_time = current_time + gcd
                                        used_gcd = True
                                        continue
                                    elif attack_table_results == 5:
                                        #crit attack
                                        rune_cd_tracker[castable] = rune_cd(haste_rune_cd, current_time)
                                        atta_num = (((746 + (wep_roll * .4)) + (( 746 + (wep_roll * .4)) * (.125 * how_many_dots_on_target)) + (( 746 + (wep_roll * .4)) * (.125 * how_many_dots_on_target) * darkruned_battlegear_four_set )) - (((746 + (wep_roll * .4)) + (( 746 + (wep_roll * .4)) * (.125 * how_many_dots_on_target)) + (( 746 + (wep_roll * .4)) * (.125 * how_many_dots_on_target) * darkruned_battlegear_four_set )) * armor_red_amount))  * (var_crit_amount + (guile_of_gorefiend_points * .15))
                                        if dk_presence == 0:
                                            atta_num = atta_num + (atta_num * .15)
                                        if tundra_stalker_points != 0:
                                            if dots[0] > current_time:
                                                atta_num = atta_num + (atta_num * (tundra_stalker_points * .03))
                                        if blood_of_the_north_points != 0:
                                            if blood_of_the_north_points < 3:
                                                atta_num = atta_num + (atta_num * (blood_of_the_north_points * .03))
                                            elif blood_of_the_north_points == 3:
                                                atta_num = atta_num + (atta_num * .1)
                                        if t9_tank_two_set == True:
                                            atta_num = atta_num + (atta_num *.05)
                                        if rage_of_rivendale_points != 0:
                                            if dots[1] > current_time:
                                                atta_num += atta_num * ((rage_of_rivendale_points * 2) / 100)
                                        if blood_strikes_points != 0:
                                            atta_num = atta_num + ((blood_strikes_points * 5) / 100)
                                        if might_of_mograine_points != 0:
                                            atta_num += atta_num * ((might_of_mograine_points * 15) / 100)
                                        if hysteria_active == True:
                                            atta_num = atta_num + (atta_num * .2)
                                        if tricksoftt_active == True:
                                            atta_num = atta_num + (atta_num * .15)
                                        atta_num = atta_num + (atta_num * increased_physical_damage) + (atta_num * increased_all_damage)
                                        sum_bs_attacks += atta_num
                                        current_power = runic_power(10, current_power, max_runic)
                                        trinket_hit_crit_tracker = 2
                                        if blood_of_the_north_points != 0:
                                            if just_used_death_rune != True:
                                                proc_num = random.randint(0, 100)
                                                if blood_of_the_north_points < 3:
                                                    death_proc_chance = (blood_of_the_north_points * .3) * 100
                                                elif blood_of_the_north_points == 3:
                                                    death_proc_chance = 100
                                                if death_proc_chance >= proc_num:
                                                    death_castable = castable + death
                                                    rune_cd_tracker[death_castable] = rune_cd(haste_rune_cd, current_time)
                                                    rune_cd_tracker[castable] = 10000  
                                        if reaping_points != 0:
                                            if just_used_death_rune != True:
                                                proc_num = random.randint(0, 100)
                                                if reaping_points < 3:
                                                    death_proc_chance = (reaping_points * .3) * 100
                                                elif reaping_points == 3:
                                                    death_proc_chance = 100
                                                if death_proc_chance >= proc_num:
                                                    death_castable = castable + death
                                                    rune_cd_tracker[death_castable] = rune_cd(haste_rune_cd, current_time)
                                                    rune_cd_tracker[castable] = 10000 
                                        if sigil_of_haunted_dreams == True:
                                            if random.randint(0, 100) < 15:
                                                if sigil_of_haunted_dreams_buff == False:
                                                    sigil_of_haunted_dreams_buff = True
                                                    sigil_of_haunted_dreams_timer = current_time + 10  
                                                    total_crit = total_crit + ((173 / 45.8) / 100) 
                                        if t9_dps_two_set == True:
                                            if t9_bonus == False:
                                                if t9_cd_timer < current_time:
                                                    if (random.randint(0, 10000)/100) < 50:
                                                        t9_bonus = True
                                                        t9_cd_timer = current_time + 45
                                                        t9_active_timer = current_time + 15
                                                        bonus_loop_str += 180
                                                        rotation.append("T9 DPS 2p Bonus")
                                                        rotation_time.append(current_time)
                                                        rotation_damage.append(0)
                                                        rotation_status.append("Proc")
                                        if desolation_points != 0:
                                            if desolation_buff == False:
                                                increased_all_damage += (desolation_points / 100)
                                                desolation_buff_timer = current_time + 20
                                                rotation.append("Desolation")
                                                rotation_time.append(current_time)
                                                rotation_damage.append(0)
                                                rotation_status.append("Applied")
                                                desolation_buff = True
                                            else:
                                                desolation_buff_timer = current_time + 20
                                                rotation.append("Desolation")
                                                rotation_time.append(current_time)
                                                rotation_damage.append(0)
                                                rotation_status.append("Refresh")
                                        if sudden_doom_points != 0:  #Sudden Doom aka Free Death Coil
                                            if (random.randint(0, 10000)/100) < sudden_doom_points * 5:
                                                hit = spell_hit(spell_hit_total, increased_spell_hit, target_level)
                                                crit = spell_crit((total_crit + (darkruned_battlegear_two_set / 100)), spell_hit_total, increased_spell_hit, target_level, increased_spell_crit)
                                                if hit == True:
                                                    if crit == True:
                                                        atta_num = random.randint(443, 665)
                                                        atta_num = (atta_num + ((current_ap + (current_ap * ((impurity_points * 4) / 100))) * 0)) * var_crit_amount
                                                        if sigil_of_vengeful_heart == True:
                                                            atta_num + 380
                                                        if sigil_of_the_wild_buck == True:
                                                            atta_num += 80
                                                        if black_ice_points == 5:
                                                            atta_num = atta_num + (atta_num * .1)
                                                        elif black_ice_points == 4:
                                                            atta_num = atta_num + (atta_num * .08)
                                                        elif black_ice_points == 3:
                                                            atta_num = atta_num + (atta_num * .06)
                                                        elif black_ice_points == 2:
                                                            atta_num = atta_num + (atta_num * .04)
                                                        elif black_ice_points == 1:
                                                            atta_num = atta_num + (atta_num * .02)
                                                        if dk_presence == 0:
                                                            atta_num = atta_num + (atta_num * .15)
                                                        if tundra_stalker_points != 0:
                                                            if dots[0] > current_time:
                                                                atta_num = atta_num + (atta_num * (tundra_stalker_points * .03))
                                                        if glyph_death_coil == True:
                                                            atta_num += atta_num * .15
                                                        if rage_of_rivendale_points != 0:
                                                            if dots[1] > current_time:
                                                                atta_num += atta_num * ((rage_of_rivendale_points * 2) / 100)
                                                        if morbitity_points != 0:
                                                            atta_num += ((morbitity_points * 5) / 100)
                                                        if hysteria_active == True:
                                                            atta_num = atta_num + (atta_num * .2)
                                                        if tricksoftt_active == True:
                                                            atta_num = atta_num + (atta_num * .15)
                                                        atta_num = atta_num + (atta_num * increased_spell_damage) + (atta_num * increased_all_damage)
                                                        sudden_doom_damage += atta_num
                                                        if unholy_blight_points == 1:
                                                            unholy_blight_amount = atta_num / 10   
                                                            unholy_blight_timer = current_time + 10
                                                        if rune_of_cinderglacier_active == True:
                                                             rune_of_cinderglacier_damage = atta_num * .2
                                                             rune_of_cinderglacier_active_count += 1
                                                             rotation.append("Rune of Cinderglacier")
                                                             rotation_time.append(current_time)
                                                             rotation_status.append("Active")
                                                             rotation_damage.append(atta_num * .2)
                                                             if rune_of_cinderglacier_active_count == 2:
                                                                 rune_of_cinderglacier_active = False
                                                        rotation.append("Sudden Doom")
                                                        rotation_time.append(current_time)
                                                        rotation_status.append("Crit")
                                                        rotation_damage.append(atta_num)
                                                    else:
                                                        atta_num = random.randint(443, 665)
                                                        atta_num = (atta_num + ((current_ap + (current_ap * ((impurity_points * 4) / 100))) * 0))
                                                        if sigil_of_vengeful_heart == True:
                                                            atta_num + 380
                                                        if sigil_of_the_wild_buck == True:
                                                            atta_num += 80
                                                        if black_ice_points == 5:
                                                            atta_num = atta_num + (atta_num * .1)
                                                        elif black_ice_points == 4:
                                                            atta_num = atta_num + (atta_num * .08)
                                                        elif black_ice_points == 3:
                                                            atta_num = atta_num + (atta_num * .06)
                                                        elif black_ice_points == 2:
                                                            atta_num = atta_num + (atta_num * .04)
                                                        elif black_ice_points == 1:
                                                            atta_num = atta_num + (atta_num * .02)
                                                        if dk_presence == 0:
                                                            atta_num = atta_num + (atta_num * .15)
                                                        if tundra_stalker_points != 0:
                                                            if dots[0] > current_time:
                                                                atta_num = atta_num + (atta_num * (tundra_stalker_points * .03))
                                                        if glyph_death_coil == True:
                                                            atta_num += atta_num * .15
                                                        if rage_of_rivendale_points != 0:
                                                            if dots[1] > current_time:
                                                                atta_num += atta_num * ((rage_of_rivendale_points * 2) / 100)
                                                        if morbitity_points != 0:
                                                            atta_num += ((morbitity_points * 5) / 100)
                                                        if hysteria_active == True:
                                                            atta_num = atta_num + (atta_num * .2)
                                                        if tricksoftt_active == True:
                                                            atta_num = atta_num + (atta_num * .15)
                                                        atta_num = atta_num + (atta_num * increased_spell_damage) + (atta_num * increased_all_damage)
                                                        sudden_doom_damage += atta_num
                                                        if unholy_blight_points == 1:
                                                            unholy_blight_amount = atta_num / 10 
                                                            unholy_blight_timer = current_time + 10
                                                        if rune_of_cinderglacier_active == True:
                                                             rune_of_cinderglacier_damage = atta_num * .2
                                                             rune_of_cinderglacier_active_count += 1
                                                             rotation.append("Rune of Cinderglacier")
                                                             rotation_time.append(current_time)
                                                             rotation_status.append("Active")
                                                             rotation_damage.append(atta_num * .2)
                                                             if rune_of_cinderglacier_active_count == 2:
                                                                 rune_of_cinderglacier_active = False
                                                        rotation.append("Sudden Doom")
                                                        rotation_time.append(current_time)
                                                        rotation_status.append("Hit")
                                                        rotation_damage.append(atta_num)
                                                if hit == False:
                                                    rotation.append("Sudden Doom")
                                                    rotation_time.append(current_time)
                                                    rotation_status.append("Miss")
                                                    rotation_damage.append(0)
                                        rotation.append("Blood Strike")
                                        rotation_time.append(current_time)
                                        rotation_status.append("Crit")
                                        rotation_damage.append(atta_num)
                                        current_time += gcd
                                        used_gcd = True
                                        # print("Blood Strike Crit - " + str(atta_num))
                                        continue
                                    elif attack_table_results == 7:
                                        #normal attack
                                        rune_cd_tracker[castable] = rune_cd(haste_rune_cd, current_time)
                                        atta_num = ((746 + (wep_roll * .4)) + (( 746 + (wep_roll * .4)) * (.125 * how_many_dots_on_target)) + (( 746 + (wep_roll * .4)) * (.125 * how_many_dots_on_target) * darkruned_battlegear_four_set )) - (((746 + (wep_roll * .4)) + (( 746 + (wep_roll * .4)) * (.125 * how_many_dots_on_target)) + (( 746 + (wep_roll * .4)) * (.125 * how_many_dots_on_target) * darkruned_battlegear_four_set )) * armor_red_amount)
                                        if dk_presence == 0:
                                            atta_num = atta_num + (atta_num * .15)
                                        if tundra_stalker_points != 0:
                                            if dots[0] > current_time:
                                                atta_num = atta_num + (atta_num * (tundra_stalker_points * .03))
                                        if blood_of_the_north_points != 0:
                                            if blood_of_the_north_points < 3:
                                                atta_num = atta_num + (atta_num * (blood_of_the_north_points * .03))
                                            elif blood_of_the_north_points == 3:
                                                atta_num = atta_num + (atta_num * .1)
                                        if t9_tank_two_set == True:
                                            atta_num = atta_num + (atta_num *.05)
                                        if rage_of_rivendale_points != 0:
                                            if dots[1] > current_time:
                                                atta_num += atta_num * ((rage_of_rivendale_points * 2) / 100)
                                        if blood_strikes_points != 0:
                                            atta_num = atta_num + ((blood_strikes_points * 5) / 100)
                                        if hysteria_active == True:
                                            atta_num = atta_num + (atta_num * .2)
                                        if tricksoftt_active == True:
                                            atta_num = atta_num + (atta_num * .15)
                                        atta_num = atta_num + (atta_num * increased_physical_damage) + (atta_num * increased_all_damage)
                                        sum_bs_attacks += atta_num
                                        current_power = runic_power(10, current_power, max_runic)
                                        trinket_hit_crit_tracker = 1
                                        if blood_of_the_north_points != 0:
                                            if just_used_death_rune != True:
                                                proc_num = random.randint(0, 100)
                                                if blood_of_the_north_points < 3:
                                                    death_proc_chance = (blood_of_the_north_points * .3) * 100
                                                elif blood_of_the_north_points == 3:
                                                    death_proc_chance = 100
                                                if death_proc_chance >= proc_num:
                                                    death_castable = castable + death
                                                    rune_cd_tracker[death_castable] = rune_cd(haste_rune_cd, current_time)
                                                    rune_cd_tracker[castable] = 10000  
                                        if reaping_points != 0:
                                            if just_used_death_rune != True:
                                                proc_num = random.randint(0, 100)
                                                if reaping_points < 3:
                                                    death_proc_chance = (reaping_points * .3) * 100
                                                elif reaping_points == 3:
                                                    death_proc_chance = 100
                                                if death_proc_chance >= proc_num:
                                                    death_castable = castable + death
                                                    rune_cd_tracker[death_castable] = rune_cd(haste_rune_cd, current_time)
                                                    rune_cd_tracker[castable] = 10000 
                                        if sigil_of_haunted_dreams == True:
                                            if random.randint(0, 100) < 15:
                                                if sigil_of_haunted_dreams_buff == False:
                                                    sigil_of_haunted_dreams_buff = True
                                                    sigil_of_haunted_dreams_timer = current_time + 10  
                                                    total_crit = total_crit + ((173 / 45.8) / 100) 
                                        if t9_dps_two_set == True:
                                            if t9_bonus == False:
                                                if t9_cd_timer < current_time:
                                                    if (random.randint(0, 10000)/100) < 50:
                                                        t9_bonus = True
                                                        t9_cd_timer = current_time + 45
                                                        t9_active_timer = current_time + 15
                                                        bonus_loop_str += 180
                                                        rotation.append("T9 DPS 2p Bonus")
                                                        rotation_time.append(current_time)
                                                        rotation_damage.append(0)
                                                        rotation_status.append("Proc")
                                        if desolation_points != 0:
                                            if desolation_buff == False:
                                                increased_all_damage += (desolation_points / 100)
                                                desolation_buff_timer = current_time + 20
                                                rotation.append("Desolation")
                                                rotation_time.append(current_time)
                                                rotation_damage.append(0)
                                                rotation_status.append("Applied")
                                                desolation_buff = True
                                            else:
                                                desolation_buff_timer = current_time + 20
                                                rotation.append("Desolation")
                                                rotation_time.append(current_time)
                                                rotation_damage.append(0)
                                                rotation_status.append("Refresh")
                                        if sudden_doom_points != 0:  #Sudden Doom aka Free Death Coil
                                            if (random.randint(0, 10000)/100) < sudden_doom_points * 5:
                                                hit = spell_hit(spell_hit_total, increased_spell_hit, target_level)
                                                crit = spell_crit((total_crit + (darkruned_battlegear_two_set / 100)), spell_hit_total, increased_spell_hit, target_level, increased_spell_crit)
                                                if hit == True:
                                                    if crit == True:
                                                        atta_num = random.randint(443, 665)
                                                        atta_num = (atta_num + ((current_ap + (current_ap * ((impurity_points * 4) / 100))) * 0)) * var_crit_amount
                                                        if sigil_of_vengeful_heart == True:
                                                            atta_num + 380
                                                        if sigil_of_the_wild_buck == True:
                                                            atta_num += 80
                                                        if black_ice_points == 5:
                                                            atta_num = atta_num + (atta_num * .1)
                                                        elif black_ice_points == 4:
                                                            atta_num = atta_num + (atta_num * .08)
                                                        elif black_ice_points == 3:
                                                            atta_num = atta_num + (atta_num * .06)
                                                        elif black_ice_points == 2:
                                                            atta_num = atta_num + (atta_num * .04)
                                                        elif black_ice_points == 1:
                                                            atta_num = atta_num + (atta_num * .02)
                                                        if dk_presence == 0:
                                                            atta_num = atta_num + (atta_num * .15)
                                                        if tundra_stalker_points != 0:
                                                            if dots[0] > current_time:
                                                                atta_num = atta_num + (atta_num * (tundra_stalker_points * .03))
                                                        if glyph_death_coil == True:
                                                            atta_num += atta_num * .15
                                                        if rage_of_rivendale_points != 0:
                                                            if dots[1] > current_time:
                                                                atta_num += atta_num * ((rage_of_rivendale_points * 2) / 100)
                                                        if morbitity_points != 0:
                                                            atta_num += ((morbitity_points * 5) / 100)
                                                        if hysteria_active == True:
                                                            atta_num = atta_num + (atta_num * .2)
                                                        if tricksoftt_active == True:
                                                            atta_num = atta_num + (atta_num * .15)
                                                        atta_num = atta_num + (atta_num * increased_spell_damage) + (atta_num * increased_all_damage)
                                                        sudden_doom_damage += atta_num
                                                        if unholy_blight_points == 1:
                                                            unholy_blight_amount = atta_num / 10   
                                                            unholy_blight_timer = current_time + 10
                                                        if rune_of_cinderglacier_active == True:
                                                             rune_of_cinderglacier_damage = atta_num * .2
                                                             rune_of_cinderglacier_active_count += 1
                                                             rotation.append("Rune of Cinderglacier")
                                                             rotation_time.append(current_time)
                                                             rotation_status.append("Active")
                                                             rotation_damage.append(atta_num * .2)
                                                             if rune_of_cinderglacier_active_count == 2:
                                                                 rune_of_cinderglacier_active = False
                                                        rotation.append("Sudden Doom")
                                                        rotation_time.append(current_time)
                                                        rotation_status.append("Crit")
                                                        rotation_damage.append(atta_num)
                                                    else:
                                                        atta_num = random.randint(443, 665)
                                                        atta_num = (atta_num + ((current_ap + (current_ap * ((impurity_points * 4) / 100))) * 0))
                                                        if sigil_of_vengeful_heart == True:
                                                            atta_num + 380
                                                        if sigil_of_the_wild_buck == True:
                                                            atta_num += 80
                                                        if black_ice_points == 5:
                                                            atta_num = atta_num + (atta_num * .1)
                                                        elif black_ice_points == 4:
                                                            atta_num = atta_num + (atta_num * .08)
                                                        elif black_ice_points == 3:
                                                            atta_num = atta_num + (atta_num * .06)
                                                        elif black_ice_points == 2:
                                                            atta_num = atta_num + (atta_num * .04)
                                                        elif black_ice_points == 1:
                                                            atta_num = atta_num + (atta_num * .02)
                                                        if dk_presence == 0:
                                                            atta_num = atta_num + (atta_num * .15)
                                                        if tundra_stalker_points != 0:
                                                            if dots[0] > current_time:
                                                                atta_num = atta_num + (atta_num * (tundra_stalker_points * .03))
                                                        if glyph_death_coil == True:
                                                            atta_num += atta_num * .15
                                                        if rage_of_rivendale_points != 0:
                                                            if dots[1] > current_time:
                                                                atta_num += atta_num * ((rage_of_rivendale_points * 2) / 100)
                                                        if morbitity_points != 0:
                                                            atta_num += ((morbitity_points * 5) / 100)
                                                        if hysteria_active == True:
                                                            atta_num = atta_num + (atta_num * .2)
                                                        if tricksoftt_active == True:
                                                            atta_num = atta_num + (atta_num * .15)
                                                        atta_num = atta_num + (atta_num * increased_spell_damage) + (atta_num * increased_all_damage)
                                                        sudden_doom_damage += atta_num
                                                        if unholy_blight_points == 1:
                                                            unholy_blight_amount = atta_num / 10 
                                                            unholy_blight_timer = current_time + 10
                                                        if rune_of_cinderglacier_active == True:
                                                             rune_of_cinderglacier_damage = atta_num * .2
                                                             rune_of_cinderglacier_active_count += 1
                                                             rotation.append("Rune of Cinderglacier")
                                                             rotation_time.append(current_time)
                                                             rotation_status.append("Active")
                                                             rotation_damage.append(atta_num * .2)
                                                             if rune_of_cinderglacier_active_count == 2:
                                                                 rune_of_cinderglacier_active = False
                                                        rotation.append("Sudden Doom")
                                                        rotation_time.append(current_time)
                                                        rotation_status.append("Hit")
                                                        rotation_damage.append(atta_num)
                                                if hit == False:
                                                    rotation.append("Sudden Doom")
                                                    rotation_time.append(current_time)
                                                    rotation_status.append("Miss")
                                                    rotation_damage.append(0)
                                        rotation.append("Blood Strike")
                                        rotation_time.append(current_time)
                                        rotation_status.append("Hit")
                                        rotation_damage.append(atta_num)
                                        current_time += gcd
                                        used_gcd = True
                                        # print("Blood Strike - " + str(atta_num))
                                        continue
                                
                    if pestilence_allow_reset == False:
                        if heart_strike_points == 0:
                            castable = all_rune_check(blood, current_time, rune_cd_tracker) #Blood Strike
                            use_death_rune = False
                            if castable == 3:   #Blood Strike
                                until_dot0 = dots[0]
                                until_dot1 = dots[1]
                                if pestilence_allow_reset == True:
                                    until_dot0 -= pestilence_reset_window
                                    until_dot1 -= pestilence_reset_window
                                castable_death = all_rune_check(death, current_time, rune_cd_tracker)
                                castable_death_f = all_rune_check(death_f, current_time, rune_cd_tracker)
                                castable_death_u = all_rune_check(death_u, current_time, rune_cd_tracker)
                                if castable_death != 3:
                                    if until_dot0 <= current_time + haste_rune_cd:
                                        if until_dot1 <= current_time + haste_rune_cd:
                                            use_death_rune = True
                                            just_used_death_rune = True
                                            castable = castable_death
                                elif castable_death_f != 3:
                                    if until_dot0 <= current_time + haste_rune_cd:
                                        if until_dot1 <= current_time + haste_rune_cd:
                                            use_death_rune = True
                                            just_used_death_rune = True
                                            castable = castable_death_f
                                elif castable_death_u != 3:
                                    if until_dot0 <= current_time + haste_rune_cd:
                                        if until_dot1 <= current_time + haste_rune_cd:
                                            use_death_rune = True
                                            just_used_death_rune = True
                                            castable = castable_death_u
                            if castable != 3:  
                                if castable == 2: 
                                    castable = 0
                                if use_death_rune == True:
                                    use_death_rune = False
                                    if castable_death != 3:
                                        rune_cd_tracker[castable] = 0
                                        if castable_death == 2:
                                            castable_death = 0
                                        rune_cd_tracker[castable_death + 6] = 10000
                                    elif castable_death_f != 3:
                                        castable += 2
                                        rune_cd_tracker[castable] = 0
                                        if castable_death_f == 2:
                                            castable_death_f = 0
                                        rune_cd_tracker[castable_death_f + 8] = 10000
                                    elif castable_death_u != 3:
                                        castable += 4
                                        rune_cd_tracker[castable] = 0
                                        if castable_death_u == 2:
                                            castable_death_u = 0
                                        rune_cd_tracker[castable_death_u + 10] = 10000
                                else:
                                    use_death_rune = False
                                attack_table_results = attack_table(1, tanking, H2, True, False, hit_from_gear, hit_from_other, target_level, all_expertise_dodge, all_expertise_parry, total_crit, (annihilation_talent_points / 100) + increased_phy_crit + ((subversion_points * 3) / 100))
                                armor_red_amount = dam_reduc(current_armor, armor_penetration, target_level)
                                wep_roll = weapon_roll(mh_input_lowend_weapon_damage,mh_input_topend_weapon_damage)
                                wep_roll = wep_roll + (attack_damage_normalization * current_ap / 14)
                                #Rune Hit
                                haste_percentage = (total_haste_rating / 25.21) / 100 #Returns a result of 0 - 1 for 0% - 100%
                                haste_rune_cd = rune_grade_timer(current_time, last_rune_change[castable], last_rune_change[castable+6])
                                if improved_unholy_presence_points != 0:
                                    if dk_presence == 2:
                                        haste_rune_cd = haste_rune_cd - (haste_rune_cd * ((improved_unholy_presence_points * 5) / 100))
                                if dk_presence != 2:
                                    gcd = input_gcd / (1 + haste_percentage)
                                    if gcd < 1:
                                        gcd = 1
                                ##Rune Miss
                                haste_rune_cd_miss = 1
                                how_many_dots_on_target = 0
                                if dots[0] > current_time:
                                    how_many_dots_on_target += 1
                                if dots[1] > current_time:
                                    how_many_dots_on_target += 1
                                if dots[2] > current_time:
                                    how_many_dots_on_target += 1
                                if dancing_rune_weapon_points == 1:
                                    if dancing_rune_weapon_active == True:
                                        if attack_table_results == 0:
                                            atta_num = 0
                                            rotation.append("Dancing Rune Weapon")
                                            rotation_time.append(current_time)
                                            rotation_status.append("Miss")
                                            rotation_damage.append(atta_num)
                                        elif attack_table_results == 1:
                                            atta_num = 0
                                            rotation.append("Dancing Rune Weapon")
                                            rotation_time.append(current_time)
                                            rotation_status.append("Dodge")
                                            rotation_damage.append(atta_num)
                                        elif attack_table_results == 5:
                                            atta_num = (((746 + (wep_roll * .4)) + (( 746 + (wep_roll * .4)) * (.125 * how_many_dots_on_target)) + (( 746 + (wep_roll * .4)) * (.125 * how_many_dots_on_target) * darkruned_battlegear_four_set)) - (((746 + (wep_roll * .4)) + (( 746 + (wep_roll * .4)) * (.125 * how_many_dots_on_target)) + (( 746 + (wep_roll * .4)) * (.125 * how_many_dots_on_target) * darkruned_battlegear_four_set)) * armor_red_amount))  * (var_crit_amount + (guile_of_gorefiend_points * .15))
                                            if dk_presence == 0:
                                                atta_num = atta_num + (atta_num * .15)
                                            if tundra_stalker_points != 0:
                                                if dots[0] > current_time:
                                                    atta_num = atta_num + (atta_num * (tundra_stalker_points * .03))
                                            if blood_of_the_north_points != 0:
                                                if blood_of_the_north_points < 3:
                                                    atta_num = atta_num + (atta_num * (blood_of_the_north_points * .03))
                                                elif blood_of_the_north_points == 3:
                                                    atta_num = atta_num + (atta_num * .1)
                                            if t9_tank_two_set == True:
                                                atta_num = atta_num + (atta_num *.05)
                                            if rage_of_rivendale_points != 0:
                                                if dots[1] > current_time:
                                                    atta_num += atta_num * ((rage_of_rivendale_points * 2) / 100)
                                            if blood_strikes_points != 0:
                                                atta_num = atta_num + ((blood_strikes_points * 5) / 100)
                                            if might_of_mograine_points != 0:
                                                atta_num += atta_num * ((might_of_mograine_points * 15) / 100)
                                            if hysteria_active == True:
                                                atta_num = atta_num + (atta_num * .2)
                                            if tricksoftt_active == True:
                                                atta_num = atta_num + (atta_num * .15)
                                            atta_num = atta_num + (atta_num * increased_physical_damage) + (atta_num * increased_all_damage)
                                            atta_num = atta_num * dancing_rune_weapon_damage_multi
                                            dancing_rune_weapon_damage += atta_num
                                            rotation.append("Dancing Rune Weapon")
                                            rotation_time.append(current_time)
                                            rotation_status.append("Crit")
                                            rotation_damage.append(atta_num)
                                            trinket_hit_crit_tracker = 2
                                            if blood_of_the_north_points != 0:
                                                if just_used_death_rune != True:
                                                    proc_num = random.randint(0, 100)
                                                    if blood_of_the_north_points < 3:
                                                        death_proc_chance = (blood_of_the_north_points * .3) * 100
                                                    elif blood_of_the_north_points == 3:
                                                        death_proc_chance = 100
                                                    if death_proc_chance >= proc_num:
                                                        death_castable = castable + death
                                                        rune_cd_tracker[death_castable] = rune_cd(haste_rune_cd, current_time)
                                                        rune_cd_tracker[castable] = 10000
                                            if reaping_points != 0:
                                                if just_used_death_rune != True:
                                                    proc_num = random.randint(0, 100)
                                                    if reaping_points < 3:
                                                        death_proc_chance = (reaping_points * .3) * 100
                                                    elif reaping_points == 3:
                                                        death_proc_chance = 100
                                                    if death_proc_chance >= proc_num:
                                                        death_castable = castable + death
                                                        rune_cd_tracker[death_castable] = rune_cd(haste_rune_cd, current_time)
                                                        rune_cd_tracker[castable] = 10000
                                            if sigil_of_haunted_dreams == True:
                                                if random.randint(0, 100) < 15:
                                                    if sigil_of_haunted_dreams_buff == False:
                                                        sigil_of_haunted_dreams_buff = True
                                                        sigil_of_haunted_dreams_timer = current_time + 10  
                                                        total_crit = total_crit + ((173 / 45.8) / 100) 
                                            if t9_dps_two_set == True:
                                                if t9_bonus == False:
                                                    if t9_cd_timer < current_time:
                                                        if (random.randint(0, 10000)/100) < 50:
                                                            t9_bonus = True
                                                            t9_cd_timer = current_time + 45
                                                            t9_active_timer = current_time + 15
                                                            bonus_loop_str += 180
                                                            rotation.append("T9 DPS 2p Bonus")
                                                            rotation_time.append(current_time)
                                                            rotation_damage.append(0)
                                                            rotation_status.append("Proc")
                                            if desolation_points != 0:
                                                if desolation_buff == False:
                                                    increased_all_damage += (desolation_points / 100)
                                                    desolation_buff_timer = current_time + 20
                                                    rotation.append("Desolation")
                                                    rotation_time.append(current_time)
                                                    rotation_damage.append(0)
                                                    rotation_status.append("Applied")
                                                    desolation_buff = True
                                                else:
                                                    desolation_buff_timer = current_time + 20
                                                    rotation.append("Desolation")
                                                    rotation_time.append(current_time)
                                                    rotation_damage.append(0)
                                                    rotation_status.append("Refresh")
                                            if sudden_doom_points != 0:  #Sudden Doom aka Free Death Coil
                                                if (random.randint(0, 10000)/100) < sudden_doom_points * 5:
                                                    hit = spell_hit(spell_hit_total, increased_spell_hit, target_level)
                                                    crit = spell_crit((total_crit + (darkruned_battlegear_two_set / 100)), spell_hit_total, increased_spell_hit, target_level, increased_spell_crit)
                                                    if hit == True:
                                                        if crit == True:
                                                            atta_num = random.randint(443, 665)
                                                            atta_num = (atta_num + ((current_ap + (current_ap * ((impurity_points * 4) / 100))) * 0)) * var_crit_amount
                                                            if sigil_of_vengeful_heart == True:
                                                                atta_num + 380
                                                            if sigil_of_the_wild_buck == True:
                                                                atta_num += 80
                                                            if black_ice_points == 5:
                                                                atta_num = atta_num + (atta_num * .1)
                                                            elif black_ice_points == 4:
                                                                atta_num = atta_num + (atta_num * .08)
                                                            elif black_ice_points == 3:
                                                                atta_num = atta_num + (atta_num * .06)
                                                            elif black_ice_points == 2:
                                                                atta_num = atta_num + (atta_num * .04)
                                                            elif black_ice_points == 1:
                                                                atta_num = atta_num + (atta_num * .02)
                                                            if dk_presence == 0:
                                                                atta_num = atta_num + (atta_num * .15)
                                                            if tundra_stalker_points != 0:
                                                                if dots[0] > current_time:
                                                                    atta_num = atta_num + (atta_num * (tundra_stalker_points * .03))
                                                            if glyph_death_coil == True:
                                                                atta_num += atta_num * .15
                                                            if rage_of_rivendale_points != 0:
                                                                if dots[1] > current_time:
                                                                    atta_num += atta_num * ((rage_of_rivendale_points * 2) / 100)
                                                            if morbitity_points != 0:
                                                                atta_num += ((morbitity_points * 5) / 100)
                                                            if hysteria_active == True:
                                                                atta_num = atta_num + (atta_num * .2)
                                                            if tricksoftt_active == True:
                                                                atta_num = atta_num + (atta_num * .15)
                                                            atta_num = atta_num + (atta_num * increased_spell_damage) + (atta_num * increased_all_damage)
                                                            sudden_doom_damage += atta_num
                                                            if unholy_blight_points == 1:
                                                                unholy_blight_amount = atta_num / 10   
                                                                unholy_blight_timer = current_time + 10
                                                            if rune_of_cinderglacier_active == True:
                                                                 rune_of_cinderglacier_damage = atta_num * .2
                                                                 rune_of_cinderglacier_active_count += 1
                                                                 rotation.append("Rune of Cinderglacier")
                                                                 rotation_time.append(current_time)
                                                                 rotation_status.append("Active")
                                                                 rotation_damage.append(atta_num * .2)
                                                                 if rune_of_cinderglacier_active_count == 2:
                                                                     rune_of_cinderglacier_active = False
                                                            rotation.append("Sudden Doom")
                                                            rotation_time.append(current_time)
                                                            rotation_status.append("Crit")
                                                            rotation_damage.append(atta_num)
                                                        else:
                                                            atta_num = random.randint(443, 665)
                                                            atta_num = (atta_num + ((current_ap + (current_ap * ((impurity_points * 4) / 100))) * 0))
                                                            if sigil_of_vengeful_heart == True:
                                                                atta_num + 380
                                                            if sigil_of_the_wild_buck == True:
                                                                atta_num += 80
                                                            if black_ice_points == 5:
                                                                atta_num = atta_num + (atta_num * .1)
                                                            elif black_ice_points == 4:
                                                                atta_num = atta_num + (atta_num * .08)
                                                            elif black_ice_points == 3:
                                                                atta_num = atta_num + (atta_num * .06)
                                                            elif black_ice_points == 2:
                                                                atta_num = atta_num + (atta_num * .04)
                                                            elif black_ice_points == 1:
                                                                atta_num = atta_num + (atta_num * .02)
                                                            if dk_presence == 0:
                                                                atta_num = atta_num + (atta_num * .15)
                                                            if tundra_stalker_points != 0:
                                                                if dots[0] > current_time:
                                                                    atta_num = atta_num + (atta_num * (tundra_stalker_points * .03))
                                                            if glyph_death_coil == True:
                                                                atta_num += atta_num * .15
                                                            if rage_of_rivendale_points != 0:
                                                                if dots[1] > current_time:
                                                                    atta_num += atta_num * ((rage_of_rivendale_points * 2) / 100)
                                                            if morbitity_points != 0:
                                                                atta_num += ((morbitity_points * 5) / 100)
                                                            if hysteria_active == True:
                                                                atta_num = atta_num + (atta_num * .2)
                                                            if tricksoftt_active == True:
                                                                atta_num = atta_num + (atta_num * .15)
                                                            atta_num = atta_num + (atta_num * increased_spell_damage) + (atta_num * increased_all_damage)
                                                            sudden_doom_damage += atta_num
                                                            if unholy_blight_points == 1:
                                                                unholy_blight_amount = atta_num / 10 
                                                                unholy_blight_timer = current_time + 10
                                                            if rune_of_cinderglacier_active == True:
                                                                 rune_of_cinderglacier_damage = atta_num * .2
                                                                 rune_of_cinderglacier_active_count += 1
                                                                 rotation.append("Rune of Cinderglacier")
                                                                 rotation_time.append(current_time)
                                                                 rotation_status.append("Active")
                                                                 rotation_damage.append(atta_num * .2)
                                                                 if rune_of_cinderglacier_active_count == 2:
                                                                     rune_of_cinderglacier_active = False
                                                            rotation.append("Sudden Doom")
                                                            rotation_time.append(current_time)
                                                            rotation_status.append("Hit")
                                                            rotation_damage.append(atta_num)
                                                    if hit == False:
                                                        rotation.append("Sudden Doom")
                                                        rotation_time.append(current_time)
                                                        rotation_status.append("Miss")
                                                        rotation_damage.append(0)
                                        elif attack_table_results == 7:
                                            atta_num = ((746 + (wep_roll * .4)) + (( 746 + (wep_roll * .4)) * (.125 * how_many_dots_on_target)) + (( 746 + (wep_roll * .4)) * (.125 * how_many_dots_on_target) * darkruned_battlegear_four_set)) - (((746 + (wep_roll * .4)) + (( 746 + (wep_roll * .4)) * (.125 * how_many_dots_on_target)) + (( 746 + (wep_roll * .4)) * (.125 * how_many_dots_on_target) * darkruned_battlegear_four_set)) * armor_red_amount)
                                            if dk_presence == 0:
                                                atta_num = atta_num + (atta_num * .15)
                                            if tundra_stalker_points != 0:
                                                if dots[0] > current_time:
                                                    atta_num = atta_num + (atta_num * (tundra_stalker_points * .03))
                                            if blood_of_the_north_points != 0:
                                                if blood_of_the_north_points < 3:
                                                    atta_num = atta_num + (atta_num * (blood_of_the_north_points * .03))
                                                elif blood_of_the_north_points == 3:
                                                    atta_num = atta_num + (atta_num * .1)
                                            if t9_tank_two_set == True:
                                                atta_num = atta_num + (atta_num *.05)
                                            if rage_of_rivendale_points != 0:
                                                if dots[1] > current_time:
                                                    atta_num += atta_num * ((rage_of_rivendale_points * 2) / 100)
                                            if blood_strikes_points != 0:
                                                atta_num = atta_num + ((blood_strikes_points * 5) / 100)
                                            if hysteria_active == True:
                                                atta_num = atta_num + (atta_num * .2)
                                            if tricksoftt_active == True:
                                                atta_num = atta_num + (atta_num * .15)
                                            atta_num = atta_num + (atta_num * increased_physical_damage) + (atta_num * increased_all_damage)
                                            atta_num = atta_num * dancing_rune_weapon_damage_multi
                                            dancing_rune_weapon_damage += atta_num
                                            rotation.append("Dancing Rune Weapon")
                                            rotation_time.append(current_time)
                                            rotation_status.append("Hit")
                                            rotation_damage.append(atta_num)
                                            trinket_hit_crit_tracker = 1
                                            if blood_of_the_north_points != 0:
                                                if just_used_death_rune != True:
                                                    proc_num = random.randint(0, 100)
                                                    if blood_of_the_north_points < 3:
                                                        death_proc_chance = (blood_of_the_north_points * .3) * 100
                                                    elif blood_of_the_north_points == 3:
                                                        death_proc_chance = 100
                                                    if death_proc_chance >= proc_num:
                                                        death_castable = castable + death
                                                        rune_cd_tracker[death_castable] = rune_cd(haste_rune_cd, current_time)
                                                        rune_cd_tracker[castable] = 10000  
                                            if reaping_points != 0:
                                                if just_used_death_rune != True:
                                                    proc_num = random.randint(0, 100)
                                                    if reaping_points < 3:
                                                        death_proc_chance = (reaping_points * .3) * 100
                                                    elif reaping_points == 3:
                                                        death_proc_chance = 100
                                                    if death_proc_chance >= proc_num:
                                                        death_castable = castable + death
                                                        rune_cd_tracker[death_castable] = rune_cd(haste_rune_cd, current_time)
                                                        rune_cd_tracker[castable] = 10000 
                                            if sigil_of_haunted_dreams == True:
                                                if random.randint(0, 100) < 15:
                                                    if sigil_of_haunted_dreams_buff == False:
                                                        sigil_of_haunted_dreams_buff = True
                                                        sigil_of_haunted_dreams_timer = current_time + 10  
                                                        total_crit = total_crit + ((173 / 45.8) / 100) 
                                            if t9_dps_two_set == True:
                                                if t9_bonus == False:
                                                    if t9_cd_timer < current_time:
                                                        if (random.randint(0, 10000)/100) < 50:
                                                            t9_bonus = True
                                                            t9_cd_timer = current_time + 45
                                                            t9_active_timer = current_time + 15
                                                            bonus_loop_str += 180
                                                            rotation.append("T9 DPS 2p Bonus")
                                                            rotation_time.append(current_time)
                                                            rotation_damage.append(0)
                                                            rotation_status.append("Proc")
                                            if desolation_points != 0:
                                                if desolation_buff == False:
                                                    increased_all_damage += (desolation_points / 100)
                                                    desolation_buff_timer = current_time + 20
                                                    rotation.append("Desolation")
                                                    rotation_time.append(current_time)
                                                    rotation_damage.append(0)
                                                    rotation_status.append("Applied")
                                                    desolation_buff = True
                                                else:
                                                    desolation_buff_timer = current_time + 20
                                                    rotation.append("Desolation")
                                                    rotation_time.append(current_time)
                                                    rotation_damage.append(0)
                                                    rotation_status.append("Refresh")
                                            if sudden_doom_points != 0:  #Sudden Doom aka Free Death Coil
                                                if (random.randint(0, 10000)/100) < sudden_doom_points * 5:
                                                    hit = spell_hit(spell_hit_total, increased_spell_hit, target_level)
                                                    crit = spell_crit((total_crit + (darkruned_battlegear_two_set / 100)), spell_hit_total, increased_spell_hit, target_level, increased_spell_crit)
                                                    if hit == True:
                                                        if crit == True:
                                                            atta_num = random.randint(443, 665)
                                                            atta_num = (atta_num + ((current_ap + (current_ap * ((impurity_points * 4) / 100))) * 0)) * var_crit_amount
                                                            if sigil_of_vengeful_heart == True:
                                                                atta_num + 380
                                                            if sigil_of_the_wild_buck == True:
                                                                atta_num += 80
                                                            if black_ice_points == 5:
                                                                atta_num = atta_num + (atta_num * .1)
                                                            elif black_ice_points == 4:
                                                                atta_num = atta_num + (atta_num * .08)
                                                            elif black_ice_points == 3:
                                                                atta_num = atta_num + (atta_num * .06)
                                                            elif black_ice_points == 2:
                                                                atta_num = atta_num + (atta_num * .04)
                                                            elif black_ice_points == 1:
                                                                atta_num = atta_num + (atta_num * .02)
                                                            if dk_presence == 0:
                                                                atta_num = atta_num + (atta_num * .15)
                                                            if tundra_stalker_points != 0:
                                                                if dots[0] > current_time:
                                                                    atta_num = atta_num + (atta_num * (tundra_stalker_points * .03))
                                                            if glyph_death_coil == True:
                                                                atta_num += atta_num * .15
                                                            if rage_of_rivendale_points != 0:
                                                                if dots[1] > current_time:
                                                                    atta_num += atta_num * ((rage_of_rivendale_points * 2) / 100)
                                                            if morbitity_points != 0:
                                                                atta_num += ((morbitity_points * 5) / 100)
                                                            if hysteria_active == True:
                                                                atta_num = atta_num + (atta_num * .2)
                                                            if tricksoftt_active == True:
                                                                atta_num = atta_num + (atta_num * .15)
                                                            atta_num = atta_num + (atta_num * increased_spell_damage) + (atta_num * increased_all_damage)
                                                            sudden_doom_damage += atta_num
                                                            if unholy_blight_points == 1:
                                                                unholy_blight_amount = atta_num / 10   
                                                                unholy_blight_timer = current_time + 10
                                                            if rune_of_cinderglacier_active == True:
                                                                 rune_of_cinderglacier_damage = atta_num * .2
                                                                 rune_of_cinderglacier_active_count += 1
                                                                 rotation.append("Rune of Cinderglacier")
                                                                 rotation_time.append(current_time)
                                                                 rotation_status.append("Active")
                                                                 rotation_damage.append(atta_num * .2)
                                                                 if rune_of_cinderglacier_active_count == 2:
                                                                     rune_of_cinderglacier_active = False
                                                            rotation.append("Sudden Doom")
                                                            rotation_time.append(current_time)
                                                            rotation_status.append("Crit")
                                                            rotation_damage.append(atta_num)
                                                        else:
                                                            atta_num = random.randint(443, 665)
                                                            atta_num = (atta_num + ((current_ap + (current_ap * ((impurity_points * 4) / 100))) * 0))
                                                            if sigil_of_vengeful_heart == True:
                                                                atta_num + 380
                                                            if sigil_of_the_wild_buck == True:
                                                                atta_num += 80
                                                            if black_ice_points == 5:
                                                                atta_num = atta_num + (atta_num * .1)
                                                            elif black_ice_points == 4:
                                                                atta_num = atta_num + (atta_num * .08)
                                                            elif black_ice_points == 3:
                                                                atta_num = atta_num + (atta_num * .06)
                                                            elif black_ice_points == 2:
                                                                atta_num = atta_num + (atta_num * .04)
                                                            elif black_ice_points == 1:
                                                                atta_num = atta_num + (atta_num * .02)
                                                            if dk_presence == 0:
                                                                atta_num = atta_num + (atta_num * .15)
                                                            if tundra_stalker_points != 0:
                                                                if dots[0] > current_time:
                                                                    atta_num = atta_num + (atta_num * (tundra_stalker_points * .03))
                                                            if glyph_death_coil == True:
                                                                atta_num += atta_num * .15
                                                            if rage_of_rivendale_points != 0:
                                                                if dots[1] > current_time:
                                                                    atta_num += atta_num * ((rage_of_rivendale_points * 2) / 100)
                                                            if morbitity_points != 0:
                                                                atta_num += ((morbitity_points * 5) / 100)
                                                            if hysteria_active == True:
                                                                atta_num = atta_num + (atta_num * .2)
                                                            if tricksoftt_active == True:
                                                                atta_num = atta_num + (atta_num * .15)
                                                            atta_num = atta_num + (atta_num * increased_spell_damage) + (atta_num * increased_all_damage)
                                                            sudden_doom_damage += atta_num
                                                            if unholy_blight_points == 1:
                                                                unholy_blight_amount = atta_num / 10 
                                                                unholy_blight_timer = current_time + 10
                                                            if rune_of_cinderglacier_active == True:
                                                                 rune_of_cinderglacier_damage = atta_num * .2
                                                                 rune_of_cinderglacier_active_count += 1
                                                                 rotation.append("Rune of Cinderglacier")
                                                                 rotation_time.append(current_time)
                                                                 rotation_status.append("Active")
                                                                 rotation_damage.append(atta_num * .2)
                                                                 if rune_of_cinderglacier_active_count == 2:
                                                                     rune_of_cinderglacier_active = False
                                                            rotation.append("Sudden Doom")
                                                            rotation_time.append(current_time)
                                                            rotation_status.append("Hit")
                                                            rotation_damage.append(atta_num)
                                                    if hit == False:
                                                        rotation.append("Sudden Doom")
                                                        rotation_time.append(current_time)
                                                        rotation_status.append("Miss")
                                                        rotation_damage.append(0)
                                if threat_of_thassarian_points != 0:  #Off Hand Blood Strike
                                    if H2 == False:
                                        threat_of_thass_roll = (threat_of_thassarian_points * 30) 
                                        if threat_of_thassarian_points == 3: 
                                            threat_of_thass_roll += 10 
                                        threat_of_t_num = random.randint(0, 100) 
                                        if threat_of_thass_roll >= threat_of_t_num: 
                                            oh_wep_roll = weapon_roll(oh_input_lowend_weapon_damage,oh_input_topend_weapon_damage)
                                            oh_wep_roll = wep_roll + (attack_damage_normalization * current_ap / 14)
                                            oh_attack_table_results = attack_table(1, tanking, H2, False, True, hit_from_gear, hit_from_other, target_level, all_expertise_dodge, all_expertise_parry, total_crit, (annihilation_talent_points / 100) + increased_phy_crit + ((subversion_points * 3) / 100))
                                            if oh_attack_table_results == 0:
                                                atta_num = 0
                                                rotation.append("OH - Blood Strike")
                                                rotation_time.append(current_time)
                                                rotation_status.append("Miss")
                                                rotation_damage.append(atta_num)
                                            elif oh_attack_table_results == 1:
                                                atta_num = 0
                                                rotation.append("OH - Blood Strike")
                                                rotation_time.append(current_time)
                                                rotation_status.append("Dodge")
                                                rotation_damage.append(atta_num)
                                            elif oh_attack_table_results == 5:
                                                #crit attack
                                                atta_num = (((746 + (oh_wep_roll * .4)) + (( 746 + (oh_wep_roll * .4)) * (.125 * how_many_dots_on_target)) + (( 746 + (oh_wep_roll * .4)) * (.125 * how_many_dots_on_target) * darkruned_battlegear_four_set )) - (((746 + (oh_wep_roll * .4)) + (( 746 + (oh_wep_roll * .4)) * (.125 * how_many_dots_on_target)) + (( 746 + (oh_wep_roll * .4)) * (.125 * how_many_dots_on_target) * darkruned_battlegear_four_set)) * armor_red_amount))  * (var_crit_amount + (guile_of_gorefiend_points * .15))
                                                if dk_presence == 0:
                                                    atta_num = atta_num + (atta_num * .15)
                                                if tundra_stalker_points != 0:
                                                    if dots[0] > current_time:
                                                        atta_num = atta_num + (atta_num * (tundra_stalker_points * .03))
                                                if blood_of_the_north_points != 0:
                                                    if blood_of_the_north_points < 3:
                                                        atta_num = atta_num + (atta_num * (blood_of_the_north_points * .03))
                                                    elif blood_of_the_north_points == 3:
                                                        atta_num = atta_num + (atta_num * .1)
                                                if t9_tank_two_set == True:
                                                    atta_num = atta_num + (atta_num *.05)
                                                if rage_of_rivendale_points != 0:
                                                    if dots[1] > current_time:
                                                        atta_num += atta_num * ((rage_of_rivendale_points * 2) / 100)
                                                if blood_strikes_points != 0:
                                                    atta_num = atta_num + ((blood_strikes_points * 5) / 100)
                                                if might_of_mograine_points != 0:
                                                    atta_num += atta_num * ((might_of_mograine_points * 15) / 100)
                                                atta_num = atta_num * oh_wep_damage_mod
                                                if hysteria_active == True:
                                                    atta_num = atta_num + (atta_num * .2)
                                                if tricksoftt_active == True:
                                                    atta_num = atta_num + (atta_num * .15)
                                                atta_num = atta_num + (atta_num * increased_physical_damage) + (atta_num * increased_all_damage)
                                                sum_oh_bs_attacks += atta_num
                                                trinket_hit_crit_tracker = 2
                                                if blood_of_the_north_points != 0:
                                                    if just_used_death_rune != True:
                                                        proc_num = random.randint(0, 100)
                                                        if blood_of_the_north_points < 3:
                                                            death_proc_chance = (blood_of_the_north_points * .3) * 100
                                                        elif blood_of_the_north_points == 3:
                                                            death_proc_chance = 100
                                                        if death_proc_chance >= proc_num:
                                                            death_castable = castable + death
                                                            rune_cd_tracker[death_castable] = rune_cd(haste_rune_cd, current_time)
                                                            rune_cd_tracker[castable] = 10000 
                                                if reaping_points != 0:
                                                    if just_used_death_rune != True:
                                                        proc_num = random.randint(0, 100)
                                                        if reaping_points < 3:
                                                            death_proc_chance = (reaping_points * .3) * 100
                                                        elif reaping_points == 3:
                                                            death_proc_chance = 100
                                                        if death_proc_chance >= proc_num:
                                                            death_castable = castable + death
                                                            rune_cd_tracker[death_castable] = rune_cd(haste_rune_cd, current_time)
                                                            rune_cd_tracker[castable] = 10000 
                                                if sigil_of_haunted_dreams == True:
                                                    if random.randint(0, 100) < 15:
                                                        if sigil_of_haunted_dreams_buff == False:
                                                            sigil_of_haunted_dreams_buff = True
                                                            sigil_of_haunted_dreams_timer = current_time + 10  
                                                            total_crit = total_crit + ((173 / 45.8) / 100)  
                                                if t9_dps_two_set == True:
                                                    if t9_bonus == False:
                                                        if t9_cd_timer < current_time:
                                                            if (random.randint(0, 10000)/100) < 50:
                                                                t9_bonus = True
                                                                t9_cd_timer = current_time + 45
                                                                t9_active_timer = current_time + 15
                                                                bonus_loop_str += 180
                                                                rotation.append("T9 DPS 2p Bonus")
                                                                rotation_time.append(current_time)
                                                                rotation_damage.append(0)
                                                                rotation_status.append("Proc")
                                                if desolation_points != 0:
                                                    if desolation_buff == False:
                                                        increased_all_damage += (desolation_points / 100)
                                                        desolation_buff_timer = current_time + 20
                                                        rotation.append("Desolation")
                                                        rotation_time.append(current_time)
                                                        rotation_damage.append(0)
                                                        rotation_status.append("Applied")
                                                        desolation_buff = True
                                                    else:
                                                        desolation_buff_timer = current_time + 20
                                                        rotation.append("Desolation")
                                                        rotation_time.append(current_time)
                                                        rotation_damage.append(0)
                                                        rotation_status.append("Refresh")
                                                if sudden_doom_points != 0:  #Sudden Doom aka Free Death Coil
                                                    if (random.randint(0, 10000)/100) < sudden_doom_points * 5:
                                                        hit = spell_hit(spell_hit_total, increased_spell_hit, target_level)
                                                        crit = spell_crit((total_crit + (darkruned_battlegear_two_set / 100)), spell_hit_total, increased_spell_hit, target_level, increased_spell_crit)
                                                        if hit == True:
                                                            if crit == True:
                                                                atta_num = random.randint(443, 665)
                                                                atta_num = (atta_num + ((current_ap + (current_ap * ((impurity_points * 4) / 100))) * 0)) * var_crit_amount
                                                                if sigil_of_vengeful_heart == True:
                                                                    atta_num + 380
                                                                if black_ice_points == 5:
                                                                    atta_num = atta_num + (atta_num * .1)
                                                                elif black_ice_points == 4:
                                                                    atta_num = atta_num + (atta_num * .08)
                                                                elif black_ice_points == 3:
                                                                    atta_num = atta_num + (atta_num * .06)
                                                                elif black_ice_points == 2:
                                                                    atta_num = atta_num + (atta_num * .04)
                                                                elif black_ice_points == 1:
                                                                    atta_num = atta_num + (atta_num * .02)
                                                                if dk_presence == 0:
                                                                    atta_num = atta_num + (atta_num * .15)
                                                                if tundra_stalker_points != 0:
                                                                    if dots[0] > current_time:
                                                                        atta_num = atta_num + (atta_num * (tundra_stalker_points * .03))
                                                                if glyph_death_coil == True:
                                                                    atta_num += atta_num * .15
                                                                if rage_of_rivendale_points != 0:
                                                                    if dots[1] > current_time:
                                                                        atta_num += atta_num * ((rage_of_rivendale_points * 2) / 100)
                                                                if morbitity_points != 0:
                                                                    atta_num += ((morbitity_points * 5) / 100)
                                                                if hysteria_active == True:
                                                                    atta_num = atta_num + (atta_num * .2)
                                                                if tricksoftt_active == True:
                                                                    atta_num = atta_num + (atta_num * .15)
                                                                atta_num = atta_num + (atta_num * increased_spell_damage) + (atta_num * increased_all_damage)
                                                                sudden_doom_damage += atta_num
                                                                if unholy_blight_points == 1:
                                                                    unholy_blight_amount = atta_num / 10   
                                                                    unholy_blight_timer = current_time + 10
                                                                if rune_of_cinderglacier_active == True:
                                                                     rune_of_cinderglacier_damage = atta_num * .2
                                                                     rune_of_cinderglacier_active_count += 1
                                                                     rotation.append("Rune of Cinderglacier")
                                                                     rotation_time.append(current_time)
                                                                     rotation_status.append("Active")
                                                                     rotation_damage.append(atta_num * .2)
                                                                     if rune_of_cinderglacier_active_count == 2:
                                                                         rune_of_cinderglacier_active = False
                                                                rotation.append("Sudden Doom")
                                                                rotation_time.append(current_time)
                                                                rotation_status.append("Crit")
                                                                rotation_damage.append(atta_num)
                                                            else:
                                                                atta_num = random.randint(443, 665)
                                                                atta_num = (atta_num + ((current_ap + (current_ap * ((impurity_points * 4) / 100))) * 0))
                                                                if sigil_of_vengeful_heart == True:
                                                                    atta_num + 380
                                                                if black_ice_points == 5:
                                                                    atta_num = atta_num + (atta_num * .1)
                                                                elif black_ice_points == 4:
                                                                    atta_num = atta_num + (atta_num * .08)
                                                                elif black_ice_points == 3:
                                                                    atta_num = atta_num + (atta_num * .06)
                                                                elif black_ice_points == 2:
                                                                    atta_num = atta_num + (atta_num * .04)
                                                                elif black_ice_points == 1:
                                                                    atta_num = atta_num + (atta_num * .02)
                                                                if dk_presence == 0:
                                                                    atta_num = atta_num + (atta_num * .15)
                                                                if tundra_stalker_points != 0:
                                                                    if dots[0] > current_time:
                                                                        atta_num = atta_num + (atta_num * (tundra_stalker_points * .03))
                                                                if glyph_death_coil == True:
                                                                    atta_num += atta_num * .15
                                                                if rage_of_rivendale_points != 0:
                                                                    if dots[1] > current_time:
                                                                        atta_num += atta_num * ((rage_of_rivendale_points * 2) / 100)
                                                                if morbitity_points != 0:
                                                                    atta_num += ((morbitity_points * 5) / 100)
                                                                if hysteria_active == True:
                                                                    atta_num = atta_num + (atta_num * .2)
                                                                if tricksoftt_active == True:
                                                                    atta_num = atta_num + (atta_num * .15)
                                                                atta_num = atta_num + (atta_num * increased_spell_damage) + (atta_num * increased_all_damage)
                                                                sudden_doom_damage += atta_num
                                                                if unholy_blight_points == 1:
                                                                    unholy_blight_amount = atta_num / 10 
                                                                    unholy_blight_timer = current_time + 10
                                                                if rune_of_cinderglacier_active == True:
                                                                     rune_of_cinderglacier_damage = atta_num * .2
                                                                     rune_of_cinderglacier_active_count += 1
                                                                     rotation.append("Rune of Cinderglacier")
                                                                     rotation_time.append(current_time)
                                                                     rotation_status.append("Active")
                                                                     rotation_damage.append(atta_num * .2)
                                                                     if rune_of_cinderglacier_active_count == 2:
                                                                         rune_of_cinderglacier_active = False
                                                                rotation.append("Sudden Doom")
                                                                rotation_time.append(current_time)
                                                                rotation_status.append("Hit")
                                                                rotation_damage.append(atta_num)
                                                        if hit == False:
                                                            rotation.append("Sudden Doom")
                                                            rotation_time.append(current_time)
                                                            rotation_status.append("Miss")
                                                            rotation_damage.append(0)
                                                rotation.append("OH - Blood Strike")
                                                rotation_time.append(current_time)
                                                rotation_status.append("Crit")
                                                rotation_damage.append(atta_num)
                                            elif oh_attack_table_results == 7:
                                                #normal attack
                                                atta_num = ((746 + (oh_wep_roll * .4)) + (( 746 + (oh_wep_roll * .4)) * (.125 * how_many_dots_on_target)) + + (( 746 + (oh_wep_roll * .4)) * (.125 * how_many_dots_on_target) * darkruned_battlegear_four_set)) - (((746 + (oh_wep_roll * .4)) + (( 746 + (oh_wep_roll * .4)) * (.125 * how_many_dots_on_target)) + + (( 746 + (oh_wep_roll * .4)) * (.125 * how_many_dots_on_target) * darkruned_battlegear_four_set)) * armor_red_amount)
                                                if dk_presence == 0:
                                                    atta_num = atta_num + (atta_num * .15)
                                                if tundra_stalker_points != 0:
                                                    if dots[0] > current_time:
                                                        atta_num = atta_num + (atta_num * (tundra_stalker_points * .03))
                                                if blood_of_the_north_points != 0:
                                                    if blood_of_the_north_points < 3:
                                                        atta_num = atta_num + (atta_num * (blood_of_the_north_points * .03))
                                                    elif blood_of_the_north_points == 3:
                                                        atta_num = atta_num + (atta_num * .1)
                                                if t9_tank_two_set == True:
                                                    atta_num = atta_num + (atta_num *.05)
                                                if rage_of_rivendale_points != 0:
                                                    if dots[1] > current_time:
                                                        atta_num += atta_num * ((rage_of_rivendale_points * 2) / 100)
                                                if blood_strikes_points != 0:
                                                    atta_num = atta_num + ((blood_strikes_points * 5) / 100)
                                                atta_num = atta_num * oh_wep_damage_mod
                                                if hysteria_active == True:
                                                    atta_num = atta_num + (atta_num * .2)
                                                if tricksoftt_active == True:
                                                    atta_num = atta_num + (atta_num * .15)
                                                atta_num = atta_num + (atta_num * increased_physical_damage) + (atta_num * increased_all_damage)
                                                sum_oh_bs_attacks += atta_num
                                                trinket_hit_crit_tracker = 1
                                                if blood_of_the_north_points != 0:
                                                    if just_used_death_rune != True:
                                                        proc_num = random.randint(0, 100)
                                                        if blood_of_the_north_points < 3:
                                                            death_proc_chance = (blood_of_the_north_points * .3) * 100
                                                        elif blood_of_the_north_points == 3:
                                                            death_proc_chance = 100
                                                        if death_proc_chance >= proc_num:
                                                            death_castable = castable + death
                                                            rune_cd_tracker[death_castable] = rune_cd(haste_rune_cd, current_time)
                                                            rune_cd_tracker[castable] = 10000  
                                                if reaping_points != 0:
                                                    if just_used_death_rune != True:
                                                        proc_num = random.randint(0, 100)
                                                        if reaping_points < 3:
                                                            death_proc_chance = (reaping_points * .3) * 100
                                                        elif reaping_points == 3:
                                                            death_proc_chance = 100
                                                        if death_proc_chance >= proc_num:
                                                            death_castable = castable + death
                                                            rune_cd_tracker[death_castable] = rune_cd(haste_rune_cd, current_time)
                                                            rune_cd_tracker[castable] = 10000 
                                                if sigil_of_haunted_dreams == True:
                                                    if random.randint(0, 100) < 15:
                                                        if sigil_of_haunted_dreams_buff == False:
                                                            sigil_of_haunted_dreams_buff = True
                                                            sigil_of_haunted_dreams_timer = current_time + 10  
                                                            total_crit = total_crit + ((173 / 45.8) / 100) 
                                                if t9_dps_two_set == True:
                                                    if t9_bonus == False:
                                                        if t9_cd_timer < current_time:
                                                            if (random.randint(0, 10000)/100) < 50:
                                                                t9_bonus = True
                                                                t9_cd_timer = current_time + 45
                                                                t9_active_timer = current_time + 15
                                                                bonus_loop_str += 180
                                                                rotation.append("T9 DPS 2p Bonus")
                                                                rotation_time.append(current_time)
                                                                rotation_damage.append(0)
                                                                rotation_status.append("Proc")
                                                if desolation_points != 0:
                                                    if desolation_buff == False:
                                                        increased_all_damage += (desolation_points / 100)
                                                        desolation_buff_timer = current_time + 20
                                                        rotation.append("Desolation")
                                                        rotation_time.append(current_time)
                                                        rotation_damage.append(0)
                                                        rotation_status.append("Applied")
                                                        desolation_buff = True
                                                    else:
                                                        desolation_buff_timer = current_time + 20
                                                        rotation.append("Desolation")
                                                        rotation_time.append(current_time)
                                                        rotation_damage.append(0)
                                                        rotation_status.append("Refresh")
                                                if sudden_doom_points != 0:  #Sudden Doom aka Free Death Coil
                                                    if (random.randint(0, 10000)/100) < sudden_doom_points * 5:
                                                        hit = spell_hit(spell_hit_total, increased_spell_hit, target_level)
                                                        crit = spell_crit((total_crit + (darkruned_battlegear_two_set / 100)), spell_hit_total, increased_spell_hit, target_level, increased_spell_crit)
                                                        if hit == True:
                                                            if crit == True:
                                                                atta_num = random.randint(443, 665)
                                                                atta_num = (atta_num + ((current_ap + (current_ap * ((impurity_points * 4) / 100))) * 0)) * var_crit_amount
                                                                if sigil_of_vengeful_heart == True:
                                                                    atta_num + 380
                                                                if sigil_of_the_wild_buck == True:
                                                                    atta_num += 80
                                                                if black_ice_points == 5:
                                                                    atta_num = atta_num + (atta_num * .1)
                                                                elif black_ice_points == 4:
                                                                    atta_num = atta_num + (atta_num * .08)
                                                                elif black_ice_points == 3:
                                                                    atta_num = atta_num + (atta_num * .06)
                                                                elif black_ice_points == 2:
                                                                    atta_num = atta_num + (atta_num * .04)
                                                                elif black_ice_points == 1:
                                                                    atta_num = atta_num + (atta_num * .02)
                                                                if dk_presence == 0:
                                                                    atta_num = atta_num + (atta_num * .15)
                                                                if tundra_stalker_points != 0:
                                                                    if dots[0] > current_time:
                                                                        atta_num = atta_num + (atta_num * (tundra_stalker_points * .03))
                                                                if glyph_death_coil == True:
                                                                    atta_num += atta_num * .15
                                                                if rage_of_rivendale_points != 0:
                                                                    if dots[1] > current_time:
                                                                        atta_num += atta_num * ((rage_of_rivendale_points * 2) / 100)
                                                                if morbitity_points != 0:
                                                                    atta_num += ((morbitity_points * 5) / 100)
                                                                if hysteria_active == True:
                                                                    atta_num = atta_num + (atta_num * .2)
                                                                if tricksoftt_active == True:
                                                                    atta_num = atta_num + (atta_num * .15)
                                                                atta_num = atta_num + (atta_num * increased_spell_damage) + (atta_num * increased_all_damage)
                                                                sudden_doom_damage += atta_num
                                                                if unholy_blight_points == 1:
                                                                    unholy_blight_amount = atta_num / 10   
                                                                    unholy_blight_timer = current_time + 10
                                                                if rune_of_cinderglacier_active == True:
                                                                     rune_of_cinderglacier_damage = atta_num * .2
                                                                     rune_of_cinderglacier_active_count += 1
                                                                     rotation.append("Rune of Cinderglacier")
                                                                     rotation_time.append(current_time)
                                                                     rotation_status.append("Active")
                                                                     rotation_damage.append(atta_num * .2)
                                                                     if rune_of_cinderglacier_active_count == 2:
                                                                         rune_of_cinderglacier_active = False
                                                                rotation.append("Sudden Doom")
                                                                rotation_time.append(current_time)
                                                                rotation_status.append("Crit")
                                                                rotation_damage.append(atta_num)
                                                            else:
                                                                atta_num = random.randint(443, 665)
                                                                atta_num = (atta_num + ((current_ap + (current_ap * ((impurity_points * 4) / 100))) * 0))
                                                                if sigil_of_vengeful_heart == True:
                                                                    atta_num + 380
                                                                if sigil_of_the_wild_buck == True:
                                                                    atta_num += 80
                                                                if black_ice_points == 5:
                                                                    atta_num = atta_num + (atta_num * .1)
                                                                elif black_ice_points == 4:
                                                                    atta_num = atta_num + (atta_num * .08)
                                                                elif black_ice_points == 3:
                                                                    atta_num = atta_num + (atta_num * .06)
                                                                elif black_ice_points == 2:
                                                                    atta_num = atta_num + (atta_num * .04)
                                                                elif black_ice_points == 1:
                                                                    atta_num = atta_num + (atta_num * .02)
                                                                if dk_presence == 0:
                                                                    atta_num = atta_num + (atta_num * .15)
                                                                if tundra_stalker_points != 0:
                                                                    if dots[0] > current_time:
                                                                        atta_num = atta_num + (atta_num * (tundra_stalker_points * .03))
                                                                if glyph_death_coil == True:
                                                                    atta_num += atta_num * .15
                                                                if rage_of_rivendale_points != 0:
                                                                    if dots[1] > current_time:
                                                                        atta_num += atta_num * ((rage_of_rivendale_points * 2) / 100)
                                                                if morbitity_points != 0:
                                                                    atta_num += ((morbitity_points * 5) / 100)
                                                                if hysteria_active == True:
                                                                    atta_num = atta_num + (atta_num * .2)
                                                                if tricksoftt_active == True:
                                                                    atta_num = atta_num + (atta_num * .15)
                                                                atta_num = atta_num + (atta_num * increased_spell_damage) + (atta_num * increased_all_damage)
                                                                sudden_doom_damage += atta_num
                                                                if unholy_blight_points == 1:
                                                                    unholy_blight_amount = atta_num / 10 
                                                                    unholy_blight_timer = current_time + 10
                                                                if rune_of_cinderglacier_active == True:
                                                                     rune_of_cinderglacier_damage = atta_num * .2
                                                                     rune_of_cinderglacier_active_count += 1
                                                                     rotation.append("Rune of Cinderglacier")
                                                                     rotation_time.append(current_time)
                                                                     rotation_status.append("Active")
                                                                     rotation_damage.append(atta_num * .2)
                                                                     if rune_of_cinderglacier_active_count == 2:
                                                                         rune_of_cinderglacier_active = False
                                                                rotation.append("Sudden Doom")
                                                                rotation_time.append(current_time)
                                                                rotation_status.append("Hit")
                                                                rotation_damage.append(atta_num)
                                                        if hit == False:
                                                            rotation.append("Sudden Doom")
                                                            rotation_time.append(current_time)
                                                            rotation_status.append("Miss")
                                                            rotation_damage.append(0)
                                                rotation.append("OH - Blood Strike")
                                                rotation_time.append(current_time)
                                                rotation_status.append("Hit")
                                                rotation_damage.append(atta_num)
    
                                
                            
                                if attack_table_results == 0:
                                    atta_num = 0
                                    rune_cd_tracker[castable] = rune_cd(haste_rune_cd_miss, current_time)
                                    rotation.append("Blood Strike")
                                    rotation_time.append(current_time)
                                    rotation_status.append("Miss")
                                    rotation_damage.append(atta_num)
                                    current_time = current_time + gcd
                                    used_gcd = True
                                    continue
                                elif attack_table_results == 1:
                                    atta_num = 0
                                    rune_cd_tracker[castable] = rune_cd(haste_rune_cd_miss, current_time)
                                    rotation.append("Blood Strike")
                                    rotation_time.append(current_time)
                                    rotation_status.append("Dodge")
                                    rotation_damage.append(atta_num)
                                    current_time = current_time + gcd
                                    used_gcd = True
                                    continue
                                elif attack_table_results == 5:
                                    #crit attack
                                    rune_cd_tracker[castable] = rune_cd(haste_rune_cd, current_time)
                                    atta_num = (((746 + (wep_roll * .4)) + (( 746 + (wep_roll * .4)) * (.125 * how_many_dots_on_target)) + (( 746 + (wep_roll * .4)) * (.125 * how_many_dots_on_target) * darkruned_battlegear_four_set)) - (((746 + (wep_roll * .4)) + (( 746 + (wep_roll * .4)) * (.125 * how_many_dots_on_target)) + (( 746 + (wep_roll * .4)) * (.125 * how_many_dots_on_target) * darkruned_battlegear_four_set)) * armor_red_amount))  * (var_crit_amount + (guile_of_gorefiend_points * .15))
                                    if dk_presence == 0:
                                        atta_num = atta_num + (atta_num * .15)
                                    if tundra_stalker_points != 0:
                                        if dots[0] > current_time:
                                            atta_num = atta_num + (atta_num * (tundra_stalker_points * .03))
                                    if blood_of_the_north_points != 0:
                                        if blood_of_the_north_points < 3:
                                            atta_num = atta_num + (atta_num * (blood_of_the_north_points * .03))
                                        elif blood_of_the_north_points == 3:
                                            atta_num = atta_num + (atta_num * .1)
                                    if t9_tank_two_set == True:
                                        atta_num = atta_num + (atta_num *.05)
                                    if rage_of_rivendale_points != 0:
                                        if dots[1] > current_time:
                                            atta_num += atta_num * ((rage_of_rivendale_points * 2) / 100)
                                    if blood_strikes_points != 0:
                                        atta_num = atta_num + ((blood_strikes_points * 5) / 100)
                                    if might_of_mograine_points != 0:
                                        atta_num += atta_num * ((might_of_mograine_points * 15) / 100)
                                    if hysteria_active == True:
                                        atta_num = atta_num + (atta_num * .2)
                                    if tricksoftt_active == True:
                                        atta_num = atta_num + (atta_num * .15)
                                    atta_num = atta_num + (atta_num * increased_physical_damage) + (atta_num * increased_all_damage)
                                    sum_bs_attacks += atta_num
                                    current_power = runic_power(10, current_power, max_runic)
                                    trinket_hit_crit_tracker = 2
                                    if blood_of_the_north_points != 0:
                                        if just_used_death_rune != True:
                                            proc_num = random.randint(0, 100)
                                            if blood_of_the_north_points < 3:
                                                death_proc_chance = (blood_of_the_north_points * .3) * 100
                                            elif blood_of_the_north_points == 3:
                                                death_proc_chance = 100
                                            if death_proc_chance >= proc_num:
                                                death_castable = castable + death
                                                rune_cd_tracker[death_castable] = rune_cd(haste_rune_cd, current_time)
                                                rune_cd_tracker[castable] = 10000  
                                    if reaping_points != 0:
                                        if just_used_death_rune != True:
                                            proc_num = random.randint(0, 100)
                                            if reaping_points < 3:
                                                death_proc_chance = (reaping_points * .3) * 100
                                            elif reaping_points == 3:
                                                death_proc_chance = 100
                                            if death_proc_chance >= proc_num:
                                                death_castable = castable + death
                                                rune_cd_tracker[death_castable] = rune_cd(haste_rune_cd, current_time)
                                                rune_cd_tracker[castable] = 10000 
                                    if sigil_of_haunted_dreams == True:
                                        if random.randint(0, 100) < 15:
                                            if sigil_of_haunted_dreams_buff == False:
                                                sigil_of_haunted_dreams_buff = True
                                                sigil_of_haunted_dreams_timer = current_time + 10  
                                                total_crit = total_crit + ((173 / 45.8) / 100) 
                                    if t9_dps_two_set == True:
                                        if t9_bonus == False:
                                            if t9_cd_timer < current_time:
                                                if (random.randint(0, 10000)/100) < 50:
                                                    t9_bonus = True
                                                    t9_cd_timer = current_time + 45
                                                    t9_active_timer = current_time + 15
                                                    bonus_loop_str += 180
                                                    rotation.append("T9 DPS 2p Bonus")
                                                    rotation_time.append(current_time)
                                                    rotation_damage.append(0)
                                                    rotation_status.append("Proc")
                                    if desolation_points != 0:
                                        if desolation_buff == False:
                                            increased_all_damage += (desolation_points / 100)
                                            desolation_buff_timer = current_time + 20
                                            rotation.append("Desolation")
                                            rotation_time.append(current_time)
                                            rotation_damage.append(0)
                                            rotation_status.append("Applied")
                                            desolation_buff = True
                                        else:
                                            desolation_buff_timer = current_time + 20
                                            rotation.append("Desolation")
                                            rotation_time.append(current_time)
                                            rotation_damage.append(0)
                                            rotation_status.append("Refresh")
                                    if sudden_doom_points != 0:  #Sudden Doom aka Free Death Coil
                                        if (random.randint(0, 10000)/100) < sudden_doom_points * 5:
                                            hit = spell_hit(spell_hit_total, increased_spell_hit, target_level)
                                            crit = spell_crit((total_crit + (darkruned_battlegear_two_set / 100)), spell_hit_total, increased_spell_hit, target_level, increased_spell_crit)
                                            if hit == True:
                                                if crit == True:
                                                    atta_num = random.randint(443, 665)
                                                    atta_num = (atta_num + ((current_ap + (current_ap * ((impurity_points * 4) / 100))) * 0)) * var_crit_amount
                                                    if sigil_of_vengeful_heart == True:
                                                        atta_num + 380
                                                    if sigil_of_the_wild_buck == True:
                                                        atta_num += 80
                                                    if black_ice_points == 5:
                                                        atta_num = atta_num + (atta_num * .1)
                                                    elif black_ice_points == 4:
                                                        atta_num = atta_num + (atta_num * .08)
                                                    elif black_ice_points == 3:
                                                        atta_num = atta_num + (atta_num * .06)
                                                    elif black_ice_points == 2:
                                                        atta_num = atta_num + (atta_num * .04)
                                                    elif black_ice_points == 1:
                                                        atta_num = atta_num + (atta_num * .02)
                                                    if dk_presence == 0:
                                                        atta_num = atta_num + (atta_num * .15)
                                                    if tundra_stalker_points != 0:
                                                        if dots[0] > current_time:
                                                            atta_num = atta_num + (atta_num * (tundra_stalker_points * .03))
                                                    if glyph_death_coil == True:
                                                        atta_num += atta_num * .15
                                                    if rage_of_rivendale_points != 0:
                                                        if dots[1] > current_time:
                                                            atta_num += atta_num * ((rage_of_rivendale_points * 2) / 100)
                                                    if morbitity_points != 0:
                                                        atta_num += ((morbitity_points * 5) / 100)
                                                    if hysteria_active == True:
                                                        atta_num = atta_num + (atta_num * .2)
                                                    if tricksoftt_active == True:
                                                        atta_num = atta_num + (atta_num * .15)
                                                    atta_num = atta_num + (atta_num * increased_spell_damage) + (atta_num * increased_all_damage)
                                                    sudden_doom_damage += atta_num
                                                    if unholy_blight_points == 1:
                                                        unholy_blight_amount = atta_num / 10   
                                                        unholy_blight_timer = current_time + 10
                                                    if rune_of_cinderglacier_active == True:
                                                         rune_of_cinderglacier_damage = atta_num * .2
                                                         rune_of_cinderglacier_active_count += 1
                                                         rotation.append("Rune of Cinderglacier")
                                                         rotation_time.append(current_time)
                                                         rotation_status.append("Active")
                                                         rotation_damage.append(atta_num * .2)
                                                         if rune_of_cinderglacier_active_count == 2:
                                                             rune_of_cinderglacier_active = False
                                                    rotation.append("Sudden Doom")
                                                    rotation_time.append(current_time)
                                                    rotation_status.append("Crit")
                                                    rotation_damage.append(atta_num)
                                                else:
                                                    atta_num = random.randint(443, 665)
                                                    atta_num = (atta_num + ((current_ap + (current_ap * ((impurity_points * 4) / 100))) * 0))
                                                    if sigil_of_vengeful_heart == True:
                                                        atta_num + 380
                                                    if sigil_of_the_wild_buck == True:
                                                        atta_num += 80
                                                    if black_ice_points == 5:
                                                        atta_num = atta_num + (atta_num * .1)
                                                    elif black_ice_points == 4:
                                                        atta_num = atta_num + (atta_num * .08)
                                                    elif black_ice_points == 3:
                                                        atta_num = atta_num + (atta_num * .06)
                                                    elif black_ice_points == 2:
                                                        atta_num = atta_num + (atta_num * .04)
                                                    elif black_ice_points == 1:
                                                        atta_num = atta_num + (atta_num * .02)
                                                    if dk_presence == 0:
                                                        atta_num = atta_num + (atta_num * .15)
                                                    if tundra_stalker_points != 0:
                                                        if dots[0] > current_time:
                                                            atta_num = atta_num + (atta_num * (tundra_stalker_points * .03))
                                                    if glyph_death_coil == True:
                                                        atta_num += atta_num * .15
                                                    if rage_of_rivendale_points != 0:
                                                        if dots[1] > current_time:
                                                            atta_num += atta_num * ((rage_of_rivendale_points * 2) / 100)
                                                    if morbitity_points != 0:
                                                        atta_num += ((morbitity_points * 5) / 100)
                                                    if hysteria_active == True:
                                                        atta_num = atta_num + (atta_num * .2)
                                                    if tricksoftt_active == True:
                                                        atta_num = atta_num + (atta_num * .15)
                                                    atta_num = atta_num + (atta_num * increased_spell_damage) + (atta_num * increased_all_damage)
                                                    sudden_doom_damage += atta_num
                                                    if unholy_blight_points == 1:
                                                        unholy_blight_amount = atta_num / 10 
                                                        unholy_blight_timer = current_time + 10
                                                    if rune_of_cinderglacier_active == True:
                                                         rune_of_cinderglacier_damage = atta_num * .2
                                                         rune_of_cinderglacier_active_count += 1
                                                         rotation.append("Rune of Cinderglacier")
                                                         rotation_time.append(current_time)
                                                         rotation_status.append("Active")
                                                         rotation_damage.append(atta_num * .2)
                                                         if rune_of_cinderglacier_active_count == 2:
                                                             rune_of_cinderglacier_active = False
                                                    rotation.append("Sudden Doom")
                                                    rotation_time.append(current_time)
                                                    rotation_status.append("Hit")
                                                    rotation_damage.append(atta_num)
                                            if hit == False:
                                                rotation.append("Sudden Doom")
                                                rotation_time.append(current_time)
                                                rotation_status.append("Miss")
                                                rotation_damage.append(0)
                                    rotation.append("Blood Strike")
                                    rotation_time.append(current_time)
                                    rotation_status.append("Crit")
                                    rotation_damage.append(atta_num)
                                    current_time += gcd
                                    used_gcd = True
                                    # print("Blood Strike Crit - " + str(atta_num))
                                    continue
                                elif attack_table_results == 7:
                                    #normal attack
                                    rune_cd_tracker[castable] = rune_cd(haste_rune_cd, current_time)
                                    atta_num = ((746 + (wep_roll * .4)) + (( 746 + (wep_roll * .4)) * (.125 * how_many_dots_on_target)) + (( 746 + (wep_roll * .4)) * (.125 * how_many_dots_on_target) * darkruned_battlegear_four_set)) - (((746 + (wep_roll * .4)) + (( 746 + (wep_roll * .4)) * (.125 * how_many_dots_on_target)) + (( 746 + (wep_roll * .4)) * (.125 * how_many_dots_on_target) * darkruned_battlegear_four_set)) * armor_red_amount)
                                    if dk_presence == 0:
                                        atta_num = atta_num + (atta_num * .15)
                                    if tundra_stalker_points != 0:
                                        if dots[0] > current_time:
                                            atta_num = atta_num + (atta_num * (tundra_stalker_points * .03))
                                    if blood_of_the_north_points != 0:
                                        if blood_of_the_north_points < 3:
                                            atta_num = atta_num + (atta_num * (blood_of_the_north_points * .03))
                                        elif blood_of_the_north_points == 3:
                                            atta_num = atta_num + (atta_num * .1)
                                    if t9_tank_two_set == True:
                                        atta_num = atta_num + (atta_num *.05)
                                    if rage_of_rivendale_points != 0:
                                        if dots[1] > current_time:
                                            atta_num += atta_num * ((rage_of_rivendale_points * 2) / 100)
                                    if blood_strikes_points != 0:
                                        atta_num = atta_num + ((blood_strikes_points * 5) / 100)
                                    if hysteria_active == True:
                                        atta_num = atta_num + (atta_num * .2)
                                    if tricksoftt_active == True:
                                        atta_num = atta_num + (atta_num * .15)
                                    atta_num = atta_num + (atta_num * increased_physical_damage) + (atta_num * increased_all_damage)
                                    sum_bs_attacks += atta_num
                                    current_power = runic_power(10, current_power, max_runic)
                                    trinket_hit_crit_tracker = 1
                                    if blood_of_the_north_points != 0:
                                        if just_used_death_rune != True:
                                            proc_num = random.randint(0, 100)
                                            if blood_of_the_north_points < 3:
                                                death_proc_chance = (blood_of_the_north_points * .3) * 100
                                            elif blood_of_the_north_points == 3:
                                                death_proc_chance = 100
                                            if death_proc_chance >= proc_num:
                                                death_castable = castable + death
                                                rune_cd_tracker[death_castable] = rune_cd(haste_rune_cd, current_time)
                                                rune_cd_tracker[castable] = 10000  
                                    if reaping_points != 0:
                                        if just_used_death_rune != True:
                                            proc_num = random.randint(0, 100)
                                            if reaping_points < 3:
                                                death_proc_chance = (reaping_points * .3) * 100
                                            elif reaping_points == 3:
                                                death_proc_chance = 100
                                            if death_proc_chance >= proc_num:
                                                death_castable = castable + death
                                                rune_cd_tracker[death_castable] = rune_cd(haste_rune_cd, current_time)
                                                rune_cd_tracker[castable] = 10000 
                                    if sigil_of_haunted_dreams == True:
                                        if random.randint(0, 100) < 15:
                                            if sigil_of_haunted_dreams_buff == False:
                                                sigil_of_haunted_dreams_buff = True
                                                sigil_of_haunted_dreams_timer = current_time + 10  
                                                total_crit = total_crit + ((173 / 45.8) / 100) 
                                    if t9_dps_two_set == True:
                                        if t9_bonus == False:
                                            if t9_cd_timer < current_time:
                                                if (random.randint(0, 10000)/100) < 50:
                                                    t9_bonus = True
                                                    t9_cd_timer = current_time + 45
                                                    t9_active_timer = current_time + 15
                                                    bonus_loop_str += 180
                                                    rotation.append("T9 DPS 2p Bonus")
                                                    rotation_time.append(current_time)
                                                    rotation_damage.append(0)
                                                    rotation_status.append("Proc")
                                    if desolation_points != 0:
                                        if desolation_buff == False:
                                            increased_all_damage += (desolation_points / 100)
                                            desolation_buff_timer = current_time + 20
                                            rotation.append("Desolation")
                                            rotation_time.append(current_time)
                                            rotation_damage.append(0)
                                            rotation_status.append("Applied")
                                            desolation_buff = True
                                        else:
                                            desolation_buff_timer = current_time + 20
                                            rotation.append("Desolation")
                                            rotation_time.append(current_time)
                                            rotation_damage.append(0)
                                            rotation_status.append("Refresh")
                                    if sudden_doom_points != 0:  #Sudden Doom aka Free Death Coil
                                        if (random.randint(0, 10000)/100) < sudden_doom_points * 5:
                                            hit = spell_hit(spell_hit_total, increased_spell_hit, target_level)
                                            crit = spell_crit((total_crit + (darkruned_battlegear_two_set / 100)), spell_hit_total, increased_spell_hit, target_level, increased_spell_crit)
                                            if hit == True:
                                                if crit == True:
                                                    atta_num = random.randint(443, 665)
                                                    atta_num = (atta_num + ((current_ap + (current_ap * ((impurity_points * 4) / 100))) * 0)) * var_crit_amount
                                                    if sigil_of_vengeful_heart == True:
                                                        atta_num + 380
                                                    if sigil_of_the_wild_buck == True:
                                                        atta_num += 80
                                                    if black_ice_points == 5:
                                                        atta_num = atta_num + (atta_num * .1)
                                                    elif black_ice_points == 4:
                                                        atta_num = atta_num + (atta_num * .08)
                                                    elif black_ice_points == 3:
                                                        atta_num = atta_num + (atta_num * .06)
                                                    elif black_ice_points == 2:
                                                        atta_num = atta_num + (atta_num * .04)
                                                    elif black_ice_points == 1:
                                                        atta_num = atta_num + (atta_num * .02)
                                                    if dk_presence == 0:
                                                        atta_num = atta_num + (atta_num * .15)
                                                    if tundra_stalker_points != 0:
                                                        if dots[0] > current_time:
                                                            atta_num = atta_num + (atta_num * (tundra_stalker_points * .03))
                                                    if glyph_death_coil == True:
                                                        atta_num += atta_num * .15
                                                    if rage_of_rivendale_points != 0:
                                                        if dots[1] > current_time:
                                                            atta_num += atta_num * ((rage_of_rivendale_points * 2) / 100)
                                                    if morbitity_points != 0:
                                                        atta_num += ((morbitity_points * 5) / 100)
                                                    if hysteria_active == True:
                                                        atta_num = atta_num + (atta_num * .2)
                                                    if tricksoftt_active == True:
                                                        atta_num = atta_num + (atta_num * .15)
                                                    atta_num = atta_num + (atta_num * increased_spell_damage) + (atta_num * increased_all_damage)
                                                    sudden_doom_damage += atta_num
                                                    if unholy_blight_points == 1:
                                                        unholy_blight_amount = atta_num / 10   
                                                        unholy_blight_timer = current_time + 10
                                                    if rune_of_cinderglacier_active == True:
                                                         rune_of_cinderglacier_damage = atta_num * .2
                                                         rune_of_cinderglacier_active_count += 1
                                                         rotation.append("Rune of Cinderglacier")
                                                         rotation_time.append(current_time)
                                                         rotation_status.append("Active")
                                                         rotation_damage.append(atta_num * .2)
                                                         if rune_of_cinderglacier_active_count == 2:
                                                             rune_of_cinderglacier_active = False
                                                    rotation.append("Sudden Doom")
                                                    rotation_time.append(current_time)
                                                    rotation_status.append("Crit")
                                                    rotation_damage.append(atta_num)
                                                else:
                                                    atta_num = random.randint(443, 665)
                                                    atta_num = (atta_num + ((current_ap + (current_ap * ((impurity_points * 4) / 100))) * 0))
                                                    if sigil_of_vengeful_heart == True:
                                                        atta_num + 380
                                                    if sigil_of_the_wild_buck == True:
                                                        atta_num += 80
                                                    if black_ice_points == 5:
                                                        atta_num = atta_num + (atta_num * .1)
                                                    elif black_ice_points == 4:
                                                        atta_num = atta_num + (atta_num * .08)
                                                    elif black_ice_points == 3:
                                                        atta_num = atta_num + (atta_num * .06)
                                                    elif black_ice_points == 2:
                                                        atta_num = atta_num + (atta_num * .04)
                                                    elif black_ice_points == 1:
                                                        atta_num = atta_num + (atta_num * .02)
                                                    if dk_presence == 0:
                                                        atta_num = atta_num + (atta_num * .15)
                                                    if tundra_stalker_points != 0:
                                                        if dots[0] > current_time:
                                                            atta_num = atta_num + (atta_num * (tundra_stalker_points * .03))
                                                    if glyph_death_coil == True:
                                                        atta_num += atta_num * .15
                                                    if rage_of_rivendale_points != 0:
                                                        if dots[1] > current_time:
                                                            atta_num += atta_num * ((rage_of_rivendale_points * 2) / 100)
                                                    if morbitity_points != 0:
                                                        atta_num += ((morbitity_points * 5) / 100)
                                                    if hysteria_active == True:
                                                        atta_num = atta_num + (atta_num * .2)
                                                    if tricksoftt_active == True:
                                                        atta_num = atta_num + (atta_num * .15)
                                                    atta_num = atta_num + (atta_num * increased_spell_damage) + (atta_num * increased_all_damage)
                                                    sudden_doom_damage += atta_num
                                                    if unholy_blight_points == 1:
                                                        unholy_blight_amount = atta_num / 10 
                                                        unholy_blight_timer = current_time + 10
                                                    if rune_of_cinderglacier_active == True:
                                                         rune_of_cinderglacier_damage = atta_num * .2
                                                         rune_of_cinderglacier_active_count += 1
                                                         rotation.append("Rune of Cinderglacier")
                                                         rotation_time.append(current_time)
                                                         rotation_status.append("Active")
                                                         rotation_damage.append(atta_num * .2)
                                                         if rune_of_cinderglacier_active_count == 2:
                                                             rune_of_cinderglacier_active = False
                                                    rotation.append("Sudden Doom")
                                                    rotation_time.append(current_time)
                                                    rotation_status.append("Hit")
                                                    rotation_damage.append(atta_num)
                                            if hit == False:
                                                rotation.append("Sudden Doom")
                                                rotation_time.append(current_time)
                                                rotation_status.append("Miss")
                                                rotation_damage.append(0)
                                    rotation.append("Blood Strike")
                                    rotation_time.append(current_time)
                                    rotation_status.append("Hit")
                                    rotation_damage.append(atta_num)
                                    current_time += gcd
                                    used_gcd = True
                                    # print("Blood Strike - " + str(atta_num))
                                    continue
                                                
                    castable = all_rune_check(frost, current_time, rune_cd_tracker) #Start of Death Strike
                    use_death_rune = False
                    if castable == 3:
                        castable_death = all_rune_check(death, current_time, rune_cd_tracker)
                        castable_death_f = all_rune_check(death_f, current_time, rune_cd_tracker)
                        castable_death_u = all_rune_check(death_u, current_time, rune_cd_tracker)
                        if castable_death != 3:
                            use_death_rune = True
                            just_used_death_rune = True
                            castable_frost = all_rune_check(frost, current_time, rune_cd_tracker)
                            castable_unholy = all_rune_check(unholy, current_time, rune_cd_tracker)
                            if dots[0] <= current_time + haste_rune_cd:
                                if dots[1] <= current_time + haste_rune_cd:
                                    if castable_death == 2:
                                        castable_death = 1
                            if castable_death == 2 or castable_frost < 3:
                                castable = 2
                        elif castable_death_f != 3:
                            use_death_rune = True
                            just_used_death_rune = True
                            castable_frost = all_rune_check(frost, current_time, rune_cd_tracker)
                            castable_unholy = all_rune_check(unholy, current_time, rune_cd_tracker)
                            if dots[0] <= current_time + haste_rune_cd:
                                if dots[1] <= current_time + haste_rune_cd:
                                    if castable_death_f == 2:
                                        castable_death_f = 1
                            if castable_death_f == 2 or castable_frost < 3:
                                castable = 2
                        elif castable_death_u != 3:
                            use_death_rune = True
                            just_used_death_rune = True
                            castable_frost = all_rune_check(frost, current_time, rune_cd_tracker)
                            castable_unholy = all_rune_check(unholy, current_time, rune_cd_tracker)
                            if dots[0] <= current_time + haste_rune_cd:
                                if dots[1] <= current_time + haste_rune_cd:
                                    if castable_death_u == 2:
                                        castable_death_u = 1
                            if castable_death_u == 2 or castable_frost < 3:
                                castable = 2
                    if castable != 3:
                        castable = all_rune_check(unholy, current_time, rune_cd_tracker)
                        #use_death_rune = False
                        if castable == 3:
                            castable_death = all_rune_check(death, current_time, rune_cd_tracker)
                            castable_death_f = all_rune_check(death_f, current_time, rune_cd_tracker)
                            castable_death_u = all_rune_check(death_u, current_time, rune_cd_tracker)
                            if use_death_rune == True:
                                castable_death = all_rune_check(death, current_time, rune_cd_tracker)
                                castable_death_f = all_rune_check(death_f, current_time, rune_cd_tracker)
                                castable_death_u = all_rune_check(death_u, current_time, rune_cd_tracker)
                                if dots[0] <= current_time + haste_rune_cd:
                                    if dots[1] <= current_time + haste_rune_cd:
                                        castable = 3
                                else:
                                    if castable_death != 2:
                                        castable = 3
                                    elif castable_death_f != 2:
                                        castable = 3
                                    elif castable_death_u != 2:
                                        castable = 3
                            elif castable_death != 3:
                                use_death_rune = True
                                just_used_death_rune = True
                                castable_frost = all_rune_check(frost, current_time, rune_cd_tracker)
                                castable_unholy = all_rune_check(unholy, current_time, rune_cd_tracker)
                                if dots[0] <= current_time + haste_rune_cd:
                                    if dots[1] <= current_time + haste_rune_cd:
                                        if castable_death == 2:
                                            castable_death = 1
                                if castable_death == 2 or castable_unholy < 3:
                                    castable = 2
                            elif castable_death_f != 3:
                                use_death_rune = True
                                just_used_death_rune = True
                                castable_frost = all_rune_check(frost, current_time, rune_cd_tracker)
                                castable_unholy = all_rune_check(unholy, current_time, rune_cd_tracker)
                                if dots[0] <= current_time + haste_rune_cd:
                                    if dots[1] <= current_time + haste_rune_cd:
                                        if castable_death_f == 2:
                                            castable_death_f = 1
                                if castable_death_f == 2 or castable_unholy < 3:
                                    castable = 2
                            elif castable_death_u != 3:
                                use_death_rune = True
                                just_used_death_rune = True
                                castable_frost = all_rune_check(frost, current_time, rune_cd_tracker)
                                castable_unholy = all_rune_check(unholy, current_time, rune_cd_tracker)
                                if dots[0] <= current_time + haste_rune_cd:
                                    if dots[1] <= current_time + haste_rune_cd:
                                        if castable_death_u == 2:
                                            castable_death_u = 1
                                if castable_death_u == 2 or castable_unholy < 3:
                                    castable = 2
                        if castable != 3: 
                            castable = all_rune_check(frost, current_time, rune_cd_tracker)
                            castable1 = all_rune_check(unholy, current_time, rune_cd_tracker)
                            if castable == 2: #Can add abilitie modifiers later to damage math
                                castable = 0
                            if castable1 == 2:
                                castable1 = 0
                            if use_death_rune == True:
                                use_death_rune = False
                                if castable == 3 or castable1 == 3:
                                    castable_death = all_rune_check(death, current_time, rune_cd_tracker)
                                    castable_death_f = all_rune_check(death_f, current_time, rune_cd_tracker)
                                    castable_death_u = all_rune_check(death_u, current_time, rune_cd_tracker)
                                    castable_frost = all_rune_check(frost, current_time, rune_cd_tracker)
                                    castable_unholy = all_rune_check(unholy, current_time, rune_cd_tracker)
                                    if castable_frost < 3:
                                        if castable_death != 3:
                                            if castable_death == 2:
                                                castable_death = 0
                                            if castable_frost == 2:
                                                castable_frost = 0
                                            rune_cd_tracker[castable_death] = 0
                                            rune_cd_tracker[castable_frost+2] = 0
                                            rune_cd_tracker[castable_death+6] = 10000
                                            rune_cd_tracker[castable_frost+8] = 10000
                                            castable = 0
                                            castable1 = 1
                                        elif castable_death_f != 3:
                                            if castable_death_f == 2:
                                                castable_death_f = 0
                                            if castable_frost == 2:
                                                castable_frost = 0
                                            rune_cd_tracker[castable_death_f+2] = 0
                                            rune_cd_tracker[castable_frost+2] = 0
                                            rune_cd_tracker[castable_death_f+8] = 10000
                                            rune_cd_tracker[castable_frost+8] = 10000
                                            castable = 0
                                            castable1 = 1
                                        elif castable_death_u != 3:
                                            if castable_death_u == 2:
                                                castable_death_u = 0
                                            if castable_frost == 2:
                                                castable_frost = 0
                                            rune_cd_tracker[castable_death_u+4] = 0
                                            rune_cd_tracker[castable_frost+2] = 0
                                            rune_cd_tracker[castable_death_u+10] = 10000
                                            rune_cd_tracker[castable_frost+8] = 10000
                                            castable = 0
                                            castable1 = 1
                                    elif castable_unholy < 3:
                                        if castable_death != 3:
                                            if castable_death == 2:
                                                castable_death = 0
                                            if castable_unholy == 2:
                                                castable_unholy = 0
                                            rune_cd_tracker[castable_death] = 0
                                            rune_cd_tracker[castable_unholy+4] = 0
                                            rune_cd_tracker[castable_death+6] = 10000
                                            rune_cd_tracker[castable_unholy+10] = 10000
                                            castable = 0
                                            castable1 = 1
                                        elif castable_death_f != 3:
                                            if castable_death_f == 2:
                                                castable_death_f = 0
                                            if castable_unholy == 2:
                                                castable_unholy = 0
                                            rune_cd_tracker[castable_death_f+2] = 0
                                            rune_cd_tracker[castable_unholy+4] = 0
                                            rune_cd_tracker[castable_death_f+8] = 10000
                                            rune_cd_tracker[castable_unholy+10] = 10000
                                            castable = 0
                                            castable1 = 1
                                        elif castable_death_u != 3:
                                            if castable_death_u == 2:
                                                castable_death_u = 0
                                            if castable_unholy == 2:
                                                castable_unholy = 0
                                            rune_cd_tracker[castable_death_u+4] = 0
                                            rune_cd_tracker[castable_unholy+4] = 0
                                            rune_cd_tracker[castable_death_u+10] = 10000
                                            rune_cd_tracker[castable_unholy+10] = 10000
                                            castable = 0
                                            castable1 = 1
                                    elif castable_death < 2:
                                        if castable_death_f != 3:
                                            if castable_death_f == 2:
                                                castable_death_f = 0
                                            if castable_death == 2:
                                                castable_death = 0
                                            rune_cd_tracker[castable_death] = 0
                                            rune_cd_tracker[castable_death_f+2] = 0
                                            rune_cd_tracker[castable_death+6] = 10000
                                            rune_cd_tracker[castable_death_f+8] = 10000
                                            castable = 0
                                            castable1 = 1
                                        elif castable_death_u != 3:
                                            if castable_death_u == 2:
                                                castable_death_u = 0
                                            if castable_death == 2:
                                                castable_death = 0
                                            rune_cd_tracker[castable_death] = 0
                                            rune_cd_tracker[castable_death_u+4] = 0
                                            rune_cd_tracker[castable_death+6] = 10000
                                            rune_cd_tracker[castable_death_u+10] = 10000
                                            castable = 0
                                            castable1 = 1
                                    elif castable_death_f < 2:
                                        if castable_death_u != 3:
                                            if castable_death_u == 2:
                                                castable_death_u = 0
                                            if castable_death_f == 2:
                                                castable_death_f = 0
                                            rune_cd_tracker[castable_death_f+2] = 0
                                            rune_cd_tracker[castable_death_u+4] = 0
                                            rune_cd_tracker[castable_death_f+8] = 10000
                                            rune_cd_tracker[castable_death_u+10] = 10000
                                            castable = 0
                                            castable1 = 1
                                    elif castable_death == 2 or castable_death_f == 2 or castable_death_u == 2:
                                        if castable_death != 3:
                                            if dots[0] > current_time + haste_rune_cd:
                                                if dots[1] > current_time + haste_rune_cd:
                                                    rune_cd_tracker[0] = 0
                                                    rune_cd_tracker[1] = 0
                                                    rune_cd_tracker[6] = 10000
                                                    rune_cd_tracker[7] = 10000
                                                    castable = 0
                                                    castable1 = 1
                                                else:
                                                    continue
                                                #need to not run here
                                            else:
                                                continue
                                            #need to not run here
                                        elif castable_death_f != 3:
                                            if dots[0] > current_time + haste_rune_cd:
                                                if dots[1] > current_time + haste_rune_cd:
                                                    rune_cd_tracker[2] = 0
                                                    rune_cd_tracker[3] = 0
                                                    rune_cd_tracker[8] = 10000
                                                    rune_cd_tracker[9] = 10000
                                                    castable = 2
                                                    castable1 = 3
                                                else:
                                                    continue
                                                #need to not run here
                                            else:
                                                continue
                                            #need to not run here
                                        elif castable_death_u != 3:
                                            if dots[0] > current_time + haste_rune_cd:
                                                if dots[1] > current_time + haste_rune_cd:
                                                    rune_cd_tracker[4] = 0
                                                    rune_cd_tracker[5] = 0
                                                    rune_cd_tracker[10] = 10000
                                                    rune_cd_tracker[11] = 10000
                                                    castable = 4
                                                    castable1 = 5
                                                else:
                                                    continue
                                                #need to not run here
                                            else:
                                                continue
                                            #need to not run here
                            
                            else:
                                use_death_rune = False
                                castable += frost
                                castable1 += unholy
                            attack_table_results = attack_table(1, tanking, H2, True, False, hit_from_gear, hit_from_other, target_level, all_expertise_dodge, all_expertise_parry, total_crit, ((annihilation_talent_points / 100) + increased_phy_crit + (scourgeborne_battlegear_two_set / 100) + ((improved_death_strikes_points * 3) / 100)))
                            armor_red_amount = dam_reduc(current_armor, armor_penetration, target_level)
                            wep_roll = weapon_roll(mh_input_lowend_weapon_damage,mh_input_topend_weapon_damage)
                            wep_roll = wep_roll + (attack_damage_normalization * current_ap / 14)
                            #Rune Hit
                            haste_percentage = (total_haste_rating / 25.21) / 100 #Returns a result of 0 - 1 for 0% - 100%
                            haste_rune_cd = rune_grade_timer(current_time, last_rune_change[castable], last_rune_change[castable+6])
                            if improved_unholy_presence_points != 0:
                                if dk_presence == 2:
                                    haste_rune_cd = haste_rune_cd - (haste_rune_cd * ((improved_unholy_presence_points * 5) / 100))
                            if dk_presence != 2:
                                gcd = input_gcd / (1 + haste_percentage)
                                if gcd < 1:
                                    gcd = 1
                            ##Rune Miss
                            haste_rune_cd_miss = 1
                            how_many_dots_on_target = 0
                            if dots[0] > current_time:
                                how_many_dots_on_target += 1
                            if dots[1] > current_time:
                                how_many_dots_on_target += 1
                            if dots[2] > current_time:
                                how_many_dots_on_target += 1
                            if dancing_rune_weapon_points == 1:
                                if dancing_rune_weapon_active == True:
                                    if attack_table_results == 0:
                                        atta_num = 0
                                        rotation.append("Dancing Rune Weapon")
                                        rotation_time.append(current_time)
                                        rotation_status.append("Miss")
                                        rotation_damage.append(atta_num)
                                    elif attack_table_results == 1:
                                        atta_num = 0
                                        rotation.append("Dancing Rune Weapon")
                                        rotation_time.append(current_time)
                                        rotation_status.append("Dodge")
                                        rotation_damage.append(atta_num)
                                    elif attack_table_results == 5:
                                        #crit attack
                                        atta_num = (((223 + (wep_roll * .75))) - (((223 + (wep_roll * .75))) * armor_red_amount))  * (var_crit_amount)
                                        if sigil_of_awareness == True:
                                            atta_num + 315
                                        if dk_presence == 0:
                                            atta_num = atta_num + (atta_num * .15)
                                        if tundra_stalker_points != 0:
                                            if dots[0] > current_time:
                                                atta_num = atta_num + (atta_num * (tundra_stalker_points * .03))
                                        if rage_of_rivendale_points != 0:
                                            if dots[1] > current_time:
                                                atta_num += atta_num * ((rage_of_rivendale_points * 2) / 100)
                                        if might_of_mograine_points != 0:
                                            atta_num += atta_num * ((might_of_mograine_points * 15) / 100)
                                        if improved_death_strikes_points != 0:
                                            atta_num += atta_num * ((improved_death_strikes_points * 15) / 100)
                                        if glyph_death_strike == True:
                                            if current_power > 25:
                                                death_strike_extra_damage_bonus = 25
                                            else:
                                                death_strike_extra_damage_bonus = current_power
                                            atta_num += atta_num * death_strike_extra_damage_bonus
                                        if hysteria_active == True:
                                            atta_num = atta_num + (atta_num * .2)
                                        if tricksoftt_active == True:
                                            atta_num = atta_num + (atta_num * .15)
                                        atta_num = atta_num + (atta_num * increased_physical_damage) + (atta_num * increased_all_damage)
                                        atta_num = atta_num * dancing_rune_weapon_damage_multi
                                        dancing_rune_weapon_damage += atta_num
                                        trinket_hit_crit_tracker = 2
                                        if sigil_of_virulence == True:
                                            if random.randint(0, 100) < 85:
                                                sigil_of_virulence_timer = current_time + 20 
                                                if sigil_of_virulence_buff == False:
                                                    sigil_of_virulence_buff = True 
                                                    bonus_loop_str += 200
                                        if sigil_of_hanged_man == True:
                                            if random.randint(0, 100) < 101:
                                                sigil_of_hanged_man_buff = True
                                                sigil_of_hanged_man_timer = current_time + 15
                                                sigil_of_hanged_man_count += 1
                                                if sigil_of_hanged_man_count < 4:
                                                    bonus_loop_str += 73
                                                elif sigil_of_hanged_man_count >= 3:
                                                    sigil_of_hanged_man_count = 3
                                        if death_rune_mastery_points != 0:
                                            if just_used_death_rune != True:
                                                proc_num = random.randint(0, 100)
                                                if death_rune_mastery_points < 3:
                                                    death_proc_chance = (death_rune_mastery_points * .3) * 100
                                                elif death_rune_mastery_points == 3:
                                                    death_proc_chance = 100
                                                if death_proc_chance >= proc_num:
                                                    death_castable_f = castable + 6
                                                    death_castable_u = castable1 + 6
                                                    rune_cd_tracker[death_castable_f] = rune_cd(haste_rune_cd, current_time)
                                                    rune_cd_tracker[death_castable_u] = rune_cd(haste_rune_cd, current_time)
                                                    rune_cd_tracker[castable] = 10000 
                                                    rune_cd_tracker[castable1] = 10000
                                        rotation.append("Dancing Rune Weapon")
                                        rotation_time.append(current_time)
                                        rotation_status.append("Crit")
                                        rotation_damage.append(atta_num)
                                        trinket_hit_crit_tracker = 2
                                        
                                    elif attack_table_results == 7:
                                        atta_num = (((223 + (wep_roll * .75))) - (((223 + (wep_roll * .75))) * armor_red_amount))
                                        if sigil_of_awareness == True:
                                            atta_num + 315
                                        if dk_presence == 0:
                                            atta_num = atta_num + (atta_num * .15)
                                        if tundra_stalker_points != 0:
                                            if dots[0] > current_time:
                                                atta_num = atta_num + (atta_num * (tundra_stalker_points * .03))
                                        if rage_of_rivendale_points != 0:
                                            if dots[1] > current_time:
                                                atta_num += atta_num * ((rage_of_rivendale_points * 2) / 100)
                                        if might_of_mograine_points != 0:
                                            atta_num += atta_num * ((might_of_mograine_points * 15) / 100)
                                        if improved_death_strikes_points != 0:
                                            atta_num += atta_num * ((improved_death_strikes_points * 15) / 100)
                                        if glyph_death_strike == True:
                                            if current_power > 25:
                                                death_strike_extra_damage_bonus = 25
                                            else:
                                                death_strike_extra_damage_bonus = current_power
                                            atta_num += atta_num * death_strike_extra_damage_bonus
                                        if hysteria_active == True:
                                            atta_num = atta_num + (atta_num * .2)
                                        if tricksoftt_active == True:
                                            atta_num = atta_num + (atta_num * .15)
                                        atta_num = atta_num + (atta_num * increased_physical_damage) + (atta_num * increased_all_damage)
                                        atta_num = atta_num * dancing_rune_weapon_damage_multi
                                        dancing_rune_weapon_damage += atta_num
                                        trinket_hit_crit_tracker = 1
                                        if sigil_of_virulence == True:
                                            if random.randint(0, 100) < 85:
                                                sigil_of_virulence_timer = current_time + 20 
                                                if sigil_of_virulence_buff == False:
                                                    sigil_of_virulence_buff = True 
                                                    bonus_loop_str += 200
                                        if sigil_of_hanged_man == True:
                                            if random.randint(0, 100) < 101:
                                                sigil_of_hanged_man_buff = True
                                                sigil_of_hanged_man_timer = current_time + 15
                                                sigil_of_hanged_man_count += 1
                                                if sigil_of_hanged_man_count < 4:
                                                    bonus_loop_str += 73
                                                elif sigil_of_hanged_man_count >= 3:
                                                    sigil_of_hanged_man_count = 3
                                        if death_rune_mastery_points != 0:
                                            if just_used_death_rune != True:
                                                proc_num = random.randint(0, 100)
                                                if death_rune_mastery_points < 3:
                                                    death_proc_chance = (death_rune_mastery_points * .3) * 100
                                                elif death_rune_mastery_points == 3:
                                                    death_proc_chance = 100
                                                if death_proc_chance >= proc_num:
                                                    death_castable_f = castable + 6
                                                    death_castable_u = castable1 + 6
                                                    rune_cd_tracker[death_castable_f] = rune_cd(haste_rune_cd, current_time)
                                                    rune_cd_tracker[death_castable_u] = rune_cd(haste_rune_cd, current_time)
                                                    rune_cd_tracker[castable] = 10000 
                                                    rune_cd_tracker[castable1] = 10000
                                        rotation.append("Dancing Rune Weapon")
                                        rotation_time.append(current_time)
                                        rotation_status.append("Hit")
                                        rotation_damage.append(atta_num)
                                        trinket_hit_crit_tracker = 1
                                                             
                            if threat_of_thassarian_points != 0: 
                                if H2 == False:
                                    threat_of_thass_roll = (threat_of_thassarian_points * 30) 
                                    if threat_of_thassarian_points == 3: 
                                        threat_of_thass_roll += 10 
                                    threat_of_t_num = random.randint(0, 100) 
                                    if threat_of_thass_roll >= threat_of_t_num: 
                                        oh_wep_roll = weapon_roll(oh_input_lowend_weapon_damage,oh_input_topend_weapon_damage)
                                        oh_wep_roll = wep_roll + (attack_damage_normalization * current_ap / 14)
                                        oh_attack_table_results = attack_table(1, tanking, H2, False, True, hit_from_gear, hit_from_other, target_level, all_expertise_dodge, all_expertise_parry, total_crit, ((annihilation_talent_points / 100) + increased_phy_crit + (scourgeborne_battlegear_two_set / 100) + ((improved_death_strikes_points * 3) / 100)))
                                        if oh_attack_table_results == 0:
                                            atta_num = 0
                                            rotation.append("OH - Death Strike")
                                            rotation_time.append(current_time)
                                            rotation_status.append("Miss")
                                            rotation_damage.append(atta_num)
                                        elif oh_attack_table_results == 1:
                                            atta_num = 0
                                            rotation.append("OH - Death Strike")
                                            rotation_time.append(current_time)
                                            rotation_status.append("Dodge")
                                            rotation_damage.append(atta_num)
                                        elif oh_attack_table_results == 5:
                                            #crit attack
                                            atta_num = (((223 + (oh_wep_roll * .75))) - (((223 + (oh_wep_roll * .75))) * armor_red_amount))  * (var_crit_amount)
                                            if sigil_of_awareness == True:
                                                atta_num + 315
                                            if dk_presence == 0:
                                                atta_num = atta_num + (atta_num * .15)
                                            if tundra_stalker_points != 0:
                                                if dots[0] > current_time:
                                                    atta_num = atta_num + (atta_num * (tundra_stalker_points * .03))
                                            if rage_of_rivendale_points != 0:
                                                if dots[1] > current_time:
                                                    atta_num += atta_num * ((rage_of_rivendale_points * 2) / 100)
                                            if might_of_mograine_points != 0:
                                                atta_num += atta_num * ((might_of_mograine_points * 15) / 100)
                                            if improved_death_strikes_points != 0:
                                                atta_num += atta_num * ((improved_death_strikes_points * 15) / 100)
                                            if glyph_death_strike == True:
                                                if current_power > 25:
                                                    death_strike_extra_damage_bonus = 25
                                                else:
                                                    death_strike_extra_damage_bonus = current_power
                                                atta_num += atta_num * death_strike_extra_damage_bonus
                                            atta_num = atta_num * oh_wep_damage_mod
                                            if hysteria_active == True:
                                                atta_num = atta_num + (atta_num * .2)
                                            if tricksoftt_active == True:
                                                atta_num = atta_num + (atta_num * .15)
                                            atta_num = atta_num + (atta_num * increased_physical_damage) + (atta_num * increased_all_damage)
                                            sum_death_strike_attacks += atta_num
                                            trinket_hit_crit_tracker = 2
                                            if sigil_of_virulence == True:
                                                if random.randint(0, 100) < 85:
                                                    sigil_of_virulence_timer = current_time + 20 
                                                    if sigil_of_virulence_buff == False:
                                                        sigil_of_virulence_buff = True 
                                                        bonus_loop_str += 200
                                            if sigil_of_hanged_man == True:
                                                if random.randint(0, 100) < 101:
                                                    sigil_of_hanged_man_buff = True
                                                    sigil_of_hanged_man_timer = current_time + 15
                                                    sigil_of_hanged_man_count += 1
                                                    if sigil_of_hanged_man_count < 4:
                                                        bonus_loop_str += 73
                                                    elif sigil_of_hanged_man_count >= 3:
                                                        sigil_of_hanged_man_count = 3
                                            if death_rune_mastery_points != 0:
                                                if just_used_death_rune != True:
                                                    proc_num = random.randint(0, 100)
                                                    if death_rune_mastery_points < 3:
                                                        death_proc_chance = (death_rune_mastery_points * .3) * 100
                                                    elif death_rune_mastery_points == 3:
                                                        death_proc_chance = 100
                                                    if death_proc_chance >= proc_num:
                                                        death_castable_f = castable + 6
                                                        death_castable_u = castable1 + 6
                                                        rune_cd_tracker[death_castable_f] = rune_cd(haste_rune_cd, current_time)
                                                        rune_cd_tracker[death_castable_u] = rune_cd(haste_rune_cd, current_time)
                                                        rune_cd_tracker[castable] = 10000 
                                                        rune_cd_tracker[castable1] = 10000
                                            rotation.append("OH - Death Strike")
                                            rotation_time.append(current_time)
                                            rotation_status.append("Crit")
                                            rotation_damage.append(atta_num)

                                                
                                        elif oh_attack_table_results == 7:
                                            atta_num = (((223 + (oh_wep_roll * .75))) - (((223 + (oh_wep_roll * .75))) * armor_red_amount))
                                            if sigil_of_awareness == True:
                                                atta_num + 315
                                            if dk_presence == 0:
                                                atta_num = atta_num + (atta_num * .15)
                                            if tundra_stalker_points != 0:
                                                if dots[0] > current_time:
                                                    atta_num = atta_num + (atta_num * (tundra_stalker_points * .03))
                                            if rage_of_rivendale_points != 0:
                                                if dots[1] > current_time:
                                                    atta_num += atta_num * ((rage_of_rivendale_points * 2) / 100)
                                            if might_of_mograine_points != 0:
                                                atta_num += atta_num * ((might_of_mograine_points * 15) / 100)
                                            if improved_death_strikes_points != 0:
                                                atta_num += atta_num * ((improved_death_strikes_points * 15) / 100)
                                            if glyph_death_strike == True:
                                                if current_power > 25:
                                                    death_strike_extra_damage_bonus = 25
                                                else:
                                                    death_strike_extra_damage_bonus = current_power
                                                atta_num += atta_num * death_strike_extra_damage_bonus
                                            atta_num = atta_num * oh_wep_damage_mod
                                            if hysteria_active == True:
                                                atta_num = atta_num + (atta_num * .2)
                                            if tricksoftt_active == True:
                                                atta_num = atta_num + (atta_num * .15)
                                            atta_num = atta_num + (atta_num * increased_physical_damage) + (atta_num * increased_all_damage)
                                            sum_death_strike_attacks += atta_num
                                            trinket_hit_crit_tracker = 1
                                            if sigil_of_virulence == True:
                                                if random.randint(0, 100) < 85:
                                                    sigil_of_virulence_timer = current_time + 20 
                                                    if sigil_of_virulence_buff == False:
                                                        sigil_of_virulence_buff = True 
                                                        bonus_loop_str += 200
                                            if sigil_of_hanged_man == True:
                                                if random.randint(0, 100) < 101:
                                                    sigil_of_hanged_man_buff = True
                                                    sigil_of_hanged_man_timer = current_time + 15
                                                    sigil_of_hanged_man_count += 1
                                                    if sigil_of_hanged_man_count < 4:
                                                        bonus_loop_str += 73
                                                    elif sigil_of_hanged_man_count >= 3:
                                                        sigil_of_hanged_man_count = 3
                                            if death_rune_mastery_points != 0:
                                                if just_used_death_rune != True:
                                                    proc_num = random.randint(0, 100)
                                                    if death_rune_mastery_points < 3:
                                                        death_proc_chance = (death_rune_mastery_points * .3) * 100
                                                    elif death_rune_mastery_points == 3:
                                                        death_proc_chance = 100
                                                    if death_proc_chance >= proc_num:
                                                        death_castable_f = castable + 6
                                                        death_castable_u = castable1 + 6
                                                        rune_cd_tracker[death_castable_f] = rune_cd(haste_rune_cd, current_time)
                                                        rune_cd_tracker[death_castable_u] = rune_cd(haste_rune_cd, current_time)
                                                        rune_cd_tracker[castable] = 10000 
                                                        rune_cd_tracker[castable1] = 10000
                                            rotation.append("OH - Death Strike")
                                            rotation_time.append(current_time)
                                            rotation_status.append("Hit")
                                            rotation_damage.append(atta_num)
                                            

                            
                            
                            if attack_table_results == 0:
                                atta_num = 0
                                rune_cd_tracker[castable] = rune_cd(haste_rune_cd_miss, current_time)
                                rune_cd_tracker[castable1] = rune_cd(haste_rune_cd_miss, current_time)
                                rotation.append("Death Strike")
                                rotation_time.append(current_time)
                                rotation_status.append("Miss")
                                rotation_damage.append(atta_num)
                                current_time = current_time + gcd
                                used_gcd = True
                                continue
                            elif attack_table_results == 1:
                                atta_num = 0
                                rune_cd_tracker[castable] = rune_cd(haste_rune_cd_miss, current_time)
                                rune_cd_tracker[castable1] = rune_cd(haste_rune_cd_miss, current_time)
                                rotation.append("Death Strike")
                                rotation_time.append(current_time)
                                rotation_status.append("Dodge")
                                rotation_damage.append(atta_num)
                                current_time = current_time + gcd
                                used_gcd = True
                                continue
                            elif attack_table_results == 5:
                                #crit attack
                                rune_cd_tracker[castable] = rune_cd(haste_rune_cd, current_time)
                                rune_cd_tracker[castable1] = rune_cd(haste_rune_cd, current_time)
                                atta_num = (((223 + (wep_roll * .75))) - (((223 + (wep_roll * .75))) * armor_red_amount))  * (var_crit_amount)
                                if sigil_of_awareness == True:
                                    atta_num + 315
                                if dk_presence == 0:
                                    atta_num = atta_num + (atta_num * .15)
                                if tundra_stalker_points != 0:
                                    if dots[0] > current_time:
                                        atta_num = atta_num + (atta_num * (tundra_stalker_points * .03))
                                if rage_of_rivendale_points != 0:
                                    if dots[1] > current_time:
                                        atta_num += atta_num * ((rage_of_rivendale_points * 2) / 100)
                                if might_of_mograine_points != 0:
                                    atta_num += atta_num * ((might_of_mograine_points * 15) / 100)
                                if improved_death_strikes_points != 0:
                                    atta_num += atta_num * ((improved_death_strikes_points * 15) / 100)
                                if glyph_death_strike == True:
                                    if current_power > 25:
                                        death_strike_extra_damage_bonus = 25
                                    else:
                                        death_strike_extra_damage_bonus = current_power
                                    atta_num += atta_num * death_strike_extra_damage_bonus
                                if hysteria_active == True:
                                    atta_num = atta_num + (atta_num * .2)
                                if tricksoftt_active == True:
                                    atta_num = atta_num + (atta_num * .15)
                                atta_num = atta_num + (atta_num * increased_physical_damage) + (atta_num * increased_all_damage)
                                sum_death_strike_attacks += atta_num
                                current_power = runic_power(15, current_power, max_runic)
                                if dirge_points != 0:
                                    current_power = runic_power((dirge_points * 2.5), current_power, max_runic)
                                if scourgeborne_battlegear_four_set == True:
                                    current_power = runic_power(5, current_power, max_runic)
                                trinket_hit_crit_tracker = 2
                                if sigil_of_virulence == True:
                                    if random.randint(0, 100) < 85:
                                        sigil_of_virulence_timer = current_time + 20 
                                        if sigil_of_virulence_buff == False:
                                            sigil_of_virulence_buff = True 
                                            bonus_loop_str += 200
                                if sigil_of_hanged_man == True:
                                    if random.randint(0, 100) < 101:
                                        sigil_of_hanged_man_buff = True
                                        sigil_of_hanged_man_timer = current_time + 15
                                        sigil_of_hanged_man_count += 1
                                        if sigil_of_hanged_man_count < 4:
                                            bonus_loop_str += 73
                                        elif sigil_of_hanged_man_count >= 3:
                                            sigil_of_hanged_man_count = 3
                                if death_rune_mastery_points != 0:
                                    if just_used_death_rune != True:
                                        proc_num = random.randint(0, 100)
                                        if death_rune_mastery_points < 3:
                                            death_proc_chance = (death_rune_mastery_points * .3) * 100
                                        elif death_rune_mastery_points == 3:
                                            death_proc_chance = 100
                                        if death_proc_chance >= proc_num:
                                            death_castable_f = castable + 6
                                            death_castable_u = castable1 + 6
                                            rune_cd_tracker[death_castable_f] = rune_cd(haste_rune_cd, current_time)
                                            rune_cd_tracker[death_castable_u] = rune_cd(haste_rune_cd, current_time)
                                            rune_cd_tracker[castable] = 10000 
                                            rune_cd_tracker[castable1] = 10000
                                rotation.append("Death Strike")
                                rotation_time.append(current_time)
                                rotation_status.append("Crit")
                                rotation_damage.append(atta_num)
                                current_time += gcd
                                used_gcd = True
                                # print("Obliterate Crit - " + str(atta_num))
                                continue
                            elif attack_table_results == 7:
                                rune_cd_tracker[castable] = rune_cd(haste_rune_cd, current_time)
                                rune_cd_tracker[castable1] = rune_cd(haste_rune_cd, current_time)
                                atta_num = (((223 + (wep_roll * .75))) - (((223 + (wep_roll * .75))) * armor_red_amount))
                                if sigil_of_awareness == True:
                                    atta_num + 315
                                if dk_presence == 0:
                                    atta_num = atta_num + (atta_num * .15)
                                if tundra_stalker_points != 0:
                                    if dots[0] > current_time:
                                        atta_num = atta_num + (atta_num * (tundra_stalker_points * .03))
                                if rage_of_rivendale_points != 0:
                                    if dots[1] > current_time:
                                        atta_num += atta_num * ((rage_of_rivendale_points * 2) / 100)
                                if might_of_mograine_points != 0:
                                    atta_num += atta_num * ((might_of_mograine_points * 15) / 100)
                                if improved_death_strikes_points != 0:
                                    atta_num += atta_num * ((improved_death_strikes_points * 15) / 100)
                                if glyph_death_strike == True:
                                    if current_power > 25:
                                        death_strike_extra_damage_bonus = 25
                                    else:
                                        death_strike_extra_damage_bonus = current_power
                                    atta_num += atta_num * death_strike_extra_damage_bonus
                                if hysteria_active == True:
                                    atta_num = atta_num + (atta_num * .2)
                                if tricksoftt_active == True:
                                    atta_num = atta_num + (atta_num * .15)
                                atta_num = atta_num + (atta_num * increased_physical_damage) + (atta_num * increased_all_damage)
                                sum_death_strike_attacks += atta_num
                                current_power = runic_power(15, current_power, max_runic)
                                if dirge_points != 0:
                                    current_power = runic_power((dirge_points * 2.5), current_power, max_runic)
                                if scourgeborne_battlegear_four_set == True:
                                    current_power = runic_power(5, current_power, max_runic)
                                trinket_hit_crit_tracker = 1
                                if sigil_of_virulence == True:
                                    if random.randint(0, 100) < 85:
                                        sigil_of_virulence_timer = current_time + 20 
                                        if sigil_of_virulence_buff == False:
                                            sigil_of_virulence_buff = True 
                                            bonus_loop_str += 200
                                if sigil_of_hanged_man == True:
                                    if random.randint(0, 100) < 101:
                                        sigil_of_hanged_man_buff = True
                                        sigil_of_hanged_man_timer = current_time + 15
                                        sigil_of_hanged_man_count += 1
                                        if sigil_of_hanged_man_count < 4:
                                            bonus_loop_str += 73
                                        elif sigil_of_hanged_man_count >= 3:
                                            sigil_of_hanged_man_count = 3
                                if death_rune_mastery_points != 0:
                                    if just_used_death_rune != True:
                                        proc_num = random.randint(0, 100)
                                        if death_rune_mastery_points < 3:
                                            death_proc_chance = (death_rune_mastery_points * .3) * 100
                                        elif death_rune_mastery_points == 3:
                                            death_proc_chance = 100
                                        if death_proc_chance >= proc_num:
                                            death_castable_f = castable + 6
                                            death_castable_u = castable1 + 6
                                            rune_cd_tracker[death_castable_f] = rune_cd(haste_rune_cd, current_time)
                                            rune_cd_tracker[death_castable_u] = rune_cd(haste_rune_cd, current_time)
                                            rune_cd_tracker[castable] = 10000 
                                            rune_cd_tracker[castable1] = 10000
                                rotation.append("Death Strike")
                                rotation_time.append(current_time)
                                rotation_status.append("Hit")
                                rotation_damage.append(atta_num)
                                current_time += gcd
                                used_gcd = True
                                # print("Obliterate - " + str(atta_num))
                                continue 
                    
                    
                    
                    
                    
                    
                    
                    if current_power >= death_coil_cost: #Death Coil
                        current_power = runic_power(-death_coil_cost, current_power, max_runic)
                        hit = spell_hit(spell_hit_total, increased_spell_hit, target_level)
                        crit = spell_crit((total_crit + (darkruned_battlegear_two_set / 100)), spell_hit_total, increased_spell_hit, target_level, increased_spell_crit)
                        if dk_presence != 2:
                            gcd = input_gcd / (1 + haste_percentage)
                            if gcd < 1:
                                gcd = 1
                        if hit == True:
                            if crit == True:
                                atta_num = random.randint(443, 665)
                                atta_num = (atta_num + ((current_ap + (current_ap * ((impurity_points * 4) / 100))) * 0)) * var_crit_amount
                                if sigil_of_vengeful_heart == True:
                                    atta_num + 380
                                if sigil_of_the_wild_buck == True:
                                    atta_num += 80
                                if black_ice_points == 5:
                                    atta_num = atta_num + (atta_num * .1)
                                elif black_ice_points == 4:
                                    atta_num = atta_num + (atta_num * .08)
                                elif black_ice_points == 3:
                                    atta_num = atta_num + (atta_num * .06)
                                elif black_ice_points == 2:
                                    atta_num = atta_num + (atta_num * .04)
                                elif black_ice_points == 1:
                                    atta_num = atta_num + (atta_num * .02)
                                if dk_presence == 0:
                                    atta_num = atta_num + (atta_num * .15)
                                if tundra_stalker_points != 0:
                                    if dots[0] > current_time:
                                        atta_num = atta_num + (atta_num * (tundra_stalker_points * .03))
                                if glyph_death_coil == True:
                                    atta_num += atta_num * .15
                                if rage_of_rivendale_points != 0:
                                    if dots[1] > current_time:
                                        atta_num += atta_num * ((rage_of_rivendale_points * 2) / 100)
                                if morbitity_points != 0:
                                    atta_num += ((morbitity_points * 5) / 100)
                                if hysteria_active == True:
                                    atta_num = atta_num + (atta_num * .2)
                                if tricksoftt_active == True:
                                    atta_num = atta_num + (atta_num * .15)
                                atta_num = atta_num + (atta_num * increased_spell_damage) + (atta_num * increased_all_damage)
                                death_coil_damage += atta_num
                                if unholy_blight_points == 1:
                                    unholy_blight_amount = atta_num / 10   
                                    unholy_blight_timer = current_time + 10
                                if rune_of_cinderglacier_active == True:
                                     rune_of_cinderglacier_damage = atta_num * .2
                                     rune_of_cinderglacier_active_count += 1
                                     rotation.append("Rune of Cinderglacier")
                                     rotation_time.append(current_time)
                                     rotation_status.append("Active")
                                     rotation_damage.append(atta_num * .2)
                                     if rune_of_cinderglacier_active_count == 2:
                                         rune_of_cinderglacier_active = False
                                rotation.append("Death Coil")
                                rotation_time.append(current_time)
                                rotation_status.append("Crit")
                                rotation_damage.append(atta_num)
                                current_time += gcd
                                used_gcd = True
                                continue
                            else:
                                atta_num = random.randint(443, 665)
                                atta_num = (atta_num + ((current_ap + (current_ap * ((impurity_points * 4) / 100))) * 0))
                                if sigil_of_vengeful_heart == True:
                                    atta_num + 380
                                if sigil_of_the_wild_buck == True:
                                    atta_num += 80
                                if black_ice_points == 5:
                                    atta_num = atta_num + (atta_num * .1)
                                elif black_ice_points == 4:
                                    atta_num = atta_num + (atta_num * .08)
                                elif black_ice_points == 3:
                                    atta_num = atta_num + (atta_num * .06)
                                elif black_ice_points == 2:
                                    atta_num = atta_num + (atta_num * .04)
                                elif black_ice_points == 1:
                                    atta_num = atta_num + (atta_num * .02)
                                if dk_presence == 0:
                                    atta_num = atta_num + (atta_num * .15)
                                if tundra_stalker_points != 0:
                                    if dots[0] > current_time:
                                        atta_num = atta_num + (atta_num * (tundra_stalker_points * .03))
                                if glyph_death_coil == True:
                                    atta_num += atta_num * .15
                                if rage_of_rivendale_points != 0:
                                    if dots[1] > current_time:
                                        atta_num += atta_num * ((rage_of_rivendale_points * 2) / 100)
                                if morbitity_points != 0:
                                    atta_num += ((morbitity_points * 5) / 100)
                                if hysteria_active == True:
                                    atta_num = atta_num + (atta_num * .2)
                                if tricksoftt_active == True:
                                    atta_num = atta_num + (atta_num * .15)
                                atta_num = atta_num + (atta_num * increased_spell_damage) + (atta_num * increased_all_damage)
                                death_coil_damage += atta_num
                                if unholy_blight_points == 1:
                                    unholy_blight_amount = atta_num / 10 
                                    unholy_blight_timer = current_time + 10
                                if rune_of_cinderglacier_active == True:
                                     rune_of_cinderglacier_damage = atta_num * .2
                                     rune_of_cinderglacier_active_count += 1
                                     rotation.append("Rune of Cinderglacier")
                                     rotation_time.append(current_time)
                                     rotation_status.append("Active")
                                     rotation_damage.append(atta_num * .2)
                                     if rune_of_cinderglacier_active_count == 2:
                                         rune_of_cinderglacier_active = False
                                rotation.append("Death Coil")
                                rotation_time.append(current_time)
                                rotation_status.append("Hit")
                                rotation_damage.append(atta_num)
                                current_time += gcd
                                used_gcd = True
                                continue
                        if hit == False:
                            rotation.append("Death Coil")
                            rotation_time.append(current_time)
                            rotation_status.append("Miss")
                            rotation_damage.append(0)
                            current_time += gcd
                            used_gcd = True
                            continue

                                                
                           
                if amount_of_targets > 1: #AOE Fight - Blood
                    if deathchill_points == 1:
                        if deathchill_active == True:
                            if deathchill_timer < current_time:
                                deathchill_active = False
                        if deathchill_cd < current_time:
                            if dots[0] > current_time:
                                if dots[1] > current_time:
                                    rotation.append("Death Chill")
                                    rotation_time.append(current_time)
                                    rotation_status.append("Active")
                                    rotation_damage.append(0)
                                    deathchill_active = True
                                    deathchill_cd = current_time + 120
                                    deathchill_timer = current_time + 30
                    if ua_buff_timer >= current_time:
                        if ua_used == False:
                            ua_used = True
                            bonus_loop_str += ua_strength_increase_amount
                    elif ua_buff_timer < current_time:
                        ua_used = False
                        bonus_loop_str -= ua_strength_increase_amount
                        ua_strength_increase_amount = 0
                    if skip_erw == False:
                        if all_rune_check(blood, current_time, rune_cd_tracker) == 3:  # Empowered Rune Weapon
                            if all_rune_check(frost, current_time, rune_cd_tracker) == 3:
                                if all_rune_check(unholy, current_time, rune_cd_tracker) == 3:
                                    if all_rune_check(death, current_time, rune_cd_tracker) == 3:
                                        if all_rune_check(death_f, current_time, rune_cd_tracker) == 3:
                                            if all_rune_check(death_u, current_time, rune_cd_tracker) == 3:
                                                if erw_cd_timer < current_time:
                                                    if rune_cd_tracker[0] != 10000:
                                                        rune_reset_1 = 0
                                                    else:
                                                        rune_reset_1 = 6
                                                    if rune_cd_tracker[1] != 10000:
                                                        rune_reset_2 = 1
                                                    else:
                                                        rune_reset_2 = 7
                                                    if rune_cd_tracker[2] != 10000:
                                                        rune_reset_3 = 2
                                                    else:
                                                        rune_reset_3 = 8
                                                    if rune_cd_tracker[3] != 10000:
                                                        rune_reset_4 = 3
                                                    else:
                                                        rune_reset_4 = 9
                                                    if rune_cd_tracker[4] != 10000:
                                                        rune_reset_5 = 4
                                                    else:
                                                        rune_reset_5 = 10
                                                    if rune_cd_tracker[5] != 10000:
                                                        rune_reset_6 = 5
                                                    else:
                                                        rune_reset_6 = 11
                                                    rotation.append("Empowered Rune Weapon")
                                                    rotation_time.append(current_time)
                                                    rotation_status.append("Active")
                                                    rotation_damage.append(0)
                                                    current_power = runic_power(25, current_power, max_runic)
                                                    # rune_cd_tracker = [0, 0, 0, 0, 0, 0, 10000, 10000, 10000, 10000, 10000, 10000]
                                                    rune_cd_tracker[rune_reset_1] = 0
                                                    rune_cd_tracker[rune_reset_2] = 0
                                                    rune_cd_tracker[rune_reset_3] = 0
                                                    rune_cd_tracker[rune_reset_4] = 0
                                                    rune_cd_tracker[rune_reset_5] = 0
                                                    rune_cd_tracker[rune_reset_6] = 0
                                                    erw_cd_timer = current_time + 300
                                                    continue
                    if current_time >= horn: #Horn       #Prob set all of these below after like if amount_of_targets >= 1, else run a sim w/ howling blast and stuff
                        if dk_presence != 2:
                            gcd = input_gcd / (1 + haste_percentage)
                            if gcd < 1:
                                gcd = 1
                        current_power = runic_power(10, current_power, max_runic) 
                        rotation.append("Horn of Winter")
                        rotation_time.append(current_time)
                        rotation_status.append("Active")
                        rotation_damage.append(0)
                        horn += horn_timer
                        current_time += gcd
                        used_gcd = True
                        continue

                    if dots[0] > current_time: #Use Blood Tap
                        if dots[1] > current_time:
                            castable = all_rune_check(blood, current_time, rune_cd_tracker)
                            if castable == 3:
                                if rune_cd_tracker[6] == 10000:
                                    if rune_cd_tracker[7] == 10000:
                                        if blood_tap_cd <= current_time:
                                            blood_tap_cd = current_time + 60
                                            rotation.append("Blood Tap")
                                            rotation_time.append(current_time)
                                            rotation_status.append("Active")
                                            rotation_damage.append(0)
                                            haste_percentage = (total_haste_rating / 25.21) / 100 #Returns a result of 0 - 1 for 0% - 100%
                                            haste_rune_cd = rune_grade_timer(current_time, last_rune_change[castable], last_rune_change[castable+6])
                                            if improved_unholy_presence_points != 0:
                                                if dk_presence == 2:
                                                    haste_rune_cd = haste_rune_cd - (haste_rune_cd * ((improved_unholy_presence_points * 5) / 100))
                                            if rune_cd_tracker[0] < rune_cd_tracker[1]:
                                                castable = 0
                                                death_castable = castable + death
                                                haste_percentage = (total_haste_rating / 25.21) / 100 #Returns a result of 0 - 1 for 0% - 100%
                                                haste_rune_cd = 0
                                                rune_cd_tracker[death_castable] = rune_cd(haste_rune_cd, current_time)
                                                rune_cd_tracker[castable] = 10000 
                                            else:
                                                castable = 1
                                                death_castable = castable + death
                                                haste_percentage = (total_haste_rating / 25.21) / 100 #Returns a result of 0 - 1 for 0% - 100%
                                                haste_rune_cd = 0
                                                rune_cd_tracker[death_castable] = rune_cd(haste_rune_cd, current_time)
                                                rune_cd_tracker[castable] = 10000 

                    if skip_disease == False:
                        if dots[0] <= current_time: #Cast Icy Touch First Global
                            able_to_cast, castable, castable1, castable2, just_used_death_rune, rune_cd_tracker = use_runes(
                                rune_cd_tracker, current_time, dots, improved_unholy_presence_points, dk_presence,
                                total_haste_rating, last_rune_change,
                                n_blood=0, n_frost=1, n_unholy=0)
                            if able_to_cast == 1:
                                rotation_a, rotation_time_a, rotation_status_a, rotation_damage_a, current_time, used_gcd, rune_cd_tracker, last_dot0_damage, \
                                    current_power, rune_of_cinderglacier_active, rune_of_cinderglacier_active_count, dots, sum_it_attacks, km_procd, \
                                    deathchill_active, gcd, rune_of_cinderglacier_damage = icy_touch_cast(spell_hit_total, increased_spell_hit, target_level, km_procd, deathchill_active,
                                    total_crit, rime_points, increased_spell_crit, total_haste_rating, current_time, last_rune_change, castable,
                                    improved_unholy_presence_points, rune_grade_timer, dk_presence, input_gcd, rune_cd_tracker,
                                    sigil_of_the_frozen_conscience, current_ap, impurity_points, var_crit_amount, improved_icy_touch_points, black_ice_points,
                                    glacier_rot_points, dots, tundra_stalker_points, merciless_combat_points, rage_of_rivendale_points, hysteria_active,
                                    tricksoftt_active, fight_length, fight_sub_35percent, increased_spell_damage, increased_all_damage, sum_it_attacks,
                                    current_power, max_runic, chill_of_the_grave_points, dot_length, crypt_fever_points, rune_of_cinderglacier_active,
                                    rune_of_cinderglacier_active_count, rune_of_cinderglacier_damage)
                                rotation.extend(rotation_a)
                                rotation_time.extend(rotation_time_a)
                                rotation_status.extend(rotation_status_a)
                                rotation_damage.extend(rotation_damage_a)
                                continue

                        if dots[1] <= current_time: #Plague Strike, Second Global
                            castable = all_rune_check(unholy, current_time, rune_cd_tracker)
                            if castable == 3:
                                castable_death = all_rune_check(death, current_time, rune_cd_tracker)
                                castable_death_f = all_rune_check(death_f, current_time, rune_cd_tracker)
                                castable_death_u = all_rune_check(death_u, current_time, rune_cd_tracker)
                                if castable_death != 3:
                                    use_death_rune = True
                                    castable = castable_death
                                elif castable_death_f != 3:
                                    use_death_rune = True
                                    castable = castable_death_f
                                elif castable_death_u != 3:
                                    use_death_rune = True
                                    castable = castable_death_u
                            if castable != 3:       #Use Plague Strike as formula on how to do other attacks
                                if castable == 2: 
                                    castable = 0
                                if use_death_rune == True:
                                    use_death_rune = False
                                    if castable_death != 3:
                                        rune_cd_tracker[castable] = 0
                                        if castable_death == 2:
                                            castable_death = 0
                                        rune_cd_tracker[castable_death + 6] = 10000
                                    elif castable_death_f != 3:
                                        castable += 2
                                        rune_cd_tracker[castable] = 0
                                        if castable_death_f == 2:
                                            castable_death_f = 0
                                        rune_cd_tracker[castable_death_f + 8] = 10000
                                    elif castable_death_u != 3:
                                        castable += 4
                                        rune_cd_tracker[castable] = 0
                                        if castable_death_u == 2:
                                            castable_death_u = 0
                                        rune_cd_tracker[castable_death_u + 10] = 10000
                                else:
                                    use_death_rune = False
                                    castable += unholy
                                attack_table_results = attack_table(1, tanking, H2, True, False, hit_from_gear, hit_from_other, target_level, all_expertise_dodge, all_expertise_parry, total_crit, (annihilation_talent_points / 100 + increased_phy_crit + (scourgeborne_plate_two_set / 100) + ((vicious_strikes_points * 3) / 100)))
                                armor_red_amount = dam_reduc(current_armor, armor_penetration, target_level)
                                wep_roll = weapon_roll(mh_input_lowend_weapon_damage,mh_input_topend_weapon_damage)
                                wep_roll = wep_roll + (attack_damage_normalization * current_ap / 14)
                                #Rune Hit
                                haste_percentage = (total_haste_rating / 25.21) / 100 #Returns a result of 0 - 1 for 0% - 100%
                                haste_rune_cd = rune_grade_timer(current_time, last_rune_change[castable], last_rune_change[castable+6])
                                if improved_unholy_presence_points != 0:
                                    if dk_presence == 2:
                                        haste_rune_cd = haste_rune_cd - (haste_rune_cd * ((improved_unholy_presence_points * 5) / 100))
                                if dk_presence != 2:
                                    gcd = input_gcd / (1 + haste_percentage)
                                    if gcd < 1:
                                        gcd = 1
                                ##Rune Miss
                                haste_rune_cd_miss = 1
                                if dancing_rune_weapon_points == 1:
                                    if dancing_rune_weapon_active == True:
                                        if attack_table_results == 0:
                                            atta_num = 0
                                            rotation.append("Dancing Rune Weapon")
                                            rotation_time.append(current_time)
                                            rotation_status.append("Miss")
                                            rotation_damage.append(atta_num)
                                        elif attack_table_results == 1:
                                            atta_num = 0
                                            rotation.append("Dancing Rune Weapon")
                                            rotation_time.append(current_time)
                                            rotation_status.append("Dodge")
                                            rotation_damage.append(atta_num)
                                        elif attack_table_results == 5:
                                            #crit attack
                                            atta_num = ((189 + (wep_roll * .5)) - ((189 + (wep_roll * .5)) * armor_red_amount)) * var_crit_amount
                                            if dk_presence == 0:
                                                atta_num = atta_num + (atta_num * .15)
                                            if tundra_stalker_points != 0:
                                                if dots[0] > current_time:
                                                    atta_num = atta_num + (atta_num * (tundra_stalker_points * .03))
                                            if vicious_strikes_points != 0:
                                                atta_num = atta_num + (atta_num * ((vicious_strikes_points * 15) / 100))
                                            if outbreak_points != 0: #This need to be changed for scourge strike
                                                atta_num = atta_num + (atta_num * ((outbreak_points * 10) / 100))
                                            if rage_of_rivendale_points != 0:
                                                if dots[1] > current_time:
                                                    atta_num += atta_num * ((rage_of_rivendale_points * 2) / 100)
                                            if glyph_plague_strike == True:
                                                atta_num += atta_num * .2
                                            if hysteria_active == True:
                                                atta_num = atta_num + (atta_num * .2)
                                            if tricksoftt_active == True:
                                                atta_num = atta_num + (atta_num * .15)
                                            atta_num = atta_num + (atta_num * increased_physical_damage) + (atta_num * increased_all_damage)
                                            atta_num = atta_num * dancing_rune_weapon_damage_multi
                                            dancing_rune_weapon_damage += atta_num
                                            rotation.append("Dancing Rune Weapon")
                                            rotation_time.append(current_time)
                                            rotation_status.append("Crit")
                                            rotation_damage.append(atta_num)                                
                                            dots[1] = dot_timer(current_time, dot_length)
                                            if crypt_fever_points != 0:
                                                dots[2] = dot_timer(current_time, dot_length)
                                            trinket_hit_crit_tracker = 2
                                            last_dot1_damage = current_time - 3
                                        elif attack_table_results == 7:
                                            #normal attack
                                            atta_num = ((189 + (wep_roll * .5)) - ((189 + (wep_roll * .5)) * armor_red_amount))
                                            if dk_presence == 0:
                                                atta_num = atta_num + (atta_num * .15)
                                            if tundra_stalker_points != 0:
                                                if dots[0] > current_time:
                                                    atta_num = atta_num + (atta_num * (tundra_stalker_points * .03))
                                            if outbreak_points != 0: #This need to be changed for scourge strike
                                                atta_num = atta_num + (atta_num * ((outbreak_points * 10) / 100))
                                            if rage_of_rivendale_points != 0:
                                                if dots[1] > current_time:
                                                    atta_num += atta_num * ((rage_of_rivendale_points * 2) / 100)
                                            if glyph_plague_strike == True:
                                                atta_num += atta_num * .2
                                            if hysteria_active == True:
                                                atta_num = atta_num + (atta_num * .2)
                                            if tricksoftt_active == True:
                                                atta_num = atta_num + (atta_num * .15)
                                            atta_num = atta_num + (atta_num * increased_physical_damage) + (atta_num * increased_all_damage)
                                            atta_num = atta_num * dancing_rune_weapon_damage_multi
                                            dancing_rune_weapon_damage += atta_num
                                            rotation.append("Dancing Rune Weapon")
                                            rotation_time.append(current_time)
                                            rotation_status.append("Hit")
                                            rotation_damage.append(atta_num)
                                            dots[1] = dot_timer(current_time, dot_length)
                                            if crypt_fever_points != 0:
                                                dots[2] = dot_timer(current_time, dot_length)
                                            trinket_hit_crit_tracker = 1
                                            last_dot1_damage = current_time - 3
                                if threat_of_thassarian_points != 0:  #Off Hand Plague Strike Copy
                                    if H2 == False:
                                        threat_of_thass_roll = (threat_of_thassarian_points * 30) 
                                        if threat_of_thassarian_points == 3: 
                                            threat_of_thass_roll += 10 
                                        threat_of_t_num = random.randint(0, 100) 
                                        if threat_of_thass_roll >= threat_of_t_num: 
                                            oh_wep_roll = weapon_roll(oh_input_lowend_weapon_damage,oh_input_topend_weapon_damage)
                                            oh_wep_roll = wep_roll + (attack_damage_normalization * current_ap / 14)
                                            oh_attack_table_results = attack_table(1, tanking, H2, False, True, hit_from_gear, hit_from_other, target_level, all_expertise_dodge, all_expertise_parry, total_crit, (annihilation_talent_points / 100 + increased_phy_crit + (scourgeborne_plate_two_set / 100) + ((vicious_strikes_points * 3) / 100)))
                                            if oh_attack_table_results == 0:
                                                atta_num = 0
                                                rotation.append("OH - Plague Strike")
                                                rotation_time.append(current_time)
                                                rotation_status.append("Miss")
                                                rotation_damage.append(atta_num)
                                            elif oh_attack_table_results == 1:
                                                atta_num = 0
                                                rotation.append("OH - Plague Strike")
                                                rotation_time.append(current_time)
                                                rotation_status.append("Dodge")
                                                rotation_damage.append(atta_num)
                                            elif oh_attack_table_results == 5:
                                                #crit attack
                                                atta_num = ((189 + (oh_wep_roll * .5)) - ((189 + (oh_wep_roll * .5)) * armor_red_amount)) * var_crit_amount
                                                if dk_presence == 0:
                                                    atta_num = atta_num + (atta_num * .15)
                                                if tundra_stalker_points != 0:
                                                    if dots[0] > current_time:
                                                        atta_num = atta_num + (atta_num * (tundra_stalker_points * .03))
                                                if vicious_strikes_points != 0:
                                                    atta_num = atta_num + (atta_num * ((vicious_strikes_points * 15) / 100))
                                                if outbreak_points != 0: #This need to be changed for scourge strike
                                                    atta_num = atta_num + (atta_num * ((outbreak_points * 10) / 100))
                                                if rage_of_rivendale_points != 0:
                                                    if dots[1] > current_time:
                                                        atta_num += atta_num * ((rage_of_rivendale_points * 2) / 100)
                                                if glyph_plague_strike == True:
                                                    atta_num += atta_num * .2
                                                atta_num = atta_num * oh_wep_damage_mod
                                                if hysteria_active == True:
                                                    atta_num = atta_num + (atta_num * .2)
                                                if tricksoftt_active == True:
                                                    atta_num = atta_num + (atta_num * .15)
                                                atta_num = atta_num + (atta_num * increased_physical_damage) + (atta_num * increased_all_damage)
                                                sum_oh_ps_attacks += atta_num
                                                dots[1] = dot_timer(current_time, dot_length)
                                                if crypt_fever_points != 0:
                                                    dots[2] = dot_timer(current_time, dot_length)
                                                trinket_hit_crit_tracker = 2
                                                rotation.append("OH - Plague Strike")
                                                rotation_time.append(current_time)
                                                rotation_status.append("Crit")
                                                rotation_damage.append(atta_num)
                                            elif oh_attack_table_results == 7:
                                                #normal attack
                                                atta_num = ((189 + (oh_wep_roll * .5)) - ((189 + (oh_wep_roll * .5)) * armor_red_amount))
                                                if dk_presence == 0:
                                                    atta_num = atta_num + (atta_num * .15)
                                                if tundra_stalker_points != 0:
                                                    if dots[0] > current_time:
                                                        atta_num = atta_num + (atta_num * (tundra_stalker_points * .03))
                                                if outbreak_points != 0: #This need to be changed for scourge strike
                                                    atta_num = atta_num + (atta_num * ((outbreak_points * 10) / 100))
                                                if rage_of_rivendale_points != 0:
                                                    if dots[1] > current_time:
                                                        atta_num += atta_num * ((rage_of_rivendale_points * 2) / 100)
                                                if glyph_plague_strike == True:
                                                    atta_num += atta_num * .2
                                                atta_num = atta_num * oh_wep_damage_mod
                                                if hysteria_active == True:
                                                    atta_num = atta_num + (atta_num * .2)
                                                if tricksoftt_active == True:
                                                    atta_num = atta_num + (atta_num * .15)
                                                atta_num = atta_num + (atta_num * increased_physical_damage) + (atta_num * increased_all_damage)
                                                sum_oh_ps_attacks += atta_num
                                                dots[1] = dot_timer(current_time, dot_length)
                                                if crypt_fever_points != 0:
                                                    dots[2] = dot_timer(current_time, dot_length)
                                                trinket_hit_crit_tracker = 1
                                                rotation.append("OH - Plague Strike")
                                                rotation_time.append(current_time)
                                                rotation_status.append("Hit")
                                                rotation_damage.append(atta_num)
    
                                if attack_table_results == 0:
                                    atta_num = 0
                                    rune_cd_tracker[castable] = rune_cd(haste_rune_cd_miss, current_time)
                                    rotation.append("Plague Strike")
                                    rotation_time.append(current_time)
                                    rotation_status.append("Miss")
                                    rotation_damage.append(atta_num)
                                    current_time = current_time + gcd
                                    used_gcd = True
                                    continue
                                elif attack_table_results == 1:
                                    atta_num = 0
                                    rune_cd_tracker[castable] = rune_cd(haste_rune_cd_miss, current_time)
                                    rotation.append("Plague Strike")
                                    rotation_time.append(current_time)
                                    rotation_status.append("Dodge")
                                    rotation_damage.append(atta_num)
                                    current_time = current_time + gcd
                                    used_gcd = True
                                    continue
                                elif attack_table_results == 5:
                                    #crit attack
                                    rune_cd_tracker[castable] = rune_cd(haste_rune_cd, current_time)
                                    atta_num = ((189 + (wep_roll * .5)) - ((189 + (wep_roll * .5)) * armor_red_amount)) * var_crit_amount
                                    if dk_presence == 0:
                                        atta_num = atta_num + (atta_num * .15)
                                    if tundra_stalker_points != 0:
                                        if dots[0] > current_time:
                                            atta_num = atta_num + (atta_num * (tundra_stalker_points * .03))
                                    if vicious_strikes_points != 0:
                                        atta_num = atta_num + (atta_num * ((vicious_strikes_points * 15) / 100))
                                    if outbreak_points != 0: #This need to be changed for scourge strike
                                        atta_num = atta_num + (atta_num * ((outbreak_points * 10) / 100))
                                    if rage_of_rivendale_points != 0:
                                        if dots[1] > current_time:
                                            atta_num += atta_num * ((rage_of_rivendale_points * 2) / 100)
                                    if glyph_plague_strike == True:
                                        atta_num += atta_num * .2
                                    if hysteria_active == True:
                                        atta_num = atta_num + (atta_num * .2)
                                    if tricksoftt_active == True:
                                        atta_num = atta_num + (atta_num * .15)
                                    atta_num = atta_num + (atta_num * increased_physical_damage) + (atta_num * increased_all_damage)
                                    sum_ps_attacks += atta_num
                                    current_power = runic_power(10, current_power, max_runic)
                                    if dirge_points != 0:
                                        current_power = runic_power((dirge_points * 2.5), current_power, max_runic)
                                    dots[1] = dot_timer(current_time, dot_length)
                                    if crypt_fever_points != 0:
                                        dots[2] = dot_timer(current_time, dot_length)
                                    trinket_hit_crit_tracker = 2
                                    if sigil_of_strife == True:
                                        bonus_loop_ap += sigil_of_strife_amount
                                        sigil_of_strife_timer = current_time + 10
                                        sigil_of_strife_active = True
                                    scourge_strike_dot1_counter = 0
                                    last_dot1_damage = current_time - 3
                                    rotation.append("Plague Strike")
                                    rotation_time.append(current_time)
                                    rotation_status.append("Crit")
                                    rotation_damage.append(atta_num)
                                    current_time += gcd
                                    used_gcd = True
                                    continue
                                elif attack_table_results == 7:
                                    #normal attack
                                    rune_cd_tracker[castable] = rune_cd(haste_rune_cd, current_time)
                                    atta_num = ((189 + (wep_roll * .5)) - ((189 + (wep_roll * .5)) * armor_red_amount))
                                    if dk_presence == 0:
                                        atta_num = atta_num + (atta_num * .15)
                                    if tundra_stalker_points != 0:
                                        if dots[0] > current_time:
                                            atta_num = atta_num + (atta_num * (tundra_stalker_points * .03))
                                    if outbreak_points != 0: #This need to be changed for scourge strike
                                        atta_num = atta_num + (atta_num * ((outbreak_points * 10) / 100))
                                    if rage_of_rivendale_points != 0:
                                        if dots[1] > current_time:
                                            atta_num += atta_num * ((rage_of_rivendale_points * 2) / 100)
                                    if glyph_plague_strike == True:
                                        atta_num += atta_num * .2
                                    if hysteria_active == True:
                                        atta_num = atta_num + (atta_num * .2)
                                    if tricksoftt_active == True:
                                        atta_num = atta_num + (atta_num * .15)
                                    atta_num = atta_num + (atta_num * increased_physical_damage) + (atta_num * increased_all_damage)
                                    sum_ps_attacks += atta_num
                                    current_power = runic_power(10, current_power, max_runic)
                                    if dirge_points != 0:
                                        current_power = runic_power((dirge_points * 2.5), current_power, max_runic)
                                    dots[1] = dot_timer(current_time, dot_length)
                                    if crypt_fever_points != 0:
                                        dots[2] = dot_timer(current_time, dot_length)
                                    trinket_hit_crit_tracker = 1
                                    scourge_strike_dot1_counter = 0
                                    last_dot1_damage = current_time - 3
                                    rotation.append("Plague Strike")
                                    rotation_time.append(current_time)
                                    rotation_status.append("Hit")
                                    rotation_damage.append(atta_num)
                                    current_time += gcd
                                    used_gcd = True
                                    continue 
                    if pestilence_allow_reset == False:
                        if (dots[0] - pestilence_reset_window) > 0 and (dots[0] - pestilence_reset_window) < current_time: #Refresh Icy Touch
                            castable = all_rune_check(frost, current_time, rune_cd_tracker)
                            if castable == 3:
                                castable_death = all_rune_check(death, current_time, rune_cd_tracker)
                                castable_death_f = all_rune_check(death_f, current_time, rune_cd_tracker)
                                castable_death_u = all_rune_check(death_u, current_time, rune_cd_tracker)
                                if castable_death != 3:
                                    use_death_rune = True
                                    castable = castable_death
                                elif castable_death_f != 3:
                                    use_death_rune = True
                                    castable = castable_death_f
                                elif castable_death_u != 3:
                                    use_death_rune = True
                                    castable = castable_death_u
                            if castable != 3:      
                                if castable == 2:
                                    castable = 0
                                if use_death_rune == True:
                                    use_death_rune = False
                                    if castable_death != 3:
                                        rune_cd_tracker[castable] = 0
                                        if castable_death == 2:
                                            castable_death = 0
                                        rune_cd_tracker[castable_death + 6] = 10000
                                    elif castable_death_f != 3:
                                        castable += 2
                                        rune_cd_tracker[castable] = 0
                                        if castable_death_f == 2:
                                            castable_death_f = 0
                                        rune_cd_tracker[castable_death_f + 8] = 10000
                                    elif castable_death_u != 3:
                                        castable += 4
                                        rune_cd_tracker[castable] = 0
                                        if castable_death_u == 2:
                                            castable_death_u = 0
                                        rune_cd_tracker[castable_death_u + 10] = 10000
                                else:
                                    use_death_rune = False
                                    castable += frost
                                hit = spell_hit(spell_hit_total, increased_spell_hit, target_level)
                                if km_procd == True:
                                	km_procd = False
                                	crit = True
                                else:
                                    if deathchill_active == True:
                                    	deathchill_active = False
                                    	crit = True
                                    else:
                                        crit = spell_crit((total_crit + ((rime_points * 5) / 100)), spell_hit_total, increased_spell_hit, target_level, increased_spell_crit)
                                #Rune Hit
                                haste_percentage = (total_haste_rating / 25.21) / 100 #Returns a result of 0 - 1 for 0% - 100%
                                haste_rune_cd = rune_grade_timer(current_time, last_rune_change[castable], last_rune_change[castable+6])
                                if improved_unholy_presence_points != 0:
                                    if dk_presence == 2:
                                        haste_rune_cd = haste_rune_cd - (haste_rune_cd * ((improved_unholy_presence_points * 5) / 100))
                                if dk_presence != 2:
                                    gcd = input_gcd / (1 + haste_percentage)
                                    if gcd < 1:
                                        gcd = 1
                                if hit == True:
                                    rune_cd_tracker[castable] = rune_cd(haste_rune_cd, current_time)
                                    if crit == True:
                                        atta_num = random.randint(227, 245)
                                        if sigil_of_the_frozen_conscience == True:
                                            atta_num + 111
                                        atta_num = (atta_num + ((current_ap + (current_ap * ((impurity_points * 4) / 100))) * .1)) * var_crit_amount
                                        if dk_presence == 0:
                                            atta_num = atta_num + (atta_num * .15)
                                        if improved_icy_touch_points == 3:
                                            atta_num = atta_num + (atta_num * .15)
                                        elif improved_icy_touch_points == 2:
                                            atta_num = atta_num + (atta_num * .10)
                                        elif improved_icy_touch_points == 1:
                                            atta_num = atta_num + (atta_num * .05)
                                        if black_ice_points == 5:
                                            atta_num = atta_num + (atta_num * .1)
                                        elif black_ice_points == 4:
                                            atta_num = atta_num + (atta_num * .08)
                                        elif black_ice_points == 3:
                                            atta_num = atta_num + (atta_num * .06)
                                        elif black_ice_points == 2:
                                            atta_num = atta_num + (atta_num * .04)
                                        elif black_ice_points == 1:
                                            atta_num = atta_num + (atta_num * .02)
                                        if glacier_rot_points == 3:
                                            if dots[0] > current_time:
                                                if dots[1] > current_time:
                                                    atta_num = atta_num + (atta_num * .2)
                                        elif glacier_rot_points == 2:
                                            if dots[0] > current_time:
                                                if dots[1] > current_time:
                                                    atta_num = atta_num + (atta_num * .13)
                                        elif glacier_rot_points == 1:
                                            if dots[0] > current_time:
                                                if dots[1] > current_time:
                                                    atta_num = atta_num + (atta_num * .07)
                                        if tundra_stalker_points != 0:
                                            if dots[0] > current_time:
                                                atta_num = atta_num + (atta_num * (tundra_stalker_points * .03))
                                        if merciless_combat_points == 2:
                                            if current_time > (fight_length - (fight_length * (fight_sub_35percent / 100))):
                                                atta_num = atta_num + (atta_num * .12)
                                        elif merciless_combat_points == 1:
                                            if current_time > (fight_length - (fight_length * (fight_sub_35percent / 100))):
                                                atta_num = atta_num + (atta_num * .06)
                                        if rage_of_rivendale_points != 0:
                                            if dots[1] > current_time:
                                                atta_num += atta_num * ((rage_of_rivendale_points * 2) / 100)
                                        if hysteria_active == True:
                                            atta_num = atta_num + (atta_num * .2)
                                        if tricksoftt_active == True:
                                            atta_num = atta_num + (atta_num * .15)
                                        atta_num = atta_num + (atta_num * increased_spell_damage) + (atta_num * increased_all_damage)
                                        sum_it_attacks += atta_num
                                        current_power = runic_power(10, current_power, max_runic) 
                                        if chill_of_the_grave_points == 2:
                                            current_power = runic_power(5, current_power, max_runic)
                                        elif chill_of_the_grave_points == 1:
                                            current_power = runic_power(2.5, current_power, max_runic)
                                        dots[0] = dot_timer(current_time, dot_length)
                                        if crypt_fever_points != 0:
                                            dots[2] = dot_timer(current_time, dot_length)
                                        if rune_of_cinderglacier_active == True:
                                             rune_of_cinderglacier_damage = atta_num * .2
                                             rune_of_cinderglacier_active_count += 1
                                             rotation.append("Rune of Cinderglacier")
                                             rotation_time.append(current_time)
                                             rotation_status.append("Active")
                                             rotation_damage.append(atta_num * .2)
                                             if rune_of_cinderglacier_active_count == 2:
                                                 rune_of_cinderglacier_active = False
                                        rotation.append("Icy Touch")
                                        rotation_time.append(current_time)
                                        rotation_status.append("Crit")
                                        rotation_damage.append(atta_num)
                                        current_time += gcd
                                        used_gcd = True
                                        continue
                                    else:
                                        atta_num = random.randint(227, 245)
                                        if sigil_of_the_frozen_conscience == True:
                                            atta_num + 111
                                        atta_num = (atta_num + ((current_ap + (current_ap * ((impurity_points * 4) / 100))) * .1))
                                        if dk_presence == 0:
                                            atta_num = atta_num + (atta_num * .15)
                                        if improved_icy_touch_points == 3:
                                            atta_num = atta_num + (atta_num * .15)
                                        elif improved_icy_touch_points == 2:
                                            atta_num = atta_num + (atta_num * .10)
                                        elif improved_icy_touch_points == 1:
                                            atta_num = atta_num + (atta_num * .05)
                                        if black_ice_points == 5:
                                            atta_num = atta_num + (atta_num * .1)
                                        elif black_ice_points == 4:
                                            atta_num = atta_num + (atta_num * .08)
                                        elif black_ice_points == 3:
                                            atta_num = atta_num + (atta_num * .06)
                                        elif black_ice_points == 2:
                                            atta_num = atta_num + (atta_num * .04)
                                        elif black_ice_points == 1:
                                            atta_num = atta_num + (atta_num * .02)
                                        if glacier_rot_points == 3:
                                            if dots[0] > current_time:
                                                if dots[1] > current_time:
                                                    atta_num = atta_num + (atta_num * .2)
                                        elif glacier_rot_points == 2:
                                            if dots[0] > current_time:
                                                if dots[1] > current_time:
                                                    atta_num = atta_num + (atta_num * .13)
                                        elif glacier_rot_points == 1:
                                            if dots[0] > current_time:
                                                if dots[1] > current_time:
                                                    atta_num = atta_num + (atta_num * .07)
                                        if tundra_stalker_points != 0:
                                            if dots[0] > current_time:
                                                atta_num = atta_num + (atta_num * (tundra_stalker_points * .03))
                                        if merciless_combat_points == 2:
                                            if current_time > (fight_length - (fight_length * (fight_sub_35percent / 100))):
                                                atta_num = atta_num + (atta_num * .12)
                                        elif merciless_combat_points == 1:
                                            if current_time > (fight_length - (fight_length * (fight_sub_35percent / 100))):
                                                atta_num = atta_num + (atta_num * .06)
                                        if rage_of_rivendale_points != 0:
                                            if dots[1] > current_time:
                                                atta_num += atta_num * ((rage_of_rivendale_points * 2) / 100)
                                        if hysteria_active == True:
                                            atta_num = atta_num + (atta_num * .2)
                                        if tricksoftt_active == True:
                                            atta_num = atta_num + (atta_num * .15)
                                        atta_num = atta_num + (atta_num * increased_spell_damage) + (atta_num * increased_all_damage)
                                        sum_it_attacks += atta_num
                                        current_power = runic_power(10, current_power, max_runic)
                                        if chill_of_the_grave_points == 2:
                                            current_power = runic_power(5, current_power, max_runic)
                                        elif chill_of_the_grave_points == 1:
                                            current_power = runic_power(2.5, current_power, max_runic)
                                        dots[0] = dot_timer(current_time, dot_length)
                                        if crypt_fever_points != 0:
                                            dots[2] = dot_timer(current_time, dot_length)
                                        if rune_of_cinderglacier_active == True:
                                             rune_of_cinderglacier_damage = atta_num * .2
                                             rune_of_cinderglacier_active_count += 1
                                             rotation.append("Rune of Cinderglacier")
                                             rotation_time.append(current_time)
                                             rotation_status.append("Active")
                                             rotation_damage.append(atta_num * .2)
                                             if rune_of_cinderglacier_active_count == 2:
                                                 rune_of_cinderglacier_active = False
                                        rotation.append("Icy Touch")
                                        rotation_time.append(current_time)
                                        rotation_status.append("Hit")
                                        rotation_damage.append(atta_num)
                                        current_time += gcd
                                        used_gcd = True
                                        continue
                                if hit == False:
                                    ##Rune Miss
                                    haste_rune_cd_miss = 1
                                    rune_cd_tracker[castable] = rune_cd(haste_rune_cd_miss, current_time)
                                    rotation.append("Icy Touch")
                                    rotation_time.append(current_time)
                                    rotation_status.append("Miss")
                                    rotation_damage.append(0)
                                    current_time = current_time + gcd
                                    used_gcd = True
                                    continue
                        
                    if pestilence_allow_reset == False:
                        if (dots[1] - pestilence_reset_window) > 0 and (dots[1] - pestilence_reset_window) < current_time: #Refresh Plague Strike
                            castable = all_rune_check(unholy, current_time, rune_cd_tracker)
                            if castable == 3:
                                castable_death = all_rune_check(death, current_time, rune_cd_tracker)
                                castable_death_f = all_rune_check(death_f, current_time, rune_cd_tracker)
                                castable_death_u = all_rune_check(death_u, current_time, rune_cd_tracker)
                                if castable_death != 3:
                                    use_death_rune = True
                                    castable = castable_death
                                elif castable_death_f != 3:
                                    use_death_rune = True
                                    castable = castable_death_f
                                elif castable_death_u != 3:
                                    use_death_rune = True
                                    castable = castable_death_u
                            if castable != 3:      
                                if castable == 2: 
                                    castable = 0
                                if use_death_rune == True:
                                    use_death_rune = False
                                    if castable_death != 3:
                                        rune_cd_tracker[castable] = 0
                                        if castable_death == 2:
                                            castable_death = 0
                                        rune_cd_tracker[castable_death + 6] = 10000
                                    elif castable_death_f != 3:
                                        castable += 2
                                        rune_cd_tracker[castable] = 0
                                        if castable_death_f == 2:
                                            castable_death_f = 0
                                        rune_cd_tracker[castable_death_f + 8] = 10000
                                    elif castable_death_u != 3:
                                        castable += 4
                                        rune_cd_tracker[castable] = 0
                                        if castable_death_u == 2:
                                            castable_death_u = 0
                                        rune_cd_tracker[castable_death_u + 10] = 10000
                                else:
                                    use_death_rune = False
                                    castable += unholy
                                attack_table_results = attack_table(1, tanking, H2, True, False, hit_from_gear, hit_from_other, target_level, all_expertise_dodge, all_expertise_parry, total_crit, (annihilation_talent_points / 100 + increased_phy_crit + (scourgeborne_plate_two_set / 100) + ((vicious_strikes_points * 3) / 100)))
                                armor_red_amount = dam_reduc(current_armor, armor_penetration, target_level)
                                wep_roll = weapon_roll(mh_input_lowend_weapon_damage,mh_input_topend_weapon_damage)
                                wep_roll = wep_roll + (attack_damage_normalization * current_ap / 14)
                                #Rune Hit
                                haste_percentage = (total_haste_rating / 25.21) / 100 #Returns a result of 0 - 1 for 0% - 100%
                                haste_rune_cd = rune_grade_timer(current_time, last_rune_change[castable], last_rune_change[castable+6])
                                if improved_unholy_presence_points != 0:
                                    if dk_presence == 2:
                                        haste_rune_cd = haste_rune_cd - (haste_rune_cd * ((improved_unholy_presence_points * 5) / 100))
                                if dk_presence != 2:
                                    gcd = input_gcd / (1 + haste_percentage)
                                    if gcd < 1:
                                        gcd = 1
                                ##Rune Miss
                                haste_rune_cd_miss = 1
                                if dancing_rune_weapon_points == 1:
                                    if dancing_rune_weapon_active == True:
                                        if attack_table_results == 0:
                                            atta_num = 0
                                            rotation.append("Dancing Rune Weapon")
                                            rotation_time.append(current_time)
                                            rotation_status.append("Miss")
                                            rotation_damage.append(atta_num)
                                        elif attack_table_results == 1:
                                            atta_num = 0
                                            rotation.append("Dancing Rune Weapon")
                                            rotation_time.append(current_time)
                                            rotation_status.append("Dodge")
                                            rotation_damage.append(atta_num)
                                        elif attack_table_results == 5:
                                            #crit attack
                                            atta_num = ((189 + (wep_roll * .5)) - ((189 + (wep_roll * .5)) * armor_red_amount)) * var_crit_amount
                                            if dk_presence == 0:
                                                atta_num = atta_num + (atta_num * .15)
                                            if tundra_stalker_points != 0:
                                                if dots[0] > current_time:
                                                    atta_num = atta_num + (atta_num * (tundra_stalker_points * .03))
                                            if vicious_strikes_points != 0:
                                                atta_num = atta_num + (atta_num * ((vicious_strikes_points * 15) / 100))
                                            if outbreak_points != 0: #This need to be changed for scourge strike
                                                atta_num = atta_num + (atta_num * ((outbreak_points * 10) / 100))
                                            if rage_of_rivendale_points != 0:
                                                if dots[1] > current_time:
                                                    atta_num += atta_num * ((rage_of_rivendale_points * 2) / 100)
                                            if glyph_plague_strike == True:
                                                atta_num += atta_num * .2
                                            if hysteria_active == True:
                                                atta_num = atta_num + (atta_num * .2)
                                            if tricksoftt_active == True:
                                                atta_num = atta_num + (atta_num * .15)
                                            atta_num = atta_num + (atta_num * increased_physical_damage) + (atta_num * increased_all_damage)
                                            atta_num = atta_num * dancing_rune_weapon_damage_multi
                                            dancing_rune_weapon_damage += atta_num
                                            rotation.append("Dancing Rune Weapon")
                                            rotation_time.append(current_time)
                                            rotation_status.append("Crit")
                                            rotation_damage.append(atta_num)                                
                                            dots[1] = dot_timer(current_time, dot_length)
                                            if crypt_fever_points != 0:
                                                dots[2] = dot_timer(current_time, dot_length)
                                            trinket_hit_crit_tracker = 2
                                        elif attack_table_results == 7:
                                            #normal attack
                                            atta_num = ((189 + (wep_roll * .5)) - ((189 + (wep_roll * .5)) * armor_red_amount))
                                            if dk_presence == 0:
                                                atta_num = atta_num + (atta_num * .15)
                                            if tundra_stalker_points != 0:
                                                if dots[0] > current_time:
                                                    atta_num = atta_num + (atta_num * (tundra_stalker_points * .03))
                                            if outbreak_points != 0: #This need to be changed for scourge strike
                                                atta_num = atta_num + (atta_num * ((outbreak_points * 10) / 100))
                                            if rage_of_rivendale_points != 0:
                                                if dots[1] > current_time:
                                                    atta_num += atta_num * ((rage_of_rivendale_points * 2) / 100)
                                            if glyph_plague_strike == True:
                                                atta_num += atta_num * .2
                                            if hysteria_active == True:
                                                atta_num = atta_num + (atta_num * .2)
                                            if tricksoftt_active == True:
                                                atta_num = atta_num + (atta_num * .15)
                                            atta_num = atta_num + (atta_num * increased_physical_damage) + (atta_num * increased_all_damage)
                                            atta_num = atta_num * dancing_rune_weapon_damage_multi
                                            dancing_rune_weapon_damage += atta_num
                                            rotation.append("Dancing Rune Weapon")
                                            rotation_time.append(current_time)
                                            rotation_status.append("Hit")
                                            rotation_damage.append(atta_num)
                                            dots[1] = dot_timer(current_time, dot_length)
                                            if crypt_fever_points != 0:
                                                dots[2] = dot_timer(current_time, dot_length)
                                            trinket_hit_crit_tracker = 1
                                if threat_of_thassarian_points != 0:  #Off Hand Plague Strike Copy
                                    if H2 == False:
                                        threat_of_thass_roll = (threat_of_thassarian_points * 30) 
                                        if threat_of_thassarian_points == 3: 
                                            threat_of_thass_roll += 10 
                                        threat_of_t_num = random.randint(0, 100) 
                                        if threat_of_thass_roll >= threat_of_t_num: 
                                            oh_wep_roll = weapon_roll(oh_input_lowend_weapon_damage,oh_input_topend_weapon_damage)
                                            oh_wep_roll = wep_roll + (attack_damage_normalization * current_ap / 14)
                                            oh_attack_table_results = attack_table(1, tanking, H2, False, True, hit_from_gear, hit_from_other, target_level, all_expertise_dodge, all_expertise_parry, total_crit, (annihilation_talent_points / 100 + increased_phy_crit + (scourgeborne_plate_two_set / 100) + ((vicious_strikes_points * 3) / 100)))
                                            if oh_attack_table_results == 0:
                                                atta_num = 0
                                                rotation.append("OH - Plague Strike")
                                                rotation_time.append(current_time)
                                                rotation_status.append("Miss")
                                                rotation_damage.append(atta_num)
                                            elif oh_attack_table_results == 1:
                                                atta_num = 0
                                                rotation.append("OH - Plague Strike")
                                                rotation_time.append(current_time)
                                                rotation_status.append("Dodge")
                                                rotation_damage.append(atta_num)
                                            elif oh_attack_table_results == 5:
                                                #crit attack
                                                atta_num = ((189 + (oh_wep_roll * .5)) - ((189 + (oh_wep_roll * .5)) * armor_red_amount)) * var_crit_amount
                                                if dk_presence == 0:
                                                    atta_num = atta_num + (atta_num * .15)
                                                if tundra_stalker_points != 0:
                                                    if dots[0] > current_time:
                                                        atta_num = atta_num + (atta_num * (tundra_stalker_points * .03))
                                                if vicious_strikes_points != 0:
                                                    atta_num = atta_num + (atta_num * ((vicious_strikes_points * 15) / 100))
                                                if outbreak_points != 0: #This need to be changed for scourge strike
                                                    atta_num = atta_num + (atta_num * ((outbreak_points * 10) / 100))
                                                if rage_of_rivendale_points != 0:
                                                    if dots[1] > current_time:
                                                        atta_num += atta_num * ((rage_of_rivendale_points * 2) / 100)
                                                if glyph_plague_strike == True:
                                                    atta_num += atta_num * .2
                                                atta_num = atta_num * oh_wep_damage_mod
                                                if hysteria_active == True:
                                                    atta_num = atta_num + (atta_num * .2)
                                                if tricksoftt_active == True:
                                                    atta_num = atta_num + (atta_num * .15)
                                                atta_num = atta_num + (atta_num * increased_physical_damage) + (atta_num * increased_all_damage)
                                                sum_oh_ps_attacks += atta_num
                                                dots[1] = dot_timer(current_time, dot_length)
                                                if crypt_fever_points != 0:
                                                    dots[2] = dot_timer(current_time, dot_length)
                                                trinket_hit_crit_tracker = 2
                                                rotation.append("OH - Plague Strike")
                                                rotation_time.append(current_time)
                                                rotation_status.append("Crit")
                                                rotation_damage.append(atta_num)
                                            elif oh_attack_table_results == 7:
                                                #normal attack
                                                atta_num = ((189 + (oh_wep_roll * .5)) - ((189 + (oh_wep_roll * .5)) * armor_red_amount))
                                                if dk_presence == 0:
                                                    atta_num = atta_num + (atta_num * .15)
                                                if tundra_stalker_points != 0:
                                                    if dots[0] > current_time:
                                                        atta_num = atta_num + (atta_num * (tundra_stalker_points * .03))
                                                if outbreak_points != 0: #This need to be changed for scourge strike
                                                    atta_num = atta_num + (atta_num * ((outbreak_points * 10) / 100))
                                                if rage_of_rivendale_points != 0:
                                                    if dots[1] > current_time:
                                                        atta_num += atta_num * ((rage_of_rivendale_points * 2) / 100)
                                                if glyph_plague_strike == True:
                                                    atta_num += atta_num * .2
                                                atta_num = atta_num * oh_wep_damage_mod
                                                if hysteria_active == True:
                                                    atta_num = atta_num + (atta_num * .2)
                                                if tricksoftt_active == True:
                                                    atta_num = atta_num + (atta_num * .15)
                                                atta_num = atta_num + (atta_num * increased_physical_damage) + (atta_num * increased_all_damage)
                                                sum_oh_ps_attacks += atta_num
                                                dots[1] = dot_timer(current_time, dot_length)
                                                if crypt_fever_points != 0:
                                                    dots[2] = dot_timer(current_time, dot_length)
                                                trinket_hit_crit_tracker = 1
                                                rotation.append("OH - Plague Strike")
                                                rotation_time.append(current_time)
                                                rotation_status.append("Hit")
                                                rotation_damage.append(atta_num)

                                if attack_table_results == 0:
                                    atta_num = 0
                                    rune_cd_tracker[castable] = rune_cd(haste_rune_cd_miss, current_time)
                                    rotation.append("Plague Strike")
                                    rotation_time.append(current_time)
                                    rotation_status.append("Miss")
                                    rotation_damage.append(atta_num)
                                    current_time = current_time + gcd
                                    used_gcd = True
                                    continue
                                elif attack_table_results == 1:
                                    atta_num = 0
                                    rune_cd_tracker[castable] = rune_cd(haste_rune_cd_miss, current_time)
                                    rotation.append("Plague Strike")
                                    rotation_time.append(current_time)
                                    rotation_status.append("Dodge")
                                    rotation_damage.append(atta_num)
                                    current_time = current_time + gcd
                                    used_gcd = True
                                    continue
                                elif attack_table_results == 5:
                                    #crit attack
                                    rune_cd_tracker[castable] = rune_cd(haste_rune_cd, current_time)
                                    atta_num = ((189 + (wep_roll * .5)) - ((189 + (wep_roll * .5)) * armor_red_amount)) * var_crit_amount
                                    if dk_presence == 0:
                                        atta_num = atta_num + (atta_num * .15)
                                    if tundra_stalker_points != 0:
                                        if dots[0] > current_time:
                                            atta_num = atta_num + (atta_num * (tundra_stalker_points * .03))
                                    if vicious_strikes_points != 0:
                                        atta_num = atta_num + (atta_num * ((vicious_strikes_points * 15) / 100))
                                    if outbreak_points != 0: #This need to be changed for scourge strike
                                        atta_num = atta_num + (atta_num * ((outbreak_points * 10) / 100))
                                    if rage_of_rivendale_points != 0:
                                        if dots[1] > current_time:
                                            atta_num += atta_num * ((rage_of_rivendale_points * 2) / 100)
                                    if glyph_plague_strike == True:
                                        atta_num += atta_num * .2
                                    if hysteria_active == True:
                                        atta_num = atta_num + (atta_num * .2)
                                    if tricksoftt_active == True:
                                        atta_num = atta_num + (atta_num * .15)
                                    atta_num = atta_num + (atta_num * increased_physical_damage) + (atta_num * increased_all_damage)
                                    sum_ps_attacks += atta_num
                                    current_power = runic_power(10, current_power, max_runic)
                                    if dirge_points != 0:
                                        current_power = runic_power((dirge_points * 2.5), current_power, max_runic)
                                    dots[1] = dot_timer(current_time, dot_length)
                                    if crypt_fever_points != 0:
                                        dots[2] = dot_timer(current_time, dot_length)
                                    trinket_hit_crit_tracker = 2
                                    if sigil_of_strife == True:
                                        bonus_loop_ap += sigil_of_strife_amount
                                        sigil_of_strife_timer = current_time + 10
                                        sigil_of_strife_active = True
                                    rotation.append("Plague Strike")
                                    rotation_time.append(current_time)
                                    rotation_status.append("Crit")
                                    rotation_damage.append(atta_num)
                                    current_time += gcd
                                    used_gcd = True
                                    continue
                                elif attack_table_results == 7:
                                    #normal attack
                                    rune_cd_tracker[castable] = rune_cd(haste_rune_cd, current_time)
                                    atta_num = ((189 + (wep_roll * .5)) - ((189 + (wep_roll * .5)) * armor_red_amount))
                                    if dk_presence == 0:
                                        atta_num = atta_num + (atta_num * .15)
                                    if tundra_stalker_points != 0:
                                        if dots[0] > current_time:
                                            atta_num = atta_num + (atta_num * (tundra_stalker_points * .03))
                                    if outbreak_points != 0: #This need to be changed for scourge strike
                                        atta_num = atta_num + (atta_num * ((outbreak_points * 10) / 100))
                                    if rage_of_rivendale_points != 0:
                                        if dots[1] > current_time:
                                            atta_num += atta_num * ((rage_of_rivendale_points * 2) / 100)
                                    if glyph_plague_strike == True:
                                        atta_num += atta_num * .2
                                    if hysteria_active == True:
                                        atta_num = atta_num + (atta_num * .2)
                                    if tricksoftt_active == True:
                                        atta_num = atta_num + (atta_num * .15)
                                    atta_num = atta_num + (atta_num * increased_physical_damage) + (atta_num * increased_all_damage)
                                    sum_ps_attacks += atta_num
                                    current_power = runic_power(10, current_power, max_runic)
                                    if dirge_points != 0:
                                        current_power = runic_power((dirge_points * 2.5), current_power, max_runic)
                                    dots[1] = dot_timer(current_time, dot_length)
                                    if crypt_fever_points != 0:
                                        dots[2] = dot_timer(current_time, dot_length)
                                    trinket_hit_crit_tracker = 1
                                    rotation.append("Plague Strike")
                                    rotation_time.append(current_time)
                                    rotation_status.append("Hit")
                                    rotation_damage.append(atta_num)
                                    current_time += gcd
                                    used_gcd = True
                                    continue 

                    if (dots[0] - pestilence_reset_window) > 0 and (dots[0] - pestilence_reset_window) < current_time: #Pestilence
                        if (dots[1] - pestilence_reset_window) > 0 and (dots[1] - pestilence_reset_window) < current_time:
                            if pestilence_allow_reset == True:
                                if current_time - dots[0] == 0:
                                    continue
                                if current_time - dots[1] == 0:
                                    continue
                                castable = all_rune_check(blood, current_time, rune_cd_tracker)
                                if castable == 3:
                                    castable_death = all_rune_check(death, current_time, rune_cd_tracker)
                                    castable_death_f = all_rune_check(death_f, current_time, rune_cd_tracker)
                                    castable_death_u = all_rune_check(death_u, current_time, rune_cd_tracker)
                                    if castable_death != 3:
                                        use_death_rune = True
                                        just_used_death_rune = True
                                        castable = castable_death
                                    elif castable_death_f != 3:
                                        use_death_rune = True
                                        just_used_death_rune = True
                                        castable = castable_death_f
                                    elif castable_death_u != 3:
                                        use_death_rune = True
                                        just_used_death_rune = True
                                        castable = castable_death_u
                                if castable != 3:       #Use Icy Touch as formula on how to do other spells
                                    if castable == 2: #Can add abilitie modifiers later to damage math
                                        castable = 0
                                    if use_death_rune == True:
                                        use_death_rune = False
                                        if castable_death != 3:
                                            rune_cd_tracker[castable] = 0
                                            if castable_death == 2:
                                                castable_death = 0
                                            rune_cd_tracker[castable_death + 6] = 10000
                                        elif castable_death_f != 3:
                                            castable += 2
                                            rune_cd_tracker[castable] = 0
                                            if castable_death_f == 2:
                                                castable_death_f = 0
                                            rune_cd_tracker[castable_death_f + 8] = 10000
                                        elif castable_death_u != 3:
                                            castable += 4
                                            rune_cd_tracker[castable] = 0
                                            if castable_death_u == 2:
                                                castable_death_u = 0
                                            rune_cd_tracker[castable_death_u + 10] = 10000
                                    else:
                                        use_death_rune = False
                                    hit = spell_hit(spell_hit_total, increased_spell_hit, target_level)
                                    crit = spell_crit(total_crit, spell_hit_total, increased_spell_hit, target_level, increased_spell_crit)
                                    #Rune Hit
                                    haste_percentage = (total_haste_rating / 25.21) / 100 #Returns a result of 0 - 1 for 0% - 100%
                                    haste_rune_cd = rune_grade_timer(current_time, last_rune_change[castable], last_rune_change[castable+6])
                                    if improved_unholy_presence_points != 0:
                                        if dk_presence == 2:
                                            haste_rune_cd = haste_rune_cd - (haste_rune_cd * ((improved_unholy_presence_points * 5) / 100))
                                    if dk_presence != 2:
                                        gcd = input_gcd / (1 + haste_percentage)
                                        if gcd < 1:
                                            gcd = 1
                                    ##Rune Miss
                                    haste_rune_cd_miss = 1
                                    if hit == True:
                                        rune_cd_tracker[castable] = rune_cd(haste_rune_cd, current_time)
                                        scourge_strike_dot0_counter = 0
                                        scourge_strike_dot1_counter = 0
                                        if crit == True:
                                            dots[0] = dot_timer(current_time, dot_length)
                                            dots[1] = dot_timer(current_time, dot_length)
                                            multiple_adds_timer = dot_timer(current_time, dot_length)
                                            if crypt_fever_points != 0:
                                                dots[2] = dot_timer(current_time, dot_length)
                                            atta_num = random.randint(65, 79)
                                            atta_num = (atta_num) * var_crit_amount
                                            if dk_presence == 0:
                                                atta_num = atta_num + (atta_num * .15)
                                            if black_ice_points == 5:
                                                atta_num = atta_num + (atta_num * .1)
                                            elif black_ice_points == 4:
                                                atta_num = atta_num + (atta_num * .08)
                                            elif black_ice_points == 3:
                                                atta_num = atta_num + (atta_num * .06)
                                            elif black_ice_points == 2:
                                                atta_num = atta_num + (atta_num * .04)
                                            elif black_ice_points == 1:
                                                atta_num = atta_num + (atta_num * .02)
                                            if tundra_stalker_points != 0:
                                                if dots[0] > current_time:
                                                    atta_num = atta_num + (atta_num * (tundra_stalker_points * .03))
                                            if rage_of_rivendale_points != 0:
                                                if dots[1] > current_time:
                                                    atta_num += atta_num * ((rage_of_rivendale_points * 2) / 100)
                                            if hysteria_active == True:
                                                atta_num = atta_num + (atta_num * .2)
                                            if tricksoftt_active == True:
                                                atta_num = atta_num + (atta_num * .15)
                                            atta_num = atta_num + (atta_num * increased_spell_damage) + (atta_num * increased_all_damage)
                                            sum_pest_attacks += atta_num
                                            current_power = runic_power(10, current_power, max_runic)
                                            if blood_of_the_north_points != 0:
                                                if just_used_death_rune != True:
                                                    proc_num = random.randint(0, 100)
                                                    if blood_of_the_north_points < 3:
                                                        death_proc_chance = (blood_of_the_north_points * .3) * 100
                                                    elif blood_of_the_north_points == 3:
                                                        death_proc_chance = 100
                                                    if death_proc_chance >= proc_num:
                                                        death_castable = castable + death
                                                        rune_cd_tracker[death_castable] = rune_cd(haste_rune_cd, current_time)
                                                        rune_cd_tracker[castable] = 10000
                                            if reaping_points != 0:
                                                if just_used_death_rune != True:
                                                    proc_num = random.randint(0, 100)
                                                    if reaping_points < 3:
                                                        death_proc_chance = (reaping_points * .3) * 100
                                                    elif reaping_points == 3:
                                                        death_proc_chance = 100
                                                    if death_proc_chance >= proc_num:
                                                        death_castable = castable + death
                                                        rune_cd_tracker[death_castable] = rune_cd(haste_rune_cd, current_time)
                                                        rune_cd_tracker[castable] = 10000
                                            if rune_of_cinderglacier_active == True:
                                                 rune_of_cinderglacier_damage = atta_num * .2
                                                 rune_of_cinderglacier_active_count += 1
                                                 rotation.append("Rune of Cinderglacier")
                                                 rotation_time.append(current_time)
                                                 rotation_status.append("Active")
                                                 rotation_damage.append(atta_num * .2)
                                                 if rune_of_cinderglacier_active_count == 2:
                                                     rune_of_cinderglacier_active = False
                                            rotation.append("Pestilence")
                                            rotation_time.append(current_time)
                                            rotation_status.append("Crit")
                                            rotation_damage.append(atta_num)
                                            current_time += gcd
                                            used_gcd = True
                                            continue
                                        else:
                                            dots[0] = dot_timer(current_time, dot_length)
                                            dots[1] = dot_timer(current_time, dot_length)
                                            multiple_adds_timer = dot_timer(current_time, dot_length)
                                            if crypt_fever_points != 0:
                                                dots[2] = dot_timer(current_time, dot_length)
                                            atta_num = random.randint(65, 79)
                                            atta_num = (atta_num)
                                            if dk_presence == 0:
                                                atta_num = atta_num + (atta_num * .15)
                                            if black_ice_points == 5:
                                                atta_num = atta_num + (atta_num * .1)
                                            elif black_ice_points == 4:
                                                atta_num = atta_num + (atta_num * .08)
                                            elif black_ice_points == 3:
                                                atta_num = atta_num + (atta_num * .06)
                                            elif black_ice_points == 2:
                                                atta_num = atta_num + (atta_num * .04)
                                            elif black_ice_points == 1:
                                                atta_num = atta_num + (atta_num * .02)
                                            if tundra_stalker_points != 0:
                                                if dots[0] > current_time:
                                                    atta_num = atta_num + (atta_num * (tundra_stalker_points * .03))
                                            if rage_of_rivendale_points != 0:
                                                if dots[1] > current_time:
                                                    atta_num += atta_num * ((rage_of_rivendale_points * 2) / 100)
                                            if hysteria_active == True:
                                                atta_num = atta_num + (atta_num * .2)
                                            if tricksoftt_active == True:
                                                atta_num = atta_num + (atta_num * .15)
                                            atta_num = atta_num + (atta_num * increased_spell_damage) + (atta_num * increased_all_damage)
                                            sum_pest_attacks += atta_num
                                            current_power = runic_power(10, current_power, max_runic)
                                            if blood_of_the_north_points != 0:
                                                if just_used_death_rune != True:
                                                    proc_num = random.randint(0, 100)
                                                    if blood_of_the_north_points < 3:
                                                        death_proc_chance = (blood_of_the_north_points * .3) * 100
                                                    elif blood_of_the_north_points == 3:
                                                        death_proc_chance = 100
                                                    if death_proc_chance >= proc_num:
                                                        death_castable = castable + death
                                                        rune_cd_tracker[death_castable] = rune_cd(haste_rune_cd, current_time)
                                                        rune_cd_tracker[castable] = 10000  
                                            if reaping_points != 0:
                                                if just_used_death_rune != True:
                                                    proc_num = random.randint(0, 100)
                                                    if reaping_points < 3:
                                                        death_proc_chance = (reaping_points * .3) * 100
                                                    elif reaping_points == 3:
                                                        death_proc_chance = 100
                                                    if death_proc_chance >= proc_num:
                                                        death_castable = castable + death
                                                        rune_cd_tracker[death_castable] = rune_cd(haste_rune_cd, current_time)
                                                        rune_cd_tracker[castable] = 10000
                                            if rune_of_cinderglacier_active == True:
                                                 rune_of_cinderglacier_damage = atta_num * .2
                                                 rune_of_cinderglacier_active_count += 1
                                                 rotation.append("Rune of Cinderglacier")
                                                 rotation_time.append(current_time)
                                                 rotation_status.append("Active")
                                                 rotation_damage.append(atta_num * .2)
                                                 if rune_of_cinderglacier_active_count == 2:
                                                     rune_of_cinderglacier_active = False
                                            rotation.append("Pestilence")
                                            rotation_time.append(current_time)
                                            rotation_status.append("Hit")
                                            rotation_damage.append(atta_num)
                                            current_time += gcd
                                            used_gcd = True
                                            continue
                                    if hit == False:
                                        rune_cd_tracker[castable] = rune_cd(haste_rune_cd_miss, current_time)
                                        rotation.append("Pestilence")
                                        rotation_time.append(current_time)
                                        rotation_status.append("Miss")
                                        rotation_damage.append(0)
                                        current_time = current_time + gcd
                                        used_gcd = True
                                        continue
                    if multiple_adds_timer < current_time and (dots[0] - pestilence_reset_window) > 0 and (dots[0] - pestilence_reset_window) < current_time and (dots[1] - pestilence_reset_window) > 0 and (dots[1] - pestilence_reset_window) < current_time: #Spread Pest, if not on adds
                        if pestilence_allow_reset == True:
                            castable = all_rune_check(blood, current_time, rune_cd_tracker)
                            if castable == 3:
                                castable_death = all_rune_check(death, current_time, rune_cd_tracker)
                                castable_death_f = all_rune_check(death_f, current_time, rune_cd_tracker)
                                castable_death_u = all_rune_check(death_u, current_time, rune_cd_tracker)
                                if castable_death != 3:
                                    use_death_rune = True
                                    just_used_death_rune = True
                                    castable = castable_death
                                elif castable_death_f != 3:
                                    use_death_rune = True
                                    just_used_death_rune = True
                                    castable = castable_death_f
                                elif castable_death_u != 3:
                                    use_death_rune = True
                                    just_used_death_rune = True
                                    castable = castable_death_u
                            if castable != 3:       
                                if castable == 2: 
                                    castable = 0
                                if use_death_rune == True:
                                    use_death_rune = False
                                    if castable_death != 3:
                                        rune_cd_tracker[castable] = 0
                                        if castable_death == 2:
                                            castable_death = 0
                                        rune_cd_tracker[castable_death + 6] = 10000
                                    elif castable_death_f != 3:
                                        castable += 2
                                        rune_cd_tracker[castable] = 0
                                        if castable_death_f == 2:
                                            castable_death_f = 0
                                        rune_cd_tracker[castable_death_f + 8] = 10000
                                    elif castable_death_u != 3:
                                        castable += 4
                                        rune_cd_tracker[castable] = 0
                                        if castable_death_u == 2:
                                            castable_death_u = 0
                                        rune_cd_tracker[castable_death_u + 10] = 10000
                                else:
                                    use_death_rune = False
                                hit = spell_hit(spell_hit_total, increased_spell_hit, target_level)
                                crit = spell_crit(total_crit, spell_hit_total, increased_spell_hit, target_level, increased_spell_crit)
                                #Rune Hit
                                haste_percentage = (total_haste_rating / 25.21) / 100 #Returns a result of 0 - 1 for 0% - 100%
                                haste_rune_cd = rune_grade_timer(current_time, last_rune_change[castable], last_rune_change[castable+6])
                                if improved_unholy_presence_points != 0:
                                    if dk_presence == 2:
                                        haste_rune_cd = haste_rune_cd - (haste_rune_cd * ((improved_unholy_presence_points * 5) / 100))
                                if dk_presence != 2:
                                    gcd = input_gcd / (1 + haste_percentage)
                                    if gcd < 1:
                                        gcd = 1
                                ##Rune Miss
                                haste_rune_cd_miss = 1
                                if hit == True:
                                    rune_cd_tracker[castable] = rune_cd(haste_rune_cd, current_time)
                                    if crit == True:
                                        dots[0] = dot_timer(current_time, dot_length)
                                        dots[1] = dot_timer(current_time, dot_length)
                                        multiple_adds_timer = dot_timer(current_time, dot_length)
                                        if crypt_fever_points != 0:
                                            dots[2] = dot_timer(current_time, dot_length)
                                        atta_num = random.randint(65, 79)
                                        atta_num = (atta_num) * var_crit_amount
                                        if dk_presence == 0:
                                            atta_num = atta_num + (atta_num * .15)
                                        if black_ice_points == 5:
                                            atta_num = atta_num + (atta_num * .1)
                                        elif black_ice_points == 4:
                                            atta_num = atta_num + (atta_num * .08)
                                        elif black_ice_points == 3:
                                            atta_num = atta_num + (atta_num * .06)
                                        elif black_ice_points == 2:
                                            atta_num = atta_num + (atta_num * .04)
                                        elif black_ice_points == 1:
                                            atta_num = atta_num + (atta_num * .02)
                                        if tundra_stalker_points != 0:
                                            if dots[0] > current_time:
                                                atta_num = atta_num + (atta_num * (tundra_stalker_points * .03))
                                        if rage_of_rivendale_points != 0:
                                            if dots[1] > current_time:
                                                atta_num += atta_num * ((rage_of_rivendale_points * 2) / 100)
                                        if hysteria_active == True:
                                            atta_num = atta_num + (atta_num * .2)
                                        if tricksoftt_active == True:
                                            atta_num = atta_num + (atta_num * .15)
                                        atta_num = atta_num + (atta_num * increased_spell_damage) + (atta_num * increased_all_damage)
                                        sum_pest_attacks += atta_num
                                        current_power = runic_power(10, current_power, max_runic)
                                        if blood_of_the_north_points != 0:
                                            if just_used_death_rune != True:
                                                proc_num = random.randint(0, 100)
                                                if blood_of_the_north_points < 3:
                                                    death_proc_chance = (blood_of_the_north_points * .3) * 100
                                                elif blood_of_the_north_points == 3:
                                                    death_proc_chance = 100
                                                if death_proc_chance >= proc_num:
                                                    death_castable = castable + death
                                                    rune_cd_tracker[death_castable] = rune_cd(haste_rune_cd, current_time)
                                                    rune_cd_tracker[castable] = 10000 
                                        if reaping_points != 0:
                                            if just_used_death_rune != True:
                                                proc_num = random.randint(0, 100)
                                                if reaping_points < 3:
                                                    death_proc_chance = (reaping_points * .3) * 100
                                                elif reaping_points == 3:
                                                    death_proc_chance = 100
                                                if death_proc_chance >= proc_num:
                                                    death_castable = castable + death
                                                    rune_cd_tracker[death_castable] = rune_cd(haste_rune_cd, current_time)
                                                    rune_cd_tracker[castable] = 10000 
                                        if rune_of_cinderglacier_active == True:
                                             rune_of_cinderglacier_damage = atta_num * .2
                                             rune_of_cinderglacier_active_count += 1
                                             rotation.append("Rune of Cinderglacier")
                                             rotation_time.append(current_time)
                                             rotation_status.append("Active")
                                             rotation_damage.append(atta_num * .2)
                                             if rune_of_cinderglacier_active_count == 2:
                                                 rune_of_cinderglacier_active = False
                                        rotation.append("Pestilence")
                                        rotation_time.append(current_time)
                                        rotation_status.append("Crit")
                                        rotation_damage.append(atta_num)
                                        current_time += gcd
                                        used_gcd = True
                                        continue
                                    else:
                                        dots[0] = dot_timer(current_time, dot_length)
                                        dots[1] = dot_timer(current_time, dot_length)
                                        multiple_adds_timer = dot_timer(current_time, dot_length)
                                        if crypt_fever_points != 0:
                                            dots[2] = dot_timer(current_time, dot_length)
                                        atta_num = random.randint(65, 79)
                                        atta_num = (atta_num)
                                        if dk_presence == 0:
                                            atta_num = atta_num + (atta_num * .15)
                                        if black_ice_points == 5:
                                            atta_num = atta_num + (atta_num * .1)
                                        elif black_ice_points == 4:
                                            atta_num = atta_num + (atta_num * .08)
                                        elif black_ice_points == 3:
                                            atta_num = atta_num + (atta_num * .06)
                                        elif black_ice_points == 2:
                                            atta_num = atta_num + (atta_num * .04)
                                        elif black_ice_points == 1:
                                            atta_num = atta_num + (atta_num * .02)
                                        if tundra_stalker_points != 0:
                                            if dots[0] > current_time:
                                                atta_num = atta_num + (atta_num * (tundra_stalker_points * .03))
                                        if rage_of_rivendale_points != 0:
                                            if dots[1] > current_time:
                                                atta_num += atta_num * ((rage_of_rivendale_points * 2) / 100)
                                        if hysteria_active == True:
                                            atta_num = atta_num + (atta_num * .2)
                                        if tricksoftt_active == True:
                                            atta_num = atta_num + (atta_num * .15)
                                        atta_num = atta_num + (atta_num * increased_spell_damage) + (atta_num * increased_all_damage)
                                        sum_pest_attacks += atta_num
                                        current_power = runic_power(10, current_power, max_runic)
                                        if blood_of_the_north_points != 0:
                                            if just_used_death_rune != True:
                                                proc_num = random.randint(0, 100)
                                                if blood_of_the_north_points < 3:
                                                    death_proc_chance = (blood_of_the_north_points * .3) * 100
                                                elif blood_of_the_north_points == 3:
                                                    death_proc_chance = 100
                                                if death_proc_chance >= proc_num:
                                                    death_castable = castable + death
                                                    rune_cd_tracker[death_castable] = rune_cd(haste_rune_cd, current_time)
                                                    rune_cd_tracker[castable] = 10000   
                                        if reaping_points != 0:
                                            if just_used_death_rune != True:
                                                proc_num = random.randint(0, 100)
                                                if reaping_points < 3:
                                                    death_proc_chance = (reaping_points * .3) * 100
                                                elif reaping_points == 3:
                                                    death_proc_chance = 100
                                                if death_proc_chance >= proc_num:
                                                    death_castable = castable + death
                                                    rune_cd_tracker[death_castable] = rune_cd(haste_rune_cd, current_time)
                                                    rune_cd_tracker[castable] = 10000 
                                        if rune_of_cinderglacier_active == True:
                                             rune_of_cinderglacier_damage = atta_num * .2
                                             rune_of_cinderglacier_active_count += 1
                                             rotation.append("Rune of Cinderglacier")
                                             rotation_time.append(current_time)
                                             rotation_status.append("Active")
                                             rotation_damage.append(atta_num * .2)
                                             if rune_of_cinderglacier_active_count == 2:
                                                 rune_of_cinderglacier_active = False
                                        rotation.append("Pestilence")
                                        rotation_time.append(current_time)
                                        rotation_status.append("Hit")
                                        rotation_damage.append(atta_num)
                                        current_time += gcd
                                        used_gcd = True
                                        continue
                                if hit == False:
                                    rune_cd_tracker[castable] = rune_cd(haste_rune_cd_miss, current_time)
                                    rotation.append("Pestilence")
                                    rotation_time.append(current_time)
                                    rotation_status.append("Miss")
                                    rotation_damage.append(0)
                                    current_time = current_time + gcd
                                    used_gcd = True
                                    continue
                        elif pestilence_allow_reset == False:
                            castable = all_rune_check(blood, current_time, rune_cd_tracker)
                            if castable == 3:
                                castable_death = all_rune_check(death, current_time, rune_cd_tracker)
                                castable_death_f = all_rune_check(death_f, current_time, rune_cd_tracker)
                                castable_death_u = all_rune_check(death_u, current_time, rune_cd_tracker)
                                if castable_death != 3:
                                    use_death_rune = True
                                    just_used_death_rune = True
                                    castable = castable_death
                                elif castable_death_f != 3:
                                    use_death_rune = True
                                    just_used_death_rune = True
                                    castable = castable_death_f
                                elif castable_death_u != 3:
                                    use_death_rune = True
                                    just_used_death_rune = True
                                    castable = castable_death_u
                            if castable != 3:       
                                if castable == 2: 
                                    castable = 0
                                if use_death_rune == True:
                                    use_death_rune = False
                                    if castable_death != 3:
                                        rune_cd_tracker[castable] = 0
                                        if castable_death == 2:
                                            castable_death = 0
                                        rune_cd_tracker[castable_death + 6] = 10000
                                    elif castable_death_f != 3:
                                        castable += 2
                                        rune_cd_tracker[castable] = 0
                                        if castable_death_f == 2:
                                            castable_death_f = 0
                                        rune_cd_tracker[castable_death_f + 8] = 10000
                                    elif castable_death_u != 3:
                                        castable += 4
                                        rune_cd_tracker[castable] = 0
                                        if castable_death_u == 2:
                                            castable_death_u = 0
                                        rune_cd_tracker[castable_death_u + 10] = 10000
                                else:
                                    use_death_rune = False
                                hit = spell_hit(spell_hit_total, increased_spell_hit, target_level)
                                crit = spell_crit(total_crit, spell_hit_total, increased_spell_hit, target_level, increased_spell_crit)
                                #Rune Hit
                                haste_percentage = (total_haste_rating / 25.21) / 100 #Returns a result of 0 - 1 for 0% - 100%
                                haste_rune_cd = rune_grade_timer(current_time, last_rune_change[castable], last_rune_change[castable+6])
                                if improved_unholy_presence_points != 0:
                                    if dk_presence == 2:
                                        haste_rune_cd = haste_rune_cd - (haste_rune_cd * ((improved_unholy_presence_points * 5) / 100))
                                if dk_presence != 2:
                                    gcd = input_gcd / (1 + haste_percentage)
                                    if gcd < 1:
                                        gcd = 1
                                ##Rune Miss
                                haste_rune_cd_miss = 1
                                if hit == True:
                                    rune_cd_tracker[castable] = rune_cd(haste_rune_cd, current_time)
                                    if crit == True:
                                        multiple_adds_timer = dot_timer(current_time, dot_length)
                                        atta_num = random.randint(65, 79)
                                        atta_num = (atta_num) * var_crit_amount
                                        if dk_presence == 0:
                                            atta_num = atta_num + (atta_num * .15)
                                        if black_ice_points == 5:
                                            atta_num = atta_num + (atta_num * .1)
                                        elif black_ice_points == 4:
                                            atta_num = atta_num + (atta_num * .08)
                                        elif black_ice_points == 3:
                                            atta_num = atta_num + (atta_num * .06)
                                        elif black_ice_points == 2:
                                            atta_num = atta_num + (atta_num * .04)
                                        elif black_ice_points == 1:
                                            atta_num = atta_num + (atta_num * .02)
                                        if tundra_stalker_points != 0:
                                            if dots[0] > current_time:
                                                atta_num = atta_num + (atta_num * (tundra_stalker_points * .03))
                                        if rage_of_rivendale_points != 0:
                                            if dots[1] > current_time:
                                                atta_num += atta_num * ((rage_of_rivendale_points * 2) / 100)
                                        if hysteria_active == True:
                                            atta_num = atta_num + (atta_num * .2)
                                        if tricksoftt_active == True:
                                            atta_num = atta_num + (atta_num * .15)
                                        atta_num = atta_num + (atta_num * increased_spell_damage) + (atta_num * increased_all_damage)
                                        sum_pest_attacks += atta_num
                                        current_power = runic_power(10, current_power, max_runic)
                                        if blood_of_the_north_points != 0:
                                            if just_used_death_rune != True:
                                                proc_num = random.randint(0, 100)
                                                if blood_of_the_north_points < 3:
                                                    death_proc_chance = (blood_of_the_north_points * .3) * 100
                                                elif blood_of_the_north_points == 3:
                                                    death_proc_chance = 100
                                                if death_proc_chance >= proc_num:
                                                    death_castable = castable + death
                                                    rune_cd_tracker[death_castable] = rune_cd(haste_rune_cd, current_time)
                                                    rune_cd_tracker[castable] = 10000 
                                        if reaping_points != 0:
                                            if just_used_death_rune != True:
                                                proc_num = random.randint(0, 100)
                                                if reaping_points < 3:
                                                    death_proc_chance = (reaping_points * .3) * 100
                                                elif reaping_points == 3:
                                                    death_proc_chance = 100
                                                if death_proc_chance >= proc_num:
                                                    death_castable = castable + death
                                                    rune_cd_tracker[death_castable] = rune_cd(haste_rune_cd, current_time)
                                                    rune_cd_tracker[castable] = 10000 
                                        if rune_of_cinderglacier_active == True:
                                             rune_of_cinderglacier_damage = atta_num * .2
                                             rune_of_cinderglacier_active_count += 1
                                             rotation.append("Rune of Cinderglacier")
                                             rotation_time.append(current_time)
                                             rotation_status.append("Active")
                                             rotation_damage.append(atta_num * .2)
                                             if rune_of_cinderglacier_active_count == 2:
                                                 rune_of_cinderglacier_active = False
                                        rotation.append("Pestilence")
                                        rotation_time.append(current_time)
                                        rotation_status.append("Crit")
                                        rotation_damage.append(atta_num)
                                        current_time += gcd
                                        used_gcd = True
                                        continue
                                    else:
                                        multiple_adds_timer = dot_timer(current_time, dot_length)
                                        atta_num = random.randint(65, 79)
                                        atta_num = (atta_num)
                                        if dk_presence == 0:
                                            atta_num = atta_num + (atta_num * .15)
                                        if black_ice_points == 5:
                                            atta_num = atta_num + (atta_num * .1)
                                        elif black_ice_points == 4:
                                            atta_num = atta_num + (atta_num * .08)
                                        elif black_ice_points == 3:
                                            atta_num = atta_num + (atta_num * .06)
                                        elif black_ice_points == 2:
                                            atta_num = atta_num + (atta_num * .04)
                                        elif black_ice_points == 1:
                                            atta_num = atta_num + (atta_num * .02)
                                        if tundra_stalker_points != 0:
                                            if dots[0] > current_time:
                                                atta_num = atta_num + (atta_num * (tundra_stalker_points * .03))
                                        if rage_of_rivendale_points != 0:
                                            if dots[1] > current_time:
                                                atta_num += atta_num * ((rage_of_rivendale_points * 2) / 100)
                                        if hysteria_active == True:
                                            atta_num = atta_num + (atta_num * .2)
                                        if tricksoftt_active == True:
                                            atta_num = atta_num + (atta_num * .15)
                                        atta_num = atta_num + (atta_num * increased_spell_damage) + (atta_num * increased_all_damage)
                                        sum_pest_attacks += atta_num
                                        current_power = runic_power(10, current_power, max_runic)
                                        if blood_of_the_north_points != 0:
                                            if just_used_death_rune != True:
                                                proc_num = random.randint(0, 100)
                                                if blood_of_the_north_points < 3:
                                                    death_proc_chance = (blood_of_the_north_points * .3) * 100
                                                elif blood_of_the_north_points == 3:
                                                    death_proc_chance = 100
                                                if death_proc_chance >= proc_num:
                                                    death_castable = castable + death
                                                    rune_cd_tracker[death_castable] = rune_cd(haste_rune_cd, current_time)
                                                    rune_cd_tracker[castable] = 10000   
                                        if reaping_points != 0:
                                            if just_used_death_rune != True:
                                                proc_num = random.randint(0, 100)
                                                if reaping_points < 3:
                                                    death_proc_chance = (reaping_points * .3) * 100
                                                elif reaping_points == 3:
                                                    death_proc_chance = 100
                                                if death_proc_chance >= proc_num:
                                                    death_castable = castable + death
                                                    rune_cd_tracker[death_castable] = rune_cd(haste_rune_cd, current_time)
                                                    rune_cd_tracker[castable] = 10000 
                                        if rune_of_cinderglacier_active == True:
                                             rune_of_cinderglacier_damage = atta_num * .2
                                             rune_of_cinderglacier_active_count += 1
                                             rotation.append("Rune of Cinderglacier")
                                             rotation_time.append(current_time)
                                             rotation_status.append("Active")
                                             rotation_damage.append(atta_num * .2)
                                             if rune_of_cinderglacier_active_count == 2:
                                                 rune_of_cinderglacier_active = False
                                        rotation.append("Pestilence")
                                        rotation_time.append(current_time)
                                        rotation_status.append("Hit")
                                        rotation_damage.append(atta_num)
                                        current_time += gcd
                                        used_gcd = True
                                        continue
                                if hit == False:
                                    rune_cd_tracker[castable] = rune_cd(haste_rune_cd_miss, current_time)
                                    rotation.append("Pestilence")
                                    rotation_time.append(current_time)
                                    rotation_status.append("Miss")
                                    rotation_damage.append(0)
                                    current_time = current_time + gcd
                                    used_gcd = True
                                    continue
                                
                    if death_and_decay_skip == False:   #Death & Decay
                        if death_and_decay_force_cast == True or death_and_decay_cd == 0:
                            if death_and_decay_cd < current_time:
                                able_to_cast, castable, castable1, castable2, just_used_death_rune, rune_cd_tracker = use_runes(
                                    rune_cd_tracker, current_time, dots, improved_unholy_presence_points, dk_presence,
                                    total_haste_rating, last_rune_change,
                                    n_blood=1, n_frost=1, n_unholy=1)
                                if able_to_cast == 1:
                                    rotation_a, rotation_time_a, rotation_status_a, rotation_damage_a, current_time, used_gcd, current_power, gcd, \
                                        death_and_decay_damage, death_and_decay_last_damage_time, death_n_decay_apply_time, death_and_decay_cd = death_and_decay_cast(
                                        spell_hit_total, increased_spell_hit, target_level, total_crit,
                                        increased_spell_crit,
                                        current_time,
                                        dk_presence, input_gcd, dots, haste_percentage, current_ap, impurity_points,
                                        gcd,
                                        used_gcd, death_and_decay_cd, death_and_decay_cd_length,
                                        var_crit_amount, black_ice_points, rage_of_rivendale_points, hysteria_active,
                                        tricksoftt_active, increased_spell_damage, max_runic, death_n_decay_apply_time,
                                        increased_all_damage, current_power, glyph_death_and_decay,
                                        scourgelords_plate_two_set,
                                        death_and_decay_damage, death_and_decay_last_damage_time,
                                        initial_hit=True)
                                    rotation.extend(rotation_a)
                                    rotation_time.extend(rotation_time_a)
                                    rotation_status.extend(rotation_status_a)
                                    rotation_damage.extend(rotation_damage_a)
                                    for dnd_multi in range(1, amount_of_targets):
                                        rotation_a, rotation_time_a, rotation_status_a, rotation_damage_a, current_time, used_gcd, current_power, gcd, \
                                            death_and_decay_damage, death_and_decay_last_damage_time, death_n_decay_apply_time, death_and_decay_cd = death_and_decay_cast(
                                            spell_hit_total, increased_spell_hit, target_level, total_crit,
                                            increased_spell_crit, current_time,
                                            dk_presence, input_gcd, dots, haste_percentage, current_ap, impurity_points,
                                            gcd, used_gcd, death_and_decay_cd, death_and_decay_cd_length,
                                            var_crit_amount, black_ice_points, rage_of_rivendale_points,
                                            hysteria_active, tricksoftt_active, increased_spell_damage, max_runic,
                                            death_n_decay_apply_time,
                                            increased_all_damage, current_power, glyph_death_and_decay,
                                            scourgelords_plate_two_set, death_and_decay_damage,
                                            death_and_decay_last_damage_time,
                                            initial_hit=False)
                                        rotation.extend(rotation_a)
                                        rotation_time.extend(rotation_time_a)
                                        rotation_status.extend(rotation_status_a)
                                        rotation_damage.extend(rotation_damage_a)
                                    continue
                           
                    if dancing_rune_weapon_points == 1:
                        if dancing_rune_weapon_active == False:
                            if dancing_rune_weapon_cd < current_time:
                                dancing_rune_weapon_active = True
                                dancing_rune_weapon_length = current_time + 12
                                if glyph_dancing_rune_weapon == True:
                                    dancing_rune_weapon_length += 5
                                dancing_rune_weapon_cd = current_time + 90
                    
                                
                    if use_blood_strike_over_blood_boil == False: #Use Blood Boil
                        castable = all_rune_check(blood, current_time, rune_cd_tracker) #Blood Boil
                        use_death_rune = False
                        if castable == 3:   
                            until_dot0 = dots[0]
                            until_dot1 = dots[1]
                            if pestilence_allow_reset == True:
                                until_dot0 -= pestilence_reset_window
                                until_dot1 -= pestilence_reset_window
                            castable_death = all_rune_check(death, current_time, rune_cd_tracker)
                            castable_death_f = all_rune_check(death_f, current_time, rune_cd_tracker)
                            castable_death_u = all_rune_check(death_u, current_time, rune_cd_tracker)
                            if castable_death != 3:
                                if until_dot0 <= current_time + haste_rune_cd:
                                    if until_dot1 <= current_time + haste_rune_cd:
                                        use_death_rune = True
                                        just_used_death_rune = True
                                        castable = castable_death
                            elif castable_death_f != 3:
                                if until_dot0 <= current_time + haste_rune_cd:
                                    if until_dot1 <= current_time + haste_rune_cd:
                                        use_death_rune = True
                                        just_used_death_rune = True
                                        castable = castable_death_f
                            elif castable_death_u != 3:
                                if until_dot0 <= current_time + haste_rune_cd:
                                    if until_dot1 <= current_time + haste_rune_cd:
                                        use_death_rune = True
                                        just_used_death_rune = True
                                        castable = castable_death_u
                        if castable != 3:  
                            if castable == 0:
                                castable_death = all_rune_check(death, current_time, rune_cd_tracker)
                                castable_death_f = all_rune_check(death_f, current_time, rune_cd_tracker)
                                castable_death_u = all_rune_check(death_u, current_time, rune_cd_tracker)
                                until_dot0 = dots[0]
                                until_dot1 = dots[1]
                                if pestilence_allow_reset == True:
                                    until_dot0 -= pestilence_reset_window
                                    until_dot1 -= pestilence_reset_window
                                if castable_death != 3:
                                    if until_dot0 <= current_time + haste_rune_cd:
                                        if until_dot1 <= current_time + haste_rune_cd:
                                            castable += 2
                                            skip_castable = 2
                                elif castable_death_f != 3:
                                    if until_dot0 <= current_time + haste_rune_cd:
                                        if until_dot1 <= current_time + haste_rune_cd:
                                            castable += 2
                                            skip_castable = 2
                                elif castable_death_u != 3:
                                    if until_dot0 <= current_time + haste_rune_cd:
                                        if until_dot1 <= current_time + haste_rune_cd:
                                            castable += 2
                                            skip_castable = 2
                            if castable == 1:
                                castable_death = all_rune_check(death, current_time, rune_cd_tracker)
                                castable_death_f = all_rune_check(death_f, current_time, rune_cd_tracker)
                                castable_death_u = all_rune_check(death_u, current_time, rune_cd_tracker)
                                until_dot0 = dots[0]
                                until_dot1 = dots[1]
                                if pestilence_allow_reset == True:
                                    until_dot0 -= pestilence_reset_window
                                    until_dot1 -= pestilence_reset_window
                                if castable_death != 3:
                                    if until_dot0 <= current_time + haste_rune_cd:
                                        if until_dot1 <= current_time + haste_rune_cd:
                                            castable += 1
                                            skip_castable = 1
                                elif castable_death_f != 3:
                                    if until_dot0 <= current_time + haste_rune_cd:
                                        if until_dot1 <= current_time + haste_rune_cd:
                                            castable += 1
                                            skip_castable = 1
                                elif castable_death_u != 3:
                                    if until_dot0 <= current_time + haste_rune_cd:
                                        if until_dot1 <= current_time + haste_rune_cd:
                                            castable += 1
                                            skip_castable = 1  
                            if castable == 2: 
                                castable = 0
                                if skip_castable == 1:
                                    castable = 1
                                    skip_castable = 0
                                if skip_castable == 2:
                                    castable = 0
                                    skip_castable = 0
                                if use_death_rune == True:
                                    use_death_rune = False
                                    if castable_death != 3:
                                        rune_cd_tracker[castable] = 0
                                        if castable_death == 2:
                                            castable_death = 0
                                        rune_cd_tracker[castable_death + 6] = 10000
                                    elif castable_death_f != 3:
                                        castable += 2
                                        rune_cd_tracker[castable] = 0
                                        if castable_death_f == 2:
                                            castable_death_f = 0
                                        rune_cd_tracker[castable_death_f + 8] = 10000
                                    elif castable_death_u != 3:
                                        castable += 4
                                        rune_cd_tracker[castable] = 0
                                        if castable_death_u == 2:
                                            castable_death_u = 0
                                        rune_cd_tracker[castable_death_u + 10] = 10000
                                else:
                                    use_death_rune = False
                                    castable += blood
                                hit = spell_hit(spell_hit_total, increased_spell_hit, target_level)
                                crit = spell_crit((total_crit), spell_hit_total, increased_spell_hit, target_level, increased_spell_crit)
                                #Rune Hit
                                haste_percentage = (total_haste_rating / 25.21) / 100 #Returns a result of 0 - 1 for 0% - 100%
                                haste_rune_cd = rune_grade_timer(current_time, last_rune_change[castable], last_rune_change[castable+6])
                                if improved_unholy_presence_points != 0:
                                    if dk_presence == 2:
                                        haste_rune_cd = haste_rune_cd - (haste_rune_cd * ((improved_unholy_presence_points * 5) / 100))
                                if dk_presence != 2:
                                    gcd = input_gcd / (1 + haste_percentage)
                                    if gcd < 1:
                                        gcd = 1
                                other_blood_boil_damage = 0
                                blood_boil_multiple_repeate = 1
                                while blood_boil_multiple_repeate < amount_of_targets:
                                    hit2 = spell_hit(spell_hit_total, increased_spell_hit, target_level)
                                    crit2 = spell_crit((total_crit), spell_hit_total, increased_spell_hit, target_level, increased_spell_crit)
                                    if hit2 == True:
                                        if crit2 == True:
                                            atta_num = random.randint(180, 220)
                                            atta_num = (atta_num + ((current_ap + (current_ap * ((impurity_points * 4) / 100))) * .06)) * var_crit_amount
                                            if dots[0] > current_time:
                                                if dots[1] > current_time:
                                                    atta_num += atta_num
                                                elif dots[1] <= current_time:
                                                    atta_num += atta_num / 2
                                            if dots[0] < current_time:
                                                if dots[1] > current_time:
                                                    atta_num += atta_num / 2
                                            if dk_presence == 0:
                                                atta_num = atta_num + (atta_num * .15)
                                            if black_ice_points == 5:
                                                atta_num = atta_num + (atta_num * .1)
                                            elif black_ice_points == 4:
                                                atta_num = atta_num + (atta_num * .08)
                                            elif black_ice_points == 3:
                                                atta_num = atta_num + (atta_num * .06)
                                            elif black_ice_points == 2:
                                                atta_num = atta_num + (atta_num * .04)
                                            elif black_ice_points == 1:
                                                atta_num = atta_num + (atta_num * .02)
                                            if tundra_stalker_points != 0:
                                                if dots[0] > current_time:
                                                    atta_num = atta_num + (atta_num * (tundra_stalker_points * .03))
                                            if rage_of_rivendale_points != 0:
                                                if dots[1] > current_time:
                                                    atta_num += atta_num * ((rage_of_rivendale_points * 2) / 100)
                                            if might_of_mograine_points != 0:
                                                atta_num += atta_num * ((might_of_mograine_points * 15) / 100)
                                            if blood_strikes_points != 0:
                                                atta_num = atta_num + ((blood_strikes_points * 10) / 100)
                                            if hysteria_active == True:
                                                atta_num = atta_num + (atta_num * .2)
                                            if tricksoftt_active == True:
                                                atta_num = atta_num + (atta_num * .15)
                                            atta_num = atta_num + (atta_num * increased_spell_damage) + (atta_num * increased_all_damage)
                                            other_blood_boil_damage += atta_num
                                            if rune_of_cinderglacier_active == True:
                                                 rune_of_cinderglacier_damage = atta_num * .2
                                                 rune_of_cinderglacier_active_count += 1
                                                 rotation.append("Rune of Cinderglacier")
                                                 rotation_time.append(current_time)
                                                 rotation_status.append("Active")
                                                 rotation_damage.append(atta_num * .2)
                                                 if rune_of_cinderglacier_active_count == 2:
                                                     rune_of_cinderglacier_active = False
                                        else:
                                            atta_num = random.randint(180, 220)
                                            atta_num = (atta_num + ((current_ap + (current_ap * ((impurity_points * 4) / 100))) * .06))
                                            if dots[0] > current_time:
                                                if dots[1] > current_time:
                                                    atta_num += atta_num
                                                elif dots[1] <= current_time:
                                                    atta_num += atta_num / 2
                                            if dots[0] < current_time:
                                                if dots[1] > current_time:
                                                    atta_num += atta_num / 2
                                            if dk_presence == 0:
                                                atta_num = atta_num + (atta_num * .15)
                                            if black_ice_points == 5:
                                                atta_num = atta_num + (atta_num * .1)
                                            elif black_ice_points == 4:
                                                atta_num = atta_num + (atta_num * .08)
                                            elif black_ice_points == 3:
                                                atta_num = atta_num + (atta_num * .06)
                                            elif black_ice_points == 2:
                                                atta_num = atta_num + (atta_num * .04)
                                            elif black_ice_points == 1:
                                                atta_num = atta_num + (atta_num * .02)
                                            if tundra_stalker_points != 0:
                                                if dots[0] > current_time:
                                                    atta_num = atta_num + (atta_num * (tundra_stalker_points * .03))
                                            if rage_of_rivendale_points != 0:
                                                if dots[1] > current_time:
                                                    atta_num += atta_num * ((rage_of_rivendale_points * 2) / 100)
                                            if might_of_mograine_points != 0:
                                                atta_num += atta_num * ((might_of_mograine_points * 15) / 100)
                                            if blood_strikes_points != 0:
                                                atta_num = atta_num + ((blood_strikes_points * 10) / 100)
                                            if hysteria_active == True:
                                                atta_num = atta_num + (atta_num * .2)
                                            if tricksoftt_active == True:
                                                atta_num = atta_num + (atta_num * .15)
                                            atta_num = atta_num + (atta_num * increased_spell_damage) + (atta_num * increased_all_damage)
                                            other_blood_boil_damage += atta_num
                                            if rune_of_cinderglacier_active == True:
                                                 rune_of_cinderglacier_damage = atta_num * .2
                                                 rune_of_cinderglacier_active_count += 1
                                                 rotation.append("Rune of Cinderglacier")
                                                 rotation_time.append(current_time)
                                                 rotation_status.append("Active")
                                                 rotation_damage.append(atta_num * .2)
                                                 if rune_of_cinderglacier_active_count == 2:
                                                     rune_of_cinderglacier_active = False
                                    if hit2 == False:
                                        ##Rune Miss
                                        other_blood_boil_damage += 0
                                    blood_boil_multiple_repeate += 1
                                rune_cd_tracker[castable] = rune_cd(haste_rune_cd, current_time)
                                if hit == True:
                                    if crit == True:
                                        atta_num = random.randint(180, 220)
                                        atta_num = (atta_num + ((current_ap + (current_ap * ((impurity_points * 4) / 100))) * .06)) * var_crit_amount
                                        if dots[0] > current_time:
                                            if dots[1] > current_time:
                                                atta_num += atta_num
                                            elif dots[1] <= current_time:
                                                atta_num += atta_num / 2
                                        if dots[0] < current_time:
                                            if dots[1] > current_time:
                                                atta_num += atta_num / 2
                                        if dk_presence == 0:
                                            atta_num = atta_num + (atta_num * .15)
                                        if black_ice_points == 5:
                                            atta_num = atta_num + (atta_num * .1)
                                        elif black_ice_points == 4:
                                            atta_num = atta_num + (atta_num * .08)
                                        elif black_ice_points == 3:
                                            atta_num = atta_num + (atta_num * .06)
                                        elif black_ice_points == 2:
                                            atta_num = atta_num + (atta_num * .04)
                                        elif black_ice_points == 1:
                                            atta_num = atta_num + (atta_num * .02)
                                        if tundra_stalker_points != 0:
                                            if dots[0] > current_time:
                                                atta_num = atta_num + (atta_num * (tundra_stalker_points * .03))
                                        if rage_of_rivendale_points != 0:
                                            if dots[1] > current_time:
                                                atta_num += atta_num * ((rage_of_rivendale_points * 2) / 100)
                                        if might_of_mograine_points != 0:
                                            atta_num += atta_num * ((might_of_mograine_points * 15) / 100)
                                        if blood_strikes_points != 0:
                                            atta_num = atta_num + ((blood_strikes_points * 10) / 100)
                                        if hysteria_active == True:
                                            atta_num = atta_num + (atta_num * .2)
                                        if tricksoftt_active == True:
                                            atta_num = atta_num + (atta_num * .15)
                                        atta_num = atta_num + (atta_num * increased_spell_damage) + (atta_num * increased_all_damage)
                                        blood_boil_damage += atta_num + other_blood_boil_damage
                                        if rune_of_cinderglacier_active == True:
                                             rune_of_cinderglacier_damage = atta_num * .2
                                             rune_of_cinderglacier_active_count += 1
                                             rotation.append("Rune of Cinderglacier")
                                             rotation_time.append(current_time)
                                             rotation_status.append("Active")
                                             rotation_damage.append(atta_num * .2)
                                             if rune_of_cinderglacier_active_count == 2:
                                                 rune_of_cinderglacier_active = False
                                        rotation.append("Blood Boil")
                                        rotation_time.append(current_time)
                                        rotation_status.append("Crit")
                                        rotation_damage.append(atta_num)
                                        current_time += gcd
                                        used_gcd = True
                                        continue
                                    else:
                                        atta_num = random.randint(180, 220)
                                        atta_num = (atta_num + ((current_ap + (current_ap * ((impurity_points * 4) / 100))) * .06))
                                        if dots[0] > current_time:
                                            if dots[1] > current_time:
                                                atta_num += atta_num
                                            elif dots[1] <= current_time:
                                                atta_num += atta_num / 2
                                        if dots[0] < current_time:
                                            if dots[1] > current_time:
                                                atta_num += atta_num / 2
                                        if dk_presence == 0:
                                            atta_num = atta_num + (atta_num * .15)
                                        if black_ice_points == 5:
                                            atta_num = atta_num + (atta_num * .1)
                                        elif black_ice_points == 4:
                                            atta_num = atta_num + (atta_num * .08)
                                        elif black_ice_points == 3:
                                            atta_num = atta_num + (atta_num * .06)
                                        elif black_ice_points == 2:
                                            atta_num = atta_num + (atta_num * .04)
                                        elif black_ice_points == 1:
                                            atta_num = atta_num + (atta_num * .02)
                                        if tundra_stalker_points != 0:
                                            if dots[0] > current_time:
                                                atta_num = atta_num + (atta_num * (tundra_stalker_points * .03))
                                        if rage_of_rivendale_points != 0:
                                            if dots[1] > current_time:
                                                atta_num += atta_num * ((rage_of_rivendale_points * 2) / 100)
                                        if might_of_mograine_points != 0:
                                            atta_num += atta_num * ((might_of_mograine_points * 15) / 100)
                                        if blood_strikes_points != 0:
                                            atta_num = atta_num + ((blood_strikes_points * 10) / 100)
                                        if hysteria_active == True:
                                            atta_num = atta_num + (atta_num * .2)
                                        if tricksoftt_active == True:
                                            atta_num = atta_num + (atta_num * .15)
                                        atta_num = atta_num + (atta_num * increased_spell_damage) + (atta_num * increased_all_damage)
                                        blood_boil_damage += atta_num + other_blood_boil_damage
                                        if rune_of_cinderglacier_active == True:
                                             rune_of_cinderglacier_damage = atta_num * .2
                                             rune_of_cinderglacier_active_count += 1
                                             rotation.append("Rune of Cinderglacier")
                                             rotation_time.append(current_time)
                                             rotation_status.append("Active")
                                             rotation_damage.append(atta_num * .2)
                                             if rune_of_cinderglacier_active_count == 2:
                                                 rune_of_cinderglacier_active = False
                                        rotation.append("Blood Boil")
                                        rotation_time.append(current_time)
                                        rotation_status.append("Hit")
                                        rotation_damage.append(atta_num)
                                        current_time += gcd
                                        used_gcd = True
                                        continue
                                if hit == False:
                                    ##Rune Miss
                                    blood_boil_damage += other_blood_boil_damage
                                    rotation.append("Blood Boil")
                                    rotation_time.append(current_time)
                                    rotation_status.append("Miss")
                                    rotation_damage.append(0 + other_blood_boil_damage)
                                    current_time = current_time + gcd
                                    used_gcd = True
                                    continue
                            opp_castable = castable
                            opp_castable = castable - 1
                            if opp_castable == -1:
                                opp_castable = 1
                            castable_death = all_rune_check(death, current_time, rune_cd_tracker)
                            castable_death_f = all_rune_check(death_f, current_time, rune_cd_tracker)
                            castable_death_u = all_rune_check(death_u, current_time, rune_cd_tracker)
                            if castable_death != 3:
                                opp_castable += 6
                            elif castable_death_f != 3:
                                opp_castable += 8
                            elif castable_death_u != 3:
                                opp_castable += 10
                            until_dot0 = dots[0]
                            until_dot1 = dots[1]
                            if pestilence_allow_reset == True:
                                until_dot0 -= pestilence_reset_window
                                until_dot1 -= pestilence_reset_window
                            if rune_cd_tracker[opp_castable] < until_dot0:
                                if rune_cd_tracker[opp_castable] < until_dot1:
                                    #castable = opp_castable   
                                    if use_death_rune == True:
                                        use_death_rune = False
                                        if castable_death != 3:
                                            rune_cd_tracker[castable] = 0
                                            if castable_death == 2:
                                                castable_death = 0
                                            rune_cd_tracker[castable_death + 6] = 10000
                                        elif castable_death_f != 3:
                                            castable += 2
                                            rune_cd_tracker[castable] = 0
                                            if castable_death_f == 2:
                                                castable_death_f = 0
                                            rune_cd_tracker[castable_death_f + 8] = 10000
                                        elif castable_death_u != 3:
                                            castable += 4
                                            rune_cd_tracker[castable] = 0
                                            if castable_death_u == 2:
                                                castable_death_u = 0
                                            rune_cd_tracker[castable_death_u + 10] = 10000
                                    else:
                                        use_death_rune = False
                                        castable += blood
                                    hit = spell_hit(spell_hit_total, increased_spell_hit, target_level)
                                    crit = spell_crit((total_crit), spell_hit_total, increased_spell_hit, target_level, increased_spell_crit)
                                    #Rune Hit
                                    haste_percentage = (total_haste_rating / 25.21) / 100 #Returns a result of 0 - 1 for 0% - 100%
                                    haste_rune_cd = rune_grade_timer(current_time, last_rune_change[castable], last_rune_change[castable+6])
                                    if improved_unholy_presence_points != 0:
                                        if dk_presence == 2:
                                            haste_rune_cd = haste_rune_cd - (haste_rune_cd * ((improved_unholy_presence_points * 5) / 100))
                                    if dk_presence != 2:
                                        gcd = input_gcd / (1 + haste_percentage)
                                        if gcd < 1:
                                            gcd = 1
                                    other_blood_boil_damage = 0
                                    blood_boil_multiple_repeate = 1
                                    while blood_boil_multiple_repeate < amount_of_targets:
                                        hit2 = spell_hit(spell_hit_total, increased_spell_hit, target_level)
                                        crit2 = spell_crit((total_crit), spell_hit_total, increased_spell_hit, target_level, increased_spell_crit)
                                        if hit2 == True:
                                            if crit2 == True:
                                                atta_num = random.randint(180, 220)
                                                atta_num = (atta_num + ((current_ap + (current_ap * ((impurity_points * 4) / 100))) * .06)) * var_crit_amount
                                                if dots[0] > current_time:
                                                    if dots[1] > current_time:
                                                        atta_num += atta_num
                                                    elif dots[1] <= current_time:
                                                        atta_num += atta_num / 2
                                                if dots[0] < current_time:
                                                    if dots[1] > current_time:
                                                        atta_num += atta_num / 2
                                                if dk_presence == 0:
                                                    atta_num = atta_num + (atta_num * .15)
                                                if black_ice_points == 5:
                                                    atta_num = atta_num + (atta_num * .1)
                                                elif black_ice_points == 4:
                                                    atta_num = atta_num + (atta_num * .08)
                                                elif black_ice_points == 3:
                                                    atta_num = atta_num + (atta_num * .06)
                                                elif black_ice_points == 2:
                                                    atta_num = atta_num + (atta_num * .04)
                                                elif black_ice_points == 1:
                                                    atta_num = atta_num + (atta_num * .02)
                                                if tundra_stalker_points != 0:
                                                    if dots[0] > current_time:
                                                        atta_num = atta_num + (atta_num * (tundra_stalker_points * .03))
                                                if rage_of_rivendale_points != 0:
                                                    if dots[1] > current_time:
                                                        atta_num += atta_num * ((rage_of_rivendale_points * 2) / 100)
                                                if might_of_mograine_points != 0:
                                                    atta_num += atta_num * ((might_of_mograine_points * 15) / 100)
                                                if blood_strikes_points != 0:
                                                    atta_num = atta_num + ((blood_strikes_points * 10) / 100)
                                                if hysteria_active == True:
                                                    atta_num = atta_num + (atta_num * .2)
                                                if tricksoftt_active == True:
                                                    atta_num = atta_num + (atta_num * .15)
                                                atta_num = atta_num + (atta_num * increased_spell_damage) + (atta_num * increased_all_damage)
                                                other_blood_boil_damage += atta_num
                                                if rune_of_cinderglacier_active == True:
                                                     rune_of_cinderglacier_damage = atta_num * .2
                                                     rune_of_cinderglacier_active_count += 1
                                                     rotation.append("Rune of Cinderglacier")
                                                     rotation_time.append(current_time)
                                                     rotation_status.append("Active")
                                                     rotation_damage.append(atta_num * .2)
                                                     if rune_of_cinderglacier_active_count == 2:
                                                         rune_of_cinderglacier_active = False
                                            else:
                                                atta_num = random.randint(180, 220)
                                                atta_num = (atta_num + ((current_ap + (current_ap * ((impurity_points * 4) / 100))) * .06))
                                                if dots[0] > current_time:
                                                    if dots[1] > current_time:
                                                        atta_num += atta_num
                                                    elif dots[1] <= current_time:
                                                        atta_num += atta_num / 2
                                                if dots[0] < current_time:
                                                    if dots[1] > current_time:
                                                        atta_num += atta_num / 2
                                                if dk_presence == 0:
                                                    atta_num = atta_num + (atta_num * .15)
                                                if black_ice_points == 5:
                                                    atta_num = atta_num + (atta_num * .1)
                                                elif black_ice_points == 4:
                                                    atta_num = atta_num + (atta_num * .08)
                                                elif black_ice_points == 3:
                                                    atta_num = atta_num + (atta_num * .06)
                                                elif black_ice_points == 2:
                                                    atta_num = atta_num + (atta_num * .04)
                                                elif black_ice_points == 1:
                                                    atta_num = atta_num + (atta_num * .02)
                                                if tundra_stalker_points != 0:
                                                    if dots[0] > current_time:
                                                        atta_num = atta_num + (atta_num * (tundra_stalker_points * .03))
                                                if rage_of_rivendale_points != 0:
                                                    if dots[1] > current_time:
                                                        atta_num += atta_num * ((rage_of_rivendale_points * 2) / 100)
                                                if might_of_mograine_points != 0:
                                                    atta_num += atta_num * ((might_of_mograine_points * 15) / 100)
                                                if blood_strikes_points != 0:
                                                    atta_num = atta_num + ((blood_strikes_points * 10) / 100)
                                                if hysteria_active == True:
                                                    atta_num = atta_num + (atta_num * .2)
                                                if tricksoftt_active == True:
                                                    atta_num = atta_num + (atta_num * .15)
                                                atta_num = atta_num + (atta_num * increased_spell_damage) + (atta_num * increased_all_damage)
                                                other_blood_boil_damage += atta_num
                                                if rune_of_cinderglacier_active == True:
                                                     rune_of_cinderglacier_damage = atta_num * .2
                                                     rune_of_cinderglacier_active_count += 1
                                                     rotation.append("Rune of Cinderglacier")
                                                     rotation_time.append(current_time)
                                                     rotation_status.append("Active")
                                                     rotation_damage.append(atta_num * .2)
                                                     if rune_of_cinderglacier_active_count == 2:
                                                         rune_of_cinderglacier_active = False
                                        if hit2 == False:
                                            ##Rune Miss
                                            other_blood_boil_damage += 0
                                        blood_boil_multiple_repeate += 1
                                    rune_cd_tracker[castable] = rune_cd(haste_rune_cd, current_time)
                                    if hit == True:
                                        if crit == True:
                                            atta_num = random.randint(180, 220)
                                            atta_num = (atta_num + ((current_ap + (current_ap * ((impurity_points * 4) / 100))) * .06)) * var_crit_amount
                                            if dots[0] > current_time:
                                                if dots[1] > current_time:
                                                    atta_num += atta_num
                                                elif dots[1] <= current_time:
                                                    atta_num += atta_num / 2
                                            if dots[0] < current_time:
                                                if dots[1] > current_time:
                                                    atta_num += atta_num / 2
                                            if dk_presence == 0:
                                                atta_num = atta_num + (atta_num * .15)
                                            if black_ice_points == 5:
                                                atta_num = atta_num + (atta_num * .1)
                                            elif black_ice_points == 4:
                                                atta_num = atta_num + (atta_num * .08)
                                            elif black_ice_points == 3:
                                                atta_num = atta_num + (atta_num * .06)
                                            elif black_ice_points == 2:
                                                atta_num = atta_num + (atta_num * .04)
                                            elif black_ice_points == 1:
                                                atta_num = atta_num + (atta_num * .02)
                                            if tundra_stalker_points != 0:
                                                if dots[0] > current_time:
                                                    atta_num = atta_num + (atta_num * (tundra_stalker_points * .03))
                                            if rage_of_rivendale_points != 0:
                                                if dots[1] > current_time:
                                                    atta_num += atta_num * ((rage_of_rivendale_points * 2) / 100)
                                            if might_of_mograine_points != 0:
                                                atta_num += atta_num * ((might_of_mograine_points * 15) / 100)
                                            if blood_strikes_points != 0:
                                                atta_num = atta_num + ((blood_strikes_points * 10) / 100)
                                            if hysteria_active == True:
                                                atta_num = atta_num + (atta_num * .2)
                                            if tricksoftt_active == True:
                                                atta_num = atta_num + (atta_num * .15)
                                            atta_num = atta_num + (atta_num * increased_spell_damage) + (atta_num * increased_all_damage)
                                            blood_boil_damage += atta_num + other_blood_boil_damage
                                            if rune_of_cinderglacier_active == True:
                                                 rune_of_cinderglacier_damage = atta_num * .2
                                                 rune_of_cinderglacier_active_count += 1
                                                 rotation.append("Rune of Cinderglacier")
                                                 rotation_time.append(current_time)
                                                 rotation_status.append("Active")
                                                 rotation_damage.append(atta_num * .2)
                                                 if rune_of_cinderglacier_active_count == 2:
                                                     rune_of_cinderglacier_active = False
                                            rotation.append("Blood Boil")
                                            rotation_time.append(current_time)
                                            rotation_status.append("Crit")
                                            rotation_damage.append(atta_num)
                                            current_time += gcd
                                            used_gcd = True
                                            continue
                                        else:
                                            atta_num = random.randint(180, 220)
                                            atta_num = (atta_num + ((current_ap + (current_ap * ((impurity_points * 4) / 100))) * .06))
                                            if dots[0] > current_time:
                                                if dots[1] > current_time:
                                                    atta_num += atta_num
                                                elif dots[1] <= current_time:
                                                    atta_num += atta_num / 2
                                            if dots[0] < current_time:
                                                if dots[1] > current_time:
                                                    atta_num += atta_num / 2
                                            if dk_presence == 0:
                                                atta_num = atta_num + (atta_num * .15)
                                            if black_ice_points == 5:
                                                atta_num = atta_num + (atta_num * .1)
                                            elif black_ice_points == 4:
                                                atta_num = atta_num + (atta_num * .08)
                                            elif black_ice_points == 3:
                                                atta_num = atta_num + (atta_num * .06)
                                            elif black_ice_points == 2:
                                                atta_num = atta_num + (atta_num * .04)
                                            elif black_ice_points == 1:
                                                atta_num = atta_num + (atta_num * .02)
                                            if tundra_stalker_points != 0:
                                                if dots[0] > current_time:
                                                    atta_num = atta_num + (atta_num * (tundra_stalker_points * .03))
                                            if rage_of_rivendale_points != 0:
                                                if dots[1] > current_time:
                                                    atta_num += atta_num * ((rage_of_rivendale_points * 2) / 100)
                                            if might_of_mograine_points != 0:
                                                atta_num += atta_num * ((might_of_mograine_points * 15) / 100)
                                            if blood_strikes_points != 0:
                                                atta_num = atta_num + ((blood_strikes_points * 10) / 100)
                                            if hysteria_active == True:
                                                atta_num = atta_num + (atta_num * .2)
                                            if tricksoftt_active == True:
                                                atta_num = atta_num + (atta_num * .15)
                                            atta_num = atta_num + (atta_num * increased_spell_damage) + (atta_num * increased_all_damage)
                                            blood_boil_damage += atta_num + other_blood_boil_damage
                                            if rune_of_cinderglacier_active == True:
                                                 rune_of_cinderglacier_damage = atta_num * .2
                                                 rune_of_cinderglacier_active_count += 1
                                                 rotation.append("Rune of Cinderglacier")
                                                 rotation_time.append(current_time)
                                                 rotation_status.append("Active")
                                                 rotation_damage.append(atta_num * .2)
                                                 if rune_of_cinderglacier_active_count == 2:
                                                     rune_of_cinderglacier_active = False
                                            rotation.append("Blood Boil")
                                            rotation_time.append(current_time)
                                            rotation_status.append("Hit")
                                            rotation_damage.append(atta_num)
                                            current_time += gcd
                                            used_gcd = True
                                            continue
                                    if hit == False:
                                        ##Rune Miss
                                        blood_boil_damage += other_blood_boil_damage
                                        rotation.append("Blood Boil")
                                        rotation_time.append(current_time)
                                        rotation_status.append("Miss")
                                        rotation_damage.append(0 + other_blood_boil_damage)
                                        current_time = current_time + gcd
                                        used_gcd = True
                                        continue
                                    
                    if use_blood_strike_over_blood_boil == True and heart_strike_points == 0: #Use Blood Strike
                        castable = all_rune_check(blood, current_time, rune_cd_tracker) #Blood Strike
                        use_death_rune = False
                        if castable == 3:   #Blood Strike
                            until_dot0 = dots[0]
                            until_dot1 = dots[1]
                            if pestilence_allow_reset == True:
                                until_dot0 -= pestilence_reset_window
                                until_dot1 -= pestilence_reset_window
                            castable_death = all_rune_check(death, current_time, rune_cd_tracker)
                            castable_death_f = all_rune_check(death_f, current_time, rune_cd_tracker)
                            castable_death_u = all_rune_check(death_u, current_time, rune_cd_tracker)
                            if castable_death != 3:
                                if until_dot0 <= current_time + haste_rune_cd:
                                    if until_dot1 <= current_time + haste_rune_cd:
                                        use_death_rune = True
                                        just_used_death_rune = True
                                        castable = castable_death
                            elif castable_death_f != 3:
                                if until_dot0 <= current_time + haste_rune_cd:
                                    if until_dot1 <= current_time + haste_rune_cd:
                                        use_death_rune = True
                                        just_used_death_rune = True
                                        castable = castable_death_f
                            elif castable_death_u != 3:
                                if until_dot0 <= current_time + haste_rune_cd:
                                    if until_dot1 <= current_time + haste_rune_cd:
                                        use_death_rune = True
                                        just_used_death_rune = True
                                        castable = castable_death_u
                        if castable != 3:  
                            if castable == 0:
                                castable_death = all_rune_check(death, current_time, rune_cd_tracker)
                                castable_death_f = all_rune_check(death_f, current_time, rune_cd_tracker)
                                castable_death_u = all_rune_check(death_u, current_time, rune_cd_tracker)
                                until_dot0 = dots[0]
                                until_dot1 = dots[1]
                                if pestilence_allow_reset == True:
                                    until_dot0 -= pestilence_reset_window
                                    until_dot1 -= pestilence_reset_window
                                if castable_death != 3:
                                    if until_dot0 <= current_time + haste_rune_cd:
                                        if until_dot1 <= current_time + haste_rune_cd:
                                            castable += 2
                                            skip_castable = 2
                                elif castable_death_f != 3:
                                    if until_dot0 <= current_time + haste_rune_cd:
                                        if until_dot1 <= current_time + haste_rune_cd:
                                            castable += 2
                                            skip_castable = 2
                                elif castable_death_u != 3:
                                    if until_dot0 <= current_time + haste_rune_cd:
                                        if until_dot1 <= current_time + haste_rune_cd:
                                            castable += 2
                                            skip_castable = 2
                            if castable == 1:
                                castable_death = all_rune_check(death, current_time, rune_cd_tracker)
                                castable_death_f = all_rune_check(death_f, current_time, rune_cd_tracker)
                                castable_death_u = all_rune_check(death_u, current_time, rune_cd_tracker)
                                until_dot0 = dots[0]
                                until_dot1 = dots[1]
                                if pestilence_allow_reset == True:
                                    until_dot0 -= pestilence_reset_window
                                    until_dot1 -= pestilence_reset_window
                                if castable_death != 3:
                                    if until_dot0 <= current_time + haste_rune_cd:
                                        if until_dot1 <= current_time + haste_rune_cd:
                                            castable += 1
                                            skip_castable = 1
                                elif castable_death_f != 3:
                                    if until_dot0 <= current_time + haste_rune_cd:
                                        if until_dot1 <= current_time + haste_rune_cd:
                                            castable += 1
                                            skip_castable = 1
                                elif castable_death_u != 3:
                                    if until_dot0 <= current_time + haste_rune_cd:
                                        if until_dot1 <= current_time + haste_rune_cd:
                                            castable += 1
                                            skip_castable = 1  
                            if castable == 2: 
                                castable = 0
                                if skip_castable == 1:
                                    castable = 1
                                    skip_castable = 0
                                if skip_castable == 2:
                                    castable = 0
                                    skip_castable = 0
                                if use_death_rune == True:
                                    use_death_rune = False
                                    if castable_death != 3:
                                        rune_cd_tracker[castable] = 0
                                        if castable_death == 2:
                                            castable_death = 0
                                        rune_cd_tracker[castable_death + 6] = 10000
                                    elif castable_death_f != 3:
                                        castable += 2
                                        rune_cd_tracker[castable] = 0
                                        if castable_death_f == 2:
                                            castable_death_f = 0
                                        rune_cd_tracker[castable_death_f + 8] = 10000
                                    elif castable_death_u != 3:
                                        castable += 4
                                        rune_cd_tracker[castable] = 0
                                        if castable_death_u == 2:
                                            castable_death_u = 0
                                        rune_cd_tracker[castable_death_u + 10] = 10000
                                else:
                                    use_death_rune = False
                                attack_table_results = attack_table(1, tanking, H2, True, False, hit_from_gear, hit_from_other, target_level, all_expertise_dodge, all_expertise_parry, total_crit, (annihilation_talent_points / 100) + increased_phy_crit + ((subversion_points * 3) / 100))
                                armor_red_amount = dam_reduc(current_armor, armor_penetration, target_level)
                                wep_roll = weapon_roll(mh_input_lowend_weapon_damage,mh_input_topend_weapon_damage)
                                wep_roll = wep_roll + (attack_damage_normalization * current_ap / 14)
                                #Rune Hit
                                haste_percentage = (total_haste_rating / 25.21) / 100 #Returns a result of 0 - 1 for 0% - 100%
                                haste_rune_cd = rune_grade_timer(current_time, last_rune_change[castable], last_rune_change[castable+6])
                                if improved_unholy_presence_points != 0:
                                    if dk_presence == 2:
                                        haste_rune_cd = haste_rune_cd - (haste_rune_cd * ((improved_unholy_presence_points * 5) / 100))
                                if dk_presence != 2:
                                    gcd = input_gcd / (1 + haste_percentage)
                                    if gcd < 1:
                                        gcd = 1
                                ##Rune Miss
                                haste_rune_cd_miss = 1
                                how_many_dots_on_target = 0
                                if dots[0] > current_time:
                                    how_many_dots_on_target += 1
                                if dots[1] > current_time:
                                    how_many_dots_on_target += 1
                                if dots[2] > current_time:
                                    how_many_dots_on_target += 1
                                if dancing_rune_weapon_points == 1:
                                    if dancing_rune_weapon_active == True:
                                        if attack_table_results == 0:
                                            atta_num = 0
                                            rotation.append("Dancing Rune Weapon")
                                            rotation_time.append(current_time)
                                            rotation_status.append("Miss")
                                            rotation_damage.append(atta_num)
                                        elif attack_table_results == 1:
                                            atta_num = 0
                                            rotation.append("Dancing Rune Weapon")
                                            rotation_time.append(current_time)
                                            rotation_status.append("Dodge")
                                            rotation_damage.append(atta_num)
                                        elif attack_table_results == 5:
                                            atta_num = (((746 + (wep_roll * .4)) + (( 746 + (wep_roll * .4)) * (.125 * how_many_dots_on_target)) + (( 746 + (wep_roll * .4)) * (.125 * how_many_dots_on_target) * darkruned_battlegear_four_set)) - (((746 + (wep_roll * .4)) + (( 746 + (wep_roll * .4)) * (.125 * how_many_dots_on_target)) + (( 746 + (wep_roll * .4)) * (.125 * how_many_dots_on_target) * darkruned_battlegear_four_set)) * armor_red_amount))  * (var_crit_amount + (guile_of_gorefiend_points * .15))
                                            if dk_presence == 0:
                                                atta_num = atta_num + (atta_num * .15)
                                            if tundra_stalker_points != 0:
                                                if dots[0] > current_time:
                                                    atta_num = atta_num + (atta_num * (tundra_stalker_points * .03))
                                            if blood_of_the_north_points != 0:
                                                if blood_of_the_north_points < 3:
                                                    atta_num = atta_num + (atta_num * (blood_of_the_north_points * .03))
                                                elif blood_of_the_north_points == 3:
                                                    atta_num = atta_num + (atta_num * .1)
                                            if t9_tank_two_set == True:
                                                atta_num = atta_num + (atta_num *.05)
                                            if rage_of_rivendale_points != 0:
                                                if dots[1] > current_time:
                                                    atta_num += atta_num * ((rage_of_rivendale_points * 2) / 100)
                                            if blood_strikes_points != 0:
                                                atta_num = atta_num + ((blood_strikes_points * 5) / 100)
                                            if might_of_mograine_points != 0:
                                                atta_num += atta_num * ((might_of_mograine_points * 15) / 100)
                                            if hysteria_active == True:
                                                atta_num = atta_num + (atta_num * .2)
                                            if tricksoftt_active == True:
                                                atta_num = atta_num + (atta_num * .15)
                                            atta_num = atta_num + (atta_num * increased_physical_damage) + (atta_num * increased_all_damage)
                                            atta_num = atta_num * dancing_rune_weapon_damage_multi
                                            dancing_rune_weapon_damage += atta_num
                                            rotation.append("Dancing Rune Weapon")
                                            rotation_time.append(current_time)
                                            rotation_status.append("Crit")
                                            rotation_damage.append(atta_num)
                                            trinket_hit_crit_tracker = 2
                                            if blood_of_the_north_points != 0:
                                                if just_used_death_rune != True:
                                                    proc_num = random.randint(0, 100)
                                                    if blood_of_the_north_points < 3:
                                                        death_proc_chance = (blood_of_the_north_points * .3) * 100
                                                    elif blood_of_the_north_points == 3:
                                                        death_proc_chance = 100
                                                    if death_proc_chance >= proc_num:
                                                        death_castable = castable + death
                                                        rune_cd_tracker[death_castable] = rune_cd(haste_rune_cd, current_time)
                                                        rune_cd_tracker[castable] = 10000
                                            if reaping_points != 0:
                                                if just_used_death_rune != True:
                                                    proc_num = random.randint(0, 100)
                                                    if reaping_points < 3:
                                                        death_proc_chance = (reaping_points * .3) * 100
                                                    elif reaping_points == 3:
                                                        death_proc_chance = 100
                                                    if death_proc_chance >= proc_num:
                                                        death_castable = castable + death
                                                        rune_cd_tracker[death_castable] = rune_cd(haste_rune_cd, current_time)
                                                        rune_cd_tracker[castable] = 10000
                                            if sigil_of_haunted_dreams == True:
                                                if random.randint(0, 100) < 15:
                                                    if sigil_of_haunted_dreams_buff == False:
                                                        sigil_of_haunted_dreams_buff = True
                                                        sigil_of_haunted_dreams_timer = current_time + 10  
                                                        total_crit = total_crit + ((173 / 45.8) / 100) 
                                            if t9_dps_two_set == True:
                                                if t9_bonus == False:
                                                    if t9_cd_timer < current_time:
                                                        if (random.randint(0, 10000)/100) < 50:
                                                            t9_bonus = True
                                                            t9_cd_timer = current_time + 45
                                                            t9_active_timer = current_time + 15
                                                            bonus_loop_str += 180
                                                            rotation.append("T9 DPS 2p Bonus")
                                                            rotation_time.append(current_time)
                                                            rotation_damage.append(0)
                                                            rotation_status.append("Proc")
                                            if desolation_points != 0:
                                                if desolation_buff == False:
                                                    increased_all_damage += (desolation_points / 100)
                                                    desolation_buff_timer = current_time + 20
                                                    rotation.append("Desolation")
                                                    rotation_time.append(current_time)
                                                    rotation_damage.append(0)
                                                    rotation_status.append("Applied")
                                                    desolation_buff = True
                                                else:
                                                    desolation_buff_timer = current_time + 20
                                                    rotation.append("Desolation")
                                                    rotation_time.append(current_time)
                                                    rotation_damage.append(0)
                                                    rotation_status.append("Refresh")
                                            if sudden_doom_points != 0:  #Sudden Doom aka Free Death Coil
                                                if (random.randint(0, 10000)/100) < sudden_doom_points * 5:
                                                    hit = spell_hit(spell_hit_total, increased_spell_hit, target_level)
                                                    crit = spell_crit((total_crit + (darkruned_battlegear_two_set / 100)), spell_hit_total, increased_spell_hit, target_level, increased_spell_crit)
                                                    if hit == True:
                                                        if crit == True:
                                                            atta_num = random.randint(443, 665)
                                                            atta_num = (atta_num + ((current_ap + (current_ap * ((impurity_points * 4) / 100))) * 0)) * var_crit_amount
                                                            if sigil_of_vengeful_heart == True:
                                                                atta_num + 380
                                                            if sigil_of_the_wild_buck == True:
                                                                atta_num += 80
                                                            if black_ice_points == 5:
                                                                atta_num = atta_num + (atta_num * .1)
                                                            elif black_ice_points == 4:
                                                                atta_num = atta_num + (atta_num * .08)
                                                            elif black_ice_points == 3:
                                                                atta_num = atta_num + (atta_num * .06)
                                                            elif black_ice_points == 2:
                                                                atta_num = atta_num + (atta_num * .04)
                                                            elif black_ice_points == 1:
                                                                atta_num = atta_num + (atta_num * .02)
                                                            if dk_presence == 0:
                                                                atta_num = atta_num + (atta_num * .15)
                                                            if tundra_stalker_points != 0:
                                                                if dots[0] > current_time:
                                                                    atta_num = atta_num + (atta_num * (tundra_stalker_points * .03))
                                                            if glyph_death_coil == True:
                                                                atta_num += atta_num * .15
                                                            if rage_of_rivendale_points != 0:
                                                                if dots[1] > current_time:
                                                                    atta_num += atta_num * ((rage_of_rivendale_points * 2) / 100)
                                                            if morbitity_points != 0:
                                                                atta_num += ((morbitity_points * 5) / 100)
                                                            if hysteria_active == True:
                                                                atta_num = atta_num + (atta_num * .2)
                                                            if tricksoftt_active == True:
                                                                atta_num = atta_num + (atta_num * .15)
                                                            atta_num = atta_num + (atta_num * increased_spell_damage) + (atta_num * increased_all_damage)
                                                            sudden_doom_damage += atta_num
                                                            if unholy_blight_points == 1:
                                                                unholy_blight_amount = atta_num / 10   
                                                                unholy_blight_timer = current_time + 10
                                                            if rune_of_cinderglacier_active == True:
                                                                 rune_of_cinderglacier_damage = atta_num * .2
                                                                 rune_of_cinderglacier_active_count += 1
                                                                 rotation.append("Rune of Cinderglacier")
                                                                 rotation_time.append(current_time)
                                                                 rotation_status.append("Active")
                                                                 rotation_damage.append(atta_num * .2)
                                                                 if rune_of_cinderglacier_active_count == 2:
                                                                     rune_of_cinderglacier_active = False
                                                            rotation.append("Sudden Doom")
                                                            rotation_time.append(current_time)
                                                            rotation_status.append("Crit")
                                                            rotation_damage.append(atta_num)
                                                        else:
                                                            atta_num = random.randint(443, 665)
                                                            atta_num = (atta_num + ((current_ap + (current_ap * ((impurity_points * 4) / 100))) * 0))
                                                            if sigil_of_vengeful_heart == True:
                                                                atta_num + 380
                                                            if sigil_of_the_wild_buck == True:
                                                                atta_num += 80
                                                            if black_ice_points == 5:
                                                                atta_num = atta_num + (atta_num * .1)
                                                            elif black_ice_points == 4:
                                                                atta_num = atta_num + (atta_num * .08)
                                                            elif black_ice_points == 3:
                                                                atta_num = atta_num + (atta_num * .06)
                                                            elif black_ice_points == 2:
                                                                atta_num = atta_num + (atta_num * .04)
                                                            elif black_ice_points == 1:
                                                                atta_num = atta_num + (atta_num * .02)
                                                            if dk_presence == 0:
                                                                atta_num = atta_num + (atta_num * .15)
                                                            if tundra_stalker_points != 0:
                                                                if dots[0] > current_time:
                                                                    atta_num = atta_num + (atta_num * (tundra_stalker_points * .03))
                                                            if glyph_death_coil == True:
                                                                atta_num += atta_num * .15
                                                            if rage_of_rivendale_points != 0:
                                                                if dots[1] > current_time:
                                                                    atta_num += atta_num * ((rage_of_rivendale_points * 2) / 100)
                                                            if morbitity_points != 0:
                                                                atta_num += ((morbitity_points * 5) / 100)
                                                            if hysteria_active == True:
                                                                atta_num = atta_num + (atta_num * .2)
                                                            if tricksoftt_active == True:
                                                                atta_num = atta_num + (atta_num * .15)
                                                            atta_num = atta_num + (atta_num * increased_spell_damage) + (atta_num * increased_all_damage)
                                                            sudden_doom_damage += atta_num
                                                            if unholy_blight_points == 1:
                                                                unholy_blight_amount = atta_num / 10 
                                                                unholy_blight_timer = current_time + 10
                                                            if rune_of_cinderglacier_active == True:
                                                                 rune_of_cinderglacier_damage = atta_num * .2
                                                                 rune_of_cinderglacier_active_count += 1
                                                                 rotation.append("Rune of Cinderglacier")
                                                                 rotation_time.append(current_time)
                                                                 rotation_status.append("Active")
                                                                 rotation_damage.append(atta_num * .2)
                                                                 if rune_of_cinderglacier_active_count == 2:
                                                                     rune_of_cinderglacier_active = False
                                                            rotation.append("Sudden Doom")
                                                            rotation_time.append(current_time)
                                                            rotation_status.append("Hit")
                                                            rotation_damage.append(atta_num)
                                                    if hit == False:
                                                        rotation.append("Sudden Doom")
                                                        rotation_time.append(current_time)
                                                        rotation_status.append("Miss")
                                                        rotation_damage.append(0)
                                        elif attack_table_results == 7:
                                            atta_num = ((746 + (wep_roll * .4)) + (( 746 + (wep_roll * .4)) * (.125 * how_many_dots_on_target)) + (( 746 + (wep_roll * .4)) * (.125 * how_many_dots_on_target) * darkruned_battlegear_four_set)) - (((746 + (wep_roll * .4)) + (( 746 + (wep_roll * .4)) * (.125 * how_many_dots_on_target)) + (( 746 + (wep_roll * .4)) * (.125 * how_many_dots_on_target) * darkruned_battlegear_four_set)) * armor_red_amount)
                                            if dk_presence == 0:
                                                atta_num = atta_num + (atta_num * .15)
                                            if tundra_stalker_points != 0:
                                                if dots[0] > current_time:
                                                    atta_num = atta_num + (atta_num * (tundra_stalker_points * .03))
                                            if blood_of_the_north_points != 0:
                                                if blood_of_the_north_points < 3:
                                                    atta_num = atta_num + (atta_num * (blood_of_the_north_points * .03))
                                                elif blood_of_the_north_points == 3:
                                                    atta_num = atta_num + (atta_num * .1)
                                            if t9_tank_two_set == True:
                                                atta_num = atta_num + (atta_num *.05)
                                            if rage_of_rivendale_points != 0:
                                                if dots[1] > current_time:
                                                    atta_num += atta_num * ((rage_of_rivendale_points * 2) / 100)
                                            if blood_strikes_points != 0:
                                                atta_num = atta_num + ((blood_strikes_points * 5) / 100)
                                            if hysteria_active == True:
                                                atta_num = atta_num + (atta_num * .2)
                                            if tricksoftt_active == True:
                                                atta_num = atta_num + (atta_num * .15)
                                            atta_num = atta_num + (atta_num * increased_physical_damage) + (atta_num * increased_all_damage)
                                            atta_num = atta_num * dancing_rune_weapon_damage_multi
                                            dancing_rune_weapon_damage += atta_num
                                            rotation.append("Dancing Rune Weapon")
                                            rotation_time.append(current_time)
                                            rotation_status.append("Hit")
                                            rotation_damage.append(atta_num)
                                            trinket_hit_crit_tracker = 1
                                            if blood_of_the_north_points != 0:
                                                if just_used_death_rune != True:
                                                    proc_num = random.randint(0, 100)
                                                    if blood_of_the_north_points < 3:
                                                        death_proc_chance = (blood_of_the_north_points * .3) * 100
                                                    elif blood_of_the_north_points == 3:
                                                        death_proc_chance = 100
                                                    if death_proc_chance >= proc_num:
                                                        death_castable = castable + death
                                                        rune_cd_tracker[death_castable] = rune_cd(haste_rune_cd, current_time)
                                                        rune_cd_tracker[castable] = 10000  
                                            if reaping_points != 0:
                                                if just_used_death_rune != True:
                                                    proc_num = random.randint(0, 100)
                                                    if reaping_points < 3:
                                                        death_proc_chance = (reaping_points * .3) * 100
                                                    elif reaping_points == 3:
                                                        death_proc_chance = 100
                                                    if death_proc_chance >= proc_num:
                                                        death_castable = castable + death
                                                        rune_cd_tracker[death_castable] = rune_cd(haste_rune_cd, current_time)
                                                        rune_cd_tracker[castable] = 10000 
                                            if sigil_of_haunted_dreams == True:
                                                if random.randint(0, 100) < 15:
                                                    if sigil_of_haunted_dreams_buff == False:
                                                        sigil_of_haunted_dreams_buff = True
                                                        sigil_of_haunted_dreams_timer = current_time + 10  
                                                        total_crit = total_crit + ((173 / 45.8) / 100) 
                                            if t9_dps_two_set == True:
                                                if t9_bonus == False:
                                                    if t9_cd_timer < current_time:
                                                        if (random.randint(0, 10000)/100) < 50:
                                                            t9_bonus = True
                                                            t9_cd_timer = current_time + 45
                                                            t9_active_timer = current_time + 15
                                                            bonus_loop_str += 180
                                                            rotation.append("T9 DPS 2p Bonus")
                                                            rotation_time.append(current_time)
                                                            rotation_damage.append(0)
                                                            rotation_status.append("Proc")
                                            if desolation_points != 0:
                                                if desolation_buff == False:
                                                    increased_all_damage += (desolation_points / 100)
                                                    desolation_buff_timer = current_time + 20
                                                    rotation.append("Desolation")
                                                    rotation_time.append(current_time)
                                                    rotation_damage.append(0)
                                                    rotation_status.append("Applied")
                                                    desolation_buff = True
                                                else:
                                                    desolation_buff_timer = current_time + 20
                                                    rotation.append("Desolation")
                                                    rotation_time.append(current_time)
                                                    rotation_damage.append(0)
                                                    rotation_status.append("Refresh")
                                            if sudden_doom_points != 0:  #Sudden Doom aka Free Death Coil
                                                if (random.randint(0, 10000)/100) < sudden_doom_points * 5:
                                                    hit = spell_hit(spell_hit_total, increased_spell_hit, target_level)
                                                    crit = spell_crit((total_crit + (darkruned_battlegear_two_set / 100)), spell_hit_total, increased_spell_hit, target_level, increased_spell_crit)
                                                    if hit == True:
                                                        if crit == True:
                                                            atta_num = random.randint(443, 665)
                                                            atta_num = (atta_num + ((current_ap + (current_ap * ((impurity_points * 4) / 100))) * 0)) * var_crit_amount
                                                            if sigil_of_vengeful_heart == True:
                                                                atta_num + 380
                                                            if sigil_of_the_wild_buck == True:
                                                                atta_num += 80
                                                            if black_ice_points == 5:
                                                                atta_num = atta_num + (atta_num * .1)
                                                            elif black_ice_points == 4:
                                                                atta_num = atta_num + (atta_num * .08)
                                                            elif black_ice_points == 3:
                                                                atta_num = atta_num + (atta_num * .06)
                                                            elif black_ice_points == 2:
                                                                atta_num = atta_num + (atta_num * .04)
                                                            elif black_ice_points == 1:
                                                                atta_num = atta_num + (atta_num * .02)
                                                            if dk_presence == 0:
                                                                atta_num = atta_num + (atta_num * .15)
                                                            if tundra_stalker_points != 0:
                                                                if dots[0] > current_time:
                                                                    atta_num = atta_num + (atta_num * (tundra_stalker_points * .03))
                                                            if glyph_death_coil == True:
                                                                atta_num += atta_num * .15
                                                            if rage_of_rivendale_points != 0:
                                                                if dots[1] > current_time:
                                                                    atta_num += atta_num * ((rage_of_rivendale_points * 2) / 100)
                                                            if morbitity_points != 0:
                                                                atta_num += ((morbitity_points * 5) / 100)
                                                            if hysteria_active == True:
                                                                atta_num = atta_num + (atta_num * .2)
                                                            if tricksoftt_active == True:
                                                                atta_num = atta_num + (atta_num * .15)
                                                            atta_num = atta_num + (atta_num * increased_spell_damage) + (atta_num * increased_all_damage)
                                                            sudden_doom_damage += atta_num
                                                            if unholy_blight_points == 1:
                                                                unholy_blight_amount = atta_num / 10   
                                                                unholy_blight_timer = current_time + 10
                                                            if rune_of_cinderglacier_active == True:
                                                                 rune_of_cinderglacier_damage = atta_num * .2
                                                                 rune_of_cinderglacier_active_count += 1
                                                                 rotation.append("Rune of Cinderglacier")
                                                                 rotation_time.append(current_time)
                                                                 rotation_status.append("Active")
                                                                 rotation_damage.append(atta_num * .2)
                                                                 if rune_of_cinderglacier_active_count == 2:
                                                                     rune_of_cinderglacier_active = False
                                                            rotation.append("Sudden Doom")
                                                            rotation_time.append(current_time)
                                                            rotation_status.append("Crit")
                                                            rotation_damage.append(atta_num)
                                                        else:
                                                            atta_num = random.randint(443, 665)
                                                            atta_num = (atta_num + ((current_ap + (current_ap * ((impurity_points * 4) / 100))) * 0))
                                                            if sigil_of_vengeful_heart == True:
                                                                atta_num + 380
                                                            if sigil_of_the_wild_buck == True:
                                                                atta_num += 80
                                                            if black_ice_points == 5:
                                                                atta_num = atta_num + (atta_num * .1)
                                                            elif black_ice_points == 4:
                                                                atta_num = atta_num + (atta_num * .08)
                                                            elif black_ice_points == 3:
                                                                atta_num = atta_num + (atta_num * .06)
                                                            elif black_ice_points == 2:
                                                                atta_num = atta_num + (atta_num * .04)
                                                            elif black_ice_points == 1:
                                                                atta_num = atta_num + (atta_num * .02)
                                                            if dk_presence == 0:
                                                                atta_num = atta_num + (atta_num * .15)
                                                            if tundra_stalker_points != 0:
                                                                if dots[0] > current_time:
                                                                    atta_num = atta_num + (atta_num * (tundra_stalker_points * .03))
                                                            if glyph_death_coil == True:
                                                                atta_num += atta_num * .15
                                                            if rage_of_rivendale_points != 0:
                                                                if dots[1] > current_time:
                                                                    atta_num += atta_num * ((rage_of_rivendale_points * 2) / 100)
                                                            if morbitity_points != 0:
                                                                atta_num += ((morbitity_points * 5) / 100)
                                                            if hysteria_active == True:
                                                                atta_num = atta_num + (atta_num * .2)
                                                            if tricksoftt_active == True:
                                                                atta_num = atta_num + (atta_num * .15)
                                                            atta_num = atta_num + (atta_num * increased_spell_damage) + (atta_num * increased_all_damage)
                                                            sudden_doom_damage += atta_num
                                                            if unholy_blight_points == 1:
                                                                unholy_blight_amount = atta_num / 10 
                                                                unholy_blight_timer = current_time + 10
                                                            if rune_of_cinderglacier_active == True:
                                                                 rune_of_cinderglacier_damage = atta_num * .2
                                                                 rune_of_cinderglacier_active_count += 1
                                                                 rotation.append("Rune of Cinderglacier")
                                                                 rotation_time.append(current_time)
                                                                 rotation_status.append("Active")
                                                                 rotation_damage.append(atta_num * .2)
                                                                 if rune_of_cinderglacier_active_count == 2:
                                                                     rune_of_cinderglacier_active = False
                                                            rotation.append("Sudden Doom")
                                                            rotation_time.append(current_time)
                                                            rotation_status.append("Hit")
                                                            rotation_damage.append(atta_num)
                                                    if hit == False:
                                                        rotation.append("Sudden Doom")
                                                        rotation_time.append(current_time)
                                                        rotation_status.append("Miss")
                                                        rotation_damage.append(0)
                                if threat_of_thassarian_points != 0:  #Off Hand Blood Strike
                                    if H2 == False:
                                        threat_of_thass_roll = (threat_of_thassarian_points * 30) 
                                        if threat_of_thassarian_points == 3: 
                                            threat_of_thass_roll += 10 
                                        threat_of_t_num = random.randint(0, 100) 
                                        if threat_of_thass_roll >= threat_of_t_num: 
                                            oh_wep_roll = weapon_roll(oh_input_lowend_weapon_damage,oh_input_topend_weapon_damage)
                                            oh_wep_roll = wep_roll + (attack_damage_normalization * current_ap / 14)
                                            oh_attack_table_results = attack_table(1, tanking, H2, False, True, hit_from_gear, hit_from_other, target_level, all_expertise_dodge, all_expertise_parry, total_crit, (annihilation_talent_points / 100) + increased_phy_crit + ((subversion_points * 3) / 100))
                                            if oh_attack_table_results == 0:
                                                atta_num = 0
                                                rotation.append("OH - Blood Strike")
                                                rotation_time.append(current_time)
                                                rotation_status.append("Miss")
                                                rotation_damage.append(atta_num)
                                            elif oh_attack_table_results == 1:
                                                atta_num = 0
                                                rotation.append("OH - Blood Strike")
                                                rotation_time.append(current_time)
                                                rotation_status.append("Dodge")
                                                rotation_damage.append(atta_num)
                                            elif oh_attack_table_results == 5:
                                                #crit attack
                                                atta_num = (((746 + (oh_wep_roll * .4)) + (( 746 + (oh_wep_roll * .4)) * (.125 * how_many_dots_on_target)) + (( 746 + (oh_wep_roll * .4)) * (.125 * how_many_dots_on_target) * darkruned_battlegear_four_set )) - (((746 + (oh_wep_roll * .4)) + (( 746 + (oh_wep_roll * .4)) * (.125 * how_many_dots_on_target)) + (( 746 + (oh_wep_roll * .4)) * (.125 * how_many_dots_on_target) * darkruned_battlegear_four_set)) * armor_red_amount))  * (var_crit_amount + (guile_of_gorefiend_points * .15))
                                                if dk_presence == 0:
                                                    atta_num = atta_num + (atta_num * .15)
                                                if tundra_stalker_points != 0:
                                                    if dots[0] > current_time:
                                                        atta_num = atta_num + (atta_num * (tundra_stalker_points * .03))
                                                if blood_of_the_north_points != 0:
                                                    if blood_of_the_north_points < 3:
                                                        atta_num = atta_num + (atta_num * (blood_of_the_north_points * .03))
                                                    elif blood_of_the_north_points == 3:
                                                        atta_num = atta_num + (atta_num * .1)
                                                if t9_tank_two_set == True:
                                                    atta_num = atta_num + (atta_num *.05)
                                                if rage_of_rivendale_points != 0:
                                                    if dots[1] > current_time:
                                                        atta_num += atta_num * ((rage_of_rivendale_points * 2) / 100)
                                                if blood_strikes_points != 0:
                                                    atta_num = atta_num + ((blood_strikes_points * 5) / 100)
                                                if might_of_mograine_points != 0:
                                                    atta_num += atta_num * ((might_of_mograine_points * 15) / 100)
                                                atta_num = atta_num * oh_wep_damage_mod
                                                if hysteria_active == True:
                                                    atta_num = atta_num + (atta_num * .2)
                                                if tricksoftt_active == True:
                                                    atta_num = atta_num + (atta_num * .15)
                                                atta_num = atta_num + (atta_num * increased_physical_damage) + (atta_num * increased_all_damage)
                                                sum_oh_bs_attacks += atta_num
                                                trinket_hit_crit_tracker = 2
                                                if blood_of_the_north_points != 0:
                                                    if just_used_death_rune != True:
                                                        proc_num = random.randint(0, 100)
                                                        if blood_of_the_north_points < 3:
                                                            death_proc_chance = (blood_of_the_north_points * .3) * 100
                                                        elif blood_of_the_north_points == 3:
                                                            death_proc_chance = 100
                                                        if death_proc_chance >= proc_num:
                                                            death_castable = castable + death
                                                            rune_cd_tracker[death_castable] = rune_cd(haste_rune_cd, current_time)
                                                            rune_cd_tracker[castable] = 10000 
                                                if reaping_points != 0:
                                                    if just_used_death_rune != True:
                                                        proc_num = random.randint(0, 100)
                                                        if reaping_points < 3:
                                                            death_proc_chance = (reaping_points * .3) * 100
                                                        elif reaping_points == 3:
                                                            death_proc_chance = 100
                                                        if death_proc_chance >= proc_num:
                                                            death_castable = castable + death
                                                            rune_cd_tracker[death_castable] = rune_cd(haste_rune_cd, current_time)
                                                            rune_cd_tracker[castable] = 10000 
                                                if sigil_of_haunted_dreams == True:
                                                    if random.randint(0, 100) < 15:
                                                        if sigil_of_haunted_dreams_buff == False:
                                                            sigil_of_haunted_dreams_buff = True
                                                            sigil_of_haunted_dreams_timer = current_time + 10  
                                                            total_crit = total_crit + ((173 / 45.8) / 100)  
                                                if t9_dps_two_set == True:
                                                    if t9_bonus == False:
                                                        if t9_cd_timer < current_time:
                                                            if (random.randint(0, 10000)/100) < 50:
                                                                t9_bonus = True
                                                                t9_cd_timer = current_time + 45
                                                                t9_active_timer = current_time + 15
                                                                bonus_loop_str += 180
                                                                rotation.append("T9 DPS 2p Bonus")
                                                                rotation_time.append(current_time)
                                                                rotation_damage.append(0)
                                                                rotation_status.append("Proc")
                                                if desolation_points != 0:
                                                    if desolation_buff == False:
                                                        increased_all_damage += (desolation_points / 100)
                                                        desolation_buff_timer = current_time + 20
                                                        rotation.append("Desolation")
                                                        rotation_time.append(current_time)
                                                        rotation_damage.append(0)
                                                        rotation_status.append("Applied")
                                                        desolation_buff = True
                                                    else:
                                                        desolation_buff_timer = current_time + 20
                                                        rotation.append("Desolation")
                                                        rotation_time.append(current_time)
                                                        rotation_damage.append(0)
                                                        rotation_status.append("Refresh")
                                                if sudden_doom_points != 0:  #Sudden Doom aka Free Death Coil
                                                    if (random.randint(0, 10000)/100) < sudden_doom_points * 5:
                                                        hit = spell_hit(spell_hit_total, increased_spell_hit, target_level)
                                                        crit = spell_crit((total_crit + (darkruned_battlegear_two_set / 100)), spell_hit_total, increased_spell_hit, target_level, increased_spell_crit)
                                                        if hit == True:
                                                            if crit == True:
                                                                atta_num = random.randint(443, 665)
                                                                atta_num = (atta_num + ((current_ap + (current_ap * ((impurity_points * 4) / 100))) * 0)) * var_crit_amount
                                                                if sigil_of_vengeful_heart == True:
                                                                    atta_num + 380
                                                                if black_ice_points == 5:
                                                                    atta_num = atta_num + (atta_num * .1)
                                                                elif black_ice_points == 4:
                                                                    atta_num = atta_num + (atta_num * .08)
                                                                elif black_ice_points == 3:
                                                                    atta_num = atta_num + (atta_num * .06)
                                                                elif black_ice_points == 2:
                                                                    atta_num = atta_num + (atta_num * .04)
                                                                elif black_ice_points == 1:
                                                                    atta_num = atta_num + (atta_num * .02)
                                                                if dk_presence == 0:
                                                                    atta_num = atta_num + (atta_num * .15)
                                                                if tundra_stalker_points != 0:
                                                                    if dots[0] > current_time:
                                                                        atta_num = atta_num + (atta_num * (tundra_stalker_points * .03))
                                                                if glyph_death_coil == True:
                                                                    atta_num += atta_num * .15
                                                                if rage_of_rivendale_points != 0:
                                                                    if dots[1] > current_time:
                                                                        atta_num += atta_num * ((rage_of_rivendale_points * 2) / 100)
                                                                if morbitity_points != 0:
                                                                    atta_num += ((morbitity_points * 5) / 100)
                                                                if hysteria_active == True:
                                                                    atta_num = atta_num + (atta_num * .2)
                                                                if tricksoftt_active == True:
                                                                    atta_num = atta_num + (atta_num * .15)
                                                                atta_num = atta_num + (atta_num * increased_spell_damage) + (atta_num * increased_all_damage)
                                                                sudden_doom_damage += atta_num
                                                                if unholy_blight_points == 1:
                                                                    unholy_blight_amount = atta_num / 10   
                                                                    unholy_blight_timer = current_time + 10
                                                                if rune_of_cinderglacier_active == True:
                                                                     rune_of_cinderglacier_damage = atta_num * .2
                                                                     rune_of_cinderglacier_active_count += 1
                                                                     rotation.append("Rune of Cinderglacier")
                                                                     rotation_time.append(current_time)
                                                                     rotation_status.append("Active")
                                                                     rotation_damage.append(atta_num * .2)
                                                                     if rune_of_cinderglacier_active_count == 2:
                                                                         rune_of_cinderglacier_active = False
                                                                rotation.append("Sudden Doom")
                                                                rotation_time.append(current_time)
                                                                rotation_status.append("Crit")
                                                                rotation_damage.append(atta_num)
                                                            else:
                                                                atta_num = random.randint(443, 665)
                                                                atta_num = (atta_num + ((current_ap + (current_ap * ((impurity_points * 4) / 100))) * 0))
                                                                if sigil_of_vengeful_heart == True:
                                                                    atta_num + 380
                                                                if black_ice_points == 5:
                                                                    atta_num = atta_num + (atta_num * .1)
                                                                elif black_ice_points == 4:
                                                                    atta_num = atta_num + (atta_num * .08)
                                                                elif black_ice_points == 3:
                                                                    atta_num = atta_num + (atta_num * .06)
                                                                elif black_ice_points == 2:
                                                                    atta_num = atta_num + (atta_num * .04)
                                                                elif black_ice_points == 1:
                                                                    atta_num = atta_num + (atta_num * .02)
                                                                if dk_presence == 0:
                                                                    atta_num = atta_num + (atta_num * .15)
                                                                if tundra_stalker_points != 0:
                                                                    if dots[0] > current_time:
                                                                        atta_num = atta_num + (atta_num * (tundra_stalker_points * .03))
                                                                if glyph_death_coil == True:
                                                                    atta_num += atta_num * .15
                                                                if rage_of_rivendale_points != 0:
                                                                    if dots[1] > current_time:
                                                                        atta_num += atta_num * ((rage_of_rivendale_points * 2) / 100)
                                                                if morbitity_points != 0:
                                                                    atta_num += ((morbitity_points * 5) / 100)
                                                                if hysteria_active == True:
                                                                    atta_num = atta_num + (atta_num * .2)
                                                                if tricksoftt_active == True:
                                                                    atta_num = atta_num + (atta_num * .15)
                                                                atta_num = atta_num + (atta_num * increased_spell_damage) + (atta_num * increased_all_damage)
                                                                sudden_doom_damage += atta_num
                                                                if unholy_blight_points == 1:
                                                                    unholy_blight_amount = atta_num / 10 
                                                                    unholy_blight_timer = current_time + 10
                                                                if rune_of_cinderglacier_active == True:
                                                                     rune_of_cinderglacier_damage = atta_num * .2
                                                                     rune_of_cinderglacier_active_count += 1
                                                                     rotation.append("Rune of Cinderglacier")
                                                                     rotation_time.append(current_time)
                                                                     rotation_status.append("Active")
                                                                     rotation_damage.append(atta_num * .2)
                                                                     if rune_of_cinderglacier_active_count == 2:
                                                                         rune_of_cinderglacier_active = False
                                                                rotation.append("Sudden Doom")
                                                                rotation_time.append(current_time)
                                                                rotation_status.append("Hit")
                                                                rotation_damage.append(atta_num)
                                                        if hit == False:
                                                            rotation.append("Sudden Doom")
                                                            rotation_time.append(current_time)
                                                            rotation_status.append("Miss")
                                                            rotation_damage.append(0)
                                                rotation.append("OH - Blood Strike")
                                                rotation_time.append(current_time)
                                                rotation_status.append("Crit")
                                                rotation_damage.append(atta_num)
                                            elif oh_attack_table_results == 7:
                                                #normal attack
                                                atta_num = ((746 + (oh_wep_roll * .4)) + (( 746 + (oh_wep_roll * .4)) * (.125 * how_many_dots_on_target)) + + (( 746 + (oh_wep_roll * .4)) * (.125 * how_many_dots_on_target) * darkruned_battlegear_four_set)) - (((746 + (oh_wep_roll * .4)) + (( 746 + (oh_wep_roll * .4)) * (.125 * how_many_dots_on_target)) + + (( 746 + (oh_wep_roll * .4)) * (.125 * how_many_dots_on_target) * darkruned_battlegear_four_set)) * armor_red_amount)
                                                if dk_presence == 0:
                                                    atta_num = atta_num + (atta_num * .15)
                                                if tundra_stalker_points != 0:
                                                    if dots[0] > current_time:
                                                        atta_num = atta_num + (atta_num * (tundra_stalker_points * .03))
                                                if blood_of_the_north_points != 0:
                                                    if blood_of_the_north_points < 3:
                                                        atta_num = atta_num + (atta_num * (blood_of_the_north_points * .03))
                                                    elif blood_of_the_north_points == 3:
                                                        atta_num = atta_num + (atta_num * .1)
                                                if t9_tank_two_set == True:
                                                    atta_num = atta_num + (atta_num *.05)
                                                if rage_of_rivendale_points != 0:
                                                    if dots[1] > current_time:
                                                        atta_num += atta_num * ((rage_of_rivendale_points * 2) / 100)
                                                if blood_strikes_points != 0:
                                                    atta_num = atta_num + ((blood_strikes_points * 5) / 100)
                                                atta_num = atta_num * oh_wep_damage_mod
                                                if hysteria_active == True:
                                                    atta_num = atta_num + (atta_num * .2)
                                                if tricksoftt_active == True:
                                                    atta_num = atta_num + (atta_num * .15)
                                                atta_num = atta_num + (atta_num * increased_physical_damage) + (atta_num * increased_all_damage)
                                                sum_oh_bs_attacks += atta_num
                                                trinket_hit_crit_tracker = 1
                                                if blood_of_the_north_points != 0:
                                                    if just_used_death_rune != True:
                                                        proc_num = random.randint(0, 100)
                                                        if blood_of_the_north_points < 3:
                                                            death_proc_chance = (blood_of_the_north_points * .3) * 100
                                                        elif blood_of_the_north_points == 3:
                                                            death_proc_chance = 100
                                                        if death_proc_chance >= proc_num:
                                                            death_castable = castable + death
                                                            rune_cd_tracker[death_castable] = rune_cd(haste_rune_cd, current_time)
                                                            rune_cd_tracker[castable] = 10000  
                                                if reaping_points != 0:
                                                    if just_used_death_rune != True:
                                                        proc_num = random.randint(0, 100)
                                                        if reaping_points < 3:
                                                            death_proc_chance = (reaping_points * .3) * 100
                                                        elif reaping_points == 3:
                                                            death_proc_chance = 100
                                                        if death_proc_chance >= proc_num:
                                                            death_castable = castable + death
                                                            rune_cd_tracker[death_castable] = rune_cd(haste_rune_cd, current_time)
                                                            rune_cd_tracker[castable] = 10000 
                                                if sigil_of_haunted_dreams == True:
                                                    if random.randint(0, 100) < 15:
                                                        if sigil_of_haunted_dreams_buff == False:
                                                            sigil_of_haunted_dreams_buff = True
                                                            sigil_of_haunted_dreams_timer = current_time + 10  
                                                            total_crit = total_crit + ((173 / 45.8) / 100) 
                                                if t9_dps_two_set == True:
                                                    if t9_bonus == False:
                                                        if t9_cd_timer < current_time:
                                                            if (random.randint(0, 10000)/100) < 50:
                                                                t9_bonus = True
                                                                t9_cd_timer = current_time + 45
                                                                t9_active_timer = current_time + 15
                                                                bonus_loop_str += 180
                                                                rotation.append("T9 DPS 2p Bonus")
                                                                rotation_time.append(current_time)
                                                                rotation_damage.append(0)
                                                                rotation_status.append("Proc")
                                                if desolation_points != 0:
                                                    if desolation_buff == False:
                                                        increased_all_damage += (desolation_points / 100)
                                                        desolation_buff_timer = current_time + 20
                                                        rotation.append("Desolation")
                                                        rotation_time.append(current_time)
                                                        rotation_damage.append(0)
                                                        rotation_status.append("Applied")
                                                        desolation_buff = True
                                                    else:
                                                        desolation_buff_timer = current_time + 20
                                                        rotation.append("Desolation")
                                                        rotation_time.append(current_time)
                                                        rotation_damage.append(0)
                                                        rotation_status.append("Refresh")
                                                if sudden_doom_points != 0:  #Sudden Doom aka Free Death Coil
                                                    if (random.randint(0, 10000)/100) < sudden_doom_points * 5:
                                                        hit = spell_hit(spell_hit_total, increased_spell_hit, target_level)
                                                        crit = spell_crit((total_crit + (darkruned_battlegear_two_set / 100)), spell_hit_total, increased_spell_hit, target_level, increased_spell_crit)
                                                        if hit == True:
                                                            if crit == True:
                                                                atta_num = random.randint(443, 665)
                                                                atta_num = (atta_num + ((current_ap + (current_ap * ((impurity_points * 4) / 100))) * 0)) * var_crit_amount
                                                                if sigil_of_vengeful_heart == True:
                                                                    atta_num + 380
                                                                if sigil_of_the_wild_buck == True:
                                                                    atta_num += 80
                                                                if black_ice_points == 5:
                                                                    atta_num = atta_num + (atta_num * .1)
                                                                elif black_ice_points == 4:
                                                                    atta_num = atta_num + (atta_num * .08)
                                                                elif black_ice_points == 3:
                                                                    atta_num = atta_num + (atta_num * .06)
                                                                elif black_ice_points == 2:
                                                                    atta_num = atta_num + (atta_num * .04)
                                                                elif black_ice_points == 1:
                                                                    atta_num = atta_num + (atta_num * .02)
                                                                if dk_presence == 0:
                                                                    atta_num = atta_num + (atta_num * .15)
                                                                if tundra_stalker_points != 0:
                                                                    if dots[0] > current_time:
                                                                        atta_num = atta_num + (atta_num * (tundra_stalker_points * .03))
                                                                if glyph_death_coil == True:
                                                                    atta_num += atta_num * .15
                                                                if rage_of_rivendale_points != 0:
                                                                    if dots[1] > current_time:
                                                                        atta_num += atta_num * ((rage_of_rivendale_points * 2) / 100)
                                                                if morbitity_points != 0:
                                                                    atta_num += ((morbitity_points * 5) / 100)
                                                                if hysteria_active == True:
                                                                    atta_num = atta_num + (atta_num * .2)
                                                                if tricksoftt_active == True:
                                                                    atta_num = atta_num + (atta_num * .15)
                                                                atta_num = atta_num + (atta_num * increased_spell_damage) + (atta_num * increased_all_damage)
                                                                sudden_doom_damage += atta_num
                                                                if unholy_blight_points == 1:
                                                                    unholy_blight_amount = atta_num / 10   
                                                                    unholy_blight_timer = current_time + 10
                                                                if rune_of_cinderglacier_active == True:
                                                                     rune_of_cinderglacier_damage = atta_num * .2
                                                                     rune_of_cinderglacier_active_count += 1
                                                                     rotation.append("Rune of Cinderglacier")
                                                                     rotation_time.append(current_time)
                                                                     rotation_status.append("Active")
                                                                     rotation_damage.append(atta_num * .2)
                                                                     if rune_of_cinderglacier_active_count == 2:
                                                                         rune_of_cinderglacier_active = False
                                                                rotation.append("Sudden Doom")
                                                                rotation_time.append(current_time)
                                                                rotation_status.append("Crit")
                                                                rotation_damage.append(atta_num)
                                                            else:
                                                                atta_num = random.randint(443, 665)
                                                                atta_num = (atta_num + ((current_ap + (current_ap * ((impurity_points * 4) / 100))) * 0))
                                                                if sigil_of_vengeful_heart == True:
                                                                    atta_num + 380
                                                                if sigil_of_the_wild_buck == True:
                                                                    atta_num += 80
                                                                if black_ice_points == 5:
                                                                    atta_num = atta_num + (atta_num * .1)
                                                                elif black_ice_points == 4:
                                                                    atta_num = atta_num + (atta_num * .08)
                                                                elif black_ice_points == 3:
                                                                    atta_num = atta_num + (atta_num * .06)
                                                                elif black_ice_points == 2:
                                                                    atta_num = atta_num + (atta_num * .04)
                                                                elif black_ice_points == 1:
                                                                    atta_num = atta_num + (atta_num * .02)
                                                                if dk_presence == 0:
                                                                    atta_num = atta_num + (atta_num * .15)
                                                                if tundra_stalker_points != 0:
                                                                    if dots[0] > current_time:
                                                                        atta_num = atta_num + (atta_num * (tundra_stalker_points * .03))
                                                                if glyph_death_coil == True:
                                                                    atta_num += atta_num * .15
                                                                if rage_of_rivendale_points != 0:
                                                                    if dots[1] > current_time:
                                                                        atta_num += atta_num * ((rage_of_rivendale_points * 2) / 100)
                                                                if morbitity_points != 0:
                                                                    atta_num += ((morbitity_points * 5) / 100)
                                                                if hysteria_active == True:
                                                                    atta_num = atta_num + (atta_num * .2)
                                                                if tricksoftt_active == True:
                                                                    atta_num = atta_num + (atta_num * .15)
                                                                atta_num = atta_num + (atta_num * increased_spell_damage) + (atta_num * increased_all_damage)
                                                                sudden_doom_damage += atta_num
                                                                if unholy_blight_points == 1:
                                                                    unholy_blight_amount = atta_num / 10 
                                                                    unholy_blight_timer = current_time + 10
                                                                if rune_of_cinderglacier_active == True:
                                                                     rune_of_cinderglacier_damage = atta_num * .2
                                                                     rune_of_cinderglacier_active_count += 1
                                                                     rotation.append("Rune of Cinderglacier")
                                                                     rotation_time.append(current_time)
                                                                     rotation_status.append("Active")
                                                                     rotation_damage.append(atta_num * .2)
                                                                     if rune_of_cinderglacier_active_count == 2:
                                                                         rune_of_cinderglacier_active = False
                                                                rotation.append("Sudden Doom")
                                                                rotation_time.append(current_time)
                                                                rotation_status.append("Hit")
                                                                rotation_damage.append(atta_num)
                                                        if hit == False:
                                                            rotation.append("Sudden Doom")
                                                            rotation_time.append(current_time)
                                                            rotation_status.append("Miss")
                                                            rotation_damage.append(0)
                                                rotation.append("OH - Blood Strike")
                                                rotation_time.append(current_time)
                                                rotation_status.append("Hit")
                                                rotation_damage.append(atta_num)
        
                                    
                                
                                if attack_table_results == 0:
                                    atta_num = 0
                                    rune_cd_tracker[castable] = rune_cd(haste_rune_cd_miss, current_time)
                                    rotation.append("Blood Strike")
                                    rotation_time.append(current_time)
                                    rotation_status.append("Miss")
                                    rotation_damage.append(atta_num)
                                    current_time = current_time + gcd
                                    used_gcd = True
                                    continue
                                elif attack_table_results == 1:
                                    atta_num = 0
                                    rune_cd_tracker[castable] = rune_cd(haste_rune_cd_miss, current_time)
                                    rotation.append("Blood Strike")
                                    rotation_time.append(current_time)
                                    rotation_status.append("Dodge")
                                    rotation_damage.append(atta_num)
                                    current_time = current_time + gcd
                                    used_gcd = True
                                    continue
                                elif attack_table_results == 5:
                                    #crit attack
                                    rune_cd_tracker[castable] = rune_cd(haste_rune_cd, current_time)
                                    atta_num = (((746 + (wep_roll * .4)) + (( 746 + (wep_roll * .4)) * (.125 * how_many_dots_on_target)) + (( 746 + (wep_roll * .4)) * (.125 * how_many_dots_on_target) * darkruned_battlegear_four_set)) - (((746 + (wep_roll * .4)) + (( 746 + (wep_roll * .4)) * (.125 * how_many_dots_on_target)) + (( 746 + (wep_roll * .4)) * (.125 * how_many_dots_on_target) * darkruned_battlegear_four_set)) * armor_red_amount))  * (var_crit_amount + (guile_of_gorefiend_points * .15))
                                    if dk_presence == 0:
                                        atta_num = atta_num + (atta_num * .15)
                                    if tundra_stalker_points != 0:
                                        if dots[0] > current_time:
                                            atta_num = atta_num + (atta_num * (tundra_stalker_points * .03))
                                    if blood_of_the_north_points != 0:
                                        if blood_of_the_north_points < 3:
                                            atta_num = atta_num + (atta_num * (blood_of_the_north_points * .03))
                                        elif blood_of_the_north_points == 3:
                                            atta_num = atta_num + (atta_num * .1)
                                    if t9_tank_two_set == True:
                                        atta_num = atta_num + (atta_num *.05)
                                    if rage_of_rivendale_points != 0:
                                        if dots[1] > current_time:
                                            atta_num += atta_num * ((rage_of_rivendale_points * 2) / 100)
                                    if blood_strikes_points != 0:
                                        atta_num = atta_num + ((blood_strikes_points * 5) / 100)
                                    if might_of_mograine_points != 0:
                                        atta_num += atta_num * ((might_of_mograine_points * 15) / 100)
                                    if hysteria_active == True:
                                        atta_num = atta_num + (atta_num * .2)
                                    if tricksoftt_active == True:
                                        atta_num = atta_num + (atta_num * .15)
                                    atta_num = atta_num + (atta_num * increased_physical_damage) + (atta_num * increased_all_damage)
                                    sum_bs_attacks += atta_num
                                    current_power = runic_power(10, current_power, max_runic)
                                    trinket_hit_crit_tracker = 2
                                    if blood_of_the_north_points != 0:
                                        if just_used_death_rune != True:
                                            proc_num = random.randint(0, 100)
                                            if blood_of_the_north_points < 3:
                                                death_proc_chance = (blood_of_the_north_points * .3) * 100
                                            elif blood_of_the_north_points == 3:
                                                death_proc_chance = 100
                                            if death_proc_chance >= proc_num:
                                                death_castable = castable + death
                                                rune_cd_tracker[death_castable] = rune_cd(haste_rune_cd, current_time)
                                                rune_cd_tracker[castable] = 10000  
                                    if reaping_points != 0:
                                        if just_used_death_rune != True:
                                            proc_num = random.randint(0, 100)
                                            if reaping_points < 3:
                                                death_proc_chance = (reaping_points * .3) * 100
                                            elif reaping_points == 3:
                                                death_proc_chance = 100
                                            if death_proc_chance >= proc_num:
                                                death_castable = castable + death
                                                rune_cd_tracker[death_castable] = rune_cd(haste_rune_cd, current_time)
                                                rune_cd_tracker[castable] = 10000 
                                    if sigil_of_haunted_dreams == True:
                                        if random.randint(0, 100) < 15:
                                            if sigil_of_haunted_dreams_buff == False:
                                                sigil_of_haunted_dreams_buff = True
                                                sigil_of_haunted_dreams_timer = current_time + 10  
                                                total_crit = total_crit + ((173 / 45.8) / 100) 
                                    if t9_dps_two_set == True:
                                        if t9_bonus == False:
                                            if t9_cd_timer < current_time:
                                                if (random.randint(0, 10000)/100) < 50:
                                                    t9_bonus = True
                                                    t9_cd_timer = current_time + 45
                                                    t9_active_timer = current_time + 15
                                                    bonus_loop_str += 180
                                                    rotation.append("T9 DPS 2p Bonus")
                                                    rotation_time.append(current_time)
                                                    rotation_damage.append(0)
                                                    rotation_status.append("Proc")
                                    if desolation_points != 0:
                                        if desolation_buff == False:
                                            increased_all_damage += (desolation_points / 100)
                                            desolation_buff_timer = current_time + 20
                                            rotation.append("Desolation")
                                            rotation_time.append(current_time)
                                            rotation_damage.append(0)
                                            rotation_status.append("Applied")
                                            desolation_buff = True
                                        else:
                                            desolation_buff_timer = current_time + 20
                                            rotation.append("Desolation")
                                            rotation_time.append(current_time)
                                            rotation_damage.append(0)
                                            rotation_status.append("Refresh")
                                    if sudden_doom_points != 0:  #Sudden Doom aka Free Death Coil
                                        if (random.randint(0, 10000)/100) < sudden_doom_points * 5:
                                            hit = spell_hit(spell_hit_total, increased_spell_hit, target_level)
                                            crit = spell_crit((total_crit + (darkruned_battlegear_two_set / 100)), spell_hit_total, increased_spell_hit, target_level, increased_spell_crit)
                                            if hit == True:
                                                if crit == True:
                                                    atta_num = random.randint(443, 665)
                                                    atta_num = (atta_num + ((current_ap + (current_ap * ((impurity_points * 4) / 100))) * 0)) * var_crit_amount
                                                    if sigil_of_vengeful_heart == True:
                                                        atta_num + 380
                                                    if sigil_of_the_wild_buck == True:
                                                        atta_num += 80
                                                    if black_ice_points == 5:
                                                        atta_num = atta_num + (atta_num * .1)
                                                    elif black_ice_points == 4:
                                                        atta_num = atta_num + (atta_num * .08)
                                                    elif black_ice_points == 3:
                                                        atta_num = atta_num + (atta_num * .06)
                                                    elif black_ice_points == 2:
                                                        atta_num = atta_num + (atta_num * .04)
                                                    elif black_ice_points == 1:
                                                        atta_num = atta_num + (atta_num * .02)
                                                    if dk_presence == 0:
                                                        atta_num = atta_num + (atta_num * .15)
                                                    if tundra_stalker_points != 0:
                                                        if dots[0] > current_time:
                                                            atta_num = atta_num + (atta_num * (tundra_stalker_points * .03))
                                                    if glyph_death_coil == True:
                                                        atta_num += atta_num * .15
                                                    if rage_of_rivendale_points != 0:
                                                        if dots[1] > current_time:
                                                            atta_num += atta_num * ((rage_of_rivendale_points * 2) / 100)
                                                    if morbitity_points != 0:
                                                        atta_num += ((morbitity_points * 5) / 100)
                                                    if hysteria_active == True:
                                                        atta_num = atta_num + (atta_num * .2)
                                                    if tricksoftt_active == True:
                                                        atta_num = atta_num + (atta_num * .15)
                                                    atta_num = atta_num + (atta_num * increased_spell_damage) + (atta_num * increased_all_damage)
                                                    sudden_doom_damage += atta_num
                                                    if unholy_blight_points == 1:
                                                        unholy_blight_amount = atta_num / 10   
                                                        unholy_blight_timer = current_time + 10
                                                    if rune_of_cinderglacier_active == True:
                                                         rune_of_cinderglacier_damage = atta_num * .2
                                                         rune_of_cinderglacier_active_count += 1
                                                         rotation.append("Rune of Cinderglacier")
                                                         rotation_time.append(current_time)
                                                         rotation_status.append("Active")
                                                         rotation_damage.append(atta_num * .2)
                                                         if rune_of_cinderglacier_active_count == 2:
                                                             rune_of_cinderglacier_active = False
                                                    rotation.append("Sudden Doom")
                                                    rotation_time.append(current_time)
                                                    rotation_status.append("Crit")
                                                    rotation_damage.append(atta_num)
                                                else:
                                                    atta_num = random.randint(443, 665)
                                                    atta_num = (atta_num + ((current_ap + (current_ap * ((impurity_points * 4) / 100))) * 0))
                                                    if sigil_of_vengeful_heart == True:
                                                        atta_num + 380
                                                    if sigil_of_the_wild_buck == True:
                                                        atta_num += 80
                                                    if black_ice_points == 5:
                                                        atta_num = atta_num + (atta_num * .1)
                                                    elif black_ice_points == 4:
                                                        atta_num = atta_num + (atta_num * .08)
                                                    elif black_ice_points == 3:
                                                        atta_num = atta_num + (atta_num * .06)
                                                    elif black_ice_points == 2:
                                                        atta_num = atta_num + (atta_num * .04)
                                                    elif black_ice_points == 1:
                                                        atta_num = atta_num + (atta_num * .02)
                                                    if dk_presence == 0:
                                                        atta_num = atta_num + (atta_num * .15)
                                                    if tundra_stalker_points != 0:
                                                        if dots[0] > current_time:
                                                            atta_num = atta_num + (atta_num * (tundra_stalker_points * .03))
                                                    if glyph_death_coil == True:
                                                        atta_num += atta_num * .15
                                                    if rage_of_rivendale_points != 0:
                                                        if dots[1] > current_time:
                                                            atta_num += atta_num * ((rage_of_rivendale_points * 2) / 100)
                                                    if morbitity_points != 0:
                                                        atta_num += ((morbitity_points * 5) / 100)
                                                    if hysteria_active == True:
                                                        atta_num = atta_num + (atta_num * .2)
                                                    if tricksoftt_active == True:
                                                        atta_num = atta_num + (atta_num * .15)
                                                    atta_num = atta_num + (atta_num * increased_spell_damage) + (atta_num * increased_all_damage)
                                                    sudden_doom_damage += atta_num
                                                    if unholy_blight_points == 1:
                                                        unholy_blight_amount = atta_num / 10 
                                                        unholy_blight_timer = current_time + 10
                                                    if rune_of_cinderglacier_active == True:
                                                         rune_of_cinderglacier_damage = atta_num * .2
                                                         rune_of_cinderglacier_active_count += 1
                                                         rotation.append("Rune of Cinderglacier")
                                                         rotation_time.append(current_time)
                                                         rotation_status.append("Active")
                                                         rotation_damage.append(atta_num * .2)
                                                         if rune_of_cinderglacier_active_count == 2:
                                                             rune_of_cinderglacier_active = False
                                                    rotation.append("Sudden Doom")
                                                    rotation_time.append(current_time)
                                                    rotation_status.append("Hit")
                                                    rotation_damage.append(atta_num)
                                            if hit == False:
                                                rotation.append("Sudden Doom")
                                                rotation_time.append(current_time)
                                                rotation_status.append("Miss")
                                                rotation_damage.append(0)
                                    rotation.append("Blood Strike")
                                    rotation_time.append(current_time)
                                    rotation_status.append("Crit")
                                    rotation_damage.append(atta_num)
                                    current_time += gcd
                                    used_gcd = True
                                    # print("Blood Strike Crit - " + str(atta_num))
                                    continue
                                elif attack_table_results == 7:
                                    #normal attack
                                    rune_cd_tracker[castable] = rune_cd(haste_rune_cd, current_time)
                                    atta_num = ((746 + (wep_roll * .4)) + (( 746 + (wep_roll * .4)) * (.125 * how_many_dots_on_target)) + (( 746 + (wep_roll * .4)) * (.125 * how_many_dots_on_target) * darkruned_battlegear_four_set)) - (((746 + (wep_roll * .4)) + (( 746 + (wep_roll * .4)) * (.125 * how_many_dots_on_target)) + (( 746 + (wep_roll * .4)) * (.125 * how_many_dots_on_target) * darkruned_battlegear_four_set)) * armor_red_amount)
                                    if dk_presence == 0:
                                        atta_num = atta_num + (atta_num * .15)
                                    if tundra_stalker_points != 0:
                                        if dots[0] > current_time:
                                            atta_num = atta_num + (atta_num * (tundra_stalker_points * .03))
                                    if blood_of_the_north_points != 0:
                                        if blood_of_the_north_points < 3:
                                            atta_num = atta_num + (atta_num * (blood_of_the_north_points * .03))
                                        elif blood_of_the_north_points == 3:
                                            atta_num = atta_num + (atta_num * .1)
                                    if t9_tank_two_set == True:
                                        atta_num = atta_num + (atta_num *.05)
                                    if rage_of_rivendale_points != 0:
                                        if dots[1] > current_time:
                                            atta_num += atta_num * ((rage_of_rivendale_points * 2) / 100)
                                    if blood_strikes_points != 0:
                                        atta_num = atta_num + ((blood_strikes_points * 5) / 100)
                                    if hysteria_active == True:
                                        atta_num = atta_num + (atta_num * .2)
                                    if tricksoftt_active == True:
                                        atta_num = atta_num + (atta_num * .15)
                                    atta_num = atta_num + (atta_num * increased_physical_damage) + (atta_num * increased_all_damage)
                                    sum_bs_attacks += atta_num
                                    current_power = runic_power(10, current_power, max_runic)
                                    trinket_hit_crit_tracker = 1
                                    if blood_of_the_north_points != 0:
                                        if just_used_death_rune != True:
                                            proc_num = random.randint(0, 100)
                                            if blood_of_the_north_points < 3:
                                                death_proc_chance = (blood_of_the_north_points * .3) * 100
                                            elif blood_of_the_north_points == 3:
                                                death_proc_chance = 100
                                            if death_proc_chance >= proc_num:
                                                death_castable = castable + death
                                                rune_cd_tracker[death_castable] = rune_cd(haste_rune_cd, current_time)
                                                rune_cd_tracker[castable] = 10000  
                                    if reaping_points != 0:
                                        if just_used_death_rune != True:
                                            proc_num = random.randint(0, 100)
                                            if reaping_points < 3:
                                                death_proc_chance = (reaping_points * .3) * 100
                                            elif reaping_points == 3:
                                                death_proc_chance = 100
                                            if death_proc_chance >= proc_num:
                                                death_castable = castable + death
                                                rune_cd_tracker[death_castable] = rune_cd(haste_rune_cd, current_time)
                                                rune_cd_tracker[castable] = 10000 
                                    if sigil_of_haunted_dreams == True:
                                        if random.randint(0, 100) < 15:
                                            if sigil_of_haunted_dreams_buff == False:
                                                sigil_of_haunted_dreams_buff = True
                                                sigil_of_haunted_dreams_timer = current_time + 10  
                                                total_crit = total_crit + ((173 / 45.8) / 100) 
                                    if t9_dps_two_set == True:
                                        if t9_bonus == False:
                                            if t9_cd_timer < current_time:
                                                if (random.randint(0, 10000)/100) < 50:
                                                    t9_bonus = True
                                                    t9_cd_timer = current_time + 45
                                                    t9_active_timer = current_time + 15
                                                    bonus_loop_str += 180
                                                    rotation.append("T9 DPS 2p Bonus")
                                                    rotation_time.append(current_time)
                                                    rotation_damage.append(0)
                                                    rotation_status.append("Proc")
                                    if desolation_points != 0:
                                        if desolation_buff == False:
                                            increased_all_damage += (desolation_points / 100)
                                            desolation_buff_timer = current_time + 20
                                            rotation.append("Desolation")
                                            rotation_time.append(current_time)
                                            rotation_damage.append(0)
                                            rotation_status.append("Applied")
                                            desolation_buff = True
                                        else:
                                            desolation_buff_timer = current_time + 20
                                            rotation.append("Desolation")
                                            rotation_time.append(current_time)
                                            rotation_damage.append(0)
                                            rotation_status.append("Refresh")
                                    if sudden_doom_points != 0:  #Sudden Doom aka Free Death Coil
                                        if (random.randint(0, 10000)/100) < sudden_doom_points * 5:
                                            hit = spell_hit(spell_hit_total, increased_spell_hit, target_level)
                                            crit = spell_crit((total_crit + (darkruned_battlegear_two_set / 100)), spell_hit_total, increased_spell_hit, target_level, increased_spell_crit)
                                            if hit == True:
                                                if crit == True:
                                                    atta_num = random.randint(443, 665)
                                                    atta_num = (atta_num + ((current_ap + (current_ap * ((impurity_points * 4) / 100))) * 0)) * var_crit_amount
                                                    if sigil_of_vengeful_heart == True:
                                                        atta_num + 380
                                                    if sigil_of_the_wild_buck == True:
                                                        atta_num += 80
                                                    if black_ice_points == 5:
                                                        atta_num = atta_num + (atta_num * .1)
                                                    elif black_ice_points == 4:
                                                        atta_num = atta_num + (atta_num * .08)
                                                    elif black_ice_points == 3:
                                                        atta_num = atta_num + (atta_num * .06)
                                                    elif black_ice_points == 2:
                                                        atta_num = atta_num + (atta_num * .04)
                                                    elif black_ice_points == 1:
                                                        atta_num = atta_num + (atta_num * .02)
                                                    if dk_presence == 0:
                                                        atta_num = atta_num + (atta_num * .15)
                                                    if tundra_stalker_points != 0:
                                                        if dots[0] > current_time:
                                                            atta_num = atta_num + (atta_num * (tundra_stalker_points * .03))
                                                    if glyph_death_coil == True:
                                                        atta_num += atta_num * .15
                                                    if rage_of_rivendale_points != 0:
                                                        if dots[1] > current_time:
                                                            atta_num += atta_num * ((rage_of_rivendale_points * 2) / 100)
                                                    if morbitity_points != 0:
                                                        atta_num += ((morbitity_points * 5) / 100)
                                                    if hysteria_active == True:
                                                        atta_num = atta_num + (atta_num * .2)
                                                    if tricksoftt_active == True:
                                                        atta_num = atta_num + (atta_num * .15)
                                                    atta_num = atta_num + (atta_num * increased_spell_damage) + (atta_num * increased_all_damage)
                                                    sudden_doom_damage += atta_num
                                                    if unholy_blight_points == 1:
                                                        unholy_blight_amount = atta_num / 10   
                                                        unholy_blight_timer = current_time + 10
                                                    if rune_of_cinderglacier_active == True:
                                                         rune_of_cinderglacier_damage = atta_num * .2
                                                         rune_of_cinderglacier_active_count += 1
                                                         rotation.append("Rune of Cinderglacier")
                                                         rotation_time.append(current_time)
                                                         rotation_status.append("Active")
                                                         rotation_damage.append(atta_num * .2)
                                                         if rune_of_cinderglacier_active_count == 2:
                                                             rune_of_cinderglacier_active = False
                                                    rotation.append("Sudden Doom")
                                                    rotation_time.append(current_time)
                                                    rotation_status.append("Crit")
                                                    rotation_damage.append(atta_num)
                                                else:
                                                    atta_num = random.randint(443, 665)
                                                    atta_num = (atta_num + ((current_ap + (current_ap * ((impurity_points * 4) / 100))) * 0))
                                                    if sigil_of_vengeful_heart == True:
                                                        atta_num + 380
                                                    if sigil_of_the_wild_buck == True:
                                                        atta_num += 80
                                                    if black_ice_points == 5:
                                                        atta_num = atta_num + (atta_num * .1)
                                                    elif black_ice_points == 4:
                                                        atta_num = atta_num + (atta_num * .08)
                                                    elif black_ice_points == 3:
                                                        atta_num = atta_num + (atta_num * .06)
                                                    elif black_ice_points == 2:
                                                        atta_num = atta_num + (atta_num * .04)
                                                    elif black_ice_points == 1:
                                                        atta_num = atta_num + (atta_num * .02)
                                                    if dk_presence == 0:
                                                        atta_num = atta_num + (atta_num * .15)
                                                    if tundra_stalker_points != 0:
                                                        if dots[0] > current_time:
                                                            atta_num = atta_num + (atta_num * (tundra_stalker_points * .03))
                                                    if glyph_death_coil == True:
                                                        atta_num += atta_num * .15
                                                    if rage_of_rivendale_points != 0:
                                                        if dots[1] > current_time:
                                                            atta_num += atta_num * ((rage_of_rivendale_points * 2) / 100)
                                                    if morbitity_points != 0:
                                                        atta_num += ((morbitity_points * 5) / 100)
                                                    if hysteria_active == True:
                                                        atta_num = atta_num + (atta_num * .2)
                                                    if tricksoftt_active == True:
                                                        atta_num = atta_num + (atta_num * .15)
                                                    atta_num = atta_num + (atta_num * increased_spell_damage) + (atta_num * increased_all_damage)
                                                    sudden_doom_damage += atta_num
                                                    if unholy_blight_points == 1:
                                                        unholy_blight_amount = atta_num / 10 
                                                        unholy_blight_timer = current_time + 10
                                                    if rune_of_cinderglacier_active == True:
                                                         rune_of_cinderglacier_damage = atta_num * .2
                                                         rune_of_cinderglacier_active_count += 1
                                                         rotation.append("Rune of Cinderglacier")
                                                         rotation_time.append(current_time)
                                                         rotation_status.append("Active")
                                                         rotation_damage.append(atta_num * .2)
                                                         if rune_of_cinderglacier_active_count == 2:
                                                             rune_of_cinderglacier_active = False
                                                    rotation.append("Sudden Doom")
                                                    rotation_time.append(current_time)
                                                    rotation_status.append("Hit")
                                                    rotation_damage.append(atta_num)
                                            if hit == False:
                                                rotation.append("Sudden Doom")
                                                rotation_time.append(current_time)
                                                rotation_status.append("Miss")
                                                rotation_damage.append(0)
                                    rotation.append("Blood Strike")
                                    rotation_time.append(current_time)
                                    rotation_status.append("Hit")
                                    rotation_damage.append(atta_num)
                                    current_time += gcd
                                    used_gcd = True
                                    # print("Blood Strike - " + str(atta_num))
                                    continue
                            opp_castable = castable
                            opp_castable = castable - 1
                            if opp_castable == -1:
                                opp_castable = 1
                            castable_death = all_rune_check(death, current_time, rune_cd_tracker)
                            castable_death_f = all_rune_check(death_f, current_time, rune_cd_tracker)
                            castable_death_u = all_rune_check(death_u, current_time, rune_cd_tracker)
                            if castable_death != 3:
                                opp_castable += 6
                            elif castable_death_f != 3:
                                opp_castable += 8
                            elif castable_death_u != 3:
                                opp_castable += 10
                            until_dot0 = dots[0]
                            until_dot1 = dots[1]
                            if pestilence_allow_reset == True:
                                until_dot0 -= pestilence_reset_window
                                until_dot1 -= pestilence_reset_window
                            if rune_cd_tracker[opp_castable] < until_dot0:
                                if rune_cd_tracker[opp_castable] < until_dot1:
                                    #castable = opp_castable   
                                    if use_death_rune == True:
                                        use_death_rune = False
                                        if castable_death != 3:
                                            rune_cd_tracker[castable] = 0
                                            if castable_death == 2:
                                                castable_death = 0
                                            rune_cd_tracker[castable_death + 6] = 10000
                                        elif castable_death_f != 3:
                                            castable += 2
                                            rune_cd_tracker[castable] = 0
                                            if castable_death_f == 2:
                                                castable_death_f = 0
                                            rune_cd_tracker[castable_death_f + 8] = 10000
                                        elif castable_death_u != 3:
                                            castable += 4
                                            rune_cd_tracker[castable] = 0
                                            if castable_death_u == 2:
                                                castable_death_u = 0
                                            rune_cd_tracker[castable_death_u + 10] = 10000
                                    else:
                                        use_death_rune = False
                                    attack_table_results = attack_table(1, tanking, H2, True, False, hit_from_gear, hit_from_other, target_level, all_expertise_dodge, all_expertise_parry, total_crit, (annihilation_talent_points / 100) + increased_phy_crit + ((subversion_points * 3) / 100))
                                    armor_red_amount = dam_reduc(current_armor, armor_penetration, target_level)
                                    wep_roll = weapon_roll(mh_input_lowend_weapon_damage,mh_input_topend_weapon_damage)
                                    wep_roll = wep_roll + (attack_damage_normalization * current_ap / 14)
                                    #Rune Hit
                                    haste_percentage = (total_haste_rating / 25.21) / 100 #Returns a result of 0 - 1 for 0% - 100%
                                    haste_rune_cd = rune_grade_timer(current_time, last_rune_change[castable], last_rune_change[castable+6])
                                    if improved_unholy_presence_points != 0:
                                        if dk_presence == 2:
                                            haste_rune_cd = haste_rune_cd - (haste_rune_cd * ((improved_unholy_presence_points * 5) / 100))
                                    if dk_presence != 2:
                                        gcd = input_gcd / (1 + haste_percentage)
                                        if gcd < 1:
                                            gcd = 1
                                    ##Rune Miss
                                    haste_rune_cd_miss = 1
                                    how_many_dots_on_target = 0
                                    if dots[0] > current_time:
                                        how_many_dots_on_target += 1
                                    if dots[1] > current_time:
                                        how_many_dots_on_target += 1
                                    if dots[2] > current_time:
                                        how_many_dots_on_target += 1
                                        
                                    if dancing_rune_weapon_points == 1:
                                        if dancing_rune_weapon_active == True:
                                            if attack_table_results == 0:
                                                atta_num = 0
                                                rotation.append("Dancing Rune Weapon")
                                                rotation_time.append(current_time)
                                                rotation_status.append("Miss")
                                                rotation_damage.append(atta_num)
                                            elif attack_table_results == 1:
                                                atta_num = 0
                                                rotation.append("Dancing Rune Weapon")
                                                rotation_time.append(current_time)
                                                rotation_status.append("Dodge")
                                                rotation_damage.append(atta_num)
                                            elif attack_table_results == 5:
                                                atta_num = (((746 + (wep_roll * .4)) + (( 746 + (wep_roll * .4)) * (.125 * how_many_dots_on_target)) + (( 746 + (wep_roll * .4)) * (.125 * how_many_dots_on_target) * darkruned_battlegear_four_set)) - (((746 + (wep_roll * .4)) + (( 746 + (wep_roll * .4)) * (.125 * how_many_dots_on_target)) + (( 746 + (wep_roll * .4)) * (.125 * how_many_dots_on_target) * darkruned_battlegear_four_set)) * armor_red_amount))  * (var_crit_amount + (guile_of_gorefiend_points * .15))
                                                if dk_presence == 0:
                                                    atta_num = atta_num + (atta_num * .15)
                                                if tundra_stalker_points != 0:
                                                    if dots[0] > current_time:
                                                        atta_num = atta_num + (atta_num * (tundra_stalker_points * .03))
                                                if blood_of_the_north_points != 0:
                                                    if blood_of_the_north_points < 3:
                                                        atta_num = atta_num + (atta_num * (blood_of_the_north_points * .03))
                                                    elif blood_of_the_north_points == 3:
                                                        atta_num = atta_num + (atta_num * .1)
                                                if t9_tank_two_set == True:
                                                    atta_num = atta_num + (atta_num *.05)
                                                if rage_of_rivendale_points != 0:
                                                    if dots[1] > current_time:
                                                        atta_num += atta_num * ((rage_of_rivendale_points * 2) / 100)
                                                if blood_strikes_points != 0:
                                                    atta_num = atta_num + ((blood_strikes_points * 5) / 100)
                                                if might_of_mograine_points != 0:
                                                    atta_num += atta_num * ((might_of_mograine_points * 15) / 100)
                                                if hysteria_active == True:
                                                    atta_num = atta_num + (atta_num * .2)
                                                if tricksoftt_active == True:
                                                    atta_num = atta_num + (atta_num * .15)
                                                atta_num = atta_num + (atta_num * increased_physical_damage) + (atta_num * increased_all_damage)
                                                atta_num = atta_num * dancing_rune_weapon_damage_multi
                                                dancing_rune_weapon_damage += atta_num
                                                rotation.append("Dancing Rune Weapon")
                                                rotation_time.append(current_time)
                                                rotation_status.append("Crit")
                                                rotation_damage.append(atta_num)
                                                trinket_hit_crit_tracker = 2
                                                if blood_of_the_north_points != 0:
                                                    if just_used_death_rune != True:
                                                        proc_num = random.randint(0, 100)
                                                        if blood_of_the_north_points < 3:
                                                            death_proc_chance = (blood_of_the_north_points * .3) * 100
                                                        elif blood_of_the_north_points == 3:
                                                            death_proc_chance = 100
                                                        if death_proc_chance >= proc_num:
                                                            death_castable = castable + death
                                                            rune_cd_tracker[death_castable] = rune_cd(haste_rune_cd, current_time)
                                                            rune_cd_tracker[castable] = 10000  
                                                if reaping_points != 0:
                                                    if just_used_death_rune != True:
                                                        proc_num = random.randint(0, 100)
                                                        if reaping_points < 3:
                                                            death_proc_chance = (reaping_points * .3) * 100
                                                        elif reaping_points == 3:
                                                            death_proc_chance = 100
                                                        if death_proc_chance >= proc_num:
                                                            death_castable = castable + death
                                                            rune_cd_tracker[death_castable] = rune_cd(haste_rune_cd, current_time)
                                                            rune_cd_tracker[castable] = 10000 
                                                if sigil_of_haunted_dreams == True:
                                                    if random.randint(0, 100) < 15:
                                                        if sigil_of_haunted_dreams_buff == False:
                                                            sigil_of_haunted_dreams_buff = True
                                                            sigil_of_haunted_dreams_timer = current_time + 10  
                                                            total_crit = total_crit + ((173 / 45.8) / 100) 
                                                if t9_dps_two_set == True:
                                                    if t9_bonus == False:
                                                        if t9_cd_timer < current_time:
                                                            if (random.randint(0, 10000)/100) < 50:
                                                                t9_bonus = True
                                                                t9_cd_timer = current_time + 45
                                                                t9_active_timer = current_time + 15
                                                                bonus_loop_str += 180
                                                                rotation.append("T9 DPS 2p Bonus")
                                                                rotation_time.append(current_time)
                                                                rotation_damage.append(0)
                                                                rotation_status.append("Proc")
                                                if desolation_points != 0:
                                                    if desolation_buff == False:
                                                        increased_all_damage += (desolation_points / 100)
                                                        desolation_buff_timer = current_time + 20
                                                        rotation.append("Desolation")
                                                        rotation_time.append(current_time)
                                                        rotation_damage.append(0)
                                                        rotation_status.append("Applied")
                                                        desolation_buff = True
                                                    else:
                                                        desolation_buff_timer = current_time + 20
                                                        rotation.append("Desolation")
                                                        rotation_time.append(current_time)
                                                        rotation_damage.append(0)
                                                        rotation_status.append("Refresh")
                                                if sudden_doom_points != 0:  #Sudden Doom aka Free Death Coil
                                                    if (random.randint(0, 10000)/100) < sudden_doom_points * 5:
                                                        hit = spell_hit(spell_hit_total, increased_spell_hit, target_level)
                                                        crit = spell_crit((total_crit + (darkruned_battlegear_two_set / 100)), spell_hit_total, increased_spell_hit, target_level, increased_spell_crit)
                                                        if hit == True:
                                                            if crit == True:
                                                                atta_num = random.randint(443, 665)
                                                                atta_num = (atta_num + ((current_ap + (current_ap * ((impurity_points * 4) / 100))) * 0)) * var_crit_amount
                                                                if sigil_of_vengeful_heart == True:
                                                                    atta_num + 380
                                                                if sigil_of_the_wild_buck == True:
                                                                    atta_num += 80
                                                                if black_ice_points == 5:
                                                                    atta_num = atta_num + (atta_num * .1)
                                                                elif black_ice_points == 4:
                                                                    atta_num = atta_num + (atta_num * .08)
                                                                elif black_ice_points == 3:
                                                                    atta_num = atta_num + (atta_num * .06)
                                                                elif black_ice_points == 2:
                                                                    atta_num = atta_num + (atta_num * .04)
                                                                elif black_ice_points == 1:
                                                                    atta_num = atta_num + (atta_num * .02)
                                                                if dk_presence == 0:
                                                                    atta_num = atta_num + (atta_num * .15)
                                                                if tundra_stalker_points != 0:
                                                                    if dots[0] > current_time:
                                                                        atta_num = atta_num + (atta_num * (tundra_stalker_points * .03))
                                                                if glyph_death_coil == True:
                                                                    atta_num += atta_num * .15
                                                                if rage_of_rivendale_points != 0:
                                                                    if dots[1] > current_time:
                                                                        atta_num += atta_num * ((rage_of_rivendale_points * 2) / 100)
                                                                if morbitity_points != 0:
                                                                    atta_num += ((morbitity_points * 5) / 100)
                                                                if hysteria_active == True:
                                                                    atta_num = atta_num + (atta_num * .2)
                                                                if tricksoftt_active == True:
                                                                    atta_num = atta_num + (atta_num * .15)
                                                                atta_num = atta_num + (atta_num * increased_spell_damage) + (atta_num * increased_all_damage)
                                                                sudden_doom_damage += atta_num
                                                                if unholy_blight_points == 1:
                                                                    unholy_blight_amount = atta_num / 10   
                                                                    unholy_blight_timer = current_time + 10
                                                                if rune_of_cinderglacier_active == True:
                                                                     rune_of_cinderglacier_damage = atta_num * .2
                                                                     rune_of_cinderglacier_active_count += 1
                                                                     rotation.append("Rune of Cinderglacier")
                                                                     rotation_time.append(current_time)
                                                                     rotation_status.append("Active")
                                                                     rotation_damage.append(atta_num * .2)
                                                                     if rune_of_cinderglacier_active_count == 2:
                                                                         rune_of_cinderglacier_active = False
                                                                rotation.append("Sudden Doom")
                                                                rotation_time.append(current_time)
                                                                rotation_status.append("Crit")
                                                                rotation_damage.append(atta_num)
                                                            else:
                                                                atta_num = random.randint(443, 665)
                                                                atta_num = (atta_num + ((current_ap + (current_ap * ((impurity_points * 4) / 100))) * 0))
                                                                if sigil_of_vengeful_heart == True:
                                                                    atta_num + 380
                                                                if sigil_of_the_wild_buck == True:
                                                                    atta_num += 80
                                                                if black_ice_points == 5:
                                                                    atta_num = atta_num + (atta_num * .1)
                                                                elif black_ice_points == 4:
                                                                    atta_num = atta_num + (atta_num * .08)
                                                                elif black_ice_points == 3:
                                                                    atta_num = atta_num + (atta_num * .06)
                                                                elif black_ice_points == 2:
                                                                    atta_num = atta_num + (atta_num * .04)
                                                                elif black_ice_points == 1:
                                                                    atta_num = atta_num + (atta_num * .02)
                                                                if dk_presence == 0:
                                                                    atta_num = atta_num + (atta_num * .15)
                                                                if tundra_stalker_points != 0:
                                                                    if dots[0] > current_time:
                                                                        atta_num = atta_num + (atta_num * (tundra_stalker_points * .03))
                                                                if glyph_death_coil == True:
                                                                    atta_num += atta_num * .15
                                                                if rage_of_rivendale_points != 0:
                                                                    if dots[1] > current_time:
                                                                        atta_num += atta_num * ((rage_of_rivendale_points * 2) / 100)
                                                                if morbitity_points != 0:
                                                                    atta_num += ((morbitity_points * 5) / 100)
                                                                if hysteria_active == True:
                                                                    atta_num = atta_num + (atta_num * .2)
                                                                if tricksoftt_active == True:
                                                                    atta_num = atta_num + (atta_num * .15)
                                                                atta_num = atta_num + (atta_num * increased_spell_damage) + (atta_num * increased_all_damage)
                                                                sudden_doom_damage += atta_num
                                                                if unholy_blight_points == 1:
                                                                    unholy_blight_amount = atta_num / 10 
                                                                    unholy_blight_timer = current_time + 10
                                                                if rune_of_cinderglacier_active == True:
                                                                     rune_of_cinderglacier_damage = atta_num * .2
                                                                     rune_of_cinderglacier_active_count += 1
                                                                     rotation.append("Rune of Cinderglacier")
                                                                     rotation_time.append(current_time)
                                                                     rotation_status.append("Active")
                                                                     rotation_damage.append(atta_num * .2)
                                                                     if rune_of_cinderglacier_active_count == 2:
                                                                         rune_of_cinderglacier_active = False
                                                                rotation.append("Sudden Doom")
                                                                rotation_time.append(current_time)
                                                                rotation_status.append("Hit")
                                                                rotation_damage.append(atta_num)
                                                        if hit == False:
                                                            rotation.append("Sudden Doom")
                                                            rotation_time.append(current_time)
                                                            rotation_status.append("Miss")
                                                            rotation_damage.append(0)
                                            elif attack_table_results == 7:
                                                atta_num = ((746 + (wep_roll * .4)) + (( 746 + (wep_roll * .4)) * (.125 * how_many_dots_on_target)) + (( 746 + (wep_roll * .4)) * (.125 * how_many_dots_on_target) * darkruned_battlegear_four_set)) - (((746 + (wep_roll * .4)) + (( 746 + (wep_roll * .4)) * (.125 * how_many_dots_on_target)) + (( 746 + (wep_roll * .4)) * (.125 * how_many_dots_on_target) * darkruned_battlegear_four_set)) * armor_red_amount)
                                                if dk_presence == 0:
                                                    atta_num = atta_num + (atta_num * .15)
                                                if tundra_stalker_points != 0:
                                                    if dots[0] > current_time:
                                                        atta_num = atta_num + (atta_num * (tundra_stalker_points * .03))
                                                if blood_of_the_north_points != 0:
                                                    if blood_of_the_north_points < 3:
                                                        atta_num = atta_num + (atta_num * (blood_of_the_north_points * .03))
                                                    elif blood_of_the_north_points == 3:
                                                        atta_num = atta_num + (atta_num * .1)
                                                if t9_tank_two_set == True:
                                                    atta_num = atta_num + (atta_num *.05)
                                                if rage_of_rivendale_points != 0:
                                                    if dots[1] > current_time:
                                                        atta_num += atta_num * ((rage_of_rivendale_points * 2) / 100)
                                                if blood_strikes_points != 0:
                                                    atta_num = atta_num + ((blood_strikes_points * 5) / 100)
                                                if hysteria_active == True:
                                                    atta_num = atta_num + (atta_num * .2)
                                                if tricksoftt_active == True:
                                                    atta_num = atta_num + (atta_num * .15)
                                                atta_num = atta_num + (atta_num * increased_physical_damage) + (atta_num * increased_all_damage)
                                                atta_num = atta_num * dancing_rune_weapon_damage_multi
                                                dancing_rune_weapon_damage += atta_num
                                                rotation.append("Dancing Rune Weapon")
                                                rotation_time.append(current_time)
                                                rotation_status.append("Hit")
                                                rotation_damage.append(atta_num)
                                                trinket_hit_crit_tracker = 1
                                                if blood_of_the_north_points != 0:
                                                    if just_used_death_rune != True:
                                                        proc_num = random.randint(0, 100)
                                                        if blood_of_the_north_points < 3:
                                                            death_proc_chance = (blood_of_the_north_points * .3) * 100
                                                        elif blood_of_the_north_points == 3:
                                                            death_proc_chance = 100
                                                        if death_proc_chance >= proc_num:
                                                            death_castable = castable + death
                                                            rune_cd_tracker[death_castable] = rune_cd(haste_rune_cd, current_time)
                                                            rune_cd_tracker[castable] = 10000  
                                                if reaping_points != 0:
                                                    if just_used_death_rune != True:
                                                        proc_num = random.randint(0, 100)
                                                        if reaping_points < 3:
                                                            death_proc_chance = (reaping_points * .3) * 100
                                                        elif reaping_points == 3:
                                                            death_proc_chance = 100
                                                        if death_proc_chance >= proc_num:
                                                            death_castable = castable + death
                                                            rune_cd_tracker[death_castable] = rune_cd(haste_rune_cd, current_time)
                                                            rune_cd_tracker[castable] = 10000 
                                                if sigil_of_haunted_dreams == True:
                                                    if random.randint(0, 100) < 15:
                                                        if sigil_of_haunted_dreams_buff == False:
                                                            sigil_of_haunted_dreams_buff = True
                                                            sigil_of_haunted_dreams_timer = current_time + 10  
                                                            total_crit = total_crit + ((173 / 45.8) / 100) 
                                                if t9_dps_two_set == True:
                                                    if t9_bonus == False:
                                                        if t9_cd_timer < current_time:
                                                            if (random.randint(0, 10000)/100) < 50:
                                                                t9_bonus = True
                                                                t9_cd_timer = current_time + 45
                                                                t9_active_timer = current_time + 15
                                                                bonus_loop_str += 180
                                                                rotation.append("T9 DPS 2p Bonus")
                                                                rotation_time.append(current_time)
                                                                rotation_damage.append(0)
                                                                rotation_status.append("Proc")
                                                if desolation_points != 0:
                                                    if desolation_buff == False:
                                                        increased_all_damage += (desolation_points / 100)
                                                        desolation_buff_timer = current_time + 20
                                                        rotation.append("Desolation")
                                                        rotation_time.append(current_time)
                                                        rotation_damage.append(0)
                                                        rotation_status.append("Applied")
                                                        desolation_buff = True
                                                    else:
                                                        desolation_buff_timer = current_time + 20
                                                        rotation.append("Desolation")
                                                        rotation_time.append(current_time)
                                                        rotation_damage.append(0)
                                                        rotation_status.append("Refresh")
                                                if sudden_doom_points != 0:  #Sudden Doom aka Free Death Coil
                                                    if (random.randint(0, 10000)/100) < sudden_doom_points * 5:
                                                        hit = spell_hit(spell_hit_total, increased_spell_hit, target_level)
                                                        crit = spell_crit((total_crit + (darkruned_battlegear_two_set / 100)), spell_hit_total, increased_spell_hit, target_level, increased_spell_crit)
                                                        if hit == True:
                                                            if crit == True:
                                                                atta_num = random.randint(443, 665)
                                                                atta_num = (atta_num + ((current_ap + (current_ap * ((impurity_points * 4) / 100))) * 0)) * var_crit_amount
                                                                if sigil_of_vengeful_heart == True:
                                                                    atta_num + 380
                                                                if sigil_of_the_wild_buck == True:
                                                                    atta_num += 80
                                                                if black_ice_points == 5:
                                                                    atta_num = atta_num + (atta_num * .1)
                                                                elif black_ice_points == 4:
                                                                    atta_num = atta_num + (atta_num * .08)
                                                                elif black_ice_points == 3:
                                                                    atta_num = atta_num + (atta_num * .06)
                                                                elif black_ice_points == 2:
                                                                    atta_num = atta_num + (atta_num * .04)
                                                                elif black_ice_points == 1:
                                                                    atta_num = atta_num + (atta_num * .02)
                                                                if dk_presence == 0:
                                                                    atta_num = atta_num + (atta_num * .15)
                                                                if tundra_stalker_points != 0:
                                                                    if dots[0] > current_time:
                                                                        atta_num = atta_num + (atta_num * (tundra_stalker_points * .03))
                                                                if glyph_death_coil == True:
                                                                    atta_num += atta_num * .15
                                                                if rage_of_rivendale_points != 0:
                                                                    if dots[1] > current_time:
                                                                        atta_num += atta_num * ((rage_of_rivendale_points * 2) / 100)
                                                                if morbitity_points != 0:
                                                                    atta_num += ((morbitity_points * 5) / 100)
                                                                if hysteria_active == True:
                                                                    atta_num = atta_num + (atta_num * .2)
                                                                if tricksoftt_active == True:
                                                                    atta_num = atta_num + (atta_num * .15)
                                                                atta_num = atta_num + (atta_num * increased_spell_damage) + (atta_num * increased_all_damage)
                                                                sudden_doom_damage += atta_num
                                                                if unholy_blight_points == 1:
                                                                    unholy_blight_amount = atta_num / 10   
                                                                    unholy_blight_timer = current_time + 10
                                                                if rune_of_cinderglacier_active == True:
                                                                     rune_of_cinderglacier_damage = atta_num * .2
                                                                     rune_of_cinderglacier_active_count += 1
                                                                     rotation.append("Rune of Cinderglacier")
                                                                     rotation_time.append(current_time)
                                                                     rotation_status.append("Active")
                                                                     rotation_damage.append(atta_num * .2)
                                                                     if rune_of_cinderglacier_active_count == 2:
                                                                         rune_of_cinderglacier_active = False
                                                                rotation.append("Sudden Doom")
                                                                rotation_time.append(current_time)
                                                                rotation_status.append("Crit")
                                                                rotation_damage.append(atta_num)
                                                            else:
                                                                atta_num = random.randint(443, 665)
                                                                atta_num = (atta_num + ((current_ap + (current_ap * ((impurity_points * 4) / 100))) * 0))
                                                                if sigil_of_vengeful_heart == True:
                                                                    atta_num + 380
                                                                if sigil_of_the_wild_buck == True:
                                                                    atta_num += 80
                                                                if black_ice_points == 5:
                                                                    atta_num = atta_num + (atta_num * .1)
                                                                elif black_ice_points == 4:
                                                                    atta_num = atta_num + (atta_num * .08)
                                                                elif black_ice_points == 3:
                                                                    atta_num = atta_num + (atta_num * .06)
                                                                elif black_ice_points == 2:
                                                                    atta_num = atta_num + (atta_num * .04)
                                                                elif black_ice_points == 1:
                                                                    atta_num = atta_num + (atta_num * .02)
                                                                if dk_presence == 0:
                                                                    atta_num = atta_num + (atta_num * .15)
                                                                if tundra_stalker_points != 0:
                                                                    if dots[0] > current_time:
                                                                        atta_num = atta_num + (atta_num * (tundra_stalker_points * .03))
                                                                if glyph_death_coil == True:
                                                                    atta_num += atta_num * .15
                                                                if rage_of_rivendale_points != 0:
                                                                    if dots[1] > current_time:
                                                                        atta_num += atta_num * ((rage_of_rivendale_points * 2) / 100)
                                                                if morbitity_points != 0:
                                                                    atta_num += ((morbitity_points * 5) / 100)
                                                                if hysteria_active == True:
                                                                    atta_num = atta_num + (atta_num * .2)
                                                                if tricksoftt_active == True:
                                                                    atta_num = atta_num + (atta_num * .15)
                                                                atta_num = atta_num + (atta_num * increased_spell_damage) + (atta_num * increased_all_damage)
                                                                sudden_doom_damage += atta_num
                                                                if unholy_blight_points == 1:
                                                                    unholy_blight_amount = atta_num / 10 
                                                                    unholy_blight_timer = current_time + 10
                                                                if rune_of_cinderglacier_active == True:
                                                                     rune_of_cinderglacier_damage = atta_num * .2
                                                                     rune_of_cinderglacier_active_count += 1
                                                                     rotation.append("Rune of Cinderglacier")
                                                                     rotation_time.append(current_time)
                                                                     rotation_status.append("Active")
                                                                     rotation_damage.append(atta_num * .2)
                                                                     if rune_of_cinderglacier_active_count == 2:
                                                                         rune_of_cinderglacier_active = False
                                                                rotation.append("Sudden Doom")
                                                                rotation_time.append(current_time)
                                                                rotation_status.append("Hit")
                                                                rotation_damage.append(atta_num)
                                                        if hit == False:
                                                            rotation.append("Sudden Doom")
                                                            rotation_time.append(current_time)
                                                            rotation_status.append("Miss")
                                                            rotation_damage.append(0)
                                    
                                    
                                        
                                    if threat_of_thassarian_points != 0:    #Off Hand Blood Strike
                                        if H2 == False:
                                            threat_of_thass_roll = (threat_of_thassarian_points * 30) 
                                            if threat_of_thassarian_points == 3: 
                                                threat_of_thass_roll += 10 
                                            threat_of_t_num = random.randint(0, 100) 
                                            if threat_of_thass_roll >= threat_of_t_num: 
                                                oh_wep_roll = weapon_roll(oh_input_lowend_weapon_damage,oh_input_topend_weapon_damage)
                                                oh_wep_roll = wep_roll + (attack_damage_normalization * current_ap / 14)
                                                oh_attack_table_results = attack_table(1, tanking, H2, False, True, hit_from_gear, hit_from_other, target_level, all_expertise_dodge, all_expertise_parry, total_crit, (annihilation_talent_points / 100) + increased_phy_crit + ((subversion_points * 3) / 100))
                                                if oh_attack_table_results == 0:
                                                    atta_num = 0
                                                    rotation.append("OH - Blood Strike")
                                                    rotation_time.append(current_time)
                                                    rotation_status.append("Miss")
                                                    rotation_damage.append(atta_num)
                                                elif oh_attack_table_results == 1:
                                                    atta_num = 0
                                                    rotation.append("OH - Blood Strike")
                                                    rotation_time.append(current_time)
                                                    rotation_status.append("Dodge")
                                                    rotation_damage.append(atta_num)
                                                elif oh_attack_table_results == 5:
                                                    #crit attack
                                                    atta_num = (((746 + (oh_wep_roll * .4)) + (( 746 + (oh_wep_roll * .4)) * (.125 * how_many_dots_on_target)) + (( 746 + (oh_wep_roll * .4)) * (.125 * how_many_dots_on_target) * darkruned_battlegear_four_set )) - (((746 + (oh_wep_roll * .4)) + (( 746 + (oh_wep_roll * .4)) * (.125 * how_many_dots_on_target)) + (( 746 + (oh_wep_roll * .4)) * (.125 * how_many_dots_on_target) * darkruned_battlegear_four_set )) * armor_red_amount))  * (var_crit_amount + (guile_of_gorefiend_points * .15))
                                                    if dk_presence == 0:
                                                        atta_num = atta_num + (atta_num * .15)
                                                    if tundra_stalker_points != 0:
                                                        if dots[0] > current_time:
                                                            atta_num = atta_num + (atta_num * (tundra_stalker_points * .03))
                                                    if blood_of_the_north_points != 0:
                                                        if blood_of_the_north_points < 3:
                                                            atta_num = atta_num + (atta_num * (blood_of_the_north_points * .03))
                                                        elif blood_of_the_north_points == 3:
                                                            atta_num = atta_num + (atta_num * .1)
                                                    if t9_tank_two_set == True:
                                                        atta_num = atta_num + (atta_num *.05)
                                                    if rage_of_rivendale_points != 0:
                                                        if dots[1] > current_time:
                                                            atta_num += atta_num * ((rage_of_rivendale_points * 2) / 100)
                                                    if blood_strikes_points != 0:
                                                        atta_num = atta_num + ((blood_strikes_points * 5) / 100)
                                                    if might_of_mograine_points != 0:
                                                        atta_num += atta_num * ((might_of_mograine_points * 15) / 100)
                                                    atta_num = atta_num * oh_wep_damage_mod
                                                    if hysteria_active == True:
                                                        atta_num = atta_num + (atta_num * .2)
                                                    if tricksoftt_active == True:
                                                        atta_num = atta_num + (atta_num * .15)
                                                    atta_num = atta_num + (atta_num * increased_physical_damage) + (atta_num * increased_all_damage)
                                                    sum_oh_bs_attacks += atta_num
                                                    trinket_hit_crit_tracker = 2
                                                    if blood_of_the_north_points != 0:
                                                        if just_used_death_rune != True:
                                                            proc_num = random.randint(0, 100)
                                                            if blood_of_the_north_points < 3:
                                                                death_proc_chance = (blood_of_the_north_points * .3) * 100
                                                            elif blood_of_the_north_points == 3:
                                                                death_proc_chance = 100
                                                            if death_proc_chance >= proc_num:
                                                                death_castable = castable + death
                                                                rune_cd_tracker[death_castable] = rune_cd(haste_rune_cd, current_time)
                                                                rune_cd_tracker[castable] = 10000  
                                                    if reaping_points != 0:
                                                        if just_used_death_rune != True:
                                                            proc_num = random.randint(0, 100)
                                                            if reaping_points < 3:
                                                                death_proc_chance = (reaping_points * .3) * 100
                                                            elif reaping_points == 3:
                                                                death_proc_chance = 100
                                                            if death_proc_chance >= proc_num:
                                                                death_castable = castable + death
                                                                rune_cd_tracker[death_castable] = rune_cd(haste_rune_cd, current_time)
                                                                rune_cd_tracker[castable] = 10000 
                                                    if sigil_of_haunted_dreams == True:
                                                        if random.randint(0, 100) < 15:
                                                            if sigil_of_haunted_dreams_buff == False:
                                                                sigil_of_haunted_dreams_buff = True
                                                                sigil_of_haunted_dreams_timer = current_time + 10  
                                                                total_crit = total_crit + ((173 / 45.8) / 100)
                                                    if t9_dps_two_set == True:
                                                        if t9_bonus == False:
                                                            if t9_cd_timer < current_time:
                                                                if (random.randint(0, 10000)/100) < 50:
                                                                    t9_bonus = True
                                                                    t9_cd_timer = current_time + 45
                                                                    t9_active_timer = current_time + 15
                                                                    bonus_loop_str += 180
                                                                    rotation.append("T9 DPS 2p Bonus")
                                                                    rotation_time.append(current_time)
                                                                    rotation_damage.append(0)
                                                                    rotation_status.append("Proc")
                                                    if desolation_points != 0:
                                                        if desolation_buff == False:
                                                            increased_all_damage += (desolation_points / 100)
                                                            desolation_buff_timer = current_time + 20
                                                            rotation.append("Desolation")
                                                            rotation_time.append(current_time)
                                                            rotation_damage.append(0)
                                                            rotation_status.append("Applied")
                                                            desolation_buff = True
                                                        else:
                                                            desolation_buff_timer = current_time + 20
                                                            rotation.append("Desolation")
                                                            rotation_time.append(current_time)
                                                            rotation_damage.append(0)
                                                            rotation_status.append("Refresh")
                                                    if sudden_doom_points != 0:  #Sudden Doom aka Free Death Coil
                                                        if (random.randint(0, 10000)/100) < sudden_doom_points * 5:
                                                            hit = spell_hit(spell_hit_total, increased_spell_hit, target_level)
                                                            crit = spell_crit((total_crit + (darkruned_battlegear_two_set / 100)), spell_hit_total, increased_spell_hit, target_level, increased_spell_crit)
                                                            if hit == True:
                                                                if crit == True:
                                                                    atta_num = random.randint(443, 665)
                                                                    atta_num = (atta_num + ((current_ap + (current_ap * ((impurity_points * 4) / 100))) * 0)) * var_crit_amount
                                                                    if sigil_of_vengeful_heart == True:
                                                                        atta_num + 380
                                                                    if sigil_of_the_wild_buck == True:
                                                                        atta_num += 80
                                                                    if black_ice_points == 5:
                                                                        atta_num = atta_num + (atta_num * .1)
                                                                    elif black_ice_points == 4:
                                                                        atta_num = atta_num + (atta_num * .08)
                                                                    elif black_ice_points == 3:
                                                                        atta_num = atta_num + (atta_num * .06)
                                                                    elif black_ice_points == 2:
                                                                        atta_num = atta_num + (atta_num * .04)
                                                                    elif black_ice_points == 1:
                                                                        atta_num = atta_num + (atta_num * .02)
                                                                    if dk_presence == 0:
                                                                        atta_num = atta_num + (atta_num * .15)
                                                                    if tundra_stalker_points != 0:
                                                                        if dots[0] > current_time:
                                                                            atta_num = atta_num + (atta_num * (tundra_stalker_points * .03))
                                                                    if glyph_death_coil == True:
                                                                        atta_num += atta_num * .15
                                                                    if rage_of_rivendale_points != 0:
                                                                        if dots[1] > current_time:
                                                                            atta_num += atta_num * ((rage_of_rivendale_points * 2) / 100)
                                                                    if morbitity_points != 0:
                                                                        atta_num += ((morbitity_points * 5) / 100)
                                                                    if hysteria_active == True:
                                                                        atta_num = atta_num + (atta_num * .2)
                                                                    if tricksoftt_active == True:
                                                                        atta_num = atta_num + (atta_num * .15)
                                                                    atta_num = atta_num + (atta_num * increased_spell_damage) + (atta_num * increased_all_damage)
                                                                    sudden_doom_damage += atta_num
                                                                    if unholy_blight_points == 1:
                                                                        unholy_blight_amount = atta_num / 10   
                                                                        unholy_blight_timer = current_time + 10
                                                                    if rune_of_cinderglacier_active == True:
                                                                         rune_of_cinderglacier_damage = atta_num * .2
                                                                         rune_of_cinderglacier_active_count += 1
                                                                         rotation.append("Rune of Cinderglacier")
                                                                         rotation_time.append(current_time)
                                                                         rotation_status.append("Active")
                                                                         rotation_damage.append(atta_num * .2)
                                                                         if rune_of_cinderglacier_active_count == 2:
                                                                             rune_of_cinderglacier_active = False
                                                                    rotation.append("Sudden Doom")
                                                                    rotation_time.append(current_time)
                                                                    rotation_status.append("Crit")
                                                                    rotation_damage.append(atta_num)
                                                                else:
                                                                    atta_num = random.randint(443, 665)
                                                                    atta_num = (atta_num + ((current_ap + (current_ap * ((impurity_points * 4) / 100))) * 0))
                                                                    if sigil_of_vengeful_heart == True:
                                                                        atta_num + 380
                                                                    if sigil_of_the_wild_buck == True:
                                                                        atta_num += 80
                                                                    if black_ice_points == 5:
                                                                        atta_num = atta_num + (atta_num * .1)
                                                                    elif black_ice_points == 4:
                                                                        atta_num = atta_num + (atta_num * .08)
                                                                    elif black_ice_points == 3:
                                                                        atta_num = atta_num + (atta_num * .06)
                                                                    elif black_ice_points == 2:
                                                                        atta_num = atta_num + (atta_num * .04)
                                                                    elif black_ice_points == 1:
                                                                        atta_num = atta_num + (atta_num * .02)
                                                                    if dk_presence == 0:
                                                                        atta_num = atta_num + (atta_num * .15)
                                                                    if tundra_stalker_points != 0:
                                                                        if dots[0] > current_time:
                                                                            atta_num = atta_num + (atta_num * (tundra_stalker_points * .03))
                                                                    if glyph_death_coil == True:
                                                                        atta_num += atta_num * .15
                                                                    if rage_of_rivendale_points != 0:
                                                                        if dots[1] > current_time:
                                                                            atta_num += atta_num * ((rage_of_rivendale_points * 2) / 100)
                                                                    if morbitity_points != 0:
                                                                        atta_num += ((morbitity_points * 5) / 100)
                                                                    if hysteria_active == True:
                                                                        atta_num = atta_num + (atta_num * .2)
                                                                    if tricksoftt_active == True:
                                                                        atta_num = atta_num + (atta_num * .15)
                                                                    atta_num = atta_num + (atta_num * increased_spell_damage) + (atta_num * increased_all_damage)
                                                                    sudden_doom_damage += atta_num
                                                                    if unholy_blight_points == 1:
                                                                        unholy_blight_amount = atta_num / 10 
                                                                        unholy_blight_timer = current_time + 10
                                                                    if rune_of_cinderglacier_active == True:
                                                                         rune_of_cinderglacier_damage = atta_num * .2
                                                                         rune_of_cinderglacier_active_count += 1
                                                                         rotation.append("Rune of Cinderglacier")
                                                                         rotation_time.append(current_time)
                                                                         rotation_status.append("Active")
                                                                         rotation_damage.append(atta_num * .2)
                                                                         if rune_of_cinderglacier_active_count == 2:
                                                                             rune_of_cinderglacier_active = False
                                                                    rotation.append("Sudden Doom")
                                                                    rotation_time.append(current_time)
                                                                    rotation_status.append("Hit")
                                                                    rotation_damage.append(atta_num)
                                                            if hit == False:
                                                                rotation.append("Sudden Doom")
                                                                rotation_time.append(current_time)
                                                                rotation_status.append("Miss")
                                                                rotation_damage.append(0)
                                                    rotation.append("OH - Blood Strike")
                                                    rotation_time.append(current_time)
                                                    rotation_status.append("Crit")
                                                    rotation_damage.append(atta_num)
                                                elif oh_attack_table_results == 7:
                                                    #normal attack
                                                    atta_num = ((746 + (oh_wep_roll * .4)) + (( 746 + (oh_wep_roll * .4)) * (.125 * how_many_dots_on_target)) + (( 746 + (oh_wep_roll * .4)) * (.125 * how_many_dots_on_target) * darkruned_battlegear_four_set )) - (((746 + (oh_wep_roll * .4)) + (( 746 + (oh_wep_roll * .4)) * (.125 * how_many_dots_on_target)) + (( 746 + (oh_wep_roll * .4)) * (.125 * how_many_dots_on_target) * darkruned_battlegear_four_set )) * armor_red_amount)
                                                    if dk_presence == 0:
                                                        atta_num = atta_num + (atta_num * .15)
                                                    if tundra_stalker_points != 0:
                                                        if dots[0] > current_time:
                                                            atta_num = atta_num + (atta_num * (tundra_stalker_points * .03))
                                                    if blood_of_the_north_points != 0:
                                                        if blood_of_the_north_points < 3:
                                                            atta_num = atta_num + (atta_num * (blood_of_the_north_points * .03))
                                                        elif blood_of_the_north_points == 3:
                                                            atta_num = atta_num + (atta_num * .1)
                                                    if t9_tank_two_set == True:
                                                        atta_num = atta_num + (atta_num *.05)
                                                    if rage_of_rivendale_points != 0:
                                                        if dots[1] > current_time:
                                                            atta_num += atta_num * ((rage_of_rivendale_points * 2) / 100)
                                                    if blood_strikes_points != 0:
                                                        atta_num = atta_num + ((blood_strikes_points * 5) / 100)
                                                    atta_num = atta_num * oh_wep_damage_mod
                                                    if hysteria_active == True:
                                                        atta_num = atta_num + (atta_num * .2)
                                                    if tricksoftt_active == True:
                                                        atta_num = atta_num + (atta_num * .15)
                                                    atta_num = atta_num + (atta_num * increased_physical_damage) + (atta_num * increased_all_damage)
                                                    sum_oh_bs_attacks += atta_num
                                                    trinket_hit_crit_tracker = 1
                                                    if blood_of_the_north_points != 0:
                                                        if just_used_death_rune != True:
                                                            proc_num = random.randint(0, 100)
                                                            if blood_of_the_north_points < 3:
                                                                death_proc_chance = (blood_of_the_north_points * .3) * 100
                                                            elif blood_of_the_north_points == 3:
                                                                death_proc_chance = 100
                                                            if death_proc_chance >= proc_num:
                                                                death_castable = castable + death
                                                                rune_cd_tracker[death_castable] = rune_cd(haste_rune_cd, current_time)
                                                                rune_cd_tracker[castable] = 10000  
                                                    if reaping_points != 0:
                                                        if just_used_death_rune != True:
                                                            proc_num = random.randint(0, 100)
                                                            if reaping_points < 3:
                                                                death_proc_chance = (reaping_points * .3) * 100
                                                            elif reaping_points == 3:
                                                                death_proc_chance = 100
                                                            if death_proc_chance >= proc_num:
                                                                death_castable = castable + death
                                                                rune_cd_tracker[death_castable] = rune_cd(haste_rune_cd, current_time)
                                                                rune_cd_tracker[castable] = 10000 
                                                    if sigil_of_haunted_dreams == True:
                                                        if random.randint(0, 100) < 15:
                                                            if sigil_of_haunted_dreams_buff == False:
                                                                sigil_of_haunted_dreams_buff = True
                                                                sigil_of_haunted_dreams_timer = current_time + 10  
                                                                total_crit = total_crit + ((173 / 45.8) / 100) 
                                                    if t9_dps_two_set == True:
                                                        if t9_bonus == False:
                                                            if t9_cd_timer < current_time:
                                                                if (random.randint(0, 10000)/100) < 50:
                                                                    t9_bonus = True
                                                                    t9_cd_timer = current_time + 45
                                                                    t9_active_timer = current_time + 15
                                                                    bonus_loop_str += 180
                                                                    rotation.append("T9 DPS 2p Bonus")
                                                                    rotation_time.append(current_time)
                                                                    rotation_damage.append(0)
                                                                    rotation_status.append("Proc")
                                                    if desolation_points != 0:
                                                        if desolation_buff == False:
                                                            increased_all_damage += (desolation_points / 100)
                                                            desolation_buff_timer = current_time + 20
                                                            rotation.append("Desolation")
                                                            rotation_time.append(current_time)
                                                            rotation_damage.append(0)
                                                            rotation_status.append("Applied")
                                                            desolation_buff = True
                                                        else:
                                                            desolation_buff_timer = current_time + 20
                                                            rotation.append("Desolation")
                                                            rotation_time.append(current_time)
                                                            rotation_damage.append(0)
                                                            rotation_status.append("Refresh")
                                                    if sudden_doom_points != 0:  #Sudden Doom aka Free Death Coil
                                                        if (random.randint(0, 10000)/100) < sudden_doom_points * 5:
                                                            hit = spell_hit(spell_hit_total, increased_spell_hit, target_level)
                                                            crit = spell_crit((total_crit + (darkruned_battlegear_two_set / 100)), spell_hit_total, increased_spell_hit, target_level, increased_spell_crit)
                                                            if hit == True:
                                                                if crit == True:
                                                                    atta_num = random.randint(443, 665)
                                                                    atta_num = (atta_num + ((current_ap + (current_ap * ((impurity_points * 4) / 100))) * 0)) * var_crit_amount
                                                                    if sigil_of_vengeful_heart == True:
                                                                        atta_num + 380
                                                                    if sigil_of_the_wild_buck == True:
                                                                        atta_num += 80
                                                                    if black_ice_points == 5:
                                                                        atta_num = atta_num + (atta_num * .1)
                                                                    elif black_ice_points == 4:
                                                                        atta_num = atta_num + (atta_num * .08)
                                                                    elif black_ice_points == 3:
                                                                        atta_num = atta_num + (atta_num * .06)
                                                                    elif black_ice_points == 2:
                                                                        atta_num = atta_num + (atta_num * .04)
                                                                    elif black_ice_points == 1:
                                                                        atta_num = atta_num + (atta_num * .02)
                                                                    if dk_presence == 0:
                                                                        atta_num = atta_num + (atta_num * .15)
                                                                    if tundra_stalker_points != 0:
                                                                        if dots[0] > current_time:
                                                                            atta_num = atta_num + (atta_num * (tundra_stalker_points * .03))
                                                                    if glyph_death_coil == True:
                                                                        atta_num += atta_num * .15
                                                                    if rage_of_rivendale_points != 0:
                                                                        if dots[1] > current_time:
                                                                            atta_num += atta_num * ((rage_of_rivendale_points * 2) / 100)
                                                                    if morbitity_points != 0:
                                                                        atta_num += ((morbitity_points * 5) / 100)
                                                                    if hysteria_active == True:
                                                                        atta_num = atta_num + (atta_num * .2)
                                                                    if tricksoftt_active == True:
                                                                        atta_num = atta_num + (atta_num * .15)
                                                                    atta_num = atta_num + (atta_num * increased_spell_damage) + (atta_num * increased_all_damage)
                                                                    sudden_doom_damage += atta_num
                                                                    if unholy_blight_points == 1:
                                                                        unholy_blight_amount = atta_num / 10   
                                                                        unholy_blight_timer = current_time + 10
                                                                    if rune_of_cinderglacier_active == True:
                                                                         rune_of_cinderglacier_damage = atta_num * .2
                                                                         rune_of_cinderglacier_active_count += 1
                                                                         rotation.append("Rune of Cinderglacier")
                                                                         rotation_time.append(current_time)
                                                                         rotation_status.append("Active")
                                                                         rotation_damage.append(atta_num * .2)
                                                                         if rune_of_cinderglacier_active_count == 2:
                                                                             rune_of_cinderglacier_active = False
                                                                    rotation.append("Sudden Doom")
                                                                    rotation_time.append(current_time)
                                                                    rotation_status.append("Crit")
                                                                    rotation_damage.append(atta_num)
                                                                else:
                                                                    atta_num = random.randint(443, 665)
                                                                    atta_num = (atta_num + ((current_ap + (current_ap * ((impurity_points * 4) / 100))) * 0))
                                                                    if sigil_of_vengeful_heart == True:
                                                                        atta_num + 380
                                                                    if sigil_of_the_wild_buck == True:
                                                                        atta_num += 80
                                                                    if black_ice_points == 5:
                                                                        atta_num = atta_num + (atta_num * .1)
                                                                    elif black_ice_points == 4:
                                                                        atta_num = atta_num + (atta_num * .08)
                                                                    elif black_ice_points == 3:
                                                                        atta_num = atta_num + (atta_num * .06)
                                                                    elif black_ice_points == 2:
                                                                        atta_num = atta_num + (atta_num * .04)
                                                                    elif black_ice_points == 1:
                                                                        atta_num = atta_num + (atta_num * .02)
                                                                    if dk_presence == 0:
                                                                        atta_num = atta_num + (atta_num * .15)
                                                                    if tundra_stalker_points != 0:
                                                                        if dots[0] > current_time:
                                                                            atta_num = atta_num + (atta_num * (tundra_stalker_points * .03))
                                                                    if glyph_death_coil == True:
                                                                        atta_num += atta_num * .15
                                                                    if rage_of_rivendale_points != 0:
                                                                        if dots[1] > current_time:
                                                                            atta_num += atta_num * ((rage_of_rivendale_points * 2) / 100)
                                                                    if morbitity_points != 0:
                                                                        atta_num += ((morbitity_points * 5) / 100)
                                                                    if hysteria_active == True:
                                                                        atta_num = atta_num + (atta_num * .2)
                                                                    if tricksoftt_active == True:
                                                                        atta_num = atta_num + (atta_num * .15)
                                                                    atta_num = atta_num + (atta_num * increased_spell_damage) + (atta_num * increased_all_damage)
                                                                    sudden_doom_damage += atta_num
                                                                    if unholy_blight_points == 1:
                                                                        unholy_blight_amount = atta_num / 10 
                                                                        unholy_blight_timer = current_time + 10
                                                                    if rune_of_cinderglacier_active == True:
                                                                         rune_of_cinderglacier_damage = atta_num * .2
                                                                         rune_of_cinderglacier_active_count += 1
                                                                         rotation.append("Rune of Cinderglacier")
                                                                         rotation_time.append(current_time)
                                                                         rotation_status.append("Active")
                                                                         rotation_damage.append(atta_num * .2)
                                                                         if rune_of_cinderglacier_active_count == 2:
                                                                             rune_of_cinderglacier_active = False
                                                                    rotation.append("Sudden Doom")
                                                                    rotation_time.append(current_time)
                                                                    rotation_status.append("Hit")
                                                                    rotation_damage.append(atta_num)
                                                            if hit == False:
                                                                rotation.append("Sudden Doom")
                                                                rotation_time.append(current_time)
                                                                rotation_status.append("Miss")
                                                                rotation_damage.append(0)
                                                    rotation.append("OH - Blood Strike")
                                                    rotation_time.append(current_time)
                                                    rotation_status.append("Hit")
                                                    rotation_damage.append(atta_num)

                                    
                                    
                                    if attack_table_results == 0:
                                        atta_num = 0
                                        rune_cd_tracker[castable] = rune_cd(haste_rune_cd_miss, current_time)
                                        rotation.append("Blood Strike")
                                        rotation_time.append(current_time)
                                        rotation_status.append("Miss")
                                        rotation_damage.append(atta_num)
                                        current_time = current_time + gcd
                                        used_gcd = True
                                        continue
                                    elif attack_table_results == 1:
                                        atta_num = 0
                                        rune_cd_tracker[castable] = rune_cd(haste_rune_cd_miss, current_time)
                                        rotation.append("Blood Strike")
                                        rotation_time.append(current_time)
                                        rotation_status.append("Dodge")
                                        rotation_damage.append(atta_num)
                                        current_time = current_time + gcd
                                        used_gcd = True
                                        continue
                                    elif attack_table_results == 5:
                                        #crit attack
                                        rune_cd_tracker[castable] = rune_cd(haste_rune_cd, current_time)
                                        atta_num = (((746 + (wep_roll * .4)) + (( 746 + (wep_roll * .4)) * (.125 * how_many_dots_on_target)) + (( 746 + (wep_roll * .4)) * (.125 * how_many_dots_on_target) * darkruned_battlegear_four_set )) - (((746 + (wep_roll * .4)) + (( 746 + (wep_roll * .4)) * (.125 * how_many_dots_on_target)) + (( 746 + (wep_roll * .4)) * (.125 * how_many_dots_on_target) * darkruned_battlegear_four_set )) * armor_red_amount))  * (var_crit_amount + (guile_of_gorefiend_points * .15))
                                        if dk_presence == 0:
                                            atta_num = atta_num + (atta_num * .15)
                                        if tundra_stalker_points != 0:
                                            if dots[0] > current_time:
                                                atta_num = atta_num + (atta_num * (tundra_stalker_points * .03))
                                        if blood_of_the_north_points != 0:
                                            if blood_of_the_north_points < 3:
                                                atta_num = atta_num + (atta_num * (blood_of_the_north_points * .03))
                                            elif blood_of_the_north_points == 3:
                                                atta_num = atta_num + (atta_num * .1)
                                        if t9_tank_two_set == True:
                                            atta_num = atta_num + (atta_num *.05)
                                        if rage_of_rivendale_points != 0:
                                            if dots[1] > current_time:
                                                atta_num += atta_num * ((rage_of_rivendale_points * 2) / 100)
                                        if blood_strikes_points != 0:
                                            atta_num = atta_num + ((blood_strikes_points * 5) / 100)
                                        if might_of_mograine_points != 0:
                                            atta_num += atta_num * ((might_of_mograine_points * 15) / 100)
                                        if hysteria_active == True:
                                            atta_num = atta_num + (atta_num * .2)
                                        if tricksoftt_active == True:
                                            atta_num = atta_num + (atta_num * .15)
                                        atta_num = atta_num + (atta_num * increased_physical_damage) + (atta_num * increased_all_damage)
                                        sum_bs_attacks += atta_num
                                        current_power = runic_power(10, current_power, max_runic)
                                        trinket_hit_crit_tracker = 2
                                        if blood_of_the_north_points != 0:
                                            if just_used_death_rune != True:
                                                proc_num = random.randint(0, 100)
                                                if blood_of_the_north_points < 3:
                                                    death_proc_chance = (blood_of_the_north_points * .3) * 100
                                                elif blood_of_the_north_points == 3:
                                                    death_proc_chance = 100
                                                if death_proc_chance >= proc_num:
                                                    death_castable = castable + death
                                                    rune_cd_tracker[death_castable] = rune_cd(haste_rune_cd, current_time)
                                                    rune_cd_tracker[castable] = 10000  
                                        if reaping_points != 0:
                                            if just_used_death_rune != True:
                                                proc_num = random.randint(0, 100)
                                                if reaping_points < 3:
                                                    death_proc_chance = (reaping_points * .3) * 100
                                                elif reaping_points == 3:
                                                    death_proc_chance = 100
                                                if death_proc_chance >= proc_num:
                                                    death_castable = castable + death
                                                    rune_cd_tracker[death_castable] = rune_cd(haste_rune_cd, current_time)
                                                    rune_cd_tracker[castable] = 10000 
                                        if sigil_of_haunted_dreams == True:
                                            if random.randint(0, 100) < 15:
                                                if sigil_of_haunted_dreams_buff == False:
                                                    sigil_of_haunted_dreams_buff = True
                                                    sigil_of_haunted_dreams_timer = current_time + 10  
                                                    total_crit = total_crit + ((173 / 45.8) / 100) 
                                        if t9_dps_two_set == True:
                                            if t9_bonus == False:
                                                if t9_cd_timer < current_time:
                                                    if (random.randint(0, 10000)/100) < 50:
                                                        t9_bonus = True
                                                        t9_cd_timer = current_time + 45
                                                        t9_active_timer = current_time + 15
                                                        bonus_loop_str += 180
                                                        rotation.append("T9 DPS 2p Bonus")
                                                        rotation_time.append(current_time)
                                                        rotation_damage.append(0)
                                                        rotation_status.append("Proc")
                                        if desolation_points != 0:
                                            if desolation_buff == False:
                                                increased_all_damage += (desolation_points / 100)
                                                desolation_buff_timer = current_time + 20
                                                rotation.append("Desolation")
                                                rotation_time.append(current_time)
                                                rotation_damage.append(0)
                                                rotation_status.append("Applied")
                                                desolation_buff = True
                                            else:
                                                desolation_buff_timer = current_time + 20
                                                rotation.append("Desolation")
                                                rotation_time.append(current_time)
                                                rotation_damage.append(0)
                                                rotation_status.append("Refresh")
                                        if sudden_doom_points != 0:  #Sudden Doom aka Free Death Coil
                                            if (random.randint(0, 10000)/100) < sudden_doom_points * 5:
                                                hit = spell_hit(spell_hit_total, increased_spell_hit, target_level)
                                                crit = spell_crit((total_crit + (darkruned_battlegear_two_set / 100)), spell_hit_total, increased_spell_hit, target_level, increased_spell_crit)
                                                if hit == True:
                                                    if crit == True:
                                                        atta_num = random.randint(443, 665)
                                                        atta_num = (atta_num + ((current_ap + (current_ap * ((impurity_points * 4) / 100))) * 0)) * var_crit_amount
                                                        if sigil_of_vengeful_heart == True:
                                                            atta_num + 380
                                                        if sigil_of_the_wild_buck == True:
                                                            atta_num += 80
                                                        if black_ice_points == 5:
                                                            atta_num = atta_num + (atta_num * .1)
                                                        elif black_ice_points == 4:
                                                            atta_num = atta_num + (atta_num * .08)
                                                        elif black_ice_points == 3:
                                                            atta_num = atta_num + (atta_num * .06)
                                                        elif black_ice_points == 2:
                                                            atta_num = atta_num + (atta_num * .04)
                                                        elif black_ice_points == 1:
                                                            atta_num = atta_num + (atta_num * .02)
                                                        if dk_presence == 0:
                                                            atta_num = atta_num + (atta_num * .15)
                                                        if tundra_stalker_points != 0:
                                                            if dots[0] > current_time:
                                                                atta_num = atta_num + (atta_num * (tundra_stalker_points * .03))
                                                        if glyph_death_coil == True:
                                                            atta_num += atta_num * .15
                                                        if rage_of_rivendale_points != 0:
                                                            if dots[1] > current_time:
                                                                atta_num += atta_num * ((rage_of_rivendale_points * 2) / 100)
                                                        if morbitity_points != 0:
                                                            atta_num += ((morbitity_points * 5) / 100)
                                                        if hysteria_active == True:
                                                            atta_num = atta_num + (atta_num * .2)
                                                        if tricksoftt_active == True:
                                                            atta_num = atta_num + (atta_num * .15)
                                                        atta_num = atta_num + (atta_num * increased_spell_damage) + (atta_num * increased_all_damage)
                                                        sudden_doom_damage += atta_num
                                                        if unholy_blight_points == 1:
                                                            unholy_blight_amount = atta_num / 10   
                                                            unholy_blight_timer = current_time + 10
                                                        if rune_of_cinderglacier_active == True:
                                                             rune_of_cinderglacier_damage = atta_num * .2
                                                             rune_of_cinderglacier_active_count += 1
                                                             rotation.append("Rune of Cinderglacier")
                                                             rotation_time.append(current_time)
                                                             rotation_status.append("Active")
                                                             rotation_damage.append(atta_num * .2)
                                                             if rune_of_cinderglacier_active_count == 2:
                                                                 rune_of_cinderglacier_active = False
                                                        rotation.append("Sudden Doom")
                                                        rotation_time.append(current_time)
                                                        rotation_status.append("Crit")
                                                        rotation_damage.append(atta_num)
                                                    else:
                                                        atta_num = random.randint(443, 665)
                                                        atta_num = (atta_num + ((current_ap + (current_ap * ((impurity_points * 4) / 100))) * 0))
                                                        if sigil_of_vengeful_heart == True:
                                                            atta_num + 380
                                                        if sigil_of_the_wild_buck == True:
                                                            atta_num += 80
                                                        if black_ice_points == 5:
                                                            atta_num = atta_num + (atta_num * .1)
                                                        elif black_ice_points == 4:
                                                            atta_num = atta_num + (atta_num * .08)
                                                        elif black_ice_points == 3:
                                                            atta_num = atta_num + (atta_num * .06)
                                                        elif black_ice_points == 2:
                                                            atta_num = atta_num + (atta_num * .04)
                                                        elif black_ice_points == 1:
                                                            atta_num = atta_num + (atta_num * .02)
                                                        if dk_presence == 0:
                                                            atta_num = atta_num + (atta_num * .15)
                                                        if tundra_stalker_points != 0:
                                                            if dots[0] > current_time:
                                                                atta_num = atta_num + (atta_num * (tundra_stalker_points * .03))
                                                        if glyph_death_coil == True:
                                                            atta_num += atta_num * .15
                                                        if rage_of_rivendale_points != 0:
                                                            if dots[1] > current_time:
                                                                atta_num += atta_num * ((rage_of_rivendale_points * 2) / 100)
                                                        if morbitity_points != 0:
                                                            atta_num += ((morbitity_points * 5) / 100)
                                                        if hysteria_active == True:
                                                            atta_num = atta_num + (atta_num * .2)
                                                        if tricksoftt_active == True:
                                                            atta_num = atta_num + (atta_num * .15)
                                                        atta_num = atta_num + (atta_num * increased_spell_damage) + (atta_num * increased_all_damage)
                                                        sudden_doom_damage += atta_num
                                                        if unholy_blight_points == 1:
                                                            unholy_blight_amount = atta_num / 10 
                                                            unholy_blight_timer = current_time + 10
                                                        if rune_of_cinderglacier_active == True:
                                                             rune_of_cinderglacier_damage = atta_num * .2
                                                             rune_of_cinderglacier_active_count += 1
                                                             rotation.append("Rune of Cinderglacier")
                                                             rotation_time.append(current_time)
                                                             rotation_status.append("Active")
                                                             rotation_damage.append(atta_num * .2)
                                                             if rune_of_cinderglacier_active_count == 2:
                                                                 rune_of_cinderglacier_active = False
                                                        rotation.append("Sudden Doom")
                                                        rotation_time.append(current_time)
                                                        rotation_status.append("Hit")
                                                        rotation_damage.append(atta_num)
                                                if hit == False:
                                                    rotation.append("Sudden Doom")
                                                    rotation_time.append(current_time)
                                                    rotation_status.append("Miss")
                                                    rotation_damage.append(0)
                                        rotation.append("Blood Strike")
                                        rotation_time.append(current_time)
                                        rotation_status.append("Crit")
                                        rotation_damage.append(atta_num)
                                        current_time += gcd
                                        used_gcd = True
                                        # print("Blood Strike Crit - " + str(atta_num))
                                        continue
                                    elif attack_table_results == 7:
                                        #normal attack
                                        rune_cd_tracker[castable] = rune_cd(haste_rune_cd, current_time)
                                        atta_num = ((746 + (wep_roll * .4)) + (( 746 + (wep_roll * .4)) * (.125 * how_many_dots_on_target)) + (( 746 + (wep_roll * .4)) * (.125 * how_many_dots_on_target) * darkruned_battlegear_four_set )) - (((746 + (wep_roll * .4)) + (( 746 + (wep_roll * .4)) * (.125 * how_many_dots_on_target)) + (( 746 + (wep_roll * .4)) * (.125 * how_many_dots_on_target) * darkruned_battlegear_four_set )) * armor_red_amount)
                                        if dk_presence == 0:
                                            atta_num = atta_num + (atta_num * .15)
                                        if tundra_stalker_points != 0:
                                            if dots[0] > current_time:
                                                atta_num = atta_num + (atta_num * (tundra_stalker_points * .03))
                                        if blood_of_the_north_points != 0:
                                            if blood_of_the_north_points < 3:
                                                atta_num = atta_num + (atta_num * (blood_of_the_north_points * .03))
                                            elif blood_of_the_north_points == 3:
                                                atta_num = atta_num + (atta_num * .1)
                                        if t9_tank_two_set == True:
                                            atta_num = atta_num + (atta_num *.05)
                                        if rage_of_rivendale_points != 0:
                                            if dots[1] > current_time:
                                                atta_num += atta_num * ((rage_of_rivendale_points * 2) / 100)
                                        if blood_strikes_points != 0:
                                            atta_num = atta_num + ((blood_strikes_points * 5) / 100)
                                        if hysteria_active == True:
                                            atta_num = atta_num + (atta_num * .2)
                                        if tricksoftt_active == True:
                                            atta_num = atta_num + (atta_num * .15)
                                        atta_num = atta_num + (atta_num * increased_physical_damage) + (atta_num * increased_all_damage)
                                        sum_bs_attacks += atta_num
                                        current_power = runic_power(10, current_power, max_runic)
                                        trinket_hit_crit_tracker = 1
                                        if blood_of_the_north_points != 0:
                                            if just_used_death_rune != True:
                                                proc_num = random.randint(0, 100)
                                                if blood_of_the_north_points < 3:
                                                    death_proc_chance = (blood_of_the_north_points * .3) * 100
                                                elif blood_of_the_north_points == 3:
                                                    death_proc_chance = 100
                                                if death_proc_chance >= proc_num:
                                                    death_castable = castable + death
                                                    rune_cd_tracker[death_castable] = rune_cd(haste_rune_cd, current_time)
                                                    rune_cd_tracker[castable] = 10000  
                                        if reaping_points != 0:
                                            if just_used_death_rune != True:
                                                proc_num = random.randint(0, 100)
                                                if reaping_points < 3:
                                                    death_proc_chance = (reaping_points * .3) * 100
                                                elif reaping_points == 3:
                                                    death_proc_chance = 100
                                                if death_proc_chance >= proc_num:
                                                    death_castable = castable + death
                                                    rune_cd_tracker[death_castable] = rune_cd(haste_rune_cd, current_time)
                                                    rune_cd_tracker[castable] = 10000 
                                        if sigil_of_haunted_dreams == True:
                                            if random.randint(0, 100) < 15:
                                                if sigil_of_haunted_dreams_buff == False:
                                                    sigil_of_haunted_dreams_buff = True
                                                    sigil_of_haunted_dreams_timer = current_time + 10  
                                                    total_crit = total_crit + ((173 / 45.8) / 100) 
                                        if t9_dps_two_set == True:
                                            if t9_bonus == False:
                                                if t9_cd_timer < current_time:
                                                    if (random.randint(0, 10000)/100) < 50:
                                                        t9_bonus = True
                                                        t9_cd_timer = current_time + 45
                                                        t9_active_timer = current_time + 15
                                                        bonus_loop_str += 180
                                                        rotation.append("T9 DPS 2p Bonus")
                                                        rotation_time.append(current_time)
                                                        rotation_damage.append(0)
                                                        rotation_status.append("Proc")
                                        if desolation_points != 0:
                                            if desolation_buff == False:
                                                increased_all_damage += (desolation_points / 100)
                                                desolation_buff_timer = current_time + 20
                                                rotation.append("Desolation")
                                                rotation_time.append(current_time)
                                                rotation_damage.append(0)
                                                rotation_status.append("Applied")
                                                desolation_buff = True
                                            else:
                                                desolation_buff_timer = current_time + 20
                                                rotation.append("Desolation")
                                                rotation_time.append(current_time)
                                                rotation_damage.append(0)
                                                rotation_status.append("Refresh")
                                        if sudden_doom_points != 0:  #Sudden Doom aka Free Death Coil
                                            if (random.randint(0, 10000)/100) < sudden_doom_points * 5:
                                                hit = spell_hit(spell_hit_total, increased_spell_hit, target_level)
                                                crit = spell_crit((total_crit + (darkruned_battlegear_two_set / 100)), spell_hit_total, increased_spell_hit, target_level, increased_spell_crit)
                                                if hit == True:
                                                    if crit == True:
                                                        atta_num = random.randint(443, 665)
                                                        atta_num = (atta_num + ((current_ap + (current_ap * ((impurity_points * 4) / 100))) * 0)) * var_crit_amount
                                                        if sigil_of_vengeful_heart == True:
                                                            atta_num + 380
                                                        if sigil_of_the_wild_buck == True:
                                                            atta_num += 80
                                                        if black_ice_points == 5:
                                                            atta_num = atta_num + (atta_num * .1)
                                                        elif black_ice_points == 4:
                                                            atta_num = atta_num + (atta_num * .08)
                                                        elif black_ice_points == 3:
                                                            atta_num = atta_num + (atta_num * .06)
                                                        elif black_ice_points == 2:
                                                            atta_num = atta_num + (atta_num * .04)
                                                        elif black_ice_points == 1:
                                                            atta_num = atta_num + (atta_num * .02)
                                                        if dk_presence == 0:
                                                            atta_num = atta_num + (atta_num * .15)
                                                        if tundra_stalker_points != 0:
                                                            if dots[0] > current_time:
                                                                atta_num = atta_num + (atta_num * (tundra_stalker_points * .03))
                                                        if glyph_death_coil == True:
                                                            atta_num += atta_num * .15
                                                        if rage_of_rivendale_points != 0:
                                                            if dots[1] > current_time:
                                                                atta_num += atta_num * ((rage_of_rivendale_points * 2) / 100)
                                                        if morbitity_points != 0:
                                                            atta_num += ((morbitity_points * 5) / 100)
                                                        if hysteria_active == True:
                                                            atta_num = atta_num + (atta_num * .2)
                                                        if tricksoftt_active == True:
                                                            atta_num = atta_num + (atta_num * .15)
                                                        atta_num = atta_num + (atta_num * increased_spell_damage) + (atta_num * increased_all_damage)
                                                        sudden_doom_damage += atta_num
                                                        if unholy_blight_points == 1:
                                                            unholy_blight_amount = atta_num / 10   
                                                            unholy_blight_timer = current_time + 10
                                                        if rune_of_cinderglacier_active == True:
                                                             rune_of_cinderglacier_damage = atta_num * .2
                                                             rune_of_cinderglacier_active_count += 1
                                                             rotation.append("Rune of Cinderglacier")
                                                             rotation_time.append(current_time)
                                                             rotation_status.append("Active")
                                                             rotation_damage.append(atta_num * .2)
                                                             if rune_of_cinderglacier_active_count == 2:
                                                                 rune_of_cinderglacier_active = False
                                                        rotation.append("Sudden Doom")
                                                        rotation_time.append(current_time)
                                                        rotation_status.append("Crit")
                                                        rotation_damage.append(atta_num)
                                                    else:
                                                        atta_num = random.randint(443, 665)
                                                        atta_num = (atta_num + ((current_ap + (current_ap * ((impurity_points * 4) / 100))) * 0))
                                                        if sigil_of_vengeful_heart == True:
                                                            atta_num + 380
                                                        if sigil_of_the_wild_buck == True:
                                                            atta_num += 80
                                                        if black_ice_points == 5:
                                                            atta_num = atta_num + (atta_num * .1)
                                                        elif black_ice_points == 4:
                                                            atta_num = atta_num + (atta_num * .08)
                                                        elif black_ice_points == 3:
                                                            atta_num = atta_num + (atta_num * .06)
                                                        elif black_ice_points == 2:
                                                            atta_num = atta_num + (atta_num * .04)
                                                        elif black_ice_points == 1:
                                                            atta_num = atta_num + (atta_num * .02)
                                                        if dk_presence == 0:
                                                            atta_num = atta_num + (atta_num * .15)
                                                        if tundra_stalker_points != 0:
                                                            if dots[0] > current_time:
                                                                atta_num = atta_num + (atta_num * (tundra_stalker_points * .03))
                                                        if glyph_death_coil == True:
                                                            atta_num += atta_num * .15
                                                        if rage_of_rivendale_points != 0:
                                                            if dots[1] > current_time:
                                                                atta_num += atta_num * ((rage_of_rivendale_points * 2) / 100)
                                                        if morbitity_points != 0:
                                                            atta_num += ((morbitity_points * 5) / 100)
                                                        if hysteria_active == True:
                                                            atta_num = atta_num + (atta_num * .2)
                                                        if tricksoftt_active == True:
                                                            atta_num = atta_num + (atta_num * .15)
                                                        atta_num = atta_num + (atta_num * increased_spell_damage) + (atta_num * increased_all_damage)
                                                        sudden_doom_damage += atta_num
                                                        if unholy_blight_points == 1:
                                                            unholy_blight_amount = atta_num / 10 
                                                            unholy_blight_timer = current_time + 10
                                                        if rune_of_cinderglacier_active == True:
                                                             rune_of_cinderglacier_damage = atta_num * .2
                                                             rune_of_cinderglacier_active_count += 1
                                                             rotation.append("Rune of Cinderglacier")
                                                             rotation_time.append(current_time)
                                                             rotation_status.append("Active")
                                                             rotation_damage.append(atta_num * .2)
                                                             if rune_of_cinderglacier_active_count == 2:
                                                                 rune_of_cinderglacier_active = False
                                                        rotation.append("Sudden Doom")
                                                        rotation_time.append(current_time)
                                                        rotation_status.append("Hit")
                                                        rotation_damage.append(atta_num)
                                                if hit == False:
                                                    rotation.append("Sudden Doom")
                                                    rotation_time.append(current_time)
                                                    rotation_status.append("Miss")
                                                    rotation_damage.append(0)
                                        rotation.append("Blood Strike")
                                        rotation_time.append(current_time)
                                        rotation_status.append("Hit")
                                        rotation_damage.append(atta_num)
                                        current_time += gcd
                                        used_gcd = True
                                        # print("Blood Strike - " + str(atta_num))
                                        continue
                    
                    if use_blood_strike_over_blood_boil == True and heart_strike_points == 1: #Use Heart Strike
                        if heart_strike_points == 1:
                            castable = all_rune_check(blood, current_time, rune_cd_tracker) #Heart Strike
                            use_death_rune = False
                            if castable == 3:   #Heart Strike
                                until_dot0 = dots[0]
                                until_dot1 = dots[1]
                                if pestilence_allow_reset == True:
                                    until_dot0 -= pestilence_reset_window
                                    until_dot1 -= pestilence_reset_window
                                castable_death = all_rune_check(death, current_time, rune_cd_tracker)
                                castable_death_f = all_rune_check(death_f, current_time, rune_cd_tracker)
                                castable_death_u = all_rune_check(death_u, current_time, rune_cd_tracker)
                                if castable_death != 3:
                                    if until_dot0 <= current_time + haste_rune_cd:
                                        if until_dot1 <= current_time + haste_rune_cd:
                                            use_death_rune = True
                                            just_used_death_rune = True
                                            castable = castable_death
                                elif castable_death_f != 3:
                                    if until_dot0 <= current_time + haste_rune_cd:
                                        if until_dot1 <= current_time + haste_rune_cd:
                                            use_death_rune = True
                                            just_used_death_rune = True
                                            castable = castable_death_f
                                elif castable_death_u != 3:
                                    if until_dot0 <= current_time + haste_rune_cd:
                                        if until_dot1 <= current_time + haste_rune_cd:
                                            use_death_rune = True
                                            just_used_death_rune = True
                                            castable = castable_death_u
                            if castable != 3:  
                                if castable == 0:
                                    castable_death = all_rune_check(death, current_time, rune_cd_tracker)
                                    castable_death_f = all_rune_check(death_f, current_time, rune_cd_tracker)
                                    castable_death_u = all_rune_check(death_u, current_time, rune_cd_tracker)
                                    until_dot0 = dots[0]
                                    until_dot1 = dots[1]
                                    if pestilence_allow_reset == True:
                                        until_dot0 -= pestilence_reset_window
                                        until_dot1 -= pestilence_reset_window
                                    if castable_death != 3:
                                        if until_dot0 <= current_time + haste_rune_cd:
                                            if until_dot1 <= current_time + haste_rune_cd:
                                                castable += 2
                                                skip_castable = 2
                                    elif castable_death_f != 3:
                                        if until_dot0 <= current_time + haste_rune_cd:
                                            if until_dot1 <= current_time + haste_rune_cd:
                                                castable += 2
                                                skip_castable = 2
                                    elif castable_death_u != 3:
                                        if until_dot0 <= current_time + haste_rune_cd:
                                            if until_dot1 <= current_time + haste_rune_cd:
                                                castable += 2
                                                skip_castable = 2
                                if castable == 1:
                                    castable_death = all_rune_check(death, current_time, rune_cd_tracker)
                                    castable_death_f = all_rune_check(death_f, current_time, rune_cd_tracker)
                                    castable_death_u = all_rune_check(death_u, current_time, rune_cd_tracker)
                                    until_dot0 = dots[0]
                                    until_dot1 = dots[1]
                                    if pestilence_allow_reset == True:
                                        until_dot0 -= pestilence_reset_window
                                        until_dot1 -= pestilence_reset_window
                                    if castable_death != 3:
                                        if until_dot0 <= current_time + haste_rune_cd:
                                            if until_dot1 <= current_time + haste_rune_cd:
                                                castable += 1
                                                skip_castable = 1
                                    elif castable_death_f != 3:
                                        if until_dot0 <= current_time + haste_rune_cd:
                                            if until_dot1 <= current_time + haste_rune_cd:
                                                castable += 1
                                                skip_castable = 1
                                    elif castable_death_u != 3:
                                        if until_dot0 <= current_time + haste_rune_cd:
                                            if until_dot1 <= current_time + haste_rune_cd:
                                                castable += 1
                                                skip_castable = 1  
                                if castable == 2: 
                                    castable = 0
                                    if skip_castable == 1:
                                        castable = 1
                                        skip_castable = 0
                                    if skip_castable == 2:
                                        castable = 0
                                        skip_castable = 0
                                    if use_death_rune == True:
                                        use_death_rune = False
                                        if castable_death != 3:
                                            rune_cd_tracker[castable] = 0
                                            if castable_death == 2:
                                                castable_death = 0
                                            rune_cd_tracker[castable_death + 6] = 10000
                                        elif castable_death_f != 3:
                                            castable += 2
                                            rune_cd_tracker[castable] = 0
                                            if castable_death_f == 2:
                                                castable_death_f = 0
                                            rune_cd_tracker[castable_death_f + 8] = 10000
                                        elif castable_death_u != 3:
                                            castable += 4
                                            rune_cd_tracker[castable] = 0
                                            if castable_death_u == 2:
                                                castable_death_u = 0
                                            rune_cd_tracker[castable_death_u + 10] = 10000
                                    else:
                                        use_death_rune = False
                                    if amount_of_targets > 1:
                                        attack_table_results = attack_table(1, tanking, H2, True, False, hit_from_gear, hit_from_other, target_level, all_expertise_dodge, all_expertise_parry, total_crit, (annihilation_talent_points / 100) + increased_phy_crit + ((subversion_points * 3) / 100))
                                        armor_red_amount = dam_reduc(current_armor, armor_penetration, target_level)
                                        wep_roll = weapon_roll(mh_input_lowend_weapon_damage,mh_input_topend_weapon_damage)
                                        wep_roll = wep_roll + (attack_damage_normalization * current_ap / 14)
                                        #Rune Hit
                                        haste_percentage = (total_haste_rating / 25.21) / 100 #Returns a result of 0 - 1 for 0% - 100%
                                        haste_rune_cd = rune_grade_timer(current_time, last_rune_change[castable], last_rune_change[castable+6])
                                        if improved_unholy_presence_points != 0:
                                            if dk_presence == 2:
                                                haste_rune_cd = haste_rune_cd - (haste_rune_cd * ((improved_unholy_presence_points * 5) / 100))
                                        if dk_presence != 2:
                                            gcd = input_gcd / (1 + haste_percentage)
                                            if gcd < 1:
                                                gcd = 1
                                        ##Rune Miss
                                        haste_rune_cd_miss = 1
                                        how_many_dots_on_target = 0
                                        if dots[0] > current_time:
                                            how_many_dots_on_target += 1
                                        if dots[1] > current_time:
                                            how_many_dots_on_target += 1
                                        if dots[2] > current_time:
                                            how_many_dots_on_target += 1
                                        if multiple_adds_timer < current_time:
                                            how_many_dots_on_target = 0
                                        if dancing_rune_weapon_points == 1:
                                            if dancing_rune_weapon_active == True:
                                                if attack_table_results == 0:
                                                    atta_num = 0
                                                    rotation.append("Dancing Rune Weapon")
                                                    rotation_time.append(current_time)
                                                    rotation_status.append("Miss")
                                                    rotation_damage.append(atta_num)
                                                elif attack_table_results == 1:
                                                    atta_num = 0
                                                    rotation.append("Dancing Rune Weapon")
                                                    rotation_time.append(current_time)
                                                    rotation_status.append("Dodge")
                                                    rotation_damage.append(atta_num)
                                                elif attack_table_results == 5:
                                                    atta_num = (((0 + (wep_roll * .25)) + (( 0 + (wep_roll * .25)) * (.1 * how_many_dots_on_target)) + (( 0 + (wep_roll * .25)) * (.1 * how_many_dots_on_target) * darkruned_battlegear_four_set)) - (((0 + (wep_roll * .25)) + (( 0 + (wep_roll * .25)) * (.1 * how_many_dots_on_target)) + (( 0 + (wep_roll * .25)) * (.1 * how_many_dots_on_target) * darkruned_battlegear_four_set)) * armor_red_amount))  * (var_crit_amount)
                                                    if dk_presence == 0:
                                                        atta_num = atta_num + (atta_num * .15)
                                                    if t9_tank_two_set == True:
                                                        atta_num = atta_num + (atta_num *.05)
                                                    if blood_strikes_points != 0:
                                                        atta_num = atta_num + ((blood_strikes_points * 15) / 100)
                                                    if might_of_mograine_points != 0:
                                                        atta_num += atta_num * ((might_of_mograine_points * 15) / 100)
                                                    if scourgelords_battlegear_two_set == True:
                                                        atta_num = atta_num + (atta_num * .07)
                                                    if hysteria_active == True:
                                                        atta_num = atta_num + (atta_num * .2)
                                                    if tricksoftt_active == True:
                                                        atta_num = atta_num + (atta_num * .15)
                                                    atta_num = atta_num + (atta_num * increased_physical_damage) + (atta_num * increased_all_damage)
                                                    atta_num = atta_num * dancing_rune_weapon_damage_multi
                                                    dancing_rune_weapon_damage += atta_num
                                                    rotation.append("Dancing Rune Weapon")
                                                    rotation_time.append(current_time)
                                                    rotation_status.append("Crit") 
                                                    rotation_damage.append(atta_num)
                                                    trinket_hit_crit_tracker = 2
                                                    if sigil_of_haunted_dreams == True:
                                                        if random.randint(0, 100) < 15:
                                                            if sigil_of_haunted_dreams_buff == False:
                                                                sigil_of_haunted_dreams_buff = True
                                                                sigil_of_haunted_dreams_timer = current_time + 10  
                                                                total_crit = total_crit + ((173 / 45.8) / 100) 
                                                    if t9_dps_two_set == True:
                                                        if t9_bonus == False:
                                                            if t9_cd_timer < current_time:
                                                                if (random.randint(0, 10000)/100) < 50:
                                                                    t9_bonus = True
                                                                    t9_cd_timer = current_time + 45
                                                                    t9_active_timer = current_time + 15
                                                                    bonus_loop_str += 180
                                                                    rotation.append("T9 DPS 2p Bonus")
                                                                    rotation_time.append(current_time)
                                                                    rotation_damage.append(0)
                                                                    rotation_status.append("Proc")
                                                    if sudden_doom_points != 0:  #Sudden Doom aka Free Death Coil
                                                        if (random.randint(0, 10000)/100) < sudden_doom_points * 5:
                                                            hit = spell_hit(spell_hit_total, increased_spell_hit, target_level)
                                                            crit = spell_crit((total_crit + (darkruned_battlegear_two_set / 100)), spell_hit_total, increased_spell_hit, target_level, increased_spell_crit)
                                                            if hit == True:
                                                                if crit == True:
                                                                    atta_num = random.randint(443, 665)
                                                                    atta_num = (atta_num + ((current_ap + (current_ap * ((impurity_points * 4) / 100))) * 0)) * var_crit_amount
                                                                    if sigil_of_vengeful_heart == True:
                                                                        atta_num + 380
                                                                    if sigil_of_the_wild_buck == True:
                                                                        atta_num += 80
                                                                    if black_ice_points == 5:
                                                                        atta_num = atta_num + (atta_num * .1)
                                                                    elif black_ice_points == 4:
                                                                        atta_num = atta_num + (atta_num * .08)
                                                                    elif black_ice_points == 3:
                                                                        atta_num = atta_num + (atta_num * .06)
                                                                    elif black_ice_points == 2:
                                                                        atta_num = atta_num + (atta_num * .04)
                                                                    elif black_ice_points == 1:
                                                                        atta_num = atta_num + (atta_num * .02)
                                                                    if dk_presence == 0:
                                                                        atta_num = atta_num + (atta_num * .15)
                                                                    if tundra_stalker_points != 0:
                                                                        if dots[0] > current_time:
                                                                            atta_num = atta_num + (atta_num * (tundra_stalker_points * .03))
                                                                    if glyph_death_coil == True:
                                                                        atta_num += atta_num * .15
                                                                    if rage_of_rivendale_points != 0:
                                                                        if dots[1] > current_time:
                                                                            atta_num += atta_num * ((rage_of_rivendale_points * 2) / 100)
                                                                    if morbitity_points != 0:
                                                                        atta_num += ((morbitity_points * 5) / 100)
                                                                    if hysteria_active == True:
                                                                        atta_num = atta_num + (atta_num * .2)
                                                                    if tricksoftt_active == True:
                                                                        atta_num = atta_num + (atta_num * .15)
                                                                    atta_num = atta_num + (atta_num * increased_spell_damage) + (atta_num * increased_all_damage)
                                                                    sudden_doom_damage += atta_num
                                                                    if unholy_blight_points == 1:
                                                                        unholy_blight_amount = atta_num / 10   
                                                                        unholy_blight_timer = current_time + 10
                                                                    if rune_of_cinderglacier_active == True:
                                                                         rune_of_cinderglacier_damage = atta_num * .2
                                                                         rune_of_cinderglacier_active_count += 1
                                                                         rotation.append("Rune of Cinderglacier")
                                                                         rotation_time.append(current_time)
                                                                         rotation_status.append("Active")
                                                                         rotation_damage.append(atta_num * .2)
                                                                         if rune_of_cinderglacier_active_count == 2:
                                                                             rune_of_cinderglacier_active = False
                                                                    rotation.append("Sudden Doom")
                                                                    rotation_time.append(current_time)
                                                                    rotation_status.append("Crit")
                                                                    rotation_damage.append(atta_num)
                                                                else:
                                                                    atta_num = random.randint(443, 665)
                                                                    atta_num = (atta_num + ((current_ap + (current_ap * ((impurity_points * 4) / 100))) * 0))
                                                                    if sigil_of_vengeful_heart == True:
                                                                        atta_num + 380
                                                                    if sigil_of_the_wild_buck == True:
                                                                        atta_num += 80
                                                                    if black_ice_points == 5:
                                                                        atta_num = atta_num + (atta_num * .1)
                                                                    elif black_ice_points == 4:
                                                                        atta_num = atta_num + (atta_num * .08)
                                                                    elif black_ice_points == 3:
                                                                        atta_num = atta_num + (atta_num * .06)
                                                                    elif black_ice_points == 2:
                                                                        atta_num = atta_num + (atta_num * .04)
                                                                    elif black_ice_points == 1:
                                                                        atta_num = atta_num + (atta_num * .02)
                                                                    if dk_presence == 0:
                                                                        atta_num = atta_num + (atta_num * .15)
                                                                    if tundra_stalker_points != 0:
                                                                        if dots[0] > current_time:
                                                                            atta_num = atta_num + (atta_num * (tundra_stalker_points * .03))
                                                                    if glyph_death_coil == True:
                                                                        atta_num += atta_num * .15
                                                                    if rage_of_rivendale_points != 0:
                                                                        if dots[1] > current_time:
                                                                            atta_num += atta_num * ((rage_of_rivendale_points * 2) / 100)
                                                                    if morbitity_points != 0:
                                                                        atta_num += ((morbitity_points * 5) / 100)
                                                                    if hysteria_active == True:
                                                                        atta_num = atta_num + (atta_num * .2)
                                                                    if tricksoftt_active == True:
                                                                        atta_num = atta_num + (atta_num * .15)
                                                                    atta_num = atta_num + (atta_num * increased_spell_damage) + (atta_num * increased_all_damage)
                                                                    sudden_doom_damage += atta_num
                                                                    if unholy_blight_points == 1:
                                                                        unholy_blight_amount = atta_num / 10 
                                                                        unholy_blight_timer = current_time + 10
                                                                    if rune_of_cinderglacier_active == True:
                                                                         rune_of_cinderglacier_damage = atta_num * .2
                                                                         rune_of_cinderglacier_active_count += 1
                                                                         rotation.append("Rune of Cinderglacier")
                                                                         rotation_time.append(current_time)
                                                                         rotation_status.append("Active")
                                                                         rotation_damage.append(atta_num * .2)
                                                                         if rune_of_cinderglacier_active_count == 2:
                                                                             rune_of_cinderglacier_active = False
                                                                    rotation.append("Sudden Doom")
                                                                    rotation_time.append(current_time)
                                                                    rotation_status.append("Hit")
                                                                    rotation_damage.append(atta_num)
                                                            if hit == False:
                                                                rotation.append("Sudden Doom")
                                                                rotation_time.append(current_time)
                                                                rotation_status.append("Miss")
                                                                rotation_damage.append(0)                                            
                                                elif attack_table_results == 7:
                                                    atta_num = (((0 + (wep_roll * .25)) + (( 0 + (wep_roll * .25)) * (.1 * how_many_dots_on_target)) + (( 0 + (wep_roll * .25)) * (.1 * how_many_dots_on_target) * darkruned_battlegear_four_set)) - (((0 + (wep_roll * .25)) + (( 0 + (wep_roll * .25)) * (.1 * how_many_dots_on_target)) + (( 0 + (wep_roll * .25)) * (.1 * how_many_dots_on_target) * darkruned_battlegear_four_set)) * armor_red_amount))
                                                    if dk_presence == 0:
                                                        atta_num = atta_num + (atta_num * .15)
                                                    if t9_tank_two_set == True:
                                                        atta_num = atta_num + (atta_num *.05)
                                                    if blood_strikes_points != 0:
                                                        atta_num = atta_num + ((blood_strikes_points * 15) / 100)
                                                    if might_of_mograine_points != 0:
                                                        atta_num += atta_num * ((might_of_mograine_points * 15) / 100)
                                                    if scourgelords_battlegear_two_set == True:
                                                        atta_num = atta_num + (atta_num * .07)
                                                    if hysteria_active == True:
                                                        atta_num = atta_num + (atta_num * .2)
                                                    if tricksoftt_active == True:
                                                        atta_num = atta_num + (atta_num * .15)
                                                    atta_num = atta_num + (atta_num * increased_physical_damage) + (atta_num * increased_all_damage)
                                                    atta_num = atta_num * dancing_rune_weapon_damage_multi
                                                    dancing_rune_weapon_damage += atta_num
                                                    rotation.append("Dancing Rune Weapon")
                                                    rotation_time.append(current_time)
                                                    rotation_status.append("Hit") 
                                                    rotation_damage.append(atta_num)
                                                    trinket_hit_crit_tracker = 1
                                                    if sigil_of_haunted_dreams == True:
                                                        if random.randint(0, 100) < 15:
                                                            if sigil_of_haunted_dreams_buff == False:
                                                                sigil_of_haunted_dreams_buff = True
                                                                sigil_of_haunted_dreams_timer = current_time + 10  
                                                                total_crit = total_crit + ((173 / 45.8) / 100) 
                                                    if t9_dps_two_set == True:
                                                        if t9_bonus == False:
                                                            if t9_cd_timer < current_time:
                                                                if (random.randint(0, 10000)/100) < 50:
                                                                    t9_bonus = True
                                                                    t9_cd_timer = current_time + 45
                                                                    t9_active_timer = current_time + 15
                                                                    bonus_loop_str += 180
                                                                    rotation.append("T9 DPS 2p Bonus")
                                                                    rotation_time.append(current_time)
                                                                    rotation_damage.append(0)
                                                                    rotation_status.append("Proc")
                                                    if sudden_doom_points != 0:  #Sudden Doom aka Free Death Coil
                                                        if (random.randint(0, 10000)/100) < sudden_doom_points * 5:
                                                            hit = spell_hit(spell_hit_total, increased_spell_hit, target_level)
                                                            crit = spell_crit((total_crit + (darkruned_battlegear_two_set / 100)), spell_hit_total, increased_spell_hit, target_level, increased_spell_crit)
                                                            if hit == True:
                                                                if crit == True:
                                                                    atta_num = random.randint(443, 665)
                                                                    atta_num = (atta_num + ((current_ap + (current_ap * ((impurity_points * 4) / 100))) * 0)) * var_crit_amount
                                                                    if sigil_of_vengeful_heart == True:
                                                                        atta_num + 380
                                                                    if sigil_of_the_wild_buck == True:
                                                                        atta_num += 80
                                                                    if black_ice_points == 5:
                                                                        atta_num = atta_num + (atta_num * .1)
                                                                    elif black_ice_points == 4:
                                                                        atta_num = atta_num + (atta_num * .08)
                                                                    elif black_ice_points == 3:
                                                                        atta_num = atta_num + (atta_num * .06)
                                                                    elif black_ice_points == 2:
                                                                        atta_num = atta_num + (atta_num * .04)
                                                                    elif black_ice_points == 1:
                                                                        atta_num = atta_num + (atta_num * .02)
                                                                    if dk_presence == 0:
                                                                        atta_num = atta_num + (atta_num * .15)
                                                                    if tundra_stalker_points != 0:
                                                                        if dots[0] > current_time:
                                                                            atta_num = atta_num + (atta_num * (tundra_stalker_points * .03))
                                                                    if glyph_death_coil == True:
                                                                        atta_num += atta_num * .15
                                                                    if rage_of_rivendale_points != 0:
                                                                        if dots[1] > current_time:
                                                                            atta_num += atta_num * ((rage_of_rivendale_points * 2) / 100)
                                                                    if morbitity_points != 0:
                                                                        atta_num += ((morbitity_points * 5) / 100)
                                                                    if hysteria_active == True:
                                                                        atta_num = atta_num + (atta_num * .2)
                                                                    if tricksoftt_active == True:
                                                                        atta_num = atta_num + (atta_num * .15)
                                                                    atta_num = atta_num + (atta_num * increased_spell_damage) + (atta_num * increased_all_damage)
                                                                    sudden_doom_damage += atta_num
                                                                    if unholy_blight_points == 1:
                                                                        unholy_blight_amount = atta_num / 10   
                                                                        unholy_blight_timer = current_time + 10
                                                                    if rune_of_cinderglacier_active == True:
                                                                         rune_of_cinderglacier_damage = atta_num * .2
                                                                         rune_of_cinderglacier_active_count += 1
                                                                         rotation.append("Rune of Cinderglacier")
                                                                         rotation_time.append(current_time)
                                                                         rotation_status.append("Active")
                                                                         rotation_damage.append(atta_num * .2)
                                                                         if rune_of_cinderglacier_active_count == 2:
                                                                             rune_of_cinderglacier_active = False
                                                                    rotation.append("Sudden Doom")
                                                                    rotation_time.append(current_time)
                                                                    rotation_status.append("Crit")
                                                                    rotation_damage.append(atta_num)
                                                                else:
                                                                    atta_num = random.randint(443, 665)
                                                                    atta_num = (atta_num + ((current_ap + (current_ap * ((impurity_points * 4) / 100))) * 0))
                                                                    if sigil_of_vengeful_heart == True:
                                                                        atta_num + 380
                                                                    if sigil_of_the_wild_buck == True:
                                                                        atta_num += 80
                                                                    if black_ice_points == 5:
                                                                        atta_num = atta_num + (atta_num * .1)
                                                                    elif black_ice_points == 4:
                                                                        atta_num = atta_num + (atta_num * .08)
                                                                    elif black_ice_points == 3:
                                                                        atta_num = atta_num + (atta_num * .06)
                                                                    elif black_ice_points == 2:
                                                                        atta_num = atta_num + (atta_num * .04)
                                                                    elif black_ice_points == 1:
                                                                        atta_num = atta_num + (atta_num * .02)
                                                                    if dk_presence == 0:
                                                                        atta_num = atta_num + (atta_num * .15)
                                                                    if tundra_stalker_points != 0:
                                                                        if dots[0] > current_time:
                                                                            atta_num = atta_num + (atta_num * (tundra_stalker_points * .03))
                                                                    if glyph_death_coil == True:
                                                                        atta_num += atta_num * .15
                                                                    if rage_of_rivendale_points != 0:
                                                                        if dots[1] > current_time:
                                                                            atta_num += atta_num * ((rage_of_rivendale_points * 2) / 100)
                                                                    if morbitity_points != 0:
                                                                        atta_num += ((morbitity_points * 5) / 100)
                                                                    if hysteria_active == True:
                                                                        atta_num = atta_num + (atta_num * .2)
                                                                    if tricksoftt_active == True:
                                                                        atta_num = atta_num + (atta_num * .15)
                                                                    atta_num = atta_num + (atta_num * increased_spell_damage) + (atta_num * increased_all_damage)
                                                                    sudden_doom_damage += atta_num
                                                                    if unholy_blight_points == 1:
                                                                        unholy_blight_amount = atta_num / 10 
                                                                        unholy_blight_timer = current_time + 10
                                                                    if rune_of_cinderglacier_active == True:
                                                                         rune_of_cinderglacier_damage = atta_num * .2
                                                                         rune_of_cinderglacier_active_count += 1
                                                                         rotation.append("Rune of Cinderglacier")
                                                                         rotation_time.append(current_time)
                                                                         rotation_status.append("Active")
                                                                         rotation_damage.append(atta_num * .2)
                                                                         if rune_of_cinderglacier_active_count == 2:
                                                                             rune_of_cinderglacier_active = False
                                                                    rotation.append("Sudden Doom")
                                                                    rotation_time.append(current_time)
                                                                    rotation_status.append("Hit")
                                                                    rotation_damage.append(atta_num)
                                                            if hit == False:
                                                                rotation.append("Sudden Doom")
                                                                rotation_time.append(current_time)
                                                                rotation_status.append("Miss")
                                                                rotation_damage.append(0)   
                                        if attack_table_results == 0:
                                            atta_num = 0
                                            rotation.append("Heart Strike - Second Target")
                                            rotation_time.append(current_time)
                                            rotation_status.append("Miss")
                                            rotation_damage.append(atta_num)
                                        elif attack_table_results == 1:
                                            atta_num = 0
                                            rotation.append("Heart Strike - Second Target")
                                            rotation_time.append(current_time)
                                            rotation_status.append("Dodge")
                                            rotation_damage.append(atta_num)
                                        elif attack_table_results == 5:
                                            #crit attack
                                            atta_num = (((0 + (wep_roll * .25)) + (( 0 + (wep_roll * .25)) * (.1 * how_many_dots_on_target)) + (( 0 + (wep_roll * .25)) * (.1 * how_many_dots_on_target) * darkruned_battlegear_four_set)) - (((0 + (wep_roll * .25)) + (( 0 + (wep_roll * .25)) * (.1 * how_many_dots_on_target)) + (( 0 + (wep_roll * .25)) * (.1 * how_many_dots_on_target) * darkruned_battlegear_four_set)) * armor_red_amount))  * (var_crit_amount)
                                            if dk_presence == 0:
                                                atta_num = atta_num + (atta_num * .15)
                                            if t9_tank_two_set == True:
                                                atta_num = atta_num + (atta_num *.05)
                                            if blood_strikes_points != 0:
                                                atta_num = atta_num + ((blood_strikes_points * 15) / 100)
                                            if might_of_mograine_points != 0:
                                                atta_num += atta_num * ((might_of_mograine_points * 15) / 100)
                                            if scourgelords_battlegear_two_set == True:
                                                atta_num = atta_num + (atta_num * .07)
                                            if hysteria_active == True:
                                                atta_num = atta_num + (atta_num * .2)
                                            if tricksoftt_active == True:
                                                atta_num = atta_num + (atta_num * .15)
                                            atta_num = atta_num + (atta_num * increased_physical_damage) + (atta_num * increased_all_damage)
                                            sum_heart_strike_attacks += atta_num
                                            trinket_hit_crit_tracker = 2
                                            if sigil_of_haunted_dreams == True:
                                                if random.randint(0, 100) < 15:
                                                    if sigil_of_haunted_dreams_buff == False:
                                                        sigil_of_haunted_dreams_buff = True
                                                        sigil_of_haunted_dreams_timer = current_time + 10  
                                                        total_crit = total_crit + ((173 / 45.8) / 100) 
                                            if t9_dps_two_set == True:
                                                if t9_bonus == False:
                                                    if t9_cd_timer < current_time:
                                                        if (random.randint(0, 10000)/100) < 50:
                                                            t9_bonus = True
                                                            t9_cd_timer = current_time + 45
                                                            t9_active_timer = current_time + 15
                                                            bonus_loop_str += 180
                                                            rotation.append("T9 DPS 2p Bonus")
                                                            rotation_time.append(current_time)
                                                            rotation_damage.append(0)
                                                            rotation_status.append("Proc")
                                            if sudden_doom_points != 0:  #Sudden Doom aka Free Death Coil
                                                if (random.randint(0, 10000)/100) < sudden_doom_points * 5:
                                                    hit = spell_hit(spell_hit_total, increased_spell_hit, target_level)
                                                    crit = spell_crit((total_crit + (darkruned_battlegear_two_set / 100)), spell_hit_total, increased_spell_hit, target_level, increased_spell_crit)
                                                    if hit == True:
                                                        if crit == True:
                                                            atta_num = random.randint(443, 665)
                                                            atta_num = (atta_num + ((current_ap + (current_ap * ((impurity_points * 4) / 100))) * 0)) * var_crit_amount
                                                            if sigil_of_vengeful_heart == True:
                                                                atta_num + 380
                                                            if sigil_of_the_wild_buck == True:
                                                                atta_num += 80
                                                            if black_ice_points == 5:
                                                                atta_num = atta_num + (atta_num * .1)
                                                            elif black_ice_points == 4:
                                                                atta_num = atta_num + (atta_num * .08)
                                                            elif black_ice_points == 3:
                                                                atta_num = atta_num + (atta_num * .06)
                                                            elif black_ice_points == 2:
                                                                atta_num = atta_num + (atta_num * .04)
                                                            elif black_ice_points == 1:
                                                                atta_num = atta_num + (atta_num * .02)
                                                            if dk_presence == 0:
                                                                atta_num = atta_num + (atta_num * .15)
                                                            if tundra_stalker_points != 0:
                                                                if dots[0] > current_time:
                                                                    atta_num = atta_num + (atta_num * (tundra_stalker_points * .03))
                                                            if glyph_death_coil == True:
                                                                atta_num += atta_num * .15
                                                            if rage_of_rivendale_points != 0:
                                                                if dots[1] > current_time:
                                                                    atta_num += atta_num * ((rage_of_rivendale_points * 2) / 100)
                                                            if morbitity_points != 0:
                                                                atta_num += ((morbitity_points * 5) / 100)
                                                            if hysteria_active == True:
                                                                atta_num = atta_num + (atta_num * .2)
                                                            if tricksoftt_active == True:
                                                                atta_num = atta_num + (atta_num * .15)
                                                            atta_num = atta_num + (atta_num * increased_spell_damage) + (atta_num * increased_all_damage)
                                                            sudden_doom_damage += atta_num
                                                            if unholy_blight_points == 1:
                                                                unholy_blight_amount = atta_num / 10   
                                                                unholy_blight_timer = current_time + 10
                                                            if rune_of_cinderglacier_active == True:
                                                                 rune_of_cinderglacier_damage = atta_num * .2
                                                                 rune_of_cinderglacier_active_count += 1
                                                                 rotation.append("Rune of Cinderglacier")
                                                                 rotation_time.append(current_time)
                                                                 rotation_status.append("Active")
                                                                 rotation_damage.append(atta_num * .2)
                                                                 if rune_of_cinderglacier_active_count == 2:
                                                                     rune_of_cinderglacier_active = False
                                                            rotation.append("Sudden Doom")
                                                            rotation_time.append(current_time)
                                                            rotation_status.append("Crit")
                                                            rotation_damage.append(atta_num)
                                                        else:
                                                            atta_num = random.randint(443, 665)
                                                            atta_num = (atta_num + ((current_ap + (current_ap * ((impurity_points * 4) / 100))) * 0))
                                                            if sigil_of_vengeful_heart == True:
                                                                atta_num + 380
                                                            if sigil_of_the_wild_buck == True:
                                                                atta_num += 80
                                                            if black_ice_points == 5:
                                                                atta_num = atta_num + (atta_num * .1)
                                                            elif black_ice_points == 4:
                                                                atta_num = atta_num + (atta_num * .08)
                                                            elif black_ice_points == 3:
                                                                atta_num = atta_num + (atta_num * .06)
                                                            elif black_ice_points == 2:
                                                                atta_num = atta_num + (atta_num * .04)
                                                            elif black_ice_points == 1:
                                                                atta_num = atta_num + (atta_num * .02)
                                                            if dk_presence == 0:
                                                                atta_num = atta_num + (atta_num * .15)
                                                            if tundra_stalker_points != 0:
                                                                if dots[0] > current_time:
                                                                    atta_num = atta_num + (atta_num * (tundra_stalker_points * .03))
                                                            if glyph_death_coil == True:
                                                                atta_num += atta_num * .15
                                                            if rage_of_rivendale_points != 0:
                                                                if dots[1] > current_time:
                                                                    atta_num += atta_num * ((rage_of_rivendale_points * 2) / 100)
                                                            if morbitity_points != 0:
                                                                atta_num += ((morbitity_points * 5) / 100)
                                                            if hysteria_active == True:
                                                                atta_num = atta_num + (atta_num * .2)
                                                            if tricksoftt_active == True:
                                                                atta_num = atta_num + (atta_num * .15)
                                                            atta_num = atta_num + (atta_num * increased_spell_damage) + (atta_num * increased_all_damage)
                                                            sudden_doom_damage += atta_num
                                                            if unholy_blight_points == 1:
                                                                unholy_blight_amount = atta_num / 10 
                                                                unholy_blight_timer = current_time + 10
                                                            if rune_of_cinderglacier_active == True:
                                                                 rune_of_cinderglacier_damage = atta_num * .2
                                                                 rune_of_cinderglacier_active_count += 1
                                                                 rotation.append("Rune of Cinderglacier")
                                                                 rotation_time.append(current_time)
                                                                 rotation_status.append("Active")
                                                                 rotation_damage.append(atta_num * .2)
                                                                 if rune_of_cinderglacier_active_count == 2:
                                                                     rune_of_cinderglacier_active = False
                                                            rotation.append("Sudden Doom")
                                                            rotation_time.append(current_time)
                                                            rotation_status.append("Hit")
                                                            rotation_damage.append(atta_num)
                                                    if hit == False:
                                                        rotation.append("Sudden Doom")
                                                        rotation_time.append(current_time)
                                                        rotation_status.append("Miss")
                                                        rotation_damage.append(0)
                                            rotation.append("Heart Strike - Second Target")
                                            rotation_time.append(current_time)
                                            rotation_status.append("Crit")
                                            rotation_damage.append(atta_num)
                                        elif attack_table_results == 7:
                                            #normal attack
                                            atta_num = (((0 + (wep_roll * .25)) + (( 0 + (wep_roll * .25)) * (.1 * how_many_dots_on_target)) + (( 0 + (wep_roll * .25)) * (.1 * how_many_dots_on_target) * darkruned_battlegear_four_set)) - (((0 + (wep_roll * .25)) + (( 0 + (wep_roll * .25)) * (.1 * how_many_dots_on_target)) + (( 0 + (wep_roll * .25)) * (.1 * how_many_dots_on_target) * darkruned_battlegear_four_set)) * armor_red_amount))
                                            if dk_presence == 0:
                                                atta_num = atta_num + (atta_num * .15)
                                            if t9_tank_two_set == True:
                                                atta_num = atta_num + (atta_num *.05)
                                            if blood_strikes_points != 0:
                                                atta_num = atta_num + ((blood_strikes_points * 15) / 100)
                                            if might_of_mograine_points != 0:
                                                atta_num += atta_num * ((might_of_mograine_points * 15) / 100)
                                            if scourgelords_battlegear_two_set == True:
                                                atta_num = atta_num + (atta_num * .07)
                                            if hysteria_active == True:
                                                atta_num = atta_num + (atta_num * .2)
                                            if tricksoftt_active == True:
                                                atta_num = atta_num + (atta_num * .15)
                                            atta_num = atta_num + (atta_num * increased_physical_damage) + (atta_num * increased_all_damage)
                                            sum_heart_strike_attacks += atta_num
                                            trinket_hit_crit_tracker = 1
                                            if sigil_of_haunted_dreams == True:
                                                if random.randint(0, 100) < 15:
                                                    if sigil_of_haunted_dreams_buff == False:
                                                        sigil_of_haunted_dreams_buff = True
                                                        sigil_of_haunted_dreams_timer = current_time + 10  
                                                        total_crit = total_crit + ((173 / 45.8) / 100) 
                                            if t9_dps_two_set == True:
                                                if t9_bonus == False:
                                                    if t9_cd_timer < current_time:
                                                        if (random.randint(0, 10000)/100) < 50:
                                                            t9_bonus = True
                                                            t9_cd_timer = current_time + 45
                                                            t9_active_timer = current_time + 15
                                                            bonus_loop_str += 180
                                                            rotation.append("T9 DPS 2p Bonus")
                                                            rotation_time.append(current_time)
                                                            rotation_damage.append(0)
                                                            rotation_status.append("Proc")
                                            if sudden_doom_points != 0:  #Sudden Doom aka Free Death Coil
                                                if (random.randint(0, 10000)/100) < sudden_doom_points * 5:
                                                    hit = spell_hit(spell_hit_total, increased_spell_hit, target_level)
                                                    crit = spell_crit((total_crit + (darkruned_battlegear_two_set / 100)), spell_hit_total, increased_spell_hit, target_level, increased_spell_crit)
                                                    if hit == True:
                                                        if crit == True:
                                                            atta_num = random.randint(443, 665)
                                                            atta_num = (atta_num + ((current_ap + (current_ap * ((impurity_points * 4) / 100))) * 0)) * var_crit_amount
                                                            if sigil_of_vengeful_heart == True:
                                                                atta_num + 380
                                                            if sigil_of_the_wild_buck == True:
                                                                atta_num += 80
                                                            if black_ice_points == 5:
                                                                atta_num = atta_num + (atta_num * .1)
                                                            elif black_ice_points == 4:
                                                                atta_num = atta_num + (atta_num * .08)
                                                            elif black_ice_points == 3:
                                                                atta_num = atta_num + (atta_num * .06)
                                                            elif black_ice_points == 2:
                                                                atta_num = atta_num + (atta_num * .04)
                                                            elif black_ice_points == 1:
                                                                atta_num = atta_num + (atta_num * .02)
                                                            if dk_presence == 0:
                                                                atta_num = atta_num + (atta_num * .15)
                                                            if tundra_stalker_points != 0:
                                                                if dots[0] > current_time:
                                                                    atta_num = atta_num + (atta_num * (tundra_stalker_points * .03))
                                                            if glyph_death_coil == True:
                                                                atta_num += atta_num * .15
                                                            if rage_of_rivendale_points != 0:
                                                                if dots[1] > current_time:
                                                                    atta_num += atta_num * ((rage_of_rivendale_points * 2) / 100)
                                                            if morbitity_points != 0:
                                                                atta_num += ((morbitity_points * 5) / 100)
                                                            if hysteria_active == True:
                                                                atta_num = atta_num + (atta_num * .2)
                                                            if tricksoftt_active == True:
                                                                atta_num = atta_num + (atta_num * .15)
                                                            atta_num = atta_num + (atta_num * increased_spell_damage) + (atta_num * increased_all_damage)
                                                            sudden_doom_damage += atta_num
                                                            if unholy_blight_points == 1:
                                                                unholy_blight_amount = atta_num / 10   
                                                                unholy_blight_timer = current_time + 10
                                                            if rune_of_cinderglacier_active == True:
                                                                 rune_of_cinderglacier_damage = atta_num * .2
                                                                 rune_of_cinderglacier_active_count += 1
                                                                 rotation.append("Rune of Cinderglacier")
                                                                 rotation_time.append(current_time)
                                                                 rotation_status.append("Active")
                                                                 rotation_damage.append(atta_num * .2)
                                                                 if rune_of_cinderglacier_active_count == 2:
                                                                     rune_of_cinderglacier_active = False
                                                            rotation.append("Sudden Doom")
                                                            rotation_time.append(current_time)
                                                            rotation_status.append("Crit")
                                                            rotation_damage.append(atta_num)
                                                        else:
                                                            atta_num = random.randint(443, 665)
                                                            atta_num = (atta_num + ((current_ap + (current_ap * ((impurity_points * 4) / 100))) * 0))
                                                            if sigil_of_vengeful_heart == True:
                                                                atta_num + 380
                                                            if sigil_of_the_wild_buck == True:
                                                                atta_num += 80
                                                            if black_ice_points == 5:
                                                                atta_num = atta_num + (atta_num * .1)
                                                            elif black_ice_points == 4:
                                                                atta_num = atta_num + (atta_num * .08)
                                                            elif black_ice_points == 3:
                                                                atta_num = atta_num + (atta_num * .06)
                                                            elif black_ice_points == 2:
                                                                atta_num = atta_num + (atta_num * .04)
                                                            elif black_ice_points == 1:
                                                                atta_num = atta_num + (atta_num * .02)
                                                            if dk_presence == 0:
                                                                atta_num = atta_num + (atta_num * .15)
                                                            if tundra_stalker_points != 0:
                                                                if dots[0] > current_time:
                                                                    atta_num = atta_num + (atta_num * (tundra_stalker_points * .03))
                                                            if glyph_death_coil == True:
                                                                atta_num += atta_num * .15
                                                            if rage_of_rivendale_points != 0:
                                                                if dots[1] > current_time:
                                                                    atta_num += atta_num * ((rage_of_rivendale_points * 2) / 100)
                                                            if morbitity_points != 0:
                                                                atta_num += ((morbitity_points * 5) / 100)
                                                            if hysteria_active == True:
                                                                atta_num = atta_num + (atta_num * .2)
                                                            if tricksoftt_active == True:
                                                                atta_num = atta_num + (atta_num * .15)
                                                            atta_num = atta_num + (atta_num * increased_spell_damage) + (atta_num * increased_all_damage)
                                                            sudden_doom_damage += atta_num
                                                            if unholy_blight_points == 1:
                                                                unholy_blight_amount = atta_num / 10 
                                                                unholy_blight_timer = current_time + 10
                                                            if rune_of_cinderglacier_active == True:
                                                                 rune_of_cinderglacier_damage = atta_num * .2
                                                                 rune_of_cinderglacier_active_count += 1
                                                                 rotation.append("Rune of Cinderglacier")
                                                                 rotation_time.append(current_time)
                                                                 rotation_status.append("Active")
                                                                 rotation_damage.append(atta_num * .2)
                                                                 if rune_of_cinderglacier_active_count == 2:
                                                                     rune_of_cinderglacier_active = False
                                                            rotation.append("Sudden Doom")
                                                            rotation_time.append(current_time)
                                                            rotation_status.append("Hit")
                                                            rotation_damage.append(atta_num)
                                                    if hit == False:
                                                        rotation.append("Sudden Doom")
                                                        rotation_time.append(current_time)
                                                        rotation_status.append("Miss")
                                                        rotation_damage.append(0)
                                            rotation.append("Heart Strike - Second Target")
                                            rotation_time.append(current_time)
                                            rotation_status.append("Hit")
                                            rotation_damage.append(atta_num)
                                    attack_table_results = attack_table(1, tanking, H2, True, False, hit_from_gear, hit_from_other, target_level, all_expertise_dodge, all_expertise_parry, total_crit, (annihilation_talent_points / 100) + increased_phy_crit + ((subversion_points * 3) / 100))
                                    armor_red_amount = dam_reduc(current_armor, armor_penetration, target_level)
                                    wep_roll = weapon_roll(mh_input_lowend_weapon_damage,mh_input_topend_weapon_damage)
                                    wep_roll = wep_roll + (attack_damage_normalization * current_ap / 14)
                                    #Rune Hit
                                    haste_percentage = (total_haste_rating / 25.21) / 100 #Returns a result of 0 - 1 for 0% - 100%
                                    haste_rune_cd = rune_grade_timer(current_time, last_rune_change[castable], last_rune_change[castable+6])
                                    if improved_unholy_presence_points != 0:
                                        if dk_presence == 2:
                                            haste_rune_cd = haste_rune_cd - (haste_rune_cd * ((improved_unholy_presence_points * 5) / 100))
                                    if dk_presence != 2:
                                        gcd = input_gcd / (1 + haste_percentage)
                                        if gcd < 1:
                                            gcd = 1
                                    ##Rune Miss
                                    haste_rune_cd_miss = 1
                                    how_many_dots_on_target = 0
                                    if dots[0] > current_time:
                                        how_many_dots_on_target += 1
                                    if dots[1] > current_time:
                                        how_many_dots_on_target += 1
                                    if dots[2] > current_time:
                                        how_many_dots_on_target += 1
                                    if dancing_rune_weapon_points == 1:
                                        if dancing_rune_weapon_active == True:
                                            if attack_table_results == 0:
                                                atta_num = 0
                                                rotation.append("Dancing Rune Weapon")
                                                rotation_time.append(current_time)
                                                rotation_status.append("Miss")
                                                rotation_damage.append(atta_num)
                                            elif attack_table_results == 1:
                                                atta_num = 0
                                                rotation.append("Dancing Rune Weapon")
                                                rotation_time.append(current_time)
                                                rotation_status.append("Dodge")
                                                rotation_damage.append(atta_num)
                                            elif attack_table_results == 5:
                                                atta_num = (((0 + (wep_roll * .5)) + (( 0 + (wep_roll * .5)) * (.1 * how_many_dots_on_target)) + (( 0 + (wep_roll * .5)) * (.1 * how_many_dots_on_target) * darkruned_battlegear_four_set)) - (((0 + (wep_roll * .5)) + (( 0 + (wep_roll * .5)) * (.1 * how_many_dots_on_target)) + (( 0 + (wep_roll * .5)) * (.1 * how_many_dots_on_target) * darkruned_battlegear_four_set)) * armor_red_amount))  * (var_crit_amount)
                                                if dk_presence == 0:
                                                    atta_num = atta_num + (atta_num * .15)
                                                if t9_tank_two_set == True:
                                                    atta_num = atta_num + (atta_num *.05)
                                                if blood_strikes_points != 0:
                                                    atta_num = atta_num + ((blood_strikes_points * 15) / 100)
                                                if might_of_mograine_points != 0:
                                                    atta_num += atta_num * ((might_of_mograine_points * 15) / 100)
                                                if scourgelords_battlegear_two_set == True:
                                                    atta_num = atta_num + (atta_num * .07)
                                                if hysteria_active == True:
                                                    atta_num = atta_num + (atta_num * .2)
                                                if tricksoftt_active == True:
                                                    atta_num = atta_num + (atta_num * .15)
                                                atta_num = atta_num + (atta_num * increased_physical_damage) + (atta_num * increased_all_damage)
                                                atta_num = atta_num * dancing_rune_weapon_damage_multi
                                                dancing_rune_weapon_damage += atta_num
                                                rotation.append("Dancing Rune Weapon")
                                                rotation_time.append(current_time)
                                                rotation_status.append("Crit") 
                                                rotation_damage.append(atta_num)
                                                trinket_hit_crit_tracker = 2
                                                if sigil_of_haunted_dreams == True:
                                                    if random.randint(0, 100) < 15:
                                                        if sigil_of_haunted_dreams_buff == False:
                                                            sigil_of_haunted_dreams_buff = True
                                                            sigil_of_haunted_dreams_timer = current_time + 10  
                                                            total_crit = total_crit + ((173 / 45.8) / 100) 
                                                if t9_dps_two_set == True:
                                                    if t9_bonus == False:
                                                        if t9_cd_timer < current_time:
                                                            if (random.randint(0, 10000)/100) < 50:
                                                                t9_bonus = True
                                                                t9_cd_timer = current_time + 45
                                                                t9_active_timer = current_time + 15
                                                                bonus_loop_str += 180
                                                                rotation.append("T9 DPS 2p Bonus")
                                                                rotation_time.append(current_time)
                                                                rotation_damage.append(0)
                                                                rotation_status.append("Proc")
                                                if sudden_doom_points != 0:  #Sudden Doom aka Free Death Coil
                                                    if (random.randint(0, 10000)/100) < sudden_doom_points * 5:
                                                        hit = spell_hit(spell_hit_total, increased_spell_hit, target_level)
                                                        crit = spell_crit((total_crit + (darkruned_battlegear_two_set / 100)), spell_hit_total, increased_spell_hit, target_level, increased_spell_crit)
                                                        if hit == True:
                                                            if crit == True:
                                                                atta_num = random.randint(443, 665)
                                                                atta_num = (atta_num + ((current_ap + (current_ap * ((impurity_points * 4) / 100))) * 0)) * var_crit_amount
                                                                if sigil_of_vengeful_heart == True:
                                                                    atta_num + 380
                                                                if sigil_of_the_wild_buck == True:
                                                                    atta_num += 80
                                                                if black_ice_points == 5:
                                                                    atta_num = atta_num + (atta_num * .1)
                                                                elif black_ice_points == 4:
                                                                    atta_num = atta_num + (atta_num * .08)
                                                                elif black_ice_points == 3:
                                                                    atta_num = atta_num + (atta_num * .06)
                                                                elif black_ice_points == 2:
                                                                    atta_num = atta_num + (atta_num * .04)
                                                                elif black_ice_points == 1:
                                                                    atta_num = atta_num + (atta_num * .02)
                                                                if dk_presence == 0:
                                                                    atta_num = atta_num + (atta_num * .15)
                                                                if tundra_stalker_points != 0:
                                                                    if dots[0] > current_time:
                                                                        atta_num = atta_num + (atta_num * (tundra_stalker_points * .03))
                                                                if glyph_death_coil == True:
                                                                    atta_num += atta_num * .15
                                                                if rage_of_rivendale_points != 0:
                                                                    if dots[1] > current_time:
                                                                        atta_num += atta_num * ((rage_of_rivendale_points * 2) / 100)
                                                                if morbitity_points != 0:
                                                                    atta_num += ((morbitity_points * 5) / 100)
                                                                if hysteria_active == True:
                                                                    atta_num = atta_num + (atta_num * .2)
                                                                if tricksoftt_active == True:
                                                                    atta_num = atta_num + (atta_num * .15)
                                                                atta_num = atta_num + (atta_num * increased_spell_damage) + (atta_num * increased_all_damage)
                                                                sudden_doom_damage += atta_num
                                                                if unholy_blight_points == 1:
                                                                    unholy_blight_amount = atta_num / 10   
                                                                    unholy_blight_timer = current_time + 10
                                                                if rune_of_cinderglacier_active == True:
                                                                     rune_of_cinderglacier_damage = atta_num * .2
                                                                     rune_of_cinderglacier_active_count += 1
                                                                     rotation.append("Rune of Cinderglacier")
                                                                     rotation_time.append(current_time)
                                                                     rotation_status.append("Active")
                                                                     rotation_damage.append(atta_num * .2)
                                                                     if rune_of_cinderglacier_active_count == 2:
                                                                         rune_of_cinderglacier_active = False
                                                                rotation.append("Sudden Doom")
                                                                rotation_time.append(current_time)
                                                                rotation_status.append("Crit")
                                                                rotation_damage.append(atta_num)
                                                            else:
                                                                atta_num = random.randint(443, 665)
                                                                atta_num = (atta_num + ((current_ap + (current_ap * ((impurity_points * 4) / 100))) * 0))
                                                                if sigil_of_vengeful_heart == True:
                                                                    atta_num + 380
                                                                if sigil_of_the_wild_buck == True:
                                                                    atta_num += 80
                                                                if black_ice_points == 5:
                                                                    atta_num = atta_num + (atta_num * .1)
                                                                elif black_ice_points == 4:
                                                                    atta_num = atta_num + (atta_num * .08)
                                                                elif black_ice_points == 3:
                                                                    atta_num = atta_num + (atta_num * .06)
                                                                elif black_ice_points == 2:
                                                                    atta_num = atta_num + (atta_num * .04)
                                                                elif black_ice_points == 1:
                                                                    atta_num = atta_num + (atta_num * .02)
                                                                if dk_presence == 0:
                                                                    atta_num = atta_num + (atta_num * .15)
                                                                if tundra_stalker_points != 0:
                                                                    if dots[0] > current_time:
                                                                        atta_num = atta_num + (atta_num * (tundra_stalker_points * .03))
                                                                if glyph_death_coil == True:
                                                                    atta_num += atta_num * .15
                                                                if rage_of_rivendale_points != 0:
                                                                    if dots[1] > current_time:
                                                                        atta_num += atta_num * ((rage_of_rivendale_points * 2) / 100)
                                                                if morbitity_points != 0:
                                                                    atta_num += ((morbitity_points * 5) / 100)
                                                                if hysteria_active == True:
                                                                    atta_num = atta_num + (atta_num * .2)
                                                                if tricksoftt_active == True:
                                                                    atta_num = atta_num + (atta_num * .15)
                                                                atta_num = atta_num + (atta_num * increased_spell_damage) + (atta_num * increased_all_damage)
                                                                sudden_doom_damage += atta_num
                                                                if unholy_blight_points == 1:
                                                                    unholy_blight_amount = atta_num / 10 
                                                                    unholy_blight_timer = current_time + 10
                                                                if rune_of_cinderglacier_active == True:
                                                                     rune_of_cinderglacier_damage = atta_num * .2
                                                                     rune_of_cinderglacier_active_count += 1
                                                                     rotation.append("Rune of Cinderglacier")
                                                                     rotation_time.append(current_time)
                                                                     rotation_status.append("Active")
                                                                     rotation_damage.append(atta_num * .2)
                                                                     if rune_of_cinderglacier_active_count == 2:
                                                                         rune_of_cinderglacier_active = False
                                                                rotation.append("Sudden Doom")
                                                                rotation_time.append(current_time)
                                                                rotation_status.append("Hit")
                                                                rotation_damage.append(atta_num)
                                                        if hit == False:
                                                            rotation.append("Sudden Doom")
                                                            rotation_time.append(current_time)
                                                            rotation_status.append("Miss")
                                                            rotation_damage.append(0)                                            
                                            elif attack_table_results == 7:
                                                atta_num = (((0 + (wep_roll * .5)) + (( 0 + (wep_roll * .5)) * (.1 * how_many_dots_on_target)) + (( 0 + (wep_roll * .5)) * (.1 * how_many_dots_on_target) * darkruned_battlegear_four_set)) - (((0 + (wep_roll * .5)) + (( 0 + (wep_roll * .5)) * (.1 * how_many_dots_on_target)) + (( 0 + (wep_roll * .5)) * (.1 * how_many_dots_on_target) * darkruned_battlegear_four_set)) * armor_red_amount))
                                                if dk_presence == 0:
                                                    atta_num = atta_num + (atta_num * .15)
                                                if t9_tank_two_set == True:
                                                    atta_num = atta_num + (atta_num *.05)
                                                if blood_strikes_points != 0:
                                                    atta_num = atta_num + ((blood_strikes_points * 15) / 100)
                                                if might_of_mograine_points != 0:
                                                    atta_num += atta_num * ((might_of_mograine_points * 15) / 100)
                                                if scourgelords_battlegear_two_set == True:
                                                    atta_num = atta_num + (atta_num * .07)
                                                if hysteria_active == True:
                                                    atta_num = atta_num + (atta_num * .2)
                                                if tricksoftt_active == True:
                                                    atta_num = atta_num + (atta_num * .15)
                                                atta_num = atta_num + (atta_num * increased_physical_damage) + (atta_num * increased_all_damage)
                                                atta_num = atta_num * dancing_rune_weapon_damage_multi
                                                dancing_rune_weapon_damage += atta_num
                                                rotation.append("Dancing Rune Weapon")
                                                rotation_time.append(current_time)
                                                rotation_status.append("Hit") 
                                                rotation_damage.append(atta_num)
                                                trinket_hit_crit_tracker = 1
                                                if sigil_of_haunted_dreams == True:
                                                    if random.randint(0, 100) < 15:
                                                        if sigil_of_haunted_dreams_buff == False:
                                                            sigil_of_haunted_dreams_buff = True
                                                            sigil_of_haunted_dreams_timer = current_time + 10  
                                                            total_crit = total_crit + ((173 / 45.8) / 100) 
                                                if t9_dps_two_set == True:
                                                    if t9_bonus == False:
                                                        if t9_cd_timer < current_time:
                                                            if (random.randint(0, 10000)/100) < 50:
                                                                t9_bonus = True
                                                                t9_cd_timer = current_time + 45
                                                                t9_active_timer = current_time + 15
                                                                bonus_loop_str += 180
                                                                rotation.append("T9 DPS 2p Bonus")
                                                                rotation_time.append(current_time)
                                                                rotation_damage.append(0)
                                                                rotation_status.append("Proc")
                                                if sudden_doom_points != 0:  #Sudden Doom aka Free Death Coil
                                                    if (random.randint(0, 10000)/100) < sudden_doom_points * 5:
                                                        hit = spell_hit(spell_hit_total, increased_spell_hit, target_level)
                                                        crit = spell_crit((total_crit + (darkruned_battlegear_two_set / 100)), spell_hit_total, increased_spell_hit, target_level, increased_spell_crit)
                                                        if hit == True:
                                                            if crit == True:
                                                                atta_num = random.randint(443, 665)
                                                                atta_num = (atta_num + ((current_ap + (current_ap * ((impurity_points * 4) / 100))) * 0)) * var_crit_amount
                                                                if sigil_of_vengeful_heart == True:
                                                                    atta_num + 380
                                                                if sigil_of_the_wild_buck == True:
                                                                    atta_num += 80
                                                                if black_ice_points == 5:
                                                                    atta_num = atta_num + (atta_num * .1)
                                                                elif black_ice_points == 4:
                                                                    atta_num = atta_num + (atta_num * .08)
                                                                elif black_ice_points == 3:
                                                                    atta_num = atta_num + (atta_num * .06)
                                                                elif black_ice_points == 2:
                                                                    atta_num = atta_num + (atta_num * .04)
                                                                elif black_ice_points == 1:
                                                                    atta_num = atta_num + (atta_num * .02)
                                                                if dk_presence == 0:
                                                                    atta_num = atta_num + (atta_num * .15)
                                                                if tundra_stalker_points != 0:
                                                                    if dots[0] > current_time:
                                                                        atta_num = atta_num + (atta_num * (tundra_stalker_points * .03))
                                                                if glyph_death_coil == True:
                                                                    atta_num += atta_num * .15
                                                                if rage_of_rivendale_points != 0:
                                                                    if dots[1] > current_time:
                                                                        atta_num += atta_num * ((rage_of_rivendale_points * 2) / 100)
                                                                if morbitity_points != 0:
                                                                    atta_num += ((morbitity_points * 5) / 100)
                                                                if hysteria_active == True:
                                                                    atta_num = atta_num + (atta_num * .2)
                                                                if tricksoftt_active == True:
                                                                    atta_num = atta_num + (atta_num * .15)
                                                                atta_num = atta_num + (atta_num * increased_spell_damage) + (atta_num * increased_all_damage)
                                                                sudden_doom_damage += atta_num
                                                                if unholy_blight_points == 1:
                                                                    unholy_blight_amount = atta_num / 10   
                                                                    unholy_blight_timer = current_time + 10
                                                                if rune_of_cinderglacier_active == True:
                                                                     rune_of_cinderglacier_damage = atta_num * .2
                                                                     rune_of_cinderglacier_active_count += 1
                                                                     rotation.append("Rune of Cinderglacier")
                                                                     rotation_time.append(current_time)
                                                                     rotation_status.append("Active")
                                                                     rotation_damage.append(atta_num * .2)
                                                                     if rune_of_cinderglacier_active_count == 2:
                                                                         rune_of_cinderglacier_active = False
                                                                rotation.append("Sudden Doom")
                                                                rotation_time.append(current_time)
                                                                rotation_status.append("Crit")
                                                                rotation_damage.append(atta_num)
                                                            else:
                                                                atta_num = random.randint(443, 665)
                                                                atta_num = (atta_num + ((current_ap + (current_ap * ((impurity_points * 4) / 100))) * 0))
                                                                if sigil_of_vengeful_heart == True:
                                                                    atta_num + 380
                                                                if sigil_of_the_wild_buck == True:
                                                                    atta_num += 80
                                                                if black_ice_points == 5:
                                                                    atta_num = atta_num + (atta_num * .1)
                                                                elif black_ice_points == 4:
                                                                    atta_num = atta_num + (atta_num * .08)
                                                                elif black_ice_points == 3:
                                                                    atta_num = atta_num + (atta_num * .06)
                                                                elif black_ice_points == 2:
                                                                    atta_num = atta_num + (atta_num * .04)
                                                                elif black_ice_points == 1:
                                                                    atta_num = atta_num + (atta_num * .02)
                                                                if dk_presence == 0:
                                                                    atta_num = atta_num + (atta_num * .15)
                                                                if tundra_stalker_points != 0:
                                                                    if dots[0] > current_time:
                                                                        atta_num = atta_num + (atta_num * (tundra_stalker_points * .03))
                                                                if glyph_death_coil == True:
                                                                    atta_num += atta_num * .15
                                                                if rage_of_rivendale_points != 0:
                                                                    if dots[1] > current_time:
                                                                        atta_num += atta_num * ((rage_of_rivendale_points * 2) / 100)
                                                                if morbitity_points != 0:
                                                                    atta_num += ((morbitity_points * 5) / 100)
                                                                if hysteria_active == True:
                                                                    atta_num = atta_num + (atta_num * .2)
                                                                if tricksoftt_active == True:
                                                                    atta_num = atta_num + (atta_num * .15)
                                                                atta_num = atta_num + (atta_num * increased_spell_damage) + (atta_num * increased_all_damage)
                                                                sudden_doom_damage += atta_num
                                                                if unholy_blight_points == 1:
                                                                    unholy_blight_amount = atta_num / 10 
                                                                    unholy_blight_timer = current_time + 10
                                                                if rune_of_cinderglacier_active == True:
                                                                     rune_of_cinderglacier_damage = atta_num * .2
                                                                     rune_of_cinderglacier_active_count += 1
                                                                     rotation.append("Rune of Cinderglacier")
                                                                     rotation_time.append(current_time)
                                                                     rotation_status.append("Active")
                                                                     rotation_damage.append(atta_num * .2)
                                                                     if rune_of_cinderglacier_active_count == 2:
                                                                         rune_of_cinderglacier_active = False
                                                                rotation.append("Sudden Doom")
                                                                rotation_time.append(current_time)
                                                                rotation_status.append("Hit")
                                                                rotation_damage.append(atta_num)
                                                        if hit == False:
                                                            rotation.append("Sudden Doom")
                                                            rotation_time.append(current_time)
                                                            rotation_status.append("Miss")
                                                            rotation_damage.append(0)   
                                    if attack_table_results == 0:
                                        atta_num = 0
                                        rune_cd_tracker[castable] = rune_cd(haste_rune_cd_miss, current_time)
                                        rotation.append("Heart Strike")
                                        rotation_time.append(current_time)
                                        rotation_status.append("Miss")
                                        rotation_damage.append(atta_num)
                                        current_time = current_time + gcd
                                        used_gcd = True
                                        continue
                                    elif attack_table_results == 1:
                                        atta_num = 0
                                        rune_cd_tracker[castable] = rune_cd(haste_rune_cd_miss, current_time)
                                        rotation.append("Heart Strike")
                                        rotation_time.append(current_time)
                                        rotation_status.append("Dodge")
                                        rotation_damage.append(atta_num)
                                        current_time = current_time + gcd
                                        used_gcd = True
                                        continue
                                    elif attack_table_results == 5:
                                        #crit attack
                                        rune_cd_tracker[castable] = rune_cd(haste_rune_cd, current_time)
                                        atta_num = (((0 + (wep_roll * .5)) + (( 0 + (wep_roll * .5)) * (.1 * how_many_dots_on_target)) + (( 0 + (wep_roll * .5)) * (.1 * how_many_dots_on_target) * darkruned_battlegear_four_set)) - (((0 + (wep_roll * .5)) + (( 0 + (wep_roll * .5)) * (.1 * how_many_dots_on_target)) + (( 0 + (wep_roll * .5)) * (.1 * how_many_dots_on_target) * darkruned_battlegear_four_set)) * armor_red_amount))  * (var_crit_amount)
                                        if dk_presence == 0:
                                            atta_num = atta_num + (atta_num * .15)
                                        if t9_tank_two_set == True:
                                            atta_num = atta_num + (atta_num *.05)
                                        if blood_strikes_points != 0:
                                            atta_num = atta_num + ((blood_strikes_points * 15) / 100)
                                        if might_of_mograine_points != 0:
                                            atta_num += atta_num * ((might_of_mograine_points * 15) / 100)
                                        if scourgelords_battlegear_two_set == True:
                                            atta_num = atta_num + (atta_num * .07)
                                        if hysteria_active == True:
                                            atta_num = atta_num + (atta_num * .2)
                                        if tricksoftt_active == True:
                                            atta_num = atta_num + (atta_num * .15)
                                        atta_num = atta_num + (atta_num * increased_physical_damage) + (atta_num * increased_all_damage)
                                        sum_heart_strike_attacks += atta_num
                                        current_power = runic_power(10, current_power, max_runic)
                                        trinket_hit_crit_tracker = 2
                                        if sigil_of_haunted_dreams == True:
                                            if random.randint(0, 100) < 15:
                                                if sigil_of_haunted_dreams_buff == False:
                                                    sigil_of_haunted_dreams_buff = True
                                                    sigil_of_haunted_dreams_timer = current_time + 10  
                                                    total_crit = total_crit + ((173 / 45.8) / 100) 
                                        if t9_dps_two_set == True:
                                            if t9_bonus == False:
                                                if t9_cd_timer < current_time:
                                                    if (random.randint(0, 10000)/100) < 50:
                                                        t9_bonus = True
                                                        t9_cd_timer = current_time + 45
                                                        t9_active_timer = current_time + 15
                                                        bonus_loop_str += 180
                                                        rotation.append("T9 DPS 2p Bonus")
                                                        rotation_time.append(current_time)
                                                        rotation_damage.append(0)
                                                        rotation_status.append("Proc")
                                        if sudden_doom_points != 0:  #Sudden Doom aka Free Death Coil
                                            if (random.randint(0, 10000)/100) < sudden_doom_points * 5:
                                                hit = spell_hit(spell_hit_total, increased_spell_hit, target_level)
                                                crit = spell_crit((total_crit + (darkruned_battlegear_two_set / 100)), spell_hit_total, increased_spell_hit, target_level, increased_spell_crit)
                                                if hit == True:
                                                    if crit == True:
                                                        atta_num = random.randint(443, 665)
                                                        atta_num = (atta_num + ((current_ap + (current_ap * ((impurity_points * 4) / 100))) * 0)) * var_crit_amount
                                                        if sigil_of_vengeful_heart == True:
                                                            atta_num + 380
                                                        if sigil_of_the_wild_buck == True:
                                                            atta_num += 80
                                                        if black_ice_points == 5:
                                                            atta_num = atta_num + (atta_num * .1)
                                                        elif black_ice_points == 4:
                                                            atta_num = atta_num + (atta_num * .08)
                                                        elif black_ice_points == 3:
                                                            atta_num = atta_num + (atta_num * .06)
                                                        elif black_ice_points == 2:
                                                            atta_num = atta_num + (atta_num * .04)
                                                        elif black_ice_points == 1:
                                                            atta_num = atta_num + (atta_num * .02)
                                                        if dk_presence == 0:
                                                            atta_num = atta_num + (atta_num * .15)
                                                        if tundra_stalker_points != 0:
                                                            if dots[0] > current_time:
                                                                atta_num = atta_num + (atta_num * (tundra_stalker_points * .03))
                                                        if glyph_death_coil == True:
                                                            atta_num += atta_num * .15
                                                        if rage_of_rivendale_points != 0:
                                                            if dots[1] > current_time:
                                                                atta_num += atta_num * ((rage_of_rivendale_points * 2) / 100)
                                                        if morbitity_points != 0:
                                                            atta_num += ((morbitity_points * 5) / 100)
                                                        if hysteria_active == True:
                                                            atta_num = atta_num + (atta_num * .2)
                                                        if tricksoftt_active == True:
                                                            atta_num = atta_num + (atta_num * .15)
                                                        atta_num = atta_num + (atta_num * increased_spell_damage) + (atta_num * increased_all_damage)
                                                        sudden_doom_damage += atta_num
                                                        if unholy_blight_points == 1:
                                                            unholy_blight_amount = atta_num / 10   
                                                            unholy_blight_timer = current_time + 10
                                                        if rune_of_cinderglacier_active == True:
                                                             rune_of_cinderglacier_damage = atta_num * .2
                                                             rune_of_cinderglacier_active_count += 1
                                                             rotation.append("Rune of Cinderglacier")
                                                             rotation_time.append(current_time)
                                                             rotation_status.append("Active")
                                                             rotation_damage.append(atta_num * .2)
                                                             if rune_of_cinderglacier_active_count == 2:
                                                                 rune_of_cinderglacier_active = False
                                                        rotation.append("Sudden Doom")
                                                        rotation_time.append(current_time)
                                                        rotation_status.append("Crit")
                                                        rotation_damage.append(atta_num)
                                                    else:
                                                        atta_num = random.randint(443, 665)
                                                        atta_num = (atta_num + ((current_ap + (current_ap * ((impurity_points * 4) / 100))) * 0))
                                                        if sigil_of_vengeful_heart == True:
                                                            atta_num + 380
                                                        if sigil_of_the_wild_buck == True:
                                                            atta_num += 80
                                                        if black_ice_points == 5:
                                                            atta_num = atta_num + (atta_num * .1)
                                                        elif black_ice_points == 4:
                                                            atta_num = atta_num + (atta_num * .08)
                                                        elif black_ice_points == 3:
                                                            atta_num = atta_num + (atta_num * .06)
                                                        elif black_ice_points == 2:
                                                            atta_num = atta_num + (atta_num * .04)
                                                        elif black_ice_points == 1:
                                                            atta_num = atta_num + (atta_num * .02)
                                                        if dk_presence == 0:
                                                            atta_num = atta_num + (atta_num * .15)
                                                        if tundra_stalker_points != 0:
                                                            if dots[0] > current_time:
                                                                atta_num = atta_num + (atta_num * (tundra_stalker_points * .03))
                                                        if glyph_death_coil == True:
                                                            atta_num += atta_num * .15
                                                        if rage_of_rivendale_points != 0:
                                                            if dots[1] > current_time:
                                                                atta_num += atta_num * ((rage_of_rivendale_points * 2) / 100)
                                                        if morbitity_points != 0:
                                                            atta_num += ((morbitity_points * 5) / 100)
                                                        if hysteria_active == True:
                                                            atta_num = atta_num + (atta_num * .2)
                                                        if tricksoftt_active == True:
                                                            atta_num = atta_num + (atta_num * .15)
                                                        atta_num = atta_num + (atta_num * increased_spell_damage) + (atta_num * increased_all_damage)
                                                        sudden_doom_damage += atta_num
                                                        if unholy_blight_points == 1:
                                                            unholy_blight_amount = atta_num / 10 
                                                            unholy_blight_timer = current_time + 10
                                                        if rune_of_cinderglacier_active == True:
                                                             rune_of_cinderglacier_damage = atta_num * .2
                                                             rune_of_cinderglacier_active_count += 1
                                                             rotation.append("Rune of Cinderglacier")
                                                             rotation_time.append(current_time)
                                                             rotation_status.append("Active")
                                                             rotation_damage.append(atta_num * .2)
                                                             if rune_of_cinderglacier_active_count == 2:
                                                                 rune_of_cinderglacier_active = False
                                                        rotation.append("Sudden Doom")
                                                        rotation_time.append(current_time)
                                                        rotation_status.append("Hit")
                                                        rotation_damage.append(atta_num)
                                                if hit == False:
                                                    rotation.append("Sudden Doom")
                                                    rotation_time.append(current_time)
                                                    rotation_status.append("Miss")
                                                    rotation_damage.append(0)
                                        rotation.append("Heart Strike")
                                        rotation_time.append(current_time)
                                        rotation_status.append("Crit")
                                        rotation_damage.append(atta_num)
                                        current_time += gcd
                                        used_gcd = True
                                        continue
                                    elif attack_table_results == 7:
                                        #normal attack
                                        rune_cd_tracker[castable] = rune_cd(haste_rune_cd, current_time)
                                        atta_num = (((0 + (wep_roll * .5)) + (( 0 + (wep_roll * .5)) * (.1 * how_many_dots_on_target)) + (( 0 + (wep_roll * .5)) * (.1 * how_many_dots_on_target) * darkruned_battlegear_four_set)) - (((0 + (wep_roll * .5)) + (( 0 + (wep_roll * .5)) * (.1 * how_many_dots_on_target)) + (( 0 + (wep_roll * .5)) * (.1 * how_many_dots_on_target) * darkruned_battlegear_four_set)) * armor_red_amount))
                                        if dk_presence == 0:
                                            atta_num = atta_num + (atta_num * .15)
                                        if t9_tank_two_set == True:
                                            atta_num = atta_num + (atta_num *.05)
                                        if blood_strikes_points != 0:
                                            atta_num = atta_num + ((blood_strikes_points * 15) / 100)
                                        if might_of_mograine_points != 0:
                                            atta_num += atta_num * ((might_of_mograine_points * 15) / 100)
                                        if scourgelords_battlegear_two_set == True:
                                            atta_num = atta_num + (atta_num * .07)
                                        if hysteria_active == True:
                                            atta_num = atta_num + (atta_num * .2)
                                        if tricksoftt_active == True:
                                            atta_num = atta_num + (atta_num * .15)
                                        atta_num = atta_num + (atta_num * increased_physical_damage) + (atta_num * increased_all_damage)
                                        sum_heart_strike_attacks += atta_num
                                        current_power = runic_power(10, current_power, max_runic)
                                        trinket_hit_crit_tracker = 1
                                        if sigil_of_haunted_dreams == True:
                                            if random.randint(0, 100) < 15:
                                                if sigil_of_haunted_dreams_buff == False:
                                                    sigil_of_haunted_dreams_buff = True
                                                    sigil_of_haunted_dreams_timer = current_time + 10  
                                                    total_crit = total_crit + ((173 / 45.8) / 100) 
                                        if t9_dps_two_set == True:
                                            if t9_bonus == False:
                                                if t9_cd_timer < current_time:
                                                    if (random.randint(0, 10000)/100) < 50:
                                                        t9_bonus = True
                                                        t9_cd_timer = current_time + 45
                                                        t9_active_timer = current_time + 15
                                                        bonus_loop_str += 180
                                                        rotation.append("T9 DPS 2p Bonus")
                                                        rotation_time.append(current_time)
                                                        rotation_damage.append(0)
                                                        rotation_status.append("Proc")
                                        if sudden_doom_points != 0:  #Sudden Doom aka Free Death Coil
                                            if (random.randint(0, 10000)/100) < sudden_doom_points * 5:
                                                hit = spell_hit(spell_hit_total, increased_spell_hit, target_level)
                                                crit = spell_crit((total_crit + (darkruned_battlegear_two_set / 100)), spell_hit_total, increased_spell_hit, target_level, increased_spell_crit)
                                                if hit == True:
                                                    if crit == True:
                                                        atta_num = random.randint(443, 665)
                                                        atta_num = (atta_num + ((current_ap + (current_ap * ((impurity_points * 4) / 100))) * 0)) * var_crit_amount
                                                        if sigil_of_vengeful_heart == True:
                                                            atta_num + 380
                                                        if sigil_of_the_wild_buck == True:
                                                            atta_num += 80
                                                        if black_ice_points == 5:
                                                            atta_num = atta_num + (atta_num * .1)
                                                        elif black_ice_points == 4:
                                                            atta_num = atta_num + (atta_num * .08)
                                                        elif black_ice_points == 3:
                                                            atta_num = atta_num + (atta_num * .06)
                                                        elif black_ice_points == 2:
                                                            atta_num = atta_num + (atta_num * .04)
                                                        elif black_ice_points == 1:
                                                            atta_num = atta_num + (atta_num * .02)
                                                        if dk_presence == 0:
                                                            atta_num = atta_num + (atta_num * .15)
                                                        if tundra_stalker_points != 0:
                                                            if dots[0] > current_time:
                                                                atta_num = atta_num + (atta_num * (tundra_stalker_points * .03))
                                                        if glyph_death_coil == True:
                                                            atta_num += atta_num * .15
                                                        if rage_of_rivendale_points != 0:
                                                            if dots[1] > current_time:
                                                                atta_num += atta_num * ((rage_of_rivendale_points * 2) / 100)
                                                        if morbitity_points != 0:
                                                            atta_num += ((morbitity_points * 5) / 100)
                                                        if hysteria_active == True:
                                                            atta_num = atta_num + (atta_num * .2)
                                                        if tricksoftt_active == True:
                                                            atta_num = atta_num + (atta_num * .15)
                                                        atta_num = atta_num + (atta_num * increased_spell_damage) + (atta_num * increased_all_damage)
                                                        sudden_doom_damage += atta_num
                                                        if unholy_blight_points == 1:
                                                            unholy_blight_amount = atta_num / 10   
                                                            unholy_blight_timer = current_time + 10
                                                        if rune_of_cinderglacier_active == True:
                                                             rune_of_cinderglacier_damage = atta_num * .2
                                                             rune_of_cinderglacier_active_count += 1
                                                             rotation.append("Rune of Cinderglacier")
                                                             rotation_time.append(current_time)
                                                             rotation_status.append("Active")
                                                             rotation_damage.append(atta_num * .2)
                                                             if rune_of_cinderglacier_active_count == 2:
                                                                 rune_of_cinderglacier_active = False
                                                        rotation.append("Sudden Doom")
                                                        rotation_time.append(current_time)
                                                        rotation_status.append("Crit")
                                                        rotation_damage.append(atta_num)
                                                    else:
                                                        atta_num = random.randint(443, 665)
                                                        atta_num = (atta_num + ((current_ap + (current_ap * ((impurity_points * 4) / 100))) * 0))
                                                        if sigil_of_vengeful_heart == True:
                                                            atta_num + 380
                                                        if sigil_of_the_wild_buck == True:
                                                            atta_num += 80
                                                        if black_ice_points == 5:
                                                            atta_num = atta_num + (atta_num * .1)
                                                        elif black_ice_points == 4:
                                                            atta_num = atta_num + (atta_num * .08)
                                                        elif black_ice_points == 3:
                                                            atta_num = atta_num + (atta_num * .06)
                                                        elif black_ice_points == 2:
                                                            atta_num = atta_num + (atta_num * .04)
                                                        elif black_ice_points == 1:
                                                            atta_num = atta_num + (atta_num * .02)
                                                        if dk_presence == 0:
                                                            atta_num = atta_num + (atta_num * .15)
                                                        if tundra_stalker_points != 0:
                                                            if dots[0] > current_time:
                                                                atta_num = atta_num + (atta_num * (tundra_stalker_points * .03))
                                                        if glyph_death_coil == True:
                                                            atta_num += atta_num * .15
                                                        if rage_of_rivendale_points != 0:
                                                            if dots[1] > current_time:
                                                                atta_num += atta_num * ((rage_of_rivendale_points * 2) / 100)
                                                        if morbitity_points != 0:
                                                            atta_num += ((morbitity_points * 5) / 100)
                                                        if hysteria_active == True:
                                                            atta_num = atta_num + (atta_num * .2)
                                                        if tricksoftt_active == True:
                                                            atta_num = atta_num + (atta_num * .15)
                                                        atta_num = atta_num + (atta_num * increased_spell_damage) + (atta_num * increased_all_damage)
                                                        sudden_doom_damage += atta_num
                                                        if unholy_blight_points == 1:
                                                            unholy_blight_amount = atta_num / 10 
                                                            unholy_blight_timer = current_time + 10
                                                        if rune_of_cinderglacier_active == True:
                                                             rune_of_cinderglacier_damage = atta_num * .2
                                                             rune_of_cinderglacier_active_count += 1
                                                             rotation.append("Rune of Cinderglacier")
                                                             rotation_time.append(current_time)
                                                             rotation_status.append("Active")
                                                             rotation_damage.append(atta_num * .2)
                                                             if rune_of_cinderglacier_active_count == 2:
                                                                 rune_of_cinderglacier_active = False
                                                        rotation.append("Sudden Doom")
                                                        rotation_time.append(current_time)
                                                        rotation_status.append("Hit")
                                                        rotation_damage.append(atta_num)
                                                if hit == False:
                                                    rotation.append("Sudden Doom")
                                                    rotation_time.append(current_time)
                                                    rotation_status.append("Miss")
                                                    rotation_damage.append(0)
                                        rotation.append("Heart Strike")
                                        rotation_time.append(current_time)
                                        rotation_status.append("Hit")
                                        rotation_damage.append(atta_num)
                                        current_time += gcd
                                        used_gcd = True
                                        continue
                                opp_castable = castable
                                opp_castable = castable - 1
                                if opp_castable == -1:
                                    opp_castable = 1
                                castable_death = all_rune_check(death, current_time, rune_cd_tracker)
                                castable_death_f = all_rune_check(death_f, current_time, rune_cd_tracker)
                                castable_death_u = all_rune_check(death_u, current_time, rune_cd_tracker)
                                if castable_death != 3:
                                    opp_castable += 6
                                elif castable_death_f != 3:
                                    opp_castable += 8
                                elif castable_death_u != 3:
                                    opp_castable += 10
                                until_dot0 = dots[0]
                                until_dot1 = dots[1]
                                if pestilence_allow_reset == True:
                                    until_dot0 -= pestilence_reset_window
                                    until_dot1 -= pestilence_reset_window
                                if rune_cd_tracker[opp_castable] < until_dot0:
                                    if rune_cd_tracker[opp_castable] < until_dot1:
                                        #castable = opp_castable   
                                        if use_death_rune == True:
                                            use_death_rune = False
                                            if castable_death != 3:
                                                rune_cd_tracker[castable] = 0
                                                if castable_death == 2:
                                                    castable_death = 0
                                                rune_cd_tracker[castable_death + 6] = 10000
                                            elif castable_death_f != 3:
                                                castable += 2
                                                rune_cd_tracker[castable] = 0
                                                if castable_death_f == 2:
                                                    castable_death_f = 0
                                                rune_cd_tracker[castable_death_f + 8] = 10000
                                            elif castable_death_u != 3:
                                                castable += 4
                                                rune_cd_tracker[castable] = 0
                                                if castable_death_u == 2:
                                                    castable_death_u = 0
                                                rune_cd_tracker[castable_death_u + 10] = 10000
                                        else:
                                            use_death_rune = False
                                        if amount_of_targets > 1:
                                            attack_table_results = attack_table(1, tanking, H2, True, False, hit_from_gear, hit_from_other, target_level, all_expertise_dodge, all_expertise_parry, total_crit, (annihilation_talent_points / 100) + increased_phy_crit + ((subversion_points * 3) / 100))
                                            armor_red_amount = dam_reduc(current_armor, armor_penetration, target_level)
                                            wep_roll = weapon_roll(mh_input_lowend_weapon_damage,mh_input_topend_weapon_damage)
                                            wep_roll = wep_roll + (attack_damage_normalization * current_ap / 14)
                                            #Rune Hit
                                            haste_percentage = (total_haste_rating / 25.21) / 100 #Returns a result of 0 - 1 for 0% - 100%
                                            haste_rune_cd = rune_grade_timer(current_time, last_rune_change[castable], last_rune_change[castable+6])
                                            if improved_unholy_presence_points != 0:
                                                if dk_presence == 2:
                                                    haste_rune_cd = haste_rune_cd - (haste_rune_cd * ((improved_unholy_presence_points * 5) / 100))
                                            if dk_presence != 2:
                                                gcd = input_gcd / (1 + haste_percentage)
                                                if gcd < 1:
                                                    gcd = 1
                                            ##Rune Miss
                                            haste_rune_cd_miss = 1
                                            how_many_dots_on_target = 0
                                            if dots[0] > current_time:
                                                how_many_dots_on_target += 1
                                            if dots[1] > current_time:
                                                how_many_dots_on_target += 1
                                            if dots[2] > current_time:
                                                how_many_dots_on_target += 1
                                            if multiple_adds_timer < current_time:
                                                how_many_dots_on_target = 0
                                            if dancing_rune_weapon_points == 1:
                                                if dancing_rune_weapon_active == True:
                                                    if attack_table_results == 0:
                                                        atta_num = 0
                                                        rotation.append("Dancing Rune Weapon")
                                                        rotation_time.append(current_time)
                                                        rotation_status.append("Miss")
                                                        rotation_damage.append(atta_num)
                                                    elif attack_table_results == 1:
                                                        atta_num = 0
                                                        rotation.append("Dancing Rune Weapon")
                                                        rotation_time.append(current_time)
                                                        rotation_status.append("Dodge")
                                                        rotation_damage.append(atta_num)
                                                    elif attack_table_results == 5:
                                                        atta_num = (((0 + (wep_roll * .25)) + (( 0 + (wep_roll * .25)) * (.1 * how_many_dots_on_target)) + (( 0 + (wep_roll * .25)) * (.1 * how_many_dots_on_target) * darkruned_battlegear_four_set)) - (((0 + (wep_roll * .25)) + (( 0 + (wep_roll * .25)) * (.1 * how_many_dots_on_target)) + (( 0 + (wep_roll * .25)) * (.1 * how_many_dots_on_target) * darkruned_battlegear_four_set)) * armor_red_amount))  * (var_crit_amount)
                                                        if dk_presence == 0:
                                                            atta_num = atta_num + (atta_num * .15)
                                                        if t9_tank_two_set == True:
                                                            atta_num = atta_num + (atta_num *.05)
                                                        if blood_strikes_points != 0:
                                                            atta_num = atta_num + ((blood_strikes_points * 15) / 100)
                                                        if might_of_mograine_points != 0:
                                                            atta_num += atta_num * ((might_of_mograine_points * 15) / 100)
                                                        if scourgelords_battlegear_two_set == True:
                                                            atta_num = atta_num + (atta_num * .07)
                                                        if hysteria_active == True:
                                                            atta_num = atta_num + (atta_num * .2)
                                                        if tricksoftt_active == True:
                                                            atta_num = atta_num + (atta_num * .15)
                                                        atta_num = atta_num + (atta_num * increased_physical_damage) + (atta_num * increased_all_damage)
                                                        atta_num = atta_num * dancing_rune_weapon_damage_multi
                                                        dancing_rune_weapon_damage += atta_num
                                                        rotation.append("Dancing Rune Weapon")
                                                        rotation_time.append(current_time)
                                                        rotation_status.append("Crit") 
                                                        rotation_damage.append(atta_num)
                                                        trinket_hit_crit_tracker = 2
                                                        if sigil_of_haunted_dreams == True:
                                                            if random.randint(0, 100) < 15:
                                                                if sigil_of_haunted_dreams_buff == False:
                                                                    sigil_of_haunted_dreams_buff = True
                                                                    sigil_of_haunted_dreams_timer = current_time + 10  
                                                                    total_crit = total_crit + ((173 / 45.8) / 100) 
                                                        if t9_dps_two_set == True:
                                                            if t9_bonus == False:
                                                                if t9_cd_timer < current_time:
                                                                    if (random.randint(0, 10000)/100) < 50:
                                                                        t9_bonus = True
                                                                        t9_cd_timer = current_time + 45
                                                                        t9_active_timer = current_time + 15
                                                                        bonus_loop_str += 180
                                                                        rotation.append("T9 DPS 2p Bonus")
                                                                        rotation_time.append(current_time)
                                                                        rotation_damage.append(0)
                                                                        rotation_status.append("Proc")
                                                        if sudden_doom_points != 0:  #Sudden Doom aka Free Death Coil
                                                            if (random.randint(0, 10000)/100) < sudden_doom_points * 5:
                                                                hit = spell_hit(spell_hit_total, increased_spell_hit, target_level)
                                                                crit = spell_crit((total_crit + (darkruned_battlegear_two_set / 100)), spell_hit_total, increased_spell_hit, target_level, increased_spell_crit)
                                                                if hit == True:
                                                                    if crit == True:
                                                                        atta_num = random.randint(443, 665)
                                                                        atta_num = (atta_num + ((current_ap + (current_ap * ((impurity_points * 4) / 100))) * 0)) * var_crit_amount
                                                                        if sigil_of_vengeful_heart == True:
                                                                            atta_num + 380
                                                                        if sigil_of_the_wild_buck == True:
                                                                            atta_num += 80
                                                                        if black_ice_points == 5:
                                                                            atta_num = atta_num + (atta_num * .1)
                                                                        elif black_ice_points == 4:
                                                                            atta_num = atta_num + (atta_num * .08)
                                                                        elif black_ice_points == 3:
                                                                            atta_num = atta_num + (atta_num * .06)
                                                                        elif black_ice_points == 2:
                                                                            atta_num = atta_num + (atta_num * .04)
                                                                        elif black_ice_points == 1:
                                                                            atta_num = atta_num + (atta_num * .02)
                                                                        if dk_presence == 0:
                                                                            atta_num = atta_num + (atta_num * .15)
                                                                        if tundra_stalker_points != 0:
                                                                            if dots[0] > current_time:
                                                                                atta_num = atta_num + (atta_num * (tundra_stalker_points * .03))
                                                                        if glyph_death_coil == True:
                                                                            atta_num += atta_num * .15
                                                                        if rage_of_rivendale_points != 0:
                                                                            if dots[1] > current_time:
                                                                                atta_num += atta_num * ((rage_of_rivendale_points * 2) / 100)
                                                                        if morbitity_points != 0:
                                                                            atta_num += ((morbitity_points * 5) / 100)
                                                                        if hysteria_active == True:
                                                                            atta_num = atta_num + (atta_num * .2)
                                                                        if tricksoftt_active == True:
                                                                            atta_num = atta_num + (atta_num * .15)
                                                                        atta_num = atta_num + (atta_num * increased_spell_damage) + (atta_num * increased_all_damage)
                                                                        sudden_doom_damage += atta_num
                                                                        if unholy_blight_points == 1:
                                                                            unholy_blight_amount = atta_num / 10   
                                                                            unholy_blight_timer = current_time + 10
                                                                        if rune_of_cinderglacier_active == True:
                                                                             rune_of_cinderglacier_damage = atta_num * .2
                                                                             rune_of_cinderglacier_active_count += 1
                                                                             rotation.append("Rune of Cinderglacier")
                                                                             rotation_time.append(current_time)
                                                                             rotation_status.append("Active")
                                                                             rotation_damage.append(atta_num * .2)
                                                                             if rune_of_cinderglacier_active_count == 2:
                                                                                 rune_of_cinderglacier_active = False
                                                                        rotation.append("Sudden Doom")
                                                                        rotation_time.append(current_time)
                                                                        rotation_status.append("Crit")
                                                                        rotation_damage.append(atta_num)
                                                                    else:
                                                                        atta_num = random.randint(443, 665)
                                                                        atta_num = (atta_num + ((current_ap + (current_ap * ((impurity_points * 4) / 100))) * 0))
                                                                        if sigil_of_vengeful_heart == True:
                                                                            atta_num + 380
                                                                        if sigil_of_the_wild_buck == True:
                                                                            atta_num += 80
                                                                        if black_ice_points == 5:
                                                                            atta_num = atta_num + (atta_num * .1)
                                                                        elif black_ice_points == 4:
                                                                            atta_num = atta_num + (atta_num * .08)
                                                                        elif black_ice_points == 3:
                                                                            atta_num = atta_num + (atta_num * .06)
                                                                        elif black_ice_points == 2:
                                                                            atta_num = atta_num + (atta_num * .04)
                                                                        elif black_ice_points == 1:
                                                                            atta_num = atta_num + (atta_num * .02)
                                                                        if dk_presence == 0:
                                                                            atta_num = atta_num + (atta_num * .15)
                                                                        if tundra_stalker_points != 0:
                                                                            if dots[0] > current_time:
                                                                                atta_num = atta_num + (atta_num * (tundra_stalker_points * .03))
                                                                        if glyph_death_coil == True:
                                                                            atta_num += atta_num * .15
                                                                        if rage_of_rivendale_points != 0:
                                                                            if dots[1] > current_time:
                                                                                atta_num += atta_num * ((rage_of_rivendale_points * 2) / 100)
                                                                        if morbitity_points != 0:
                                                                            atta_num += ((morbitity_points * 5) / 100)
                                                                        if hysteria_active == True:
                                                                            atta_num = atta_num + (atta_num * .2)
                                                                        if tricksoftt_active == True:
                                                                            atta_num = atta_num + (atta_num * .15)
                                                                        atta_num = atta_num + (atta_num * increased_spell_damage) + (atta_num * increased_all_damage)
                                                                        sudden_doom_damage += atta_num
                                                                        if unholy_blight_points == 1:
                                                                            unholy_blight_amount = atta_num / 10 
                                                                            unholy_blight_timer = current_time + 10
                                                                        if rune_of_cinderglacier_active == True:
                                                                             rune_of_cinderglacier_damage = atta_num * .2
                                                                             rune_of_cinderglacier_active_count += 1
                                                                             rotation.append("Rune of Cinderglacier")
                                                                             rotation_time.append(current_time)
                                                                             rotation_status.append("Active")
                                                                             rotation_damage.append(atta_num * .2)
                                                                             if rune_of_cinderglacier_active_count == 2:
                                                                                 rune_of_cinderglacier_active = False
                                                                        rotation.append("Sudden Doom")
                                                                        rotation_time.append(current_time)
                                                                        rotation_status.append("Hit")
                                                                        rotation_damage.append(atta_num)
                                                                if hit == False:
                                                                    rotation.append("Sudden Doom")
                                                                    rotation_time.append(current_time)
                                                                    rotation_status.append("Miss")
                                                                    rotation_damage.append(0)                                            
                                                    elif attack_table_results == 7:
                                                        atta_num = (((0 + (wep_roll * .25)) + (( 0 + (wep_roll * .25)) * (.1 * how_many_dots_on_target)) + (( 0 + (wep_roll * .25)) * (.1 * how_many_dots_on_target) * darkruned_battlegear_four_set)) - (((0 + (wep_roll * .25)) + (( 0 + (wep_roll * .25)) * (.1 * how_many_dots_on_target)) + (( 0 + (wep_roll * .25)) * (.1 * how_many_dots_on_target) * darkruned_battlegear_four_set)) * armor_red_amount))
                                                        if dk_presence == 0:
                                                            atta_num = atta_num + (atta_num * .15)
                                                        if t9_tank_two_set == True:
                                                            atta_num = atta_num + (atta_num *.05)
                                                        if blood_strikes_points != 0:
                                                            atta_num = atta_num + ((blood_strikes_points * 15) / 100)
                                                        if might_of_mograine_points != 0:
                                                            atta_num += atta_num * ((might_of_mograine_points * 15) / 100)
                                                        if scourgelords_battlegear_two_set == True:
                                                            atta_num = atta_num + (atta_num * .07)
                                                        if hysteria_active == True:
                                                            atta_num = atta_num + (atta_num * .2)
                                                        if tricksoftt_active == True:
                                                            atta_num = atta_num + (atta_num * .15)
                                                        atta_num = atta_num + (atta_num * increased_physical_damage) + (atta_num * increased_all_damage)
                                                        atta_num = atta_num * dancing_rune_weapon_damage_multi
                                                        dancing_rune_weapon_damage += atta_num
                                                        rotation.append("Dancing Rune Weapon")
                                                        rotation_time.append(current_time)
                                                        rotation_status.append("Hit") 
                                                        rotation_damage.append(atta_num)
                                                        trinket_hit_crit_tracker = 1
                                                        if sigil_of_haunted_dreams == True:
                                                            if random.randint(0, 100) < 15:
                                                                if sigil_of_haunted_dreams_buff == False:
                                                                    sigil_of_haunted_dreams_buff = True
                                                                    sigil_of_haunted_dreams_timer = current_time + 10  
                                                                    total_crit = total_crit + ((173 / 45.8) / 100) 
                                                        if t9_dps_two_set == True:
                                                            if t9_bonus == False:
                                                                if t9_cd_timer < current_time:
                                                                    if (random.randint(0, 10000)/100) < 50:
                                                                        t9_bonus = True
                                                                        t9_cd_timer = current_time + 45
                                                                        t9_active_timer = current_time + 15
                                                                        bonus_loop_str += 180
                                                                        rotation.append("T9 DPS 2p Bonus")
                                                                        rotation_time.append(current_time)
                                                                        rotation_damage.append(0)
                                                                        rotation_status.append("Proc")
                                                        if sudden_doom_points != 0:  #Sudden Doom aka Free Death Coil
                                                            if (random.randint(0, 10000)/100) < sudden_doom_points * 5:
                                                                hit = spell_hit(spell_hit_total, increased_spell_hit, target_level)
                                                                crit = spell_crit((total_crit + (darkruned_battlegear_two_set / 100)), spell_hit_total, increased_spell_hit, target_level, increased_spell_crit)
                                                                if hit == True:
                                                                    if crit == True:
                                                                        atta_num = random.randint(443, 665)
                                                                        atta_num = (atta_num + ((current_ap + (current_ap * ((impurity_points * 4) / 100))) * 0)) * var_crit_amount
                                                                        if sigil_of_vengeful_heart == True:
                                                                            atta_num + 380
                                                                        if sigil_of_the_wild_buck == True:
                                                                            atta_num += 80
                                                                        if black_ice_points == 5:
                                                                            atta_num = atta_num + (atta_num * .1)
                                                                        elif black_ice_points == 4:
                                                                            atta_num = atta_num + (atta_num * .08)
                                                                        elif black_ice_points == 3:
                                                                            atta_num = atta_num + (atta_num * .06)
                                                                        elif black_ice_points == 2:
                                                                            atta_num = atta_num + (atta_num * .04)
                                                                        elif black_ice_points == 1:
                                                                            atta_num = atta_num + (atta_num * .02)
                                                                        if dk_presence == 0:
                                                                            atta_num = atta_num + (atta_num * .15)
                                                                        if tundra_stalker_points != 0:
                                                                            if dots[0] > current_time:
                                                                                atta_num = atta_num + (atta_num * (tundra_stalker_points * .03))
                                                                        if glyph_death_coil == True:
                                                                            atta_num += atta_num * .15
                                                                        if rage_of_rivendale_points != 0:
                                                                            if dots[1] > current_time:
                                                                                atta_num += atta_num * ((rage_of_rivendale_points * 2) / 100)
                                                                        if morbitity_points != 0:
                                                                            atta_num += ((morbitity_points * 5) / 100)
                                                                        if hysteria_active == True:
                                                                            atta_num = atta_num + (atta_num * .2)
                                                                        if tricksoftt_active == True:
                                                                            atta_num = atta_num + (atta_num * .15)
                                                                        atta_num = atta_num + (atta_num * increased_spell_damage) + (atta_num * increased_all_damage)
                                                                        sudden_doom_damage += atta_num
                                                                        if unholy_blight_points == 1:
                                                                            unholy_blight_amount = atta_num / 10   
                                                                            unholy_blight_timer = current_time + 10
                                                                        if rune_of_cinderglacier_active == True:
                                                                             rune_of_cinderglacier_damage = atta_num * .2
                                                                             rune_of_cinderglacier_active_count += 1
                                                                             rotation.append("Rune of Cinderglacier")
                                                                             rotation_time.append(current_time)
                                                                             rotation_status.append("Active")
                                                                             rotation_damage.append(atta_num * .2)
                                                                             if rune_of_cinderglacier_active_count == 2:
                                                                                 rune_of_cinderglacier_active = False
                                                                        rotation.append("Sudden Doom")
                                                                        rotation_time.append(current_time)
                                                                        rotation_status.append("Crit")
                                                                        rotation_damage.append(atta_num)
                                                                    else:
                                                                        atta_num = random.randint(443, 665)
                                                                        atta_num = (atta_num + ((current_ap + (current_ap * ((impurity_points * 4) / 100))) * 0))
                                                                        if sigil_of_vengeful_heart == True:
                                                                            atta_num + 380
                                                                        if sigil_of_the_wild_buck == True:
                                                                            atta_num += 80
                                                                        if black_ice_points == 5:
                                                                            atta_num = atta_num + (atta_num * .1)
                                                                        elif black_ice_points == 4:
                                                                            atta_num = atta_num + (atta_num * .08)
                                                                        elif black_ice_points == 3:
                                                                            atta_num = atta_num + (atta_num * .06)
                                                                        elif black_ice_points == 2:
                                                                            atta_num = atta_num + (atta_num * .04)
                                                                        elif black_ice_points == 1:
                                                                            atta_num = atta_num + (atta_num * .02)
                                                                        if dk_presence == 0:
                                                                            atta_num = atta_num + (atta_num * .15)
                                                                        if tundra_stalker_points != 0:
                                                                            if dots[0] > current_time:
                                                                                atta_num = atta_num + (atta_num * (tundra_stalker_points * .03))
                                                                        if glyph_death_coil == True:
                                                                            atta_num += atta_num * .15
                                                                        if rage_of_rivendale_points != 0:
                                                                            if dots[1] > current_time:
                                                                                atta_num += atta_num * ((rage_of_rivendale_points * 2) / 100)
                                                                        if morbitity_points != 0:
                                                                            atta_num += ((morbitity_points * 5) / 100)
                                                                        if hysteria_active == True:
                                                                            atta_num = atta_num + (atta_num * .2)
                                                                        if tricksoftt_active == True:
                                                                            atta_num = atta_num + (atta_num * .15)
                                                                        atta_num = atta_num + (atta_num * increased_spell_damage) + (atta_num * increased_all_damage)
                                                                        sudden_doom_damage += atta_num
                                                                        if unholy_blight_points == 1:
                                                                            unholy_blight_amount = atta_num / 10 
                                                                            unholy_blight_timer = current_time + 10
                                                                        if rune_of_cinderglacier_active == True:
                                                                             rune_of_cinderglacier_damage = atta_num * .2
                                                                             rune_of_cinderglacier_active_count += 1
                                                                             rotation.append("Rune of Cinderglacier")
                                                                             rotation_time.append(current_time)
                                                                             rotation_status.append("Active")
                                                                             rotation_damage.append(atta_num * .2)
                                                                             if rune_of_cinderglacier_active_count == 2:
                                                                                 rune_of_cinderglacier_active = False
                                                                        rotation.append("Sudden Doom")
                                                                        rotation_time.append(current_time)
                                                                        rotation_status.append("Hit")
                                                                        rotation_damage.append(atta_num)
                                                                if hit == False:
                                                                    rotation.append("Sudden Doom")
                                                                    rotation_time.append(current_time)
                                                                    rotation_status.append("Miss")
                                                                    rotation_damage.append(0)   
                                            if attack_table_results == 0:
                                                atta_num = 0
                                                rotation.append("Heart Strike - Second Target")
                                                rotation_time.append(current_time)
                                                rotation_status.append("Miss")
                                                rotation_damage.append(atta_num)
                                            elif attack_table_results == 1:
                                                atta_num = 0
                                                rotation.append("Heart Strike - Second Target")
                                                rotation_time.append(current_time)
                                                rotation_status.append("Dodge")
                                                rotation_damage.append(atta_num)
                                            elif attack_table_results == 5:
                                                #crit attack
                                                atta_num = (((0 + (wep_roll * .25)) + (( 0 + (wep_roll * .25)) * (.1 * how_many_dots_on_target)) + (( 0 + (wep_roll * .25)) * (.1 * how_many_dots_on_target) * darkruned_battlegear_four_set)) - (((0 + (wep_roll * .25)) + (( 0 + (wep_roll * .25)) * (.1 * how_many_dots_on_target)) + (( 0 + (wep_roll * .25)) * (.1 * how_many_dots_on_target) * darkruned_battlegear_four_set)) * armor_red_amount))  * (var_crit_amount)
                                                if dk_presence == 0:
                                                    atta_num = atta_num + (atta_num * .15)
                                                if t9_tank_two_set == True:
                                                    atta_num = atta_num + (atta_num *.05)
                                                if blood_strikes_points != 0:
                                                    atta_num = atta_num + ((blood_strikes_points * 15) / 100)
                                                if might_of_mograine_points != 0:
                                                    atta_num += atta_num * ((might_of_mograine_points * 15) / 100)
                                                if scourgelords_battlegear_two_set == True:
                                                    atta_num = atta_num + (atta_num * .07)
                                                if hysteria_active == True:
                                                    atta_num = atta_num + (atta_num * .2)
                                                if tricksoftt_active == True:
                                                    atta_num = atta_num + (atta_num * .15)
                                                atta_num = atta_num + (atta_num * increased_physical_damage) + (atta_num * increased_all_damage)
                                                sum_heart_strike_attacks += atta_num
                                                trinket_hit_crit_tracker = 2
                                                if sigil_of_haunted_dreams == True:
                                                    if random.randint(0, 100) < 15:
                                                        if sigil_of_haunted_dreams_buff == False:
                                                            sigil_of_haunted_dreams_buff = True
                                                            sigil_of_haunted_dreams_timer = current_time + 10  
                                                            total_crit = total_crit + ((173 / 45.8) / 100) 
                                                if t9_dps_two_set == True:
                                                    if t9_bonus == False:
                                                        if t9_cd_timer < current_time:
                                                            if (random.randint(0, 10000)/100) < 50:
                                                                t9_bonus = True
                                                                t9_cd_timer = current_time + 45
                                                                t9_active_timer = current_time + 15
                                                                bonus_loop_str += 180
                                                                rotation.append("T9 DPS 2p Bonus")
                                                                rotation_time.append(current_time)
                                                                rotation_damage.append(0)
                                                                rotation_status.append("Proc")
                                                if sudden_doom_points != 0:  #Sudden Doom aka Free Death Coil
                                                    if (random.randint(0, 10000)/100) < sudden_doom_points * 5:
                                                        hit = spell_hit(spell_hit_total, increased_spell_hit, target_level)
                                                        crit = spell_crit((total_crit + (darkruned_battlegear_two_set / 100)), spell_hit_total, increased_spell_hit, target_level, increased_spell_crit)
                                                        if hit == True:
                                                            if crit == True:
                                                                atta_num = random.randint(443, 665)
                                                                atta_num = (atta_num + ((current_ap + (current_ap * ((impurity_points * 4) / 100))) * 0)) * var_crit_amount
                                                                if sigil_of_vengeful_heart == True:
                                                                    atta_num + 380
                                                                if sigil_of_the_wild_buck == True:
                                                                    atta_num += 80
                                                                if black_ice_points == 5:
                                                                    atta_num = atta_num + (atta_num * .1)
                                                                elif black_ice_points == 4:
                                                                    atta_num = atta_num + (atta_num * .08)
                                                                elif black_ice_points == 3:
                                                                    atta_num = atta_num + (atta_num * .06)
                                                                elif black_ice_points == 2:
                                                                    atta_num = atta_num + (atta_num * .04)
                                                                elif black_ice_points == 1:
                                                                    atta_num = atta_num + (atta_num * .02)
                                                                if dk_presence == 0:
                                                                    atta_num = atta_num + (atta_num * .15)
                                                                if tundra_stalker_points != 0:
                                                                    if dots[0] > current_time:
                                                                        atta_num = atta_num + (atta_num * (tundra_stalker_points * .03))
                                                                if glyph_death_coil == True:
                                                                    atta_num += atta_num * .15
                                                                if rage_of_rivendale_points != 0:
                                                                    if dots[1] > current_time:
                                                                        atta_num += atta_num * ((rage_of_rivendale_points * 2) / 100)
                                                                if morbitity_points != 0:
                                                                    atta_num += ((morbitity_points * 5) / 100)
                                                                if hysteria_active == True:
                                                                    atta_num = atta_num + (atta_num * .2)
                                                                if tricksoftt_active == True:
                                                                    atta_num = atta_num + (atta_num * .15)
                                                                atta_num = atta_num + (atta_num * increased_spell_damage) + (atta_num * increased_all_damage)
                                                                sudden_doom_damage += atta_num
                                                                if unholy_blight_points == 1:
                                                                    unholy_blight_amount = atta_num / 10   
                                                                    unholy_blight_timer = current_time + 10
                                                                if rune_of_cinderglacier_active == True:
                                                                     rune_of_cinderglacier_damage = atta_num * .2
                                                                     rune_of_cinderglacier_active_count += 1
                                                                     rotation.append("Rune of Cinderglacier")
                                                                     rotation_time.append(current_time)
                                                                     rotation_status.append("Active")
                                                                     rotation_damage.append(atta_num * .2)
                                                                     if rune_of_cinderglacier_active_count == 2:
                                                                         rune_of_cinderglacier_active = False
                                                                rotation.append("Sudden Doom")
                                                                rotation_time.append(current_time)
                                                                rotation_status.append("Crit")
                                                                rotation_damage.append(atta_num)
                                                            else:
                                                                atta_num = random.randint(443, 665)
                                                                atta_num = (atta_num + ((current_ap + (current_ap * ((impurity_points * 4) / 100))) * 0))
                                                                if sigil_of_vengeful_heart == True:
                                                                    atta_num + 380
                                                                if sigil_of_the_wild_buck == True:
                                                                    atta_num += 80
                                                                if black_ice_points == 5:
                                                                    atta_num = atta_num + (atta_num * .1)
                                                                elif black_ice_points == 4:
                                                                    atta_num = atta_num + (atta_num * .08)
                                                                elif black_ice_points == 3:
                                                                    atta_num = atta_num + (atta_num * .06)
                                                                elif black_ice_points == 2:
                                                                    atta_num = atta_num + (atta_num * .04)
                                                                elif black_ice_points == 1:
                                                                    atta_num = atta_num + (atta_num * .02)
                                                                if dk_presence == 0:
                                                                    atta_num = atta_num + (atta_num * .15)
                                                                if tundra_stalker_points != 0:
                                                                    if dots[0] > current_time:
                                                                        atta_num = atta_num + (atta_num * (tundra_stalker_points * .03))
                                                                if glyph_death_coil == True:
                                                                    atta_num += atta_num * .15
                                                                if rage_of_rivendale_points != 0:
                                                                    if dots[1] > current_time:
                                                                        atta_num += atta_num * ((rage_of_rivendale_points * 2) / 100)
                                                                if morbitity_points != 0:
                                                                    atta_num += ((morbitity_points * 5) / 100)
                                                                if hysteria_active == True:
                                                                    atta_num = atta_num + (atta_num * .2)
                                                                if tricksoftt_active == True:
                                                                    atta_num = atta_num + (atta_num * .15)
                                                                atta_num = atta_num + (atta_num * increased_spell_damage) + (atta_num * increased_all_damage)
                                                                sudden_doom_damage += atta_num
                                                                if unholy_blight_points == 1:
                                                                    unholy_blight_amount = atta_num / 10 
                                                                    unholy_blight_timer = current_time + 10
                                                                if rune_of_cinderglacier_active == True:
                                                                     rune_of_cinderglacier_damage = atta_num * .2
                                                                     rune_of_cinderglacier_active_count += 1
                                                                     rotation.append("Rune of Cinderglacier")
                                                                     rotation_time.append(current_time)
                                                                     rotation_status.append("Active")
                                                                     rotation_damage.append(atta_num * .2)
                                                                     if rune_of_cinderglacier_active_count == 2:
                                                                         rune_of_cinderglacier_active = False
                                                                rotation.append("Sudden Doom")
                                                                rotation_time.append(current_time)
                                                                rotation_status.append("Hit")
                                                                rotation_damage.append(atta_num)
                                                        if hit == False:
                                                            rotation.append("Sudden Doom")
                                                            rotation_time.append(current_time)
                                                            rotation_status.append("Miss")
                                                            rotation_damage.append(0)
                                                rotation.append("Heart Strike - Second Target")
                                                rotation_time.append(current_time)
                                                rotation_status.append("Crit")
                                                rotation_damage.append(atta_num)
                                            elif attack_table_results == 7:
                                                #normal attack
                                                atta_num = (((0 + (wep_roll * .25)) + (( 0 + (wep_roll * .25)) * (.1 * how_many_dots_on_target)) + (( 0 + (wep_roll * .25)) * (.1 * how_many_dots_on_target) * darkruned_battlegear_four_set)) - (((0 + (wep_roll * .25)) + (( 0 + (wep_roll * .25)) * (.1 * how_many_dots_on_target)) + (( 0 + (wep_roll * .25)) * (.1 * how_many_dots_on_target) * darkruned_battlegear_four_set)) * armor_red_amount))
                                                if dk_presence == 0:
                                                    atta_num = atta_num + (atta_num * .15)
                                                if t9_tank_two_set == True:
                                                    atta_num = atta_num + (atta_num *.05)
                                                if blood_strikes_points != 0:
                                                    atta_num = atta_num + ((blood_strikes_points * 15) / 100)
                                                if might_of_mograine_points != 0:
                                                    atta_num += atta_num * ((might_of_mograine_points * 15) / 100)
                                                if scourgelords_battlegear_two_set == True:
                                                    atta_num = atta_num + (atta_num * .07)
                                                if hysteria_active == True:
                                                    atta_num = atta_num + (atta_num * .2)
                                                if tricksoftt_active == True:
                                                    atta_num = atta_num + (atta_num * .15)
                                                atta_num = atta_num + (atta_num * increased_physical_damage) + (atta_num * increased_all_damage)
                                                sum_heart_strike_attacks += atta_num
                                                trinket_hit_crit_tracker = 1
                                                if sigil_of_haunted_dreams == True:
                                                    if random.randint(0, 100) < 15:
                                                        if sigil_of_haunted_dreams_buff == False:
                                                            sigil_of_haunted_dreams_buff = True
                                                            sigil_of_haunted_dreams_timer = current_time + 10  
                                                            total_crit = total_crit + ((173 / 45.8) / 100) 
                                                if t9_dps_two_set == True:
                                                    if t9_bonus == False:
                                                        if t9_cd_timer < current_time:
                                                            if (random.randint(0, 10000)/100) < 50:
                                                                t9_bonus = True
                                                                t9_cd_timer = current_time + 45
                                                                t9_active_timer = current_time + 15
                                                                bonus_loop_str += 180
                                                                rotation.append("T9 DPS 2p Bonus")
                                                                rotation_time.append(current_time)
                                                                rotation_damage.append(0)
                                                                rotation_status.append("Proc")
                                                if sudden_doom_points != 0:  #Sudden Doom aka Free Death Coil
                                                    if (random.randint(0, 10000)/100) < sudden_doom_points * 5:
                                                        hit = spell_hit(spell_hit_total, increased_spell_hit, target_level)
                                                        crit = spell_crit((total_crit + (darkruned_battlegear_two_set / 100)), spell_hit_total, increased_spell_hit, target_level, increased_spell_crit)
                                                        if hit == True:
                                                            if crit == True:
                                                                atta_num = random.randint(443, 665)
                                                                atta_num = (atta_num + ((current_ap + (current_ap * ((impurity_points * 4) / 100))) * 0)) * var_crit_amount
                                                                if sigil_of_vengeful_heart == True:
                                                                    atta_num + 380
                                                                if sigil_of_the_wild_buck == True:
                                                                    atta_num += 80
                                                                if black_ice_points == 5:
                                                                    atta_num = atta_num + (atta_num * .1)
                                                                elif black_ice_points == 4:
                                                                    atta_num = atta_num + (atta_num * .08)
                                                                elif black_ice_points == 3:
                                                                    atta_num = atta_num + (atta_num * .06)
                                                                elif black_ice_points == 2:
                                                                    atta_num = atta_num + (atta_num * .04)
                                                                elif black_ice_points == 1:
                                                                    atta_num = atta_num + (atta_num * .02)
                                                                if dk_presence == 0:
                                                                    atta_num = atta_num + (atta_num * .15)
                                                                if tundra_stalker_points != 0:
                                                                    if dots[0] > current_time:
                                                                        atta_num = atta_num + (atta_num * (tundra_stalker_points * .03))
                                                                if glyph_death_coil == True:
                                                                    atta_num += atta_num * .15
                                                                if rage_of_rivendale_points != 0:
                                                                    if dots[1] > current_time:
                                                                        atta_num += atta_num * ((rage_of_rivendale_points * 2) / 100)
                                                                if morbitity_points != 0:
                                                                    atta_num += ((morbitity_points * 5) / 100)
                                                                if hysteria_active == True:
                                                                    atta_num = atta_num + (atta_num * .2)
                                                                if tricksoftt_active == True:
                                                                    atta_num = atta_num + (atta_num * .15)
                                                                atta_num = atta_num + (atta_num * increased_spell_damage) + (atta_num * increased_all_damage)
                                                                sudden_doom_damage += atta_num
                                                                if unholy_blight_points == 1:
                                                                    unholy_blight_amount = atta_num / 10   
                                                                    unholy_blight_timer = current_time + 10
                                                                if rune_of_cinderglacier_active == True:
                                                                     rune_of_cinderglacier_damage = atta_num * .2
                                                                     rune_of_cinderglacier_active_count += 1
                                                                     rotation.append("Rune of Cinderglacier")
                                                                     rotation_time.append(current_time)
                                                                     rotation_status.append("Active")
                                                                     rotation_damage.append(atta_num * .2)
                                                                     if rune_of_cinderglacier_active_count == 2:
                                                                         rune_of_cinderglacier_active = False
                                                                rotation.append("Sudden Doom")
                                                                rotation_time.append(current_time)
                                                                rotation_status.append("Crit")
                                                                rotation_damage.append(atta_num)
                                                            else:
                                                                atta_num = random.randint(443, 665)
                                                                atta_num = (atta_num + ((current_ap + (current_ap * ((impurity_points * 4) / 100))) * 0))
                                                                if sigil_of_vengeful_heart == True:
                                                                    atta_num + 380
                                                                if sigil_of_the_wild_buck == True:
                                                                    atta_num += 80
                                                                if black_ice_points == 5:
                                                                    atta_num = atta_num + (atta_num * .1)
                                                                elif black_ice_points == 4:
                                                                    atta_num = atta_num + (atta_num * .08)
                                                                elif black_ice_points == 3:
                                                                    atta_num = atta_num + (atta_num * .06)
                                                                elif black_ice_points == 2:
                                                                    atta_num = atta_num + (atta_num * .04)
                                                                elif black_ice_points == 1:
                                                                    atta_num = atta_num + (atta_num * .02)
                                                                if dk_presence == 0:
                                                                    atta_num = atta_num + (atta_num * .15)
                                                                if tundra_stalker_points != 0:
                                                                    if dots[0] > current_time:
                                                                        atta_num = atta_num + (atta_num * (tundra_stalker_points * .03))
                                                                if glyph_death_coil == True:
                                                                    atta_num += atta_num * .15
                                                                if rage_of_rivendale_points != 0:
                                                                    if dots[1] > current_time:
                                                                        atta_num += atta_num * ((rage_of_rivendale_points * 2) / 100)
                                                                if morbitity_points != 0:
                                                                    atta_num += ((morbitity_points * 5) / 100)
                                                                if hysteria_active == True:
                                                                    atta_num = atta_num + (atta_num * .2)
                                                                if tricksoftt_active == True:
                                                                    atta_num = atta_num + (atta_num * .15)
                                                                atta_num = atta_num + (atta_num * increased_spell_damage) + (atta_num * increased_all_damage)
                                                                sudden_doom_damage += atta_num
                                                                if unholy_blight_points == 1:
                                                                    unholy_blight_amount = atta_num / 10 
                                                                    unholy_blight_timer = current_time + 10
                                                                if rune_of_cinderglacier_active == True:
                                                                     rune_of_cinderglacier_damage = atta_num * .2
                                                                     rune_of_cinderglacier_active_count += 1
                                                                     rotation.append("Rune of Cinderglacier")
                                                                     rotation_time.append(current_time)
                                                                     rotation_status.append("Active")
                                                                     rotation_damage.append(atta_num * .2)
                                                                     if rune_of_cinderglacier_active_count == 2:
                                                                         rune_of_cinderglacier_active = False
                                                                rotation.append("Sudden Doom")
                                                                rotation_time.append(current_time)
                                                                rotation_status.append("Hit")
                                                                rotation_damage.append(atta_num)
                                                        if hit == False:
                                                            rotation.append("Sudden Doom")
                                                            rotation_time.append(current_time)
                                                            rotation_status.append("Miss")
                                                            rotation_damage.append(0)
                                                rotation.append("Heart Strike - Second Target")
                                                rotation_time.append(current_time)
                                                rotation_status.append("Hit")
                                                rotation_damage.append(atta_num)
                                        attack_table_results = attack_table(1, tanking, H2, True, False, hit_from_gear, hit_from_other, target_level, all_expertise_dodge, all_expertise_parry, total_crit, (annihilation_talent_points / 100) + increased_phy_crit + ((subversion_points * 3) / 100))
                                        armor_red_amount = dam_reduc(current_armor, armor_penetration, target_level)
                                        wep_roll = weapon_roll(mh_input_lowend_weapon_damage,mh_input_topend_weapon_damage)
                                        wep_roll = wep_roll + (attack_damage_normalization * current_ap / 14)
                                        #Rune Hit
                                        haste_percentage = (total_haste_rating / 25.21) / 100 #Returns a result of 0 - 1 for 0% - 100%
                                        haste_rune_cd = rune_grade_timer(current_time, last_rune_change[castable], last_rune_change[castable+6])
                                        if improved_unholy_presence_points != 0:
                                            if dk_presence == 2:
                                                haste_rune_cd = haste_rune_cd - (haste_rune_cd * ((improved_unholy_presence_points * 5) / 100))
                                        if dk_presence != 2:
                                            gcd = input_gcd / (1 + haste_percentage)
                                            if gcd < 1:
                                                gcd = 1
                                        ##Rune Miss
                                        haste_rune_cd_miss = 1
                                        how_many_dots_on_target = 0
                                        if dots[0] > current_time:
                                            how_many_dots_on_target += 1
                                        if dots[1] > current_time:
                                            how_many_dots_on_target += 1
                                        if dots[2] > current_time:
                                            how_many_dots_on_target += 1
                                        if dancing_rune_weapon_points == 1:
                                            if dancing_rune_weapon_active == True:
                                                if attack_table_results == 0:
                                                    atta_num = 0
                                                    rotation.append("Dancing Rune Weapon")
                                                    rotation_time.append(current_time)
                                                    rotation_status.append("Miss")
                                                    rotation_damage.append(atta_num)
                                                elif attack_table_results == 1:
                                                    atta_num = 0
                                                    rotation.append("Dancing Rune Weapon")
                                                    rotation_time.append(current_time)
                                                    rotation_status.append("Dodge")
                                                    rotation_damage.append(atta_num)
                                                elif attack_table_results == 5:
                                                    atta_num = (((0 + (wep_roll * .5)) + (( 0 + (wep_roll * .5)) * (.1 * how_many_dots_on_target)) + (( 0 + (wep_roll * .5)) * (.1 * how_many_dots_on_target) * darkruned_battlegear_four_set)) - (((0 + (wep_roll * .5)) + (( 0 + (wep_roll * .5)) * (.1 * how_many_dots_on_target)) + (( 0 + (wep_roll * .5)) * (.1 * how_many_dots_on_target) * darkruned_battlegear_four_set)) * armor_red_amount))  * (var_crit_amount)
                                                    if dk_presence == 0:
                                                        atta_num = atta_num + (atta_num * .15)
                                                    if t9_tank_two_set == True:
                                                        atta_num = atta_num + (atta_num *.05)
                                                    if blood_strikes_points != 0:
                                                        atta_num = atta_num + ((blood_strikes_points * 15) / 100)
                                                    if might_of_mograine_points != 0:
                                                        atta_num += atta_num * ((might_of_mograine_points * 15) / 100)
                                                    if scourgelords_battlegear_two_set == True:
                                                        atta_num = atta_num + (atta_num * .07)
                                                    if hysteria_active == True:
                                                        atta_num = atta_num + (atta_num * .2)
                                                    if tricksoftt_active == True:
                                                        atta_num = atta_num + (atta_num * .15)
                                                    atta_num = atta_num + (atta_num * increased_physical_damage) + (atta_num * increased_all_damage)
                                                    atta_num = atta_num * dancing_rune_weapon_damage_multi
                                                    dancing_rune_weapon_damage += atta_num
                                                    rotation.append("Dancing Rune Weapon")
                                                    rotation_time.append(current_time)
                                                    rotation_status.append("Crit") 
                                                    rotation_damage.append(atta_num)
                                                    trinket_hit_crit_tracker = 2
                                                    if sigil_of_haunted_dreams == True:
                                                        if random.randint(0, 100) < 15:
                                                            if sigil_of_haunted_dreams_buff == False:
                                                                sigil_of_haunted_dreams_buff = True
                                                                sigil_of_haunted_dreams_timer = current_time + 10  
                                                                total_crit = total_crit + ((173 / 45.8) / 100) 
                                                    if t9_dps_two_set == True:
                                                        if t9_bonus == False:
                                                            if t9_cd_timer < current_time:
                                                                if (random.randint(0, 10000)/100) < 50:
                                                                    t9_bonus = True
                                                                    t9_cd_timer = current_time + 45
                                                                    t9_active_timer = current_time + 15
                                                                    bonus_loop_str += 180
                                                                    rotation.append("T9 DPS 2p Bonus")
                                                                    rotation_time.append(current_time)
                                                                    rotation_damage.append(0)
                                                                    rotation_status.append("Proc")
                                                    if sudden_doom_points != 0:  #Sudden Doom aka Free Death Coil
                                                        if (random.randint(0, 10000)/100) < sudden_doom_points * 5:
                                                            hit = spell_hit(spell_hit_total, increased_spell_hit, target_level)
                                                            crit = spell_crit((total_crit + (darkruned_battlegear_two_set / 100)), spell_hit_total, increased_spell_hit, target_level, increased_spell_crit)
                                                            if hit == True:
                                                                if crit == True:
                                                                    atta_num = random.randint(443, 665)
                                                                    atta_num = (atta_num + ((current_ap + (current_ap * ((impurity_points * 4) / 100))) * 0)) * var_crit_amount
                                                                    if sigil_of_vengeful_heart == True:
                                                                        atta_num + 380
                                                                    if sigil_of_the_wild_buck == True:
                                                                        atta_num += 80
                                                                    if black_ice_points == 5:
                                                                        atta_num = atta_num + (atta_num * .1)
                                                                    elif black_ice_points == 4:
                                                                        atta_num = atta_num + (atta_num * .08)
                                                                    elif black_ice_points == 3:
                                                                        atta_num = atta_num + (atta_num * .06)
                                                                    elif black_ice_points == 2:
                                                                        atta_num = atta_num + (atta_num * .04)
                                                                    elif black_ice_points == 1:
                                                                        atta_num = atta_num + (atta_num * .02)
                                                                    if dk_presence == 0:
                                                                        atta_num = atta_num + (atta_num * .15)
                                                                    if tundra_stalker_points != 0:
                                                                        if dots[0] > current_time:
                                                                            atta_num = atta_num + (atta_num * (tundra_stalker_points * .03))
                                                                    if glyph_death_coil == True:
                                                                        atta_num += atta_num * .15
                                                                    if rage_of_rivendale_points != 0:
                                                                        if dots[1] > current_time:
                                                                            atta_num += atta_num * ((rage_of_rivendale_points * 2) / 100)
                                                                    if morbitity_points != 0:
                                                                        atta_num += ((morbitity_points * 5) / 100)
                                                                    if hysteria_active == True:
                                                                        atta_num = atta_num + (atta_num * .2)
                                                                    if tricksoftt_active == True:
                                                                        atta_num = atta_num + (atta_num * .15)
                                                                    atta_num = atta_num + (atta_num * increased_spell_damage) + (atta_num * increased_all_damage)
                                                                    sudden_doom_damage += atta_num
                                                                    if unholy_blight_points == 1:
                                                                        unholy_blight_amount = atta_num / 10   
                                                                        unholy_blight_timer = current_time + 10
                                                                    if rune_of_cinderglacier_active == True:
                                                                         rune_of_cinderglacier_damage = atta_num * .2
                                                                         rune_of_cinderglacier_active_count += 1
                                                                         rotation.append("Rune of Cinderglacier")
                                                                         rotation_time.append(current_time)
                                                                         rotation_status.append("Active")
                                                                         rotation_damage.append(atta_num * .2)
                                                                         if rune_of_cinderglacier_active_count == 2:
                                                                             rune_of_cinderglacier_active = False
                                                                    rotation.append("Sudden Doom")
                                                                    rotation_time.append(current_time)
                                                                    rotation_status.append("Crit")
                                                                    rotation_damage.append(atta_num)
                                                                else:
                                                                    atta_num = random.randint(443, 665)
                                                                    atta_num = (atta_num + ((current_ap + (current_ap * ((impurity_points * 4) / 100))) * 0))
                                                                    if sigil_of_vengeful_heart == True:
                                                                        atta_num + 380
                                                                    if sigil_of_the_wild_buck == True:
                                                                        atta_num += 80
                                                                    if black_ice_points == 5:
                                                                        atta_num = atta_num + (atta_num * .1)
                                                                    elif black_ice_points == 4:
                                                                        atta_num = atta_num + (atta_num * .08)
                                                                    elif black_ice_points == 3:
                                                                        atta_num = atta_num + (atta_num * .06)
                                                                    elif black_ice_points == 2:
                                                                        atta_num = atta_num + (atta_num * .04)
                                                                    elif black_ice_points == 1:
                                                                        atta_num = atta_num + (atta_num * .02)
                                                                    if dk_presence == 0:
                                                                        atta_num = atta_num + (atta_num * .15)
                                                                    if tundra_stalker_points != 0:
                                                                        if dots[0] > current_time:
                                                                            atta_num = atta_num + (atta_num * (tundra_stalker_points * .03))
                                                                    if glyph_death_coil == True:
                                                                        atta_num += atta_num * .15
                                                                    if rage_of_rivendale_points != 0:
                                                                        if dots[1] > current_time:
                                                                            atta_num += atta_num * ((rage_of_rivendale_points * 2) / 100)
                                                                    if morbitity_points != 0:
                                                                        atta_num += ((morbitity_points * 5) / 100)
                                                                    if hysteria_active == True:
                                                                        atta_num = atta_num + (atta_num * .2)
                                                                    if tricksoftt_active == True:
                                                                        atta_num = atta_num + (atta_num * .15)
                                                                    atta_num = atta_num + (atta_num * increased_spell_damage) + (atta_num * increased_all_damage)
                                                                    sudden_doom_damage += atta_num
                                                                    if unholy_blight_points == 1:
                                                                        unholy_blight_amount = atta_num / 10 
                                                                        unholy_blight_timer = current_time + 10
                                                                    if rune_of_cinderglacier_active == True:
                                                                         rune_of_cinderglacier_damage = atta_num * .2
                                                                         rune_of_cinderglacier_active_count += 1
                                                                         rotation.append("Rune of Cinderglacier")
                                                                         rotation_time.append(current_time)
                                                                         rotation_status.append("Active")
                                                                         rotation_damage.append(atta_num * .2)
                                                                         if rune_of_cinderglacier_active_count == 2:
                                                                             rune_of_cinderglacier_active = False
                                                                    rotation.append("Sudden Doom")
                                                                    rotation_time.append(current_time)
                                                                    rotation_status.append("Hit")
                                                                    rotation_damage.append(atta_num)
                                                            if hit == False:
                                                                rotation.append("Sudden Doom")
                                                                rotation_time.append(current_time)
                                                                rotation_status.append("Miss")
                                                                rotation_damage.append(0)                                            
                                                elif attack_table_results == 7:
                                                    atta_num = (((0 + (wep_roll * .5)) + (( 0 + (wep_roll * .5)) * (.1 * how_many_dots_on_target)) + (( 0 + (wep_roll * .5)) * (.1 * how_many_dots_on_target) * darkruned_battlegear_four_set)) - (((0 + (wep_roll * .5)) + (( 0 + (wep_roll * .5)) * (.1 * how_many_dots_on_target)) + (( 0 + (wep_roll * .5)) * (.1 * how_many_dots_on_target) * darkruned_battlegear_four_set)) * armor_red_amount))
                                                    if dk_presence == 0:
                                                        atta_num = atta_num + (atta_num * .15)
                                                    if t9_tank_two_set == True:
                                                        atta_num = atta_num + (atta_num *.05)
                                                    if blood_strikes_points != 0:
                                                        atta_num = atta_num + ((blood_strikes_points * 15) / 100)
                                                    if might_of_mograine_points != 0:
                                                        atta_num += atta_num * ((might_of_mograine_points * 15) / 100)
                                                    if scourgelords_battlegear_two_set == True:
                                                        atta_num = atta_num + (atta_num * .07)
                                                    if hysteria_active == True:
                                                        atta_num = atta_num + (atta_num * .2)
                                                    if tricksoftt_active == True:
                                                        atta_num = atta_num + (atta_num * .15)
                                                    atta_num = atta_num + (atta_num * increased_physical_damage) + (atta_num * increased_all_damage)
                                                    atta_num = atta_num * dancing_rune_weapon_damage_multi
                                                    dancing_rune_weapon_damage += atta_num
                                                    rotation.append("Dancing Rune Weapon")
                                                    rotation_time.append(current_time)
                                                    rotation_status.append("Hit")
                                                    rotation_damage.append(atta_num)
                                                    trinket_hit_crit_tracker = 1
                                                    if sigil_of_haunted_dreams == True:
                                                        if random.randint(0, 100) < 15:
                                                            if sigil_of_haunted_dreams_buff == False:
                                                                sigil_of_haunted_dreams_buff = True
                                                                sigil_of_haunted_dreams_timer = current_time + 10  
                                                                total_crit = total_crit + ((173 / 45.8) / 100) 
                                                    if t9_dps_two_set == True:
                                                        if t9_bonus == False:
                                                            if t9_cd_timer < current_time:
                                                                if (random.randint(0, 10000)/100) < 50:
                                                                    t9_bonus = True
                                                                    t9_cd_timer = current_time + 45
                                                                    t9_active_timer = current_time + 15
                                                                    bonus_loop_str += 180
                                                                    rotation.append("T9 DPS 2p Bonus")
                                                                    rotation_time.append(current_time)
                                                                    rotation_damage.append(0)
                                                                    rotation_status.append("Proc")
                                                    if sudden_doom_points != 0:  #Sudden Doom aka Free Death Coil
                                                        if (random.randint(0, 10000)/100) < sudden_doom_points * 5:
                                                            hit = spell_hit(spell_hit_total, increased_spell_hit, target_level)
                                                            crit = spell_crit((total_crit + (darkruned_battlegear_two_set / 100)), spell_hit_total, increased_spell_hit, target_level, increased_spell_crit)
                                                            if hit == True:
                                                                if crit == True:
                                                                    atta_num = random.randint(443, 665)
                                                                    atta_num = (atta_num + ((current_ap + (current_ap * ((impurity_points * 4) / 100))) * 0)) * var_crit_amount
                                                                    if sigil_of_vengeful_heart == True:
                                                                        atta_num + 380
                                                                    if sigil_of_the_wild_buck == True:
                                                                        atta_num += 80
                                                                    if black_ice_points == 5:
                                                                        atta_num = atta_num + (atta_num * .1)
                                                                    elif black_ice_points == 4:
                                                                        atta_num = atta_num + (atta_num * .08)
                                                                    elif black_ice_points == 3:
                                                                        atta_num = atta_num + (atta_num * .06)
                                                                    elif black_ice_points == 2:
                                                                        atta_num = atta_num + (atta_num * .04)
                                                                    elif black_ice_points == 1:
                                                                        atta_num = atta_num + (atta_num * .02)
                                                                    if dk_presence == 0:
                                                                        atta_num = atta_num + (atta_num * .15)
                                                                    if tundra_stalker_points != 0:
                                                                        if dots[0] > current_time:
                                                                            atta_num = atta_num + (atta_num * (tundra_stalker_points * .03))
                                                                    if glyph_death_coil == True:
                                                                        atta_num += atta_num * .15
                                                                    if rage_of_rivendale_points != 0:
                                                                        if dots[1] > current_time:
                                                                            atta_num += atta_num * ((rage_of_rivendale_points * 2) / 100)
                                                                    if morbitity_points != 0:
                                                                        atta_num += ((morbitity_points * 5) / 100)
                                                                    if hysteria_active == True:
                                                                        atta_num = atta_num + (atta_num * .2)
                                                                    if tricksoftt_active == True:
                                                                        atta_num = atta_num + (atta_num * .15)
                                                                    atta_num = atta_num + (atta_num * increased_spell_damage) + (atta_num * increased_all_damage)
                                                                    sudden_doom_damage += atta_num
                                                                    if unholy_blight_points == 1:
                                                                        unholy_blight_amount = atta_num / 10   
                                                                        unholy_blight_timer = current_time + 10
                                                                    if rune_of_cinderglacier_active == True:
                                                                         rune_of_cinderglacier_damage = atta_num * .2
                                                                         rune_of_cinderglacier_active_count += 1
                                                                         rotation.append("Rune of Cinderglacier")
                                                                         rotation_time.append(current_time)
                                                                         rotation_status.append("Active")
                                                                         rotation_damage.append(atta_num * .2)
                                                                         if rune_of_cinderglacier_active_count == 2:
                                                                             rune_of_cinderglacier_active = False
                                                                    rotation.append("Sudden Doom")
                                                                    rotation_time.append(current_time)
                                                                    rotation_status.append("Crit")
                                                                    rotation_damage.append(atta_num)
                                                                else:
                                                                    atta_num = random.randint(443, 665)
                                                                    atta_num = (atta_num + ((current_ap + (current_ap * ((impurity_points * 4) / 100))) * 0))
                                                                    if sigil_of_vengeful_heart == True:
                                                                        atta_num + 380
                                                                    if sigil_of_the_wild_buck == True:
                                                                        atta_num += 80
                                                                    if black_ice_points == 5:
                                                                        atta_num = atta_num + (atta_num * .1)
                                                                    elif black_ice_points == 4:
                                                                        atta_num = atta_num + (atta_num * .08)
                                                                    elif black_ice_points == 3:
                                                                        atta_num = atta_num + (atta_num * .06)
                                                                    elif black_ice_points == 2:
                                                                        atta_num = atta_num + (atta_num * .04)
                                                                    elif black_ice_points == 1:
                                                                        atta_num = atta_num + (atta_num * .02)
                                                                    if dk_presence == 0:
                                                                        atta_num = atta_num + (atta_num * .15)
                                                                    if tundra_stalker_points != 0:
                                                                        if dots[0] > current_time:
                                                                            atta_num = atta_num + (atta_num * (tundra_stalker_points * .03))
                                                                    if glyph_death_coil == True:
                                                                        atta_num += atta_num * .15
                                                                    if rage_of_rivendale_points != 0:
                                                                        if dots[1] > current_time:
                                                                            atta_num += atta_num * ((rage_of_rivendale_points * 2) / 100)
                                                                    if morbitity_points != 0:
                                                                        atta_num += ((morbitity_points * 5) / 100)
                                                                    if hysteria_active == True:
                                                                        atta_num = atta_num + (atta_num * .2)
                                                                    if tricksoftt_active == True:
                                                                        atta_num = atta_num + (atta_num * .15)
                                                                    atta_num = atta_num + (atta_num * increased_spell_damage) + (atta_num * increased_all_damage)
                                                                    sudden_doom_damage += atta_num
                                                                    if unholy_blight_points == 1:
                                                                        unholy_blight_amount = atta_num / 10 
                                                                        unholy_blight_timer = current_time + 10
                                                                    if rune_of_cinderglacier_active == True:
                                                                         rune_of_cinderglacier_damage = atta_num * .2
                                                                         rune_of_cinderglacier_active_count += 1
                                                                         rotation.append("Rune of Cinderglacier")
                                                                         rotation_time.append(current_time)
                                                                         rotation_status.append("Active")
                                                                         rotation_damage.append(atta_num * .2)
                                                                         if rune_of_cinderglacier_active_count == 2:
                                                                             rune_of_cinderglacier_active = False
                                                                    rotation.append("Sudden Doom")
                                                                    rotation_time.append(current_time)
                                                                    rotation_status.append("Hit")
                                                                    rotation_damage.append(atta_num)
                                                            if hit == False:
                                                                rotation.append("Sudden Doom")
                                                                rotation_time.append(current_time)
                                                                rotation_status.append("Miss")
                                                                rotation_damage.append(0)   
                                        if attack_table_results == 0:
                                            atta_num = 0
                                            rune_cd_tracker[castable] = rune_cd(haste_rune_cd_miss, current_time)
                                            rotation.append("Heart Strike")
                                            rotation_time.append(current_time)
                                            rotation_status.append("Miss")
                                            rotation_damage.append(atta_num)
                                            current_time = current_time + gcd
                                            used_gcd = True
                                            continue
                                        elif attack_table_results == 1:
                                            atta_num = 0
                                            rune_cd_tracker[castable] = rune_cd(haste_rune_cd_miss, current_time)
                                            rotation.append("Heart Strike")
                                            rotation_time.append(current_time)
                                            rotation_status.append("Dodge")
                                            rotation_damage.append(atta_num)
                                            current_time = current_time + gcd
                                            used_gcd = True
                                            continue
                                        elif attack_table_results == 5:
                                            #crit attack
                                            rune_cd_tracker[castable] = rune_cd(haste_rune_cd, current_time)
                                            atta_num = (((0 + (wep_roll * .5)) + (( 0 + (wep_roll * .5)) * (.1 * how_many_dots_on_target)) + (( 0 + (wep_roll * .5)) * (.1 * how_many_dots_on_target) * darkruned_battlegear_four_set)) - (((0 + (wep_roll * .5)) + (( 0 + (wep_roll * .5)) * (.1 * how_many_dots_on_target)) + (( 0 + (wep_roll * .5)) * (.1 * how_many_dots_on_target) * darkruned_battlegear_four_set)) * armor_red_amount))  * (var_crit_amount)
                                            if dk_presence == 0:
                                                atta_num = atta_num + (atta_num * .15)
                                            if t9_tank_two_set == True:
                                                atta_num = atta_num + (atta_num *.05)
                                            if blood_strikes_points != 0:
                                                atta_num = atta_num + ((blood_strikes_points * 15) / 100)
                                            if might_of_mograine_points != 0:
                                                atta_num += atta_num * ((might_of_mograine_points * 15) / 100)
                                            if scourgelords_battlegear_two_set == True:
                                                atta_num = atta_num + (atta_num * .07)
                                            if hysteria_active == True:
                                                atta_num = atta_num + (atta_num * .2)
                                            if tricksoftt_active == True:
                                                atta_num = atta_num + (atta_num * .15)
                                            atta_num = atta_num + (atta_num * increased_physical_damage) + (atta_num * increased_all_damage)
                                            sum_heart_strike_attacks += atta_num
                                            current_power = runic_power(10, current_power, max_runic)
                                            trinket_hit_crit_tracker = 2
                                            if sigil_of_haunted_dreams == True:
                                                if random.randint(0, 100) < 15:
                                                    if sigil_of_haunted_dreams_buff == False:
                                                        sigil_of_haunted_dreams_buff = True
                                                        sigil_of_haunted_dreams_timer = current_time + 10  
                                                        total_crit = total_crit + ((173 / 45.8) / 100) 
                                            if t9_dps_two_set == True:
                                                if t9_bonus == False:
                                                    if t9_cd_timer < current_time:
                                                        if (random.randint(0, 10000)/100) < 50:
                                                            t9_bonus = True
                                                            t9_cd_timer = current_time + 45
                                                            t9_active_timer = current_time + 15
                                                            bonus_loop_str += 180
                                                            rotation.append("T9 DPS 2p Bonus")
                                                            rotation_time.append(current_time)
                                                            rotation_damage.append(0)
                                                            rotation_status.append("Proc")
                                            if sudden_doom_points != 0:  #Sudden Doom aka Free Death Coil
                                                if (random.randint(0, 10000)/100) < sudden_doom_points * 5:
                                                    hit = spell_hit(spell_hit_total, increased_spell_hit, target_level)
                                                    crit = spell_crit((total_crit + (darkruned_battlegear_two_set / 100)), spell_hit_total, increased_spell_hit, target_level, increased_spell_crit)
                                                    if hit == True:
                                                        if crit == True:
                                                            atta_num = random.randint(443, 665)
                                                            atta_num = (atta_num + ((current_ap + (current_ap * ((impurity_points * 4) / 100))) * 0)) * var_crit_amount
                                                            if sigil_of_vengeful_heart == True:
                                                                atta_num + 380
                                                            if sigil_of_the_wild_buck == True:
                                                                atta_num += 80
                                                            if black_ice_points == 5:
                                                                atta_num = atta_num + (atta_num * .1)
                                                            elif black_ice_points == 4:
                                                                atta_num = atta_num + (atta_num * .08)
                                                            elif black_ice_points == 3:
                                                                atta_num = atta_num + (atta_num * .06)
                                                            elif black_ice_points == 2:
                                                                atta_num = atta_num + (atta_num * .04)
                                                            elif black_ice_points == 1:
                                                                atta_num = atta_num + (atta_num * .02)
                                                            if dk_presence == 0:
                                                                atta_num = atta_num + (atta_num * .15)
                                                            if tundra_stalker_points != 0:
                                                                if dots[0] > current_time:
                                                                    atta_num = atta_num + (atta_num * (tundra_stalker_points * .03))
                                                            if glyph_death_coil == True:
                                                                atta_num += atta_num * .15
                                                            if rage_of_rivendale_points != 0:
                                                                if dots[1] > current_time:
                                                                    atta_num += atta_num * ((rage_of_rivendale_points * 2) / 100)
                                                            if morbitity_points != 0:
                                                                atta_num += ((morbitity_points * 5) / 100)
                                                            if hysteria_active == True:
                                                                atta_num = atta_num + (atta_num * .2)
                                                            if tricksoftt_active == True:
                                                                atta_num = atta_num + (atta_num * .15)
                                                            atta_num = atta_num + (atta_num * increased_spell_damage) + (atta_num * increased_all_damage)
                                                            sudden_doom_damage += atta_num
                                                            if unholy_blight_points == 1:
                                                                unholy_blight_amount = atta_num / 10   
                                                                unholy_blight_timer = current_time + 10
                                                            if rune_of_cinderglacier_active == True:
                                                                 rune_of_cinderglacier_damage = atta_num * .2
                                                                 rune_of_cinderglacier_active_count += 1
                                                                 rotation.append("Rune of Cinderglacier")
                                                                 rotation_time.append(current_time)
                                                                 rotation_status.append("Active")
                                                                 rotation_damage.append(atta_num * .2)
                                                                 if rune_of_cinderglacier_active_count == 2:
                                                                     rune_of_cinderglacier_active = False
                                                            rotation.append("Sudden Doom")
                                                            rotation_time.append(current_time)
                                                            rotation_status.append("Crit")
                                                            rotation_damage.append(atta_num)
                                                        else:
                                                            atta_num = random.randint(443, 665)
                                                            atta_num = (atta_num + ((current_ap + (current_ap * ((impurity_points * 4) / 100))) * 0))
                                                            if sigil_of_vengeful_heart == True:
                                                                atta_num + 380
                                                            if sigil_of_the_wild_buck == True:
                                                                atta_num += 80
                                                            if black_ice_points == 5:
                                                                atta_num = atta_num + (atta_num * .1)
                                                            elif black_ice_points == 4:
                                                                atta_num = atta_num + (atta_num * .08)
                                                            elif black_ice_points == 3:
                                                                atta_num = atta_num + (atta_num * .06)
                                                            elif black_ice_points == 2:
                                                                atta_num = atta_num + (atta_num * .04)
                                                            elif black_ice_points == 1:
                                                                atta_num = atta_num + (atta_num * .02)
                                                            if dk_presence == 0:
                                                                atta_num = atta_num + (atta_num * .15)
                                                            if tundra_stalker_points != 0:
                                                                if dots[0] > current_time:
                                                                    atta_num = atta_num + (atta_num * (tundra_stalker_points * .03))
                                                            if glyph_death_coil == True:
                                                                atta_num += atta_num * .15
                                                            if rage_of_rivendale_points != 0:
                                                                if dots[1] > current_time:
                                                                    atta_num += atta_num * ((rage_of_rivendale_points * 2) / 100)
                                                            if morbitity_points != 0:
                                                                atta_num += ((morbitity_points * 5) / 100)
                                                            if hysteria_active == True:
                                                                atta_num = atta_num + (atta_num * .2)
                                                            if tricksoftt_active == True:
                                                                atta_num = atta_num + (atta_num * .15)
                                                            atta_num = atta_num + (atta_num * increased_spell_damage) + (atta_num * increased_all_damage)
                                                            sudden_doom_damage += atta_num
                                                            if unholy_blight_points == 1:
                                                                unholy_blight_amount = atta_num / 10 
                                                                unholy_blight_timer = current_time + 10
                                                            if rune_of_cinderglacier_active == True:
                                                                 rune_of_cinderglacier_damage = atta_num * .2
                                                                 rune_of_cinderglacier_active_count += 1
                                                                 rotation.append("Rune of Cinderglacier")
                                                                 rotation_time.append(current_time)
                                                                 rotation_status.append("Active")
                                                                 rotation_damage.append(atta_num * .2)
                                                                 if rune_of_cinderglacier_active_count == 2:
                                                                     rune_of_cinderglacier_active = False
                                                            rotation.append("Sudden Doom")
                                                            rotation_time.append(current_time)
                                                            rotation_status.append("Hit")
                                                            rotation_damage.append(atta_num)
                                                    if hit == False:
                                                        rotation.append("Sudden Doom")
                                                        rotation_time.append(current_time)
                                                        rotation_status.append("Miss")
                                                        rotation_damage.append(0)
                                            rotation.append("Heart Strike")
                                            rotation_time.append(current_time)
                                            rotation_status.append("Crit")
                                            rotation_damage.append(atta_num)
                                            current_time += gcd
                                            used_gcd = True
                                            continue
                                        elif attack_table_results == 7:
                                            #normal attack
                                            rune_cd_tracker[castable] = rune_cd(haste_rune_cd, current_time)
                                            atta_num = (((0 + (wep_roll * .5)) + (( 0 + (wep_roll * .5)) * (.1 * how_many_dots_on_target)) + (( 0 + (wep_roll * .5)) * (.1 * how_many_dots_on_target) * darkruned_battlegear_four_set)) - (((0 + (wep_roll * .5)) + (( 0 + (wep_roll * .5)) * (.1 * how_many_dots_on_target)) + (( 0 + (wep_roll * .5)) * (.1 * how_many_dots_on_target) * darkruned_battlegear_four_set)) * armor_red_amount))
                                            if dk_presence == 0:
                                                atta_num = atta_num + (atta_num * .15)
                                            if t9_tank_two_set == True:
                                                atta_num = atta_num + (atta_num *.05)
                                            if blood_strikes_points != 0:
                                                atta_num = atta_num + ((blood_strikes_points * 15) / 100)
                                            if might_of_mograine_points != 0:
                                                atta_num += atta_num * ((might_of_mograine_points * 15) / 100)
                                            if scourgelords_battlegear_two_set == True:
                                                atta_num = atta_num + (atta_num * .07)
                                            if hysteria_active == True:
                                                atta_num = atta_num + (atta_num * .2)
                                            if tricksoftt_active == True:
                                                atta_num = atta_num + (atta_num * .15)
                                            atta_num = atta_num + (atta_num * increased_physical_damage) + (atta_num * increased_all_damage)
                                            sum_heart_strike_attacks += atta_num
                                            current_power = runic_power(10, current_power, max_runic)
                                            trinket_hit_crit_tracker = 1
                                            if sigil_of_haunted_dreams == True:
                                                if random.randint(0, 100) < 15:
                                                    if sigil_of_haunted_dreams_buff == False:
                                                        sigil_of_haunted_dreams_buff = True
                                                        sigil_of_haunted_dreams_timer = current_time + 10  
                                                        total_crit = total_crit + ((173 / 45.8) / 100) 
                                            if t9_dps_two_set == True:
                                                if t9_bonus == False:
                                                    if t9_cd_timer < current_time:
                                                        if (random.randint(0, 10000)/100) < 50:
                                                            t9_bonus = True
                                                            t9_cd_timer = current_time + 45
                                                            t9_active_timer = current_time + 15
                                                            bonus_loop_str += 180
                                                            rotation.append("T9 DPS 2p Bonus")
                                                            rotation_time.append(current_time)
                                                            rotation_damage.append(0)
                                                            rotation_status.append("Proc")
                                            if sudden_doom_points != 0:  #Sudden Doom aka Free Death Coil
                                                if (random.randint(0, 10000)/100) < sudden_doom_points * 5:
                                                    hit = spell_hit(spell_hit_total, increased_spell_hit, target_level)
                                                    crit = spell_crit((total_crit + (darkruned_battlegear_two_set / 100)), spell_hit_total, increased_spell_hit, target_level, increased_spell_crit)
                                                    if hit == True:
                                                        if crit == True:
                                                            atta_num = random.randint(443, 665)
                                                            atta_num = (atta_num + ((current_ap + (current_ap * ((impurity_points * 4) / 100))) * 0)) * var_crit_amount
                                                            if sigil_of_vengeful_heart == True:
                                                                atta_num + 380
                                                            if sigil_of_the_wild_buck == True:
                                                                atta_num += 80
                                                            if black_ice_points == 5:
                                                                atta_num = atta_num + (atta_num * .1)
                                                            elif black_ice_points == 4:
                                                                atta_num = atta_num + (atta_num * .08)
                                                            elif black_ice_points == 3:
                                                                atta_num = atta_num + (atta_num * .06)
                                                            elif black_ice_points == 2:
                                                                atta_num = atta_num + (atta_num * .04)
                                                            elif black_ice_points == 1:
                                                                atta_num = atta_num + (atta_num * .02)
                                                            if dk_presence == 0:
                                                                atta_num = atta_num + (atta_num * .15)
                                                            if tundra_stalker_points != 0:
                                                                if dots[0] > current_time:
                                                                    atta_num = atta_num + (atta_num * (tundra_stalker_points * .03))
                                                            if glyph_death_coil == True:
                                                                atta_num += atta_num * .15
                                                            if rage_of_rivendale_points != 0:
                                                                if dots[1] > current_time:
                                                                    atta_num += atta_num * ((rage_of_rivendale_points * 2) / 100)
                                                            if morbitity_points != 0:
                                                                atta_num += ((morbitity_points * 5) / 100)
                                                            if hysteria_active == True:
                                                                atta_num = atta_num + (atta_num * .2)
                                                            if tricksoftt_active == True:
                                                                atta_num = atta_num + (atta_num * .15)
                                                            atta_num = atta_num + (atta_num * increased_spell_damage) + (atta_num * increased_all_damage)
                                                            sudden_doom_damage += atta_num
                                                            if unholy_blight_points == 1:
                                                                unholy_blight_amount = atta_num / 10   
                                                                unholy_blight_timer = current_time + 10
                                                            if rune_of_cinderglacier_active == True:
                                                                 rune_of_cinderglacier_damage = atta_num * .2
                                                                 rune_of_cinderglacier_active_count += 1
                                                                 rotation.append("Rune of Cinderglacier")
                                                                 rotation_time.append(current_time)
                                                                 rotation_status.append("Active")
                                                                 rotation_damage.append(atta_num * .2)
                                                                 if rune_of_cinderglacier_active_count == 2:
                                                                     rune_of_cinderglacier_active = False
                                                            rotation.append("Sudden Doom")
                                                            rotation_time.append(current_time)
                                                            rotation_status.append("Crit")
                                                            rotation_damage.append(atta_num)
                                                        else:
                                                            atta_num = random.randint(443, 665)
                                                            atta_num = (atta_num + ((current_ap + (current_ap * ((impurity_points * 4) / 100))) * 0))
                                                            if sigil_of_vengeful_heart == True:
                                                                atta_num + 380
                                                            if sigil_of_the_wild_buck == True:
                                                                atta_num += 80
                                                            if black_ice_points == 5:
                                                                atta_num = atta_num + (atta_num * .1)
                                                            elif black_ice_points == 4:
                                                                atta_num = atta_num + (atta_num * .08)
                                                            elif black_ice_points == 3:
                                                                atta_num = atta_num + (atta_num * .06)
                                                            elif black_ice_points == 2:
                                                                atta_num = atta_num + (atta_num * .04)
                                                            elif black_ice_points == 1:
                                                                atta_num = atta_num + (atta_num * .02)
                                                            if dk_presence == 0:
                                                                atta_num = atta_num + (atta_num * .15)
                                                            if tundra_stalker_points != 0:
                                                                if dots[0] > current_time:
                                                                    atta_num = atta_num + (atta_num * (tundra_stalker_points * .03))
                                                            if glyph_death_coil == True:
                                                                atta_num += atta_num * .15
                                                            if rage_of_rivendale_points != 0:
                                                                if dots[1] > current_time:
                                                                    atta_num += atta_num * ((rage_of_rivendale_points * 2) / 100)
                                                            if morbitity_points != 0:
                                                                atta_num += ((morbitity_points * 5) / 100)
                                                            if hysteria_active == True:
                                                                atta_num = atta_num + (atta_num * .2)
                                                            if tricksoftt_active == True:
                                                                atta_num = atta_num + (atta_num * .15)
                                                            atta_num = atta_num + (atta_num * increased_spell_damage) + (atta_num * increased_all_damage)
                                                            sudden_doom_damage += atta_num
                                                            if unholy_blight_points == 1:
                                                                unholy_blight_amount = atta_num / 10 
                                                                unholy_blight_timer = current_time + 10
                                                            if rune_of_cinderglacier_active == True:
                                                                 rune_of_cinderglacier_damage = atta_num * .2
                                                                 rune_of_cinderglacier_active_count += 1
                                                                 rotation.append("Rune of Cinderglacier")
                                                                 rotation_time.append(current_time)
                                                                 rotation_status.append("Active")
                                                                 rotation_damage.append(atta_num * .2)
                                                                 if rune_of_cinderglacier_active_count == 2:
                                                                     rune_of_cinderglacier_active = False
                                                            rotation.append("Sudden Doom")
                                                            rotation_time.append(current_time)
                                                            rotation_status.append("Hit")
                                                            rotation_damage.append(atta_num)
                                                    if hit == False:
                                                        rotation.append("Sudden Doom")
                                                        rotation_time.append(current_time)
                                                        rotation_status.append("Miss")
                                                        rotation_damage.append(0)
                                            rotation.append("Heart Strike")
                                            rotation_time.append(current_time)
                                            rotation_status.append("Hit")
                                            rotation_damage.append(atta_num)
                                            current_time += gcd
                                            used_gcd = True
                                            continue
                    
                    
                                       
                    if pestilence_allow_reset == False:
                        if use_blood_strike_over_blood_boil == False: #Use Blood boil
                            castable = all_rune_check(blood, current_time, rune_cd_tracker) #Blood Boil
                            use_death_rune = False
                            if castable == 3:   
                                castable_death = all_rune_check(death, current_time, rune_cd_tracker)
                                castable_death_f = all_rune_check(death_f, current_time, rune_cd_tracker)
                                castable_death_u = all_rune_check(death_u, current_time, rune_cd_tracker)
                                if castable_death != 3:
                                    use_death_rune = True
                                    just_used_death_rune = True
                                    castable = castable_death
                                elif castable_death_f != 3:
                                    use_death_rune = True
                                    just_used_death_rune = True
                                    castable = castable_death_f
                                elif castable_death_u != 3:
                                    use_death_rune = True
                                    just_used_death_rune = True
                                    castable = castable_death_u
                            if castable != 3:  
                                if castable == 2: 
                                    castable = 0
                                if use_death_rune == True:
                                    use_death_rune = False
                                    if castable_death != 3:
                                        rune_cd_tracker[castable] = 0
                                        if castable_death == 2:
                                            castable_death = 0
                                        rune_cd_tracker[castable_death + 6] = 10000
                                    elif castable_death_f != 3:
                                        castable += 2
                                        rune_cd_tracker[castable] = 0
                                        if castable_death_f == 2:
                                            castable_death_f = 0
                                        rune_cd_tracker[castable_death_f + 8] = 10000
                                    elif castable_death_u != 3:
                                        castable += 4
                                        rune_cd_tracker[castable] = 0
                                        if castable_death_u == 2:
                                            castable_death_u = 0
                                        rune_cd_tracker[castable_death_u + 10] = 10000
                                else:
                                    use_death_rune = False
                                    castable += blood
                                hit = spell_hit(spell_hit_total, increased_spell_hit, target_level)
                                crit = spell_crit((total_crit), spell_hit_total, increased_spell_hit, target_level, increased_spell_crit)
                                #Rune Hit
                                haste_percentage = (total_haste_rating / 25.21) / 100 #Returns a result of 0 - 1 for 0% - 100%
                                haste_rune_cd = rune_grade_timer(current_time, last_rune_change[castable], last_rune_change[castable+6])
                                if improved_unholy_presence_points != 0:
                                    if dk_presence == 2:
                                        haste_rune_cd = haste_rune_cd - (haste_rune_cd * ((improved_unholy_presence_points * 5) / 100))
                                if dk_presence != 2:
                                    gcd = input_gcd / (1 + haste_percentage)
                                    if gcd < 1:
                                        gcd = 1
                                other_blood_boil_damage = 0
                                blood_boil_multiple_repeate = 1
                                while blood_boil_multiple_repeate < amount_of_targets:
                                    hit2 = spell_hit(spell_hit_total, increased_spell_hit, target_level)
                                    crit2 = spell_crit((total_crit), spell_hit_total, increased_spell_hit, target_level, increased_spell_crit)
                                    if hit2 == True:
                                        if crit2 == True:
                                            atta_num = random.randint(180, 220)
                                            atta_num = (atta_num + ((current_ap + (current_ap * ((impurity_points * 4) / 100))) * .06)) * var_crit_amount
                                            if dots[0] > current_time:
                                                if dots[1] > current_time:
                                                    atta_num += atta_num
                                                elif dots[1] <= current_time:
                                                    atta_num += atta_num / 2
                                            if dots[0] < current_time:
                                                if dots[1] > current_time:
                                                    atta_num += atta_num / 2
                                            if dk_presence == 0:
                                                atta_num = atta_num + (atta_num * .15)
                                            if black_ice_points == 5:
                                                atta_num = atta_num + (atta_num * .1)
                                            elif black_ice_points == 4:
                                                atta_num = atta_num + (atta_num * .08)
                                            elif black_ice_points == 3:
                                                atta_num = atta_num + (atta_num * .06)
                                            elif black_ice_points == 2:
                                                atta_num = atta_num + (atta_num * .04)
                                            elif black_ice_points == 1:
                                                atta_num = atta_num + (atta_num * .02)
                                            if tundra_stalker_points != 0:
                                                if dots[0] > current_time:
                                                    atta_num = atta_num + (atta_num * (tundra_stalker_points * .03))
                                            if rage_of_rivendale_points != 0:
                                                if dots[1] > current_time:
                                                    atta_num += atta_num * ((rage_of_rivendale_points * 2) / 100)
                                            if might_of_mograine_points != 0:
                                                atta_num += atta_num * ((might_of_mograine_points * 15) / 100)
                                            if blood_strikes_points != 0:
                                                atta_num = atta_num + ((blood_strikes_points * 10) / 100)
                                            if hysteria_active == True:
                                                atta_num = atta_num + (atta_num * .2)
                                            if tricksoftt_active == True:
                                                atta_num = atta_num + (atta_num * .15)
                                            atta_num = atta_num + (atta_num * increased_spell_damage) + (atta_num * increased_all_damage)
                                            other_blood_boil_damage += atta_num
                                            if rune_of_cinderglacier_active == True:
                                                 rune_of_cinderglacier_damage = atta_num * .2
                                                 rune_of_cinderglacier_active_count += 1
                                                 rotation.append("Rune of Cinderglacier")
                                                 rotation_time.append(current_time)
                                                 rotation_status.append("Active")
                                                 rotation_damage.append(atta_num * .2)
                                                 if rune_of_cinderglacier_active_count == 2:
                                                     rune_of_cinderglacier_active = False
                                        else:
                                            atta_num = random.randint(180, 220)
                                            atta_num = (atta_num + ((current_ap + (current_ap * ((impurity_points * 4) / 100))) * .06))
                                            if dots[0] > current_time:
                                                if dots[1] > current_time:
                                                    atta_num += atta_num
                                                elif dots[1] <= current_time:
                                                    atta_num += atta_num / 2
                                            if dots[0] < current_time:
                                                if dots[1] > current_time:
                                                    atta_num += atta_num / 2
                                            if dk_presence == 0:
                                                atta_num = atta_num + (atta_num * .15)
                                            if black_ice_points == 5:
                                                atta_num = atta_num + (atta_num * .1)
                                            elif black_ice_points == 4:
                                                atta_num = atta_num + (atta_num * .08)
                                            elif black_ice_points == 3:
                                                atta_num = atta_num + (atta_num * .06)
                                            elif black_ice_points == 2:
                                                atta_num = atta_num + (atta_num * .04)
                                            elif black_ice_points == 1:
                                                atta_num = atta_num + (atta_num * .02)
                                            if tundra_stalker_points != 0:
                                                if dots[0] > current_time:
                                                    atta_num = atta_num + (atta_num * (tundra_stalker_points * .03))
                                            if rage_of_rivendale_points != 0:
                                                if dots[1] > current_time:
                                                    atta_num += atta_num * ((rage_of_rivendale_points * 2) / 100)
                                            if might_of_mograine_points != 0:
                                                atta_num += atta_num * ((might_of_mograine_points * 15) / 100)
                                            if blood_strikes_points != 0:
                                                atta_num = atta_num + ((blood_strikes_points * 10) / 100)
                                            if hysteria_active == True:
                                                atta_num = atta_num + (atta_num * .2)
                                            if tricksoftt_active == True:
                                                atta_num = atta_num + (atta_num * .15)
                                            atta_num = atta_num + (atta_num * increased_spell_damage) + (atta_num * increased_all_damage)
                                            other_blood_boil_damage += atta_num
                                            if rune_of_cinderglacier_active == True:
                                                 rune_of_cinderglacier_damage = atta_num * .2
                                                 rune_of_cinderglacier_active_count += 1
                                                 rotation.append("Rune of Cinderglacier")
                                                 rotation_time.append(current_time)
                                                 rotation_status.append("Active")
                                                 rotation_damage.append(atta_num * .2)
                                                 if rune_of_cinderglacier_active_count == 2:
                                                     rune_of_cinderglacier_active = False
                                    if hit2 == False:
                                        ##Rune Miss
                                        other_blood_boil_damage += 0
                                    blood_boil_multiple_repeate += 1
                                rune_cd_tracker[castable] = rune_cd(haste_rune_cd, current_time)
                                if hit == True:
                                    if crit == True:
                                        atta_num = random.randint(180, 220)
                                        atta_num = (atta_num + ((current_ap + (current_ap * ((impurity_points * 4) / 100))) * .06)) * var_crit_amount
                                        if dots[0] > current_time:
                                            if dots[1] > current_time:
                                                atta_num += atta_num
                                            elif dots[1] <= current_time:
                                                atta_num += atta_num / 2
                                        if dots[0] < current_time:
                                            if dots[1] > current_time:
                                                atta_num += atta_num / 2
                                        if dk_presence == 0:
                                            atta_num = atta_num + (atta_num * .15)
                                        if black_ice_points == 5:
                                            atta_num = atta_num + (atta_num * .1)
                                        elif black_ice_points == 4:
                                            atta_num = atta_num + (atta_num * .08)
                                        elif black_ice_points == 3:
                                            atta_num = atta_num + (atta_num * .06)
                                        elif black_ice_points == 2:
                                            atta_num = atta_num + (atta_num * .04)
                                        elif black_ice_points == 1:
                                            atta_num = atta_num + (atta_num * .02)
                                        if tundra_stalker_points != 0:
                                            if dots[0] > current_time:
                                                atta_num = atta_num + (atta_num * (tundra_stalker_points * .03))
                                        if rage_of_rivendale_points != 0:
                                            if dots[1] > current_time:
                                                atta_num += atta_num * ((rage_of_rivendale_points * 2) / 100)
                                        if might_of_mograine_points != 0:
                                            atta_num += atta_num * ((might_of_mograine_points * 15) / 100)
                                        if blood_strikes_points != 0:
                                            atta_num = atta_num + ((blood_strikes_points * 10) / 100)
                                        if hysteria_active == True:
                                            atta_num = atta_num + (atta_num * .2)
                                        if tricksoftt_active == True:
                                            atta_num = atta_num + (atta_num * .15)
                                        atta_num = atta_num + (atta_num * increased_spell_damage) + (atta_num * increased_all_damage)
                                        blood_boil_damage += atta_num + other_blood_boil_damage
                                        if rune_of_cinderglacier_active == True:
                                             rune_of_cinderglacier_damage = atta_num * .2
                                             rune_of_cinderglacier_active_count += 1
                                             rotation.append("Rune of Cinderglacier")
                                             rotation_time.append(current_time)
                                             rotation_status.append("Active")
                                             rotation_damage.append(atta_num * .2)
                                             if rune_of_cinderglacier_active_count == 2:
                                                 rune_of_cinderglacier_active = False
                                        rotation.append("Blood Boil")
                                        rotation_time.append(current_time)
                                        rotation_status.append("Crit")
                                        rotation_damage.append(atta_num)
                                        current_time += gcd
                                        used_gcd = True
                                        continue
                                    else:
                                        atta_num = random.randint(180, 220)
                                        atta_num = (atta_num + ((current_ap + (current_ap * ((impurity_points * 4) / 100))) * .06))
                                        if dots[0] > current_time:
                                            if dots[1] > current_time:
                                                atta_num += atta_num
                                            elif dots[1] <= current_time:
                                                atta_num += atta_num / 2
                                        if dots[0] < current_time:
                                            if dots[1] > current_time:
                                                atta_num += atta_num / 2
                                        if dk_presence == 0:
                                            atta_num = atta_num + (atta_num * .15)
                                        if black_ice_points == 5:
                                            atta_num = atta_num + (atta_num * .1)
                                        elif black_ice_points == 4:
                                            atta_num = atta_num + (atta_num * .08)
                                        elif black_ice_points == 3:
                                            atta_num = atta_num + (atta_num * .06)
                                        elif black_ice_points == 2:
                                            atta_num = atta_num + (atta_num * .04)
                                        elif black_ice_points == 1:
                                            atta_num = atta_num + (atta_num * .02)
                                        if tundra_stalker_points != 0:
                                            if dots[0] > current_time:
                                                atta_num = atta_num + (atta_num * (tundra_stalker_points * .03))
                                        if rage_of_rivendale_points != 0:
                                            if dots[1] > current_time:
                                                atta_num += atta_num * ((rage_of_rivendale_points * 2) / 100)
                                        if might_of_mograine_points != 0:
                                            atta_num += atta_num * ((might_of_mograine_points * 15) / 100)
                                        if blood_strikes_points != 0:
                                            atta_num = atta_num + ((blood_strikes_points * 10) / 100)
                                        if hysteria_active == True:
                                            atta_num = atta_num + (atta_num * .2)
                                        if tricksoftt_active == True:
                                            atta_num = atta_num + (atta_num * .15)
                                        atta_num = atta_num + (atta_num * increased_spell_damage) + (atta_num * increased_all_damage)
                                        blood_boil_damage += atta_num + other_blood_boil_damage
                                        if rune_of_cinderglacier_active == True:
                                             rune_of_cinderglacier_damage = atta_num * .2
                                             rune_of_cinderglacier_active_count += 1
                                             rotation.append("Rune of Cinderglacier")
                                             rotation_time.append(current_time)
                                             rotation_status.append("Active")
                                             rotation_damage.append(atta_num * .2)
                                             if rune_of_cinderglacier_active_count == 2:
                                                 rune_of_cinderglacier_active = False
                                        rotation.append("Blood Boil")
                                        rotation_time.append(current_time)
                                        rotation_status.append("Hit")
                                        rotation_damage.append(atta_num)
                                        current_time += gcd
                                        used_gcd = True
                                        continue
                                if hit == False:
                                    ##Rune Miss
                                    blood_boil_damage += other_blood_boil_damage
                                    rotation.append("Blood Boil")
                                    rotation_time.append(current_time)
                                    rotation_status.append("Miss")
                                    rotation_damage.append(0 + other_blood_boil_damage)
                                    current_time = current_time + gcd
                                    used_gcd = True
                                    continue
                    
                    if pestilence_allow_reset == False:
                        if use_blood_strike_over_blood_boil == True and heart_strike_points == 0:  #Use Blood Strike
                            castable = all_rune_check(blood, current_time, rune_cd_tracker) #Blood Strike
                            use_death_rune = False
                            if castable == 3:   #Blood Strike
                                until_dot0 = dots[0]
                                until_dot1 = dots[1]
                                if pestilence_allow_reset == True:
                                    until_dot0 -= pestilence_reset_window
                                    until_dot1 -= pestilence_reset_window
                                castable_death = all_rune_check(death, current_time, rune_cd_tracker)
                                castable_death_f = all_rune_check(death_f, current_time, rune_cd_tracker)
                                castable_death_u = all_rune_check(death_u, current_time, rune_cd_tracker)
                                if castable_death != 3:
                                    if until_dot0 <= current_time + haste_rune_cd:
                                        if until_dot1 <= current_time + haste_rune_cd:
                                            use_death_rune = True
                                            just_used_death_rune = True
                                            castable = castable_death
                                elif castable_death_f != 3:
                                    if until_dot0 <= current_time + haste_rune_cd:
                                        if until_dot1 <= current_time + haste_rune_cd:
                                            use_death_rune = True
                                            just_used_death_rune = True
                                            castable = castable_death_f
                                elif castable_death_u != 3:
                                    if until_dot0 <= current_time + haste_rune_cd:
                                        if until_dot1 <= current_time + haste_rune_cd:
                                            use_death_rune = True
                                            just_used_death_rune = True
                                            castable = castable_death_u
                            if castable != 3:  
                                if castable == 2: 
                                    castable = 0
                                if use_death_rune == True:
                                    use_death_rune = False
                                    if castable_death != 3:
                                        rune_cd_tracker[castable] = 0
                                        if castable_death == 2:
                                            castable_death = 0
                                        rune_cd_tracker[castable_death + 6] = 10000
                                    elif castable_death_f != 3:
                                        castable += 2
                                        rune_cd_tracker[castable] = 0
                                        if castable_death_f == 2:
                                            castable_death_f = 0
                                        rune_cd_tracker[castable_death_f + 8] = 10000
                                    elif castable_death_u != 3:
                                        castable += 4
                                        rune_cd_tracker[castable] = 0
                                        if castable_death_u == 2:
                                            castable_death_u = 0
                                        rune_cd_tracker[castable_death_u + 10] = 10000
                                else:
                                    use_death_rune = False
                                attack_table_results = attack_table(1, tanking, H2, True, False, hit_from_gear, hit_from_other, target_level, all_expertise_dodge, all_expertise_parry, total_crit, (annihilation_talent_points / 100) + increased_phy_crit + ((subversion_points * 3) / 100))
                                armor_red_amount = dam_reduc(current_armor, armor_penetration, target_level)
                                wep_roll = weapon_roll(mh_input_lowend_weapon_damage,mh_input_topend_weapon_damage)
                                wep_roll = wep_roll + (attack_damage_normalization * current_ap / 14)
                                #Rune Hit
                                haste_percentage = (total_haste_rating / 25.21) / 100 #Returns a result of 0 - 1 for 0% - 100%
                                haste_rune_cd = rune_grade_timer(current_time, last_rune_change[castable], last_rune_change[castable+6])
                                if improved_unholy_presence_points != 0:
                                    if dk_presence == 2:
                                        haste_rune_cd = haste_rune_cd - (haste_rune_cd * ((improved_unholy_presence_points * 5) / 100))
                                if dk_presence != 2:
                                    gcd = input_gcd / (1 + haste_percentage)
                                    if gcd < 1:
                                        gcd = 1
                                ##Rune Miss
                                haste_rune_cd_miss = 1
                                how_many_dots_on_target = 0
                                if dots[0] > current_time:
                                    how_many_dots_on_target += 1
                                if dots[1] > current_time:
                                    how_many_dots_on_target += 1
                                if dots[2] > current_time:
                                    how_many_dots_on_target += 1
                                if dancing_rune_weapon_points == 1:
                                    if dancing_rune_weapon_active == True:
                                        if attack_table_results == 0:
                                            atta_num = 0
                                            rotation.append("Dancing Rune Weapon")
                                            rotation_time.append(current_time)
                                            rotation_status.append("Miss")
                                            rotation_damage.append(atta_num)
                                        elif attack_table_results == 1:
                                            atta_num = 0
                                            rotation.append("Dancing Rune Weapon")
                                            rotation_time.append(current_time)
                                            rotation_status.append("Dodge")
                                            rotation_damage.append(atta_num)
                                        elif attack_table_results == 5:
                                            atta_num = (((746 + (wep_roll * .4)) + (( 746 + (wep_roll * .4)) * (.125 * how_many_dots_on_target)) + (( 746 + (wep_roll * .4)) * (.125 * how_many_dots_on_target) * darkruned_battlegear_four_set)) - (((746 + (wep_roll * .4)) + (( 746 + (wep_roll * .4)) * (.125 * how_many_dots_on_target)) + (( 746 + (wep_roll * .4)) * (.125 * how_many_dots_on_target) * darkruned_battlegear_four_set)) * armor_red_amount))  * (var_crit_amount + (guile_of_gorefiend_points * .15))
                                            if dk_presence == 0:
                                                atta_num = atta_num + (atta_num * .15)
                                            if tundra_stalker_points != 0:
                                                if dots[0] > current_time:
                                                    atta_num = atta_num + (atta_num * (tundra_stalker_points * .03))
                                            if blood_of_the_north_points != 0:
                                                if blood_of_the_north_points < 3:
                                                    atta_num = atta_num + (atta_num * (blood_of_the_north_points * .03))
                                                elif blood_of_the_north_points == 3:
                                                    atta_num = atta_num + (atta_num * .1)
                                            if t9_tank_two_set == True:
                                                atta_num = atta_num + (atta_num *.05)
                                            if rage_of_rivendale_points != 0:
                                                if dots[1] > current_time:
                                                    atta_num += atta_num * ((rage_of_rivendale_points * 2) / 100)
                                            if blood_strikes_points != 0:
                                                atta_num = atta_num + ((blood_strikes_points * 5) / 100)
                                            if might_of_mograine_points != 0:
                                                atta_num += atta_num * ((might_of_mograine_points * 15) / 100)
                                            if hysteria_active == True:
                                                atta_num = atta_num + (atta_num * .2)
                                            if tricksoftt_active == True:
                                                atta_num = atta_num + (atta_num * .15)
                                            atta_num = atta_num + (atta_num * increased_physical_damage) + (atta_num * increased_all_damage)
                                            atta_num = atta_num * dancing_rune_weapon_damage_multi
                                            dancing_rune_weapon_damage += atta_num
                                            rotation.append("Dancing Rune Weapon")
                                            rotation_time.append(current_time)
                                            rotation_status.append("Crit")
                                            rotation_damage.append(atta_num)
                                            trinket_hit_crit_tracker = 2
                                            if blood_of_the_north_points != 0:
                                                if just_used_death_rune != True:
                                                    proc_num = random.randint(0, 100)
                                                    if blood_of_the_north_points < 3:
                                                        death_proc_chance = (blood_of_the_north_points * .3) * 100
                                                    elif blood_of_the_north_points == 3:
                                                        death_proc_chance = 100
                                                    if death_proc_chance >= proc_num:
                                                        death_castable = castable + death
                                                        rune_cd_tracker[death_castable] = rune_cd(haste_rune_cd, current_time)
                                                        rune_cd_tracker[castable] = 10000
                                            if reaping_points != 0:
                                                if just_used_death_rune != True:
                                                    proc_num = random.randint(0, 100)
                                                    if reaping_points < 3:
                                                        death_proc_chance = (reaping_points * .3) * 100
                                                    elif reaping_points == 3:
                                                        death_proc_chance = 100
                                                    if death_proc_chance >= proc_num:
                                                        death_castable = castable + death
                                                        rune_cd_tracker[death_castable] = rune_cd(haste_rune_cd, current_time)
                                                        rune_cd_tracker[castable] = 10000
                                            if sigil_of_haunted_dreams == True:
                                                if random.randint(0, 100) < 15:
                                                    if sigil_of_haunted_dreams_buff == False:
                                                        sigil_of_haunted_dreams_buff = True
                                                        sigil_of_haunted_dreams_timer = current_time + 10  
                                                        total_crit = total_crit + ((173 / 45.8) / 100) 
                                            if t9_dps_two_set == True:
                                                if t9_bonus == False:
                                                    if t9_cd_timer < current_time:
                                                        if (random.randint(0, 10000)/100) < 50:
                                                            t9_bonus = True
                                                            t9_cd_timer = current_time + 45
                                                            t9_active_timer = current_time + 15
                                                            bonus_loop_str += 180
                                                            rotation.append("T9 DPS 2p Bonus")
                                                            rotation_time.append(current_time)
                                                            rotation_damage.append(0)
                                                            rotation_status.append("Proc")
                                            if desolation_points != 0:
                                                if desolation_buff == False:
                                                    increased_all_damage += (desolation_points / 100)
                                                    desolation_buff_timer = current_time + 20
                                                    rotation.append("Desolation")
                                                    rotation_time.append(current_time)
                                                    rotation_damage.append(0)
                                                    rotation_status.append("Applied")
                                                    desolation_buff = True
                                                else:
                                                    desolation_buff_timer = current_time + 20
                                                    rotation.append("Desolation")
                                                    rotation_time.append(current_time)
                                                    rotation_damage.append(0)
                                                    rotation_status.append("Refresh")
                                            if sudden_doom_points != 0:  #Sudden Doom aka Free Death Coil
                                                if (random.randint(0, 10000)/100) < sudden_doom_points * 5:
                                                    hit = spell_hit(spell_hit_total, increased_spell_hit, target_level)
                                                    crit = spell_crit((total_crit + (darkruned_battlegear_two_set / 100)), spell_hit_total, increased_spell_hit, target_level, increased_spell_crit)
                                                    if hit == True:
                                                        if crit == True:
                                                            atta_num = random.randint(443, 665)
                                                            atta_num = (atta_num + ((current_ap + (current_ap * ((impurity_points * 4) / 100))) * 0)) * var_crit_amount
                                                            if sigil_of_vengeful_heart == True:
                                                                atta_num + 380
                                                            if sigil_of_the_wild_buck == True:
                                                                atta_num += 80
                                                            if black_ice_points == 5:
                                                                atta_num = atta_num + (atta_num * .1)
                                                            elif black_ice_points == 4:
                                                                atta_num = atta_num + (atta_num * .08)
                                                            elif black_ice_points == 3:
                                                                atta_num = atta_num + (atta_num * .06)
                                                            elif black_ice_points == 2:
                                                                atta_num = atta_num + (atta_num * .04)
                                                            elif black_ice_points == 1:
                                                                atta_num = atta_num + (atta_num * .02)
                                                            if dk_presence == 0:
                                                                atta_num = atta_num + (atta_num * .15)
                                                            if tundra_stalker_points != 0:
                                                                if dots[0] > current_time:
                                                                    atta_num = atta_num + (atta_num * (tundra_stalker_points * .03))
                                                            if glyph_death_coil == True:
                                                                atta_num += atta_num * .15
                                                            if rage_of_rivendale_points != 0:
                                                                if dots[1] > current_time:
                                                                    atta_num += atta_num * ((rage_of_rivendale_points * 2) / 100)
                                                            if morbitity_points != 0:
                                                                atta_num += ((morbitity_points * 5) / 100)
                                                            if hysteria_active == True:
                                                                atta_num = atta_num + (atta_num * .2)
                                                            if tricksoftt_active == True:
                                                                atta_num = atta_num + (atta_num * .15)
                                                            atta_num = atta_num + (atta_num * increased_spell_damage) + (atta_num * increased_all_damage)
                                                            sudden_doom_damage += atta_num
                                                            if unholy_blight_points == 1:
                                                                unholy_blight_amount = atta_num / 10   
                                                                unholy_blight_timer = current_time + 10
                                                            if rune_of_cinderglacier_active == True:
                                                                 rune_of_cinderglacier_damage = atta_num * .2
                                                                 rune_of_cinderglacier_active_count += 1
                                                                 rotation.append("Rune of Cinderglacier")
                                                                 rotation_time.append(current_time)
                                                                 rotation_status.append("Active")
                                                                 rotation_damage.append(atta_num * .2)
                                                                 if rune_of_cinderglacier_active_count == 2:
                                                                     rune_of_cinderglacier_active = False
                                                            rotation.append("Sudden Doom")
                                                            rotation_time.append(current_time)
                                                            rotation_status.append("Crit")
                                                            rotation_damage.append(atta_num)
                                                        else:
                                                            atta_num = random.randint(443, 665)
                                                            atta_num = (atta_num + ((current_ap + (current_ap * ((impurity_points * 4) / 100))) * 0))
                                                            if sigil_of_vengeful_heart == True:
                                                                atta_num + 380
                                                            if sigil_of_the_wild_buck == True:
                                                                atta_num += 80
                                                            if black_ice_points == 5:
                                                                atta_num = atta_num + (atta_num * .1)
                                                            elif black_ice_points == 4:
                                                                atta_num = atta_num + (atta_num * .08)
                                                            elif black_ice_points == 3:
                                                                atta_num = atta_num + (atta_num * .06)
                                                            elif black_ice_points == 2:
                                                                atta_num = atta_num + (atta_num * .04)
                                                            elif black_ice_points == 1:
                                                                atta_num = atta_num + (atta_num * .02)
                                                            if dk_presence == 0:
                                                                atta_num = atta_num + (atta_num * .15)
                                                            if tundra_stalker_points != 0:
                                                                if dots[0] > current_time:
                                                                    atta_num = atta_num + (atta_num * (tundra_stalker_points * .03))
                                                            if glyph_death_coil == True:
                                                                atta_num += atta_num * .15
                                                            if rage_of_rivendale_points != 0:
                                                                if dots[1] > current_time:
                                                                    atta_num += atta_num * ((rage_of_rivendale_points * 2) / 100)
                                                            if morbitity_points != 0:
                                                                atta_num += ((morbitity_points * 5) / 100)
                                                            if hysteria_active == True:
                                                                atta_num = atta_num + (atta_num * .2)
                                                            if tricksoftt_active == True:
                                                                atta_num = atta_num + (atta_num * .15)
                                                            atta_num = atta_num + (atta_num * increased_spell_damage) + (atta_num * increased_all_damage)
                                                            sudden_doom_damage += atta_num
                                                            if unholy_blight_points == 1:
                                                                unholy_blight_amount = atta_num / 10 
                                                                unholy_blight_timer = current_time + 10
                                                            if rune_of_cinderglacier_active == True:
                                                                 rune_of_cinderglacier_damage = atta_num * .2
                                                                 rune_of_cinderglacier_active_count += 1
                                                                 rotation.append("Rune of Cinderglacier")
                                                                 rotation_time.append(current_time)
                                                                 rotation_status.append("Active")
                                                                 rotation_damage.append(atta_num * .2)
                                                                 if rune_of_cinderglacier_active_count == 2:
                                                                     rune_of_cinderglacier_active = False
                                                            rotation.append("Sudden Doom")
                                                            rotation_time.append(current_time)
                                                            rotation_status.append("Hit")
                                                            rotation_damage.append(atta_num)
                                                    if hit == False:
                                                        rotation.append("Sudden Doom")
                                                        rotation_time.append(current_time)
                                                        rotation_status.append("Miss")
                                                        rotation_damage.append(0)
                                        elif attack_table_results == 7:
                                            atta_num = ((746 + (wep_roll * .4)) + (( 746 + (wep_roll * .4)) * (.125 * how_many_dots_on_target)) + (( 746 + (wep_roll * .4)) * (.125 * how_many_dots_on_target) * darkruned_battlegear_four_set)) - (((746 + (wep_roll * .4)) + (( 746 + (wep_roll * .4)) * (.125 * how_many_dots_on_target)) + (( 746 + (wep_roll * .4)) * (.125 * how_many_dots_on_target) * darkruned_battlegear_four_set)) * armor_red_amount)
                                            if dk_presence == 0:
                                                atta_num = atta_num + (atta_num * .15)
                                            if tundra_stalker_points != 0:
                                                if dots[0] > current_time:
                                                    atta_num = atta_num + (atta_num * (tundra_stalker_points * .03))
                                            if blood_of_the_north_points != 0:
                                                if blood_of_the_north_points < 3:
                                                    atta_num = atta_num + (atta_num * (blood_of_the_north_points * .03))
                                                elif blood_of_the_north_points == 3:
                                                    atta_num = atta_num + (atta_num * .1)
                                            if t9_tank_two_set == True:
                                                atta_num = atta_num + (atta_num *.05)
                                            if rage_of_rivendale_points != 0:
                                                if dots[1] > current_time:
                                                    atta_num += atta_num * ((rage_of_rivendale_points * 2) / 100)
                                            if blood_strikes_points != 0:
                                                atta_num = atta_num + ((blood_strikes_points * 5) / 100)
                                            if hysteria_active == True:
                                                atta_num = atta_num + (atta_num * .2)
                                            if tricksoftt_active == True:
                                                atta_num = atta_num + (atta_num * .15)
                                            atta_num = atta_num + (atta_num * increased_physical_damage) + (atta_num * increased_all_damage)
                                            atta_num = atta_num * dancing_rune_weapon_damage_multi
                                            dancing_rune_weapon_damage += atta_num
                                            rotation.append("Dancing Rune Weapon")
                                            rotation_time.append(current_time)
                                            rotation_status.append("Hit")
                                            rotation_damage.append(atta_num)
                                            trinket_hit_crit_tracker = 1
                                            if blood_of_the_north_points != 0:
                                                if just_used_death_rune != True:
                                                    proc_num = random.randint(0, 100)
                                                    if blood_of_the_north_points < 3:
                                                        death_proc_chance = (blood_of_the_north_points * .3) * 100
                                                    elif blood_of_the_north_points == 3:
                                                        death_proc_chance = 100
                                                    if death_proc_chance >= proc_num:
                                                        death_castable = castable + death
                                                        rune_cd_tracker[death_castable] = rune_cd(haste_rune_cd, current_time)
                                                        rune_cd_tracker[castable] = 10000  
                                            if reaping_points != 0:
                                                if just_used_death_rune != True:
                                                    proc_num = random.randint(0, 100)
                                                    if reaping_points < 3:
                                                        death_proc_chance = (reaping_points * .3) * 100
                                                    elif reaping_points == 3:
                                                        death_proc_chance = 100
                                                    if death_proc_chance >= proc_num:
                                                        death_castable = castable + death
                                                        rune_cd_tracker[death_castable] = rune_cd(haste_rune_cd, current_time)
                                                        rune_cd_tracker[castable] = 10000 
                                            if sigil_of_haunted_dreams == True:
                                                if random.randint(0, 100) < 15:
                                                    if sigil_of_haunted_dreams_buff == False:
                                                        sigil_of_haunted_dreams_buff = True
                                                        sigil_of_haunted_dreams_timer = current_time + 10  
                                                        total_crit = total_crit + ((173 / 45.8) / 100) 
                                            if t9_dps_two_set == True:
                                                if t9_bonus == False:
                                                    if t9_cd_timer < current_time:
                                                        if (random.randint(0, 10000)/100) < 50:
                                                            t9_bonus = True
                                                            t9_cd_timer = current_time + 45
                                                            t9_active_timer = current_time + 15
                                                            bonus_loop_str += 180
                                                            rotation.append("T9 DPS 2p Bonus")
                                                            rotation_time.append(current_time)
                                                            rotation_damage.append(0)
                                                            rotation_status.append("Proc")
                                            if desolation_points != 0:
                                                if desolation_buff == False:
                                                    increased_all_damage += (desolation_points / 100)
                                                    desolation_buff_timer = current_time + 20
                                                    rotation.append("Desolation")
                                                    rotation_time.append(current_time)
                                                    rotation_damage.append(0)
                                                    rotation_status.append("Applied")
                                                    desolation_buff = True
                                                else:
                                                    desolation_buff_timer = current_time + 20
                                                    rotation.append("Desolation")
                                                    rotation_time.append(current_time)
                                                    rotation_damage.append(0)
                                                    rotation_status.append("Refresh")
                                            if sudden_doom_points != 0:  #Sudden Doom aka Free Death Coil
                                                if (random.randint(0, 10000)/100) < sudden_doom_points * 5:
                                                    hit = spell_hit(spell_hit_total, increased_spell_hit, target_level)
                                                    crit = spell_crit((total_crit + (darkruned_battlegear_two_set / 100)), spell_hit_total, increased_spell_hit, target_level, increased_spell_crit)
                                                    if hit == True:
                                                        if crit == True:
                                                            atta_num = random.randint(443, 665)
                                                            atta_num = (atta_num + ((current_ap + (current_ap * ((impurity_points * 4) / 100))) * 0)) * var_crit_amount
                                                            if sigil_of_vengeful_heart == True:
                                                                atta_num + 380
                                                            if sigil_of_the_wild_buck == True:
                                                                atta_num += 80
                                                            if black_ice_points == 5:
                                                                atta_num = atta_num + (atta_num * .1)
                                                            elif black_ice_points == 4:
                                                                atta_num = atta_num + (atta_num * .08)
                                                            elif black_ice_points == 3:
                                                                atta_num = atta_num + (atta_num * .06)
                                                            elif black_ice_points == 2:
                                                                atta_num = atta_num + (atta_num * .04)
                                                            elif black_ice_points == 1:
                                                                atta_num = atta_num + (atta_num * .02)
                                                            if dk_presence == 0:
                                                                atta_num = atta_num + (atta_num * .15)
                                                            if tundra_stalker_points != 0:
                                                                if dots[0] > current_time:
                                                                    atta_num = atta_num + (atta_num * (tundra_stalker_points * .03))
                                                            if glyph_death_coil == True:
                                                                atta_num += atta_num * .15
                                                            if rage_of_rivendale_points != 0:
                                                                if dots[1] > current_time:
                                                                    atta_num += atta_num * ((rage_of_rivendale_points * 2) / 100)
                                                            if morbitity_points != 0:
                                                                atta_num += ((morbitity_points * 5) / 100)
                                                            if hysteria_active == True:
                                                                atta_num = atta_num + (atta_num * .2)
                                                            if tricksoftt_active == True:
                                                                atta_num = atta_num + (atta_num * .15)
                                                            atta_num = atta_num + (atta_num * increased_spell_damage) + (atta_num * increased_all_damage)
                                                            sudden_doom_damage += atta_num
                                                            if unholy_blight_points == 1:
                                                                unholy_blight_amount = atta_num / 10   
                                                                unholy_blight_timer = current_time + 10
                                                            if rune_of_cinderglacier_active == True:
                                                                 rune_of_cinderglacier_damage = atta_num * .2
                                                                 rune_of_cinderglacier_active_count += 1
                                                                 rotation.append("Rune of Cinderglacier")
                                                                 rotation_time.append(current_time)
                                                                 rotation_status.append("Active")
                                                                 rotation_damage.append(atta_num * .2)
                                                                 if rune_of_cinderglacier_active_count == 2:
                                                                     rune_of_cinderglacier_active = False
                                                            rotation.append("Sudden Doom")
                                                            rotation_time.append(current_time)
                                                            rotation_status.append("Crit")
                                                            rotation_damage.append(atta_num)
                                                        else:
                                                            atta_num = random.randint(443, 665)
                                                            atta_num = (atta_num + ((current_ap + (current_ap * ((impurity_points * 4) / 100))) * 0))
                                                            if sigil_of_vengeful_heart == True:
                                                                atta_num + 380
                                                            if sigil_of_the_wild_buck == True:
                                                                atta_num += 80
                                                            if black_ice_points == 5:
                                                                atta_num = atta_num + (atta_num * .1)
                                                            elif black_ice_points == 4:
                                                                atta_num = atta_num + (atta_num * .08)
                                                            elif black_ice_points == 3:
                                                                atta_num = atta_num + (atta_num * .06)
                                                            elif black_ice_points == 2:
                                                                atta_num = atta_num + (atta_num * .04)
                                                            elif black_ice_points == 1:
                                                                atta_num = atta_num + (atta_num * .02)
                                                            if dk_presence == 0:
                                                                atta_num = atta_num + (atta_num * .15)
                                                            if tundra_stalker_points != 0:
                                                                if dots[0] > current_time:
                                                                    atta_num = atta_num + (atta_num * (tundra_stalker_points * .03))
                                                            if glyph_death_coil == True:
                                                                atta_num += atta_num * .15
                                                            if rage_of_rivendale_points != 0:
                                                                if dots[1] > current_time:
                                                                    atta_num += atta_num * ((rage_of_rivendale_points * 2) / 100)
                                                            if morbitity_points != 0:
                                                                atta_num += ((morbitity_points * 5) / 100)
                                                            if hysteria_active == True:
                                                                atta_num = atta_num + (atta_num * .2)
                                                            if tricksoftt_active == True:
                                                                atta_num = atta_num + (atta_num * .15)
                                                            atta_num = atta_num + (atta_num * increased_spell_damage) + (atta_num * increased_all_damage)
                                                            sudden_doom_damage += atta_num
                                                            if unholy_blight_points == 1:
                                                                unholy_blight_amount = atta_num / 10 
                                                                unholy_blight_timer = current_time + 10
                                                            if rune_of_cinderglacier_active == True:
                                                                 rune_of_cinderglacier_damage = atta_num * .2
                                                                 rune_of_cinderglacier_active_count += 1
                                                                 rotation.append("Rune of Cinderglacier")
                                                                 rotation_time.append(current_time)
                                                                 rotation_status.append("Active")
                                                                 rotation_damage.append(atta_num * .2)
                                                                 if rune_of_cinderglacier_active_count == 2:
                                                                     rune_of_cinderglacier_active = False
                                                            rotation.append("Sudden Doom")
                                                            rotation_time.append(current_time)
                                                            rotation_status.append("Hit")
                                                            rotation_damage.append(atta_num)
                                                    if hit == False:
                                                        rotation.append("Sudden Doom")
                                                        rotation_time.append(current_time)
                                                        rotation_status.append("Miss")
                                                        rotation_damage.append(0)
                                if threat_of_thassarian_points != 0:  #Off Hand Blood Strike
                                    if H2 == False:
                                        threat_of_thass_roll = (threat_of_thassarian_points * 30) 
                                        if threat_of_thassarian_points == 3: 
                                            threat_of_thass_roll += 10 
                                        threat_of_t_num = random.randint(0, 100) 
                                        if threat_of_thass_roll >= threat_of_t_num: 
                                            oh_wep_roll = weapon_roll(oh_input_lowend_weapon_damage,oh_input_topend_weapon_damage)
                                            oh_wep_roll = wep_roll + (attack_damage_normalization * current_ap / 14)
                                            oh_attack_table_results = attack_table(1, tanking, H2, False, True, hit_from_gear, hit_from_other, target_level, all_expertise_dodge, all_expertise_parry, total_crit, (annihilation_talent_points / 100) + increased_phy_crit + ((subversion_points * 3) / 100))
                                            if oh_attack_table_results == 0:
                                                atta_num = 0
                                                rotation.append("OH - Blood Strike")
                                                rotation_time.append(current_time)
                                                rotation_status.append("Miss")
                                                rotation_damage.append(atta_num)
                                            elif oh_attack_table_results == 1:
                                                atta_num = 0
                                                rotation.append("OH - Blood Strike")
                                                rotation_time.append(current_time)
                                                rotation_status.append("Dodge")
                                                rotation_damage.append(atta_num)
                                            elif oh_attack_table_results == 5:
                                                #crit attack
                                                atta_num = (((746 + (oh_wep_roll * .4)) + (( 746 + (oh_wep_roll * .4)) * (.125 * how_many_dots_on_target)) + (( 746 + (oh_wep_roll * .4)) * (.125 * how_many_dots_on_target) * darkruned_battlegear_four_set )) - (((746 + (oh_wep_roll * .4)) + (( 746 + (oh_wep_roll * .4)) * (.125 * how_many_dots_on_target)) + (( 746 + (oh_wep_roll * .4)) * (.125 * how_many_dots_on_target) * darkruned_battlegear_four_set)) * armor_red_amount))  * (var_crit_amount + (guile_of_gorefiend_points * .15))
                                                if dk_presence == 0:
                                                    atta_num = atta_num + (atta_num * .15)
                                                if tundra_stalker_points != 0:
                                                    if dots[0] > current_time:
                                                        atta_num = atta_num + (atta_num * (tundra_stalker_points * .03))
                                                if blood_of_the_north_points != 0:
                                                    if blood_of_the_north_points < 3:
                                                        atta_num = atta_num + (atta_num * (blood_of_the_north_points * .03))
                                                    elif blood_of_the_north_points == 3:
                                                        atta_num = atta_num + (atta_num * .1)
                                                if t9_tank_two_set == True:
                                                    atta_num = atta_num + (atta_num *.05)
                                                if rage_of_rivendale_points != 0:
                                                    if dots[1] > current_time:
                                                        atta_num += atta_num * ((rage_of_rivendale_points * 2) / 100)
                                                if blood_strikes_points != 0:
                                                    atta_num = atta_num + ((blood_strikes_points * 5) / 100)
                                                if might_of_mograine_points != 0:
                                                    atta_num += atta_num * ((might_of_mograine_points * 15) / 100)
                                                atta_num = atta_num * oh_wep_damage_mod
                                                if hysteria_active == True:
                                                    atta_num = atta_num + (atta_num * .2)
                                                if tricksoftt_active == True:
                                                    atta_num = atta_num + (atta_num * .15)
                                                atta_num = atta_num + (atta_num * increased_physical_damage) + (atta_num * increased_all_damage)
                                                sum_oh_bs_attacks += atta_num
                                                trinket_hit_crit_tracker = 2
                                                if blood_of_the_north_points != 0:
                                                    if just_used_death_rune != True:
                                                        proc_num = random.randint(0, 100)
                                                        if blood_of_the_north_points < 3:
                                                            death_proc_chance = (blood_of_the_north_points * .3) * 100
                                                        elif blood_of_the_north_points == 3:
                                                            death_proc_chance = 100
                                                        if death_proc_chance >= proc_num:
                                                            death_castable = castable + death
                                                            rune_cd_tracker[death_castable] = rune_cd(haste_rune_cd, current_time)
                                                            rune_cd_tracker[castable] = 10000 
                                                if reaping_points != 0:
                                                    if just_used_death_rune != True:
                                                        proc_num = random.randint(0, 100)
                                                        if reaping_points < 3:
                                                            death_proc_chance = (reaping_points * .3) * 100
                                                        elif reaping_points == 3:
                                                            death_proc_chance = 100
                                                        if death_proc_chance >= proc_num:
                                                            death_castable = castable + death
                                                            rune_cd_tracker[death_castable] = rune_cd(haste_rune_cd, current_time)
                                                            rune_cd_tracker[castable] = 10000 
                                                if sigil_of_haunted_dreams == True:
                                                    if random.randint(0, 100) < 15:
                                                        if sigil_of_haunted_dreams_buff == False:
                                                            sigil_of_haunted_dreams_buff = True
                                                            sigil_of_haunted_dreams_timer = current_time + 10  
                                                            total_crit = total_crit + ((173 / 45.8) / 100)  
                                                if t9_dps_two_set == True:
                                                    if t9_bonus == False:
                                                        if t9_cd_timer < current_time:
                                                            if (random.randint(0, 10000)/100) < 50:
                                                                t9_bonus = True
                                                                t9_cd_timer = current_time + 45
                                                                t9_active_timer = current_time + 15
                                                                bonus_loop_str += 180
                                                                rotation.append("T9 DPS 2p Bonus")
                                                                rotation_time.append(current_time)
                                                                rotation_damage.append(0)
                                                                rotation_status.append("Proc")
                                                if desolation_points != 0:
                                                    if desolation_buff == False:
                                                        increased_all_damage += (desolation_points / 100)
                                                        desolation_buff_timer = current_time + 20
                                                        rotation.append("Desolation")
                                                        rotation_time.append(current_time)
                                                        rotation_damage.append(0)
                                                        rotation_status.append("Applied")
                                                        desolation_buff = True
                                                    else:
                                                        desolation_buff_timer = current_time + 20
                                                        rotation.append("Desolation")
                                                        rotation_time.append(current_time)
                                                        rotation_damage.append(0)
                                                        rotation_status.append("Refresh")
                                                if sudden_doom_points != 0:  #Sudden Doom aka Free Death Coil
                                                    if (random.randint(0, 10000)/100) < sudden_doom_points * 5:
                                                        hit = spell_hit(spell_hit_total, increased_spell_hit, target_level)
                                                        crit = spell_crit((total_crit + (darkruned_battlegear_two_set / 100)), spell_hit_total, increased_spell_hit, target_level, increased_spell_crit)
                                                        if hit == True:
                                                            if crit == True:
                                                                atta_num = random.randint(443, 665)
                                                                atta_num = (atta_num + ((current_ap + (current_ap * ((impurity_points * 4) / 100))) * 0)) * var_crit_amount
                                                                if sigil_of_vengeful_heart == True:
                                                                    atta_num + 380
                                                                if black_ice_points == 5:
                                                                    atta_num = atta_num + (atta_num * .1)
                                                                elif black_ice_points == 4:
                                                                    atta_num = atta_num + (atta_num * .08)
                                                                elif black_ice_points == 3:
                                                                    atta_num = atta_num + (atta_num * .06)
                                                                elif black_ice_points == 2:
                                                                    atta_num = atta_num + (atta_num * .04)
                                                                elif black_ice_points == 1:
                                                                    atta_num = atta_num + (atta_num * .02)
                                                                if dk_presence == 0:
                                                                    atta_num = atta_num + (atta_num * .15)
                                                                if tundra_stalker_points != 0:
                                                                    if dots[0] > current_time:
                                                                        atta_num = atta_num + (atta_num * (tundra_stalker_points * .03))
                                                                if glyph_death_coil == True:
                                                                    atta_num += atta_num * .15
                                                                if rage_of_rivendale_points != 0:
                                                                    if dots[1] > current_time:
                                                                        atta_num += atta_num * ((rage_of_rivendale_points * 2) / 100)
                                                                if morbitity_points != 0:
                                                                    atta_num += ((morbitity_points * 5) / 100)
                                                                if hysteria_active == True:
                                                                    atta_num = atta_num + (atta_num * .2)
                                                                if tricksoftt_active == True:
                                                                    atta_num = atta_num + (atta_num * .15)
                                                                atta_num = atta_num + (atta_num * increased_spell_damage) + (atta_num * increased_all_damage)
                                                                sudden_doom_damage += atta_num
                                                                if unholy_blight_points == 1:
                                                                    unholy_blight_amount = atta_num / 10   
                                                                    unholy_blight_timer = current_time + 10
                                                                if rune_of_cinderglacier_active == True:
                                                                     rune_of_cinderglacier_damage = atta_num * .2
                                                                     rune_of_cinderglacier_active_count += 1
                                                                     rotation.append("Rune of Cinderglacier")
                                                                     rotation_time.append(current_time)
                                                                     rotation_status.append("Active")
                                                                     rotation_damage.append(atta_num * .2)
                                                                     if rune_of_cinderglacier_active_count == 2:
                                                                         rune_of_cinderglacier_active = False
                                                                rotation.append("Sudden Doom")
                                                                rotation_time.append(current_time)
                                                                rotation_status.append("Crit")
                                                                rotation_damage.append(atta_num)
                                                            else:
                                                                atta_num = random.randint(443, 665)
                                                                atta_num = (atta_num + ((current_ap + (current_ap * ((impurity_points * 4) / 100))) * 0))
                                                                if sigil_of_vengeful_heart == True:
                                                                    atta_num + 380
                                                                if black_ice_points == 5:
                                                                    atta_num = atta_num + (atta_num * .1)
                                                                elif black_ice_points == 4:
                                                                    atta_num = atta_num + (atta_num * .08)
                                                                elif black_ice_points == 3:
                                                                    atta_num = atta_num + (atta_num * .06)
                                                                elif black_ice_points == 2:
                                                                    atta_num = atta_num + (atta_num * .04)
                                                                elif black_ice_points == 1:
                                                                    atta_num = atta_num + (atta_num * .02)
                                                                if dk_presence == 0:
                                                                    atta_num = atta_num + (atta_num * .15)
                                                                if tundra_stalker_points != 0:
                                                                    if dots[0] > current_time:
                                                                        atta_num = atta_num + (atta_num * (tundra_stalker_points * .03))
                                                                if glyph_death_coil == True:
                                                                    atta_num += atta_num * .15
                                                                if rage_of_rivendale_points != 0:
                                                                    if dots[1] > current_time:
                                                                        atta_num += atta_num * ((rage_of_rivendale_points * 2) / 100)
                                                                if morbitity_points != 0:
                                                                    atta_num += ((morbitity_points * 5) / 100)
                                                                if hysteria_active == True:
                                                                    atta_num = atta_num + (atta_num * .2)
                                                                if tricksoftt_active == True:
                                                                    atta_num = atta_num + (atta_num * .15)
                                                                atta_num = atta_num + (atta_num * increased_spell_damage) + (atta_num * increased_all_damage)
                                                                sudden_doom_damage += atta_num
                                                                if unholy_blight_points == 1:
                                                                    unholy_blight_amount = atta_num / 10 
                                                                    unholy_blight_timer = current_time + 10
                                                                if rune_of_cinderglacier_active == True:
                                                                     rune_of_cinderglacier_damage = atta_num * .2
                                                                     rune_of_cinderglacier_active_count += 1
                                                                     rotation.append("Rune of Cinderglacier")
                                                                     rotation_time.append(current_time)
                                                                     rotation_status.append("Active")
                                                                     rotation_damage.append(atta_num * .2)
                                                                     if rune_of_cinderglacier_active_count == 2:
                                                                         rune_of_cinderglacier_active = False
                                                                rotation.append("Sudden Doom")
                                                                rotation_time.append(current_time)
                                                                rotation_status.append("Hit")
                                                                rotation_damage.append(atta_num)
                                                        if hit == False:
                                                            rotation.append("Sudden Doom")
                                                            rotation_time.append(current_time)
                                                            rotation_status.append("Miss")
                                                            rotation_damage.append(0)
                                                rotation.append("OH - Blood Strike")
                                                rotation_time.append(current_time)
                                                rotation_status.append("Crit")
                                                rotation_damage.append(atta_num)
                                            elif oh_attack_table_results == 7:
                                                #normal attack
                                                atta_num = ((746 + (oh_wep_roll * .4)) + (( 746 + (oh_wep_roll * .4)) * (.125 * how_many_dots_on_target)) + + (( 746 + (oh_wep_roll * .4)) * (.125 * how_many_dots_on_target) * darkruned_battlegear_four_set)) - (((746 + (oh_wep_roll * .4)) + (( 746 + (oh_wep_roll * .4)) * (.125 * how_many_dots_on_target)) + + (( 746 + (oh_wep_roll * .4)) * (.125 * how_many_dots_on_target) * darkruned_battlegear_four_set)) * armor_red_amount)
                                                if dk_presence == 0:
                                                    atta_num = atta_num + (atta_num * .15)
                                                if tundra_stalker_points != 0:
                                                    if dots[0] > current_time:
                                                        atta_num = atta_num + (atta_num * (tundra_stalker_points * .03))
                                                if blood_of_the_north_points != 0:
                                                    if blood_of_the_north_points < 3:
                                                        atta_num = atta_num + (atta_num * (blood_of_the_north_points * .03))
                                                    elif blood_of_the_north_points == 3:
                                                        atta_num = atta_num + (atta_num * .1)
                                                if t9_tank_two_set == True:
                                                    atta_num = atta_num + (atta_num *.05)
                                                if rage_of_rivendale_points != 0:
                                                    if dots[1] > current_time:
                                                        atta_num += atta_num * ((rage_of_rivendale_points * 2) / 100)
                                                if blood_strikes_points != 0:
                                                    atta_num = atta_num + ((blood_strikes_points * 5) / 100)
                                                atta_num = atta_num * oh_wep_damage_mod
                                                if hysteria_active == True:
                                                    atta_num = atta_num + (atta_num * .2)
                                                if tricksoftt_active == True:
                                                    atta_num = atta_num + (atta_num * .15)
                                                atta_num = atta_num + (atta_num * increased_physical_damage) + (atta_num * increased_all_damage)
                                                sum_oh_bs_attacks += atta_num
                                                trinket_hit_crit_tracker = 1
                                                if blood_of_the_north_points != 0:
                                                    if just_used_death_rune != True:
                                                        proc_num = random.randint(0, 100)
                                                        if blood_of_the_north_points < 3:
                                                            death_proc_chance = (blood_of_the_north_points * .3) * 100
                                                        elif blood_of_the_north_points == 3:
                                                            death_proc_chance = 100
                                                        if death_proc_chance >= proc_num:
                                                            death_castable = castable + death
                                                            rune_cd_tracker[death_castable] = rune_cd(haste_rune_cd, current_time)
                                                            rune_cd_tracker[castable] = 10000  
                                                if reaping_points != 0:
                                                    if just_used_death_rune != True:
                                                        proc_num = random.randint(0, 100)
                                                        if reaping_points < 3:
                                                            death_proc_chance = (reaping_points * .3) * 100
                                                        elif reaping_points == 3:
                                                            death_proc_chance = 100
                                                        if death_proc_chance >= proc_num:
                                                            death_castable = castable + death
                                                            rune_cd_tracker[death_castable] = rune_cd(haste_rune_cd, current_time)
                                                            rune_cd_tracker[castable] = 10000 
                                                if sigil_of_haunted_dreams == True:
                                                    if random.randint(0, 100) < 15:
                                                        if sigil_of_haunted_dreams_buff == False:
                                                            sigil_of_haunted_dreams_buff = True
                                                            sigil_of_haunted_dreams_timer = current_time + 10  
                                                            total_crit = total_crit + ((173 / 45.8) / 100) 
                                                if t9_dps_two_set == True:
                                                    if t9_bonus == False:
                                                        if t9_cd_timer < current_time:
                                                            if (random.randint(0, 10000)/100) < 50:
                                                                t9_bonus = True
                                                                t9_cd_timer = current_time + 45
                                                                t9_active_timer = current_time + 15
                                                                bonus_loop_str += 180
                                                                rotation.append("T9 DPS 2p Bonus")
                                                                rotation_time.append(current_time)
                                                                rotation_damage.append(0)
                                                                rotation_status.append("Proc")
                                                if desolation_points != 0:
                                                    if desolation_buff == False:
                                                        increased_all_damage += (desolation_points / 100)
                                                        desolation_buff_timer = current_time + 20
                                                        rotation.append("Desolation")
                                                        rotation_time.append(current_time)
                                                        rotation_damage.append(0)
                                                        rotation_status.append("Applied")
                                                        desolation_buff = True
                                                    else:
                                                        desolation_buff_timer = current_time + 20
                                                        rotation.append("Desolation")
                                                        rotation_time.append(current_time)
                                                        rotation_damage.append(0)
                                                        rotation_status.append("Refresh")
                                                if sudden_doom_points != 0:  #Sudden Doom aka Free Death Coil
                                                    if (random.randint(0, 10000)/100) < sudden_doom_points * 5:
                                                        hit = spell_hit(spell_hit_total, increased_spell_hit, target_level)
                                                        crit = spell_crit((total_crit + (darkruned_battlegear_two_set / 100)), spell_hit_total, increased_spell_hit, target_level, increased_spell_crit)
                                                        if hit == True:
                                                            if crit == True:
                                                                atta_num = random.randint(443, 665)
                                                                atta_num = (atta_num + ((current_ap + (current_ap * ((impurity_points * 4) / 100))) * 0)) * var_crit_amount
                                                                if sigil_of_vengeful_heart == True:
                                                                    atta_num + 380
                                                                if sigil_of_the_wild_buck == True:
                                                                    atta_num += 80
                                                                if black_ice_points == 5:
                                                                    atta_num = atta_num + (atta_num * .1)
                                                                elif black_ice_points == 4:
                                                                    atta_num = atta_num + (atta_num * .08)
                                                                elif black_ice_points == 3:
                                                                    atta_num = atta_num + (atta_num * .06)
                                                                elif black_ice_points == 2:
                                                                    atta_num = atta_num + (atta_num * .04)
                                                                elif black_ice_points == 1:
                                                                    atta_num = atta_num + (atta_num * .02)
                                                                if dk_presence == 0:
                                                                    atta_num = atta_num + (atta_num * .15)
                                                                if tundra_stalker_points != 0:
                                                                    if dots[0] > current_time:
                                                                        atta_num = atta_num + (atta_num * (tundra_stalker_points * .03))
                                                                if glyph_death_coil == True:
                                                                    atta_num += atta_num * .15
                                                                if rage_of_rivendale_points != 0:
                                                                    if dots[1] > current_time:
                                                                        atta_num += atta_num * ((rage_of_rivendale_points * 2) / 100)
                                                                if morbitity_points != 0:
                                                                    atta_num += ((morbitity_points * 5) / 100)
                                                                if hysteria_active == True:
                                                                    atta_num = atta_num + (atta_num * .2)
                                                                if tricksoftt_active == True:
                                                                    atta_num = atta_num + (atta_num * .15)
                                                                atta_num = atta_num + (atta_num * increased_spell_damage) + (atta_num * increased_all_damage)
                                                                sudden_doom_damage += atta_num
                                                                if unholy_blight_points == 1:
                                                                    unholy_blight_amount = atta_num / 10   
                                                                    unholy_blight_timer = current_time + 10
                                                                if rune_of_cinderglacier_active == True:
                                                                     rune_of_cinderglacier_damage = atta_num * .2
                                                                     rune_of_cinderglacier_active_count += 1
                                                                     rotation.append("Rune of Cinderglacier")
                                                                     rotation_time.append(current_time)
                                                                     rotation_status.append("Active")
                                                                     rotation_damage.append(atta_num * .2)
                                                                     if rune_of_cinderglacier_active_count == 2:
                                                                         rune_of_cinderglacier_active = False
                                                                rotation.append("Sudden Doom")
                                                                rotation_time.append(current_time)
                                                                rotation_status.append("Crit")
                                                                rotation_damage.append(atta_num)
                                                            else:
                                                                atta_num = random.randint(443, 665)
                                                                atta_num = (atta_num + ((current_ap + (current_ap * ((impurity_points * 4) / 100))) * 0))
                                                                if sigil_of_vengeful_heart == True:
                                                                    atta_num + 380
                                                                if sigil_of_the_wild_buck == True:
                                                                    atta_num += 80
                                                                if black_ice_points == 5:
                                                                    atta_num = atta_num + (atta_num * .1)
                                                                elif black_ice_points == 4:
                                                                    atta_num = atta_num + (atta_num * .08)
                                                                elif black_ice_points == 3:
                                                                    atta_num = atta_num + (atta_num * .06)
                                                                elif black_ice_points == 2:
                                                                    atta_num = atta_num + (atta_num * .04)
                                                                elif black_ice_points == 1:
                                                                    atta_num = atta_num + (atta_num * .02)
                                                                if dk_presence == 0:
                                                                    atta_num = atta_num + (atta_num * .15)
                                                                if tundra_stalker_points != 0:
                                                                    if dots[0] > current_time:
                                                                        atta_num = atta_num + (atta_num * (tundra_stalker_points * .03))
                                                                if glyph_death_coil == True:
                                                                    atta_num += atta_num * .15
                                                                if rage_of_rivendale_points != 0:
                                                                    if dots[1] > current_time:
                                                                        atta_num += atta_num * ((rage_of_rivendale_points * 2) / 100)
                                                                if morbitity_points != 0:
                                                                    atta_num += ((morbitity_points * 5) / 100)
                                                                if hysteria_active == True:
                                                                    atta_num = atta_num + (atta_num * .2)
                                                                if tricksoftt_active == True:
                                                                    atta_num = atta_num + (atta_num * .15)
                                                                atta_num = atta_num + (atta_num * increased_spell_damage) + (atta_num * increased_all_damage)
                                                                sudden_doom_damage += atta_num
                                                                if unholy_blight_points == 1:
                                                                    unholy_blight_amount = atta_num / 10 
                                                                    unholy_blight_timer = current_time + 10
                                                                if rune_of_cinderglacier_active == True:
                                                                     rune_of_cinderglacier_damage = atta_num * .2
                                                                     rune_of_cinderglacier_active_count += 1
                                                                     rotation.append("Rune of Cinderglacier")
                                                                     rotation_time.append(current_time)
                                                                     rotation_status.append("Active")
                                                                     rotation_damage.append(atta_num * .2)
                                                                     if rune_of_cinderglacier_active_count == 2:
                                                                         rune_of_cinderglacier_active = False
                                                                rotation.append("Sudden Doom")
                                                                rotation_time.append(current_time)
                                                                rotation_status.append("Hit")
                                                                rotation_damage.append(atta_num)
                                                        if hit == False:
                                                            rotation.append("Sudden Doom")
                                                            rotation_time.append(current_time)
                                                            rotation_status.append("Miss")
                                                            rotation_damage.append(0)
                                                rotation.append("OH - Blood Strike")
                                                rotation_time.append(current_time)
                                                rotation_status.append("Hit")
                                                rotation_damage.append(atta_num)
    
                                
                            
                                if attack_table_results == 0:
                                    atta_num = 0
                                    rune_cd_tracker[castable] = rune_cd(haste_rune_cd_miss, current_time)
                                    rotation.append("Blood Strike")
                                    rotation_time.append(current_time)
                                    rotation_status.append("Miss")
                                    rotation_damage.append(atta_num)
                                    current_time = current_time + gcd
                                    used_gcd = True
                                    continue
                                elif attack_table_results == 1:
                                    atta_num = 0
                                    rune_cd_tracker[castable] = rune_cd(haste_rune_cd_miss, current_time)
                                    rotation.append("Blood Strike")
                                    rotation_time.append(current_time)
                                    rotation_status.append("Dodge")
                                    rotation_damage.append(atta_num)
                                    current_time = current_time + gcd
                                    used_gcd = True
                                    continue
                                elif attack_table_results == 5:
                                    #crit attack
                                    rune_cd_tracker[castable] = rune_cd(haste_rune_cd, current_time)
                                    atta_num = (((746 + (wep_roll * .4)) + (( 746 + (wep_roll * .4)) * (.125 * how_many_dots_on_target)) + (( 746 + (wep_roll * .4)) * (.125 * how_many_dots_on_target) * darkruned_battlegear_four_set)) - (((746 + (wep_roll * .4)) + (( 746 + (wep_roll * .4)) * (.125 * how_many_dots_on_target)) + (( 746 + (wep_roll * .4)) * (.125 * how_many_dots_on_target) * darkruned_battlegear_four_set)) * armor_red_amount))  * (var_crit_amount + (guile_of_gorefiend_points * .15))
                                    if dk_presence == 0:
                                        atta_num = atta_num + (atta_num * .15)
                                    if tundra_stalker_points != 0:
                                        if dots[0] > current_time:
                                            atta_num = atta_num + (atta_num * (tundra_stalker_points * .03))
                                    if blood_of_the_north_points != 0:
                                        if blood_of_the_north_points < 3:
                                            atta_num = atta_num + (atta_num * (blood_of_the_north_points * .03))
                                        elif blood_of_the_north_points == 3:
                                            atta_num = atta_num + (atta_num * .1)
                                    if t9_tank_two_set == True:
                                        atta_num = atta_num + (atta_num *.05)
                                    if rage_of_rivendale_points != 0:
                                        if dots[1] > current_time:
                                            atta_num += atta_num * ((rage_of_rivendale_points * 2) / 100)
                                    if blood_strikes_points != 0:
                                        atta_num = atta_num + ((blood_strikes_points * 5) / 100)
                                    if might_of_mograine_points != 0:
                                        atta_num += atta_num * ((might_of_mograine_points * 15) / 100)
                                    if hysteria_active == True:
                                        atta_num = atta_num + (atta_num * .2)
                                    if tricksoftt_active == True:
                                        atta_num = atta_num + (atta_num * .15)
                                    atta_num = atta_num + (atta_num * increased_physical_damage) + (atta_num * increased_all_damage)
                                    sum_bs_attacks += atta_num
                                    current_power = runic_power(10, current_power, max_runic)
                                    trinket_hit_crit_tracker = 2
                                    if blood_of_the_north_points != 0:
                                        if just_used_death_rune != True:
                                            proc_num = random.randint(0, 100)
                                            if blood_of_the_north_points < 3:
                                                death_proc_chance = (blood_of_the_north_points * .3) * 100
                                            elif blood_of_the_north_points == 3:
                                                death_proc_chance = 100
                                            if death_proc_chance >= proc_num:
                                                death_castable = castable + death
                                                rune_cd_tracker[death_castable] = rune_cd(haste_rune_cd, current_time)
                                                rune_cd_tracker[castable] = 10000  
                                    if reaping_points != 0:
                                        if just_used_death_rune != True:
                                            proc_num = random.randint(0, 100)
                                            if reaping_points < 3:
                                                death_proc_chance = (reaping_points * .3) * 100
                                            elif reaping_points == 3:
                                                death_proc_chance = 100
                                            if death_proc_chance >= proc_num:
                                                death_castable = castable + death
                                                rune_cd_tracker[death_castable] = rune_cd(haste_rune_cd, current_time)
                                                rune_cd_tracker[castable] = 10000 
                                    if sigil_of_haunted_dreams == True:
                                        if random.randint(0, 100) < 15:
                                            if sigil_of_haunted_dreams_buff == False:
                                                sigil_of_haunted_dreams_buff = True
                                                sigil_of_haunted_dreams_timer = current_time + 10  
                                                total_crit = total_crit + ((173 / 45.8) / 100) 
                                    if t9_dps_two_set == True:
                                        if t9_bonus == False:
                                            if t9_cd_timer < current_time:
                                                if (random.randint(0, 10000)/100) < 50:
                                                    t9_bonus = True
                                                    t9_cd_timer = current_time + 45
                                                    t9_active_timer = current_time + 15
                                                    bonus_loop_str += 180
                                                    rotation.append("T9 DPS 2p Bonus")
                                                    rotation_time.append(current_time)
                                                    rotation_damage.append(0)
                                                    rotation_status.append("Proc")
                                    if desolation_points != 0:
                                        if desolation_buff == False:
                                            increased_all_damage += (desolation_points / 100)
                                            desolation_buff_timer = current_time + 20
                                            rotation.append("Desolation")
                                            rotation_time.append(current_time)
                                            rotation_damage.append(0)
                                            rotation_status.append("Applied")
                                            desolation_buff = True
                                        else:
                                            desolation_buff_timer = current_time + 20
                                            rotation.append("Desolation")
                                            rotation_time.append(current_time)
                                            rotation_damage.append(0)
                                            rotation_status.append("Refresh")
                                    if sudden_doom_points != 0:  #Sudden Doom aka Free Death Coil
                                        if (random.randint(0, 10000)/100) < sudden_doom_points * 5:
                                            hit = spell_hit(spell_hit_total, increased_spell_hit, target_level)
                                            crit = spell_crit((total_crit + (darkruned_battlegear_two_set / 100)), spell_hit_total, increased_spell_hit, target_level, increased_spell_crit)
                                            if hit == True:
                                                if crit == True:
                                                    atta_num = random.randint(443, 665)
                                                    atta_num = (atta_num + ((current_ap + (current_ap * ((impurity_points * 4) / 100))) * 0)) * var_crit_amount
                                                    if sigil_of_vengeful_heart == True:
                                                        atta_num + 380
                                                    if sigil_of_the_wild_buck == True:
                                                        atta_num += 80
                                                    if black_ice_points == 5:
                                                        atta_num = atta_num + (atta_num * .1)
                                                    elif black_ice_points == 4:
                                                        atta_num = atta_num + (atta_num * .08)
                                                    elif black_ice_points == 3:
                                                        atta_num = atta_num + (atta_num * .06)
                                                    elif black_ice_points == 2:
                                                        atta_num = atta_num + (atta_num * .04)
                                                    elif black_ice_points == 1:
                                                        atta_num = atta_num + (atta_num * .02)
                                                    if dk_presence == 0:
                                                        atta_num = atta_num + (atta_num * .15)
                                                    if tundra_stalker_points != 0:
                                                        if dots[0] > current_time:
                                                            atta_num = atta_num + (atta_num * (tundra_stalker_points * .03))
                                                    if glyph_death_coil == True:
                                                        atta_num += atta_num * .15
                                                    if rage_of_rivendale_points != 0:
                                                        if dots[1] > current_time:
                                                            atta_num += atta_num * ((rage_of_rivendale_points * 2) / 100)
                                                    if morbitity_points != 0:
                                                        atta_num += ((morbitity_points * 5) / 100)
                                                    if hysteria_active == True:
                                                        atta_num = atta_num + (atta_num * .2)
                                                    if tricksoftt_active == True:
                                                        atta_num = atta_num + (atta_num * .15)
                                                    atta_num = atta_num + (atta_num * increased_spell_damage) + (atta_num * increased_all_damage)
                                                    sudden_doom_damage += atta_num
                                                    if unholy_blight_points == 1:
                                                        unholy_blight_amount = atta_num / 10   
                                                        unholy_blight_timer = current_time + 10
                                                    if rune_of_cinderglacier_active == True:
                                                         rune_of_cinderglacier_damage = atta_num * .2
                                                         rune_of_cinderglacier_active_count += 1
                                                         rotation.append("Rune of Cinderglacier")
                                                         rotation_time.append(current_time)
                                                         rotation_status.append("Active")
                                                         rotation_damage.append(atta_num * .2)
                                                         if rune_of_cinderglacier_active_count == 2:
                                                             rune_of_cinderglacier_active = False
                                                    rotation.append("Sudden Doom")
                                                    rotation_time.append(current_time)
                                                    rotation_status.append("Crit")
                                                    rotation_damage.append(atta_num)
                                                else:
                                                    atta_num = random.randint(443, 665)
                                                    atta_num = (atta_num + ((current_ap + (current_ap * ((impurity_points * 4) / 100))) * 0))
                                                    if sigil_of_vengeful_heart == True:
                                                        atta_num + 380
                                                    if sigil_of_the_wild_buck == True:
                                                        atta_num += 80
                                                    if black_ice_points == 5:
                                                        atta_num = atta_num + (atta_num * .1)
                                                    elif black_ice_points == 4:
                                                        atta_num = atta_num + (atta_num * .08)
                                                    elif black_ice_points == 3:
                                                        atta_num = atta_num + (atta_num * .06)
                                                    elif black_ice_points == 2:
                                                        atta_num = atta_num + (atta_num * .04)
                                                    elif black_ice_points == 1:
                                                        atta_num = atta_num + (atta_num * .02)
                                                    if dk_presence == 0:
                                                        atta_num = atta_num + (atta_num * .15)
                                                    if tundra_stalker_points != 0:
                                                        if dots[0] > current_time:
                                                            atta_num = atta_num + (atta_num * (tundra_stalker_points * .03))
                                                    if glyph_death_coil == True:
                                                        atta_num += atta_num * .15
                                                    if rage_of_rivendale_points != 0:
                                                        if dots[1] > current_time:
                                                            atta_num += atta_num * ((rage_of_rivendale_points * 2) / 100)
                                                    if morbitity_points != 0:
                                                        atta_num += ((morbitity_points * 5) / 100)
                                                    if hysteria_active == True:
                                                        atta_num = atta_num + (atta_num * .2)
                                                    if tricksoftt_active == True:
                                                        atta_num = atta_num + (atta_num * .15)
                                                    atta_num = atta_num + (atta_num * increased_spell_damage) + (atta_num * increased_all_damage)
                                                    sudden_doom_damage += atta_num
                                                    if unholy_blight_points == 1:
                                                        unholy_blight_amount = atta_num / 10 
                                                        unholy_blight_timer = current_time + 10
                                                    if rune_of_cinderglacier_active == True:
                                                         rune_of_cinderglacier_damage = atta_num * .2
                                                         rune_of_cinderglacier_active_count += 1
                                                         rotation.append("Rune of Cinderglacier")
                                                         rotation_time.append(current_time)
                                                         rotation_status.append("Active")
                                                         rotation_damage.append(atta_num * .2)
                                                         if rune_of_cinderglacier_active_count == 2:
                                                             rune_of_cinderglacier_active = False
                                                    rotation.append("Sudden Doom")
                                                    rotation_time.append(current_time)
                                                    rotation_status.append("Hit")
                                                    rotation_damage.append(atta_num)
                                            if hit == False:
                                                rotation.append("Sudden Doom")
                                                rotation_time.append(current_time)
                                                rotation_status.append("Miss")
                                                rotation_damage.append(0)
                                    rotation.append("Blood Strike")
                                    rotation_time.append(current_time)
                                    rotation_status.append("Crit")
                                    rotation_damage.append(atta_num)
                                    current_time += gcd
                                    used_gcd = True
                                    # print("Blood Strike Crit - " + str(atta_num))
                                    continue
                                elif attack_table_results == 7:
                                    #normal attack
                                    rune_cd_tracker[castable] = rune_cd(haste_rune_cd, current_time)
                                    atta_num = ((746 + (wep_roll * .4)) + (( 746 + (wep_roll * .4)) * (.125 * how_many_dots_on_target)) + (( 746 + (wep_roll * .4)) * (.125 * how_many_dots_on_target) * darkruned_battlegear_four_set)) - (((746 + (wep_roll * .4)) + (( 746 + (wep_roll * .4)) * (.125 * how_many_dots_on_target)) + (( 746 + (wep_roll * .4)) * (.125 * how_many_dots_on_target) * darkruned_battlegear_four_set)) * armor_red_amount)
                                    if dk_presence == 0:
                                        atta_num = atta_num + (atta_num * .15)
                                    if tundra_stalker_points != 0:
                                        if dots[0] > current_time:
                                            atta_num = atta_num + (atta_num * (tundra_stalker_points * .03))
                                    if blood_of_the_north_points != 0:
                                        if blood_of_the_north_points < 3:
                                            atta_num = atta_num + (atta_num * (blood_of_the_north_points * .03))
                                        elif blood_of_the_north_points == 3:
                                            atta_num = atta_num + (atta_num * .1)
                                    if t9_tank_two_set == True:
                                        atta_num = atta_num + (atta_num *.05)
                                    if rage_of_rivendale_points != 0:
                                        if dots[1] > current_time:
                                            atta_num += atta_num * ((rage_of_rivendale_points * 2) / 100)
                                    if blood_strikes_points != 0:
                                        atta_num = atta_num + ((blood_strikes_points * 5) / 100)
                                    if hysteria_active == True:
                                        atta_num = atta_num + (atta_num * .2)
                                    if tricksoftt_active == True:
                                        atta_num = atta_num + (atta_num * .15)
                                    atta_num = atta_num + (atta_num * increased_physical_damage) + (atta_num * increased_all_damage)
                                    sum_bs_attacks += atta_num
                                    current_power = runic_power(10, current_power, max_runic)
                                    trinket_hit_crit_tracker = 1
                                    if blood_of_the_north_points != 0:
                                        if just_used_death_rune != True:
                                            proc_num = random.randint(0, 100)
                                            if blood_of_the_north_points < 3:
                                                death_proc_chance = (blood_of_the_north_points * .3) * 100
                                            elif blood_of_the_north_points == 3:
                                                death_proc_chance = 100
                                            if death_proc_chance >= proc_num:
                                                death_castable = castable + death
                                                rune_cd_tracker[death_castable] = rune_cd(haste_rune_cd, current_time)
                                                rune_cd_tracker[castable] = 10000  
                                    if reaping_points != 0:
                                        if just_used_death_rune != True:
                                            proc_num = random.randint(0, 100)
                                            if reaping_points < 3:
                                                death_proc_chance = (reaping_points * .3) * 100
                                            elif reaping_points == 3:
                                                death_proc_chance = 100
                                            if death_proc_chance >= proc_num:
                                                death_castable = castable + death
                                                rune_cd_tracker[death_castable] = rune_cd(haste_rune_cd, current_time)
                                                rune_cd_tracker[castable] = 10000 
                                    if sigil_of_haunted_dreams == True:
                                        if random.randint(0, 100) < 15:
                                            if sigil_of_haunted_dreams_buff == False:
                                                sigil_of_haunted_dreams_buff = True
                                                sigil_of_haunted_dreams_timer = current_time + 10  
                                                total_crit = total_crit + ((173 / 45.8) / 100) 
                                    if t9_dps_two_set == True:
                                        if t9_bonus == False:
                                            if t9_cd_timer < current_time:
                                                if (random.randint(0, 10000)/100) < 50:
                                                    t9_bonus = True
                                                    t9_cd_timer = current_time + 45
                                                    t9_active_timer = current_time + 15
                                                    bonus_loop_str += 180
                                                    rotation.append("T9 DPS 2p Bonus")
                                                    rotation_time.append(current_time)
                                                    rotation_damage.append(0)
                                                    rotation_status.append("Proc")
                                    if desolation_points != 0:
                                        if desolation_buff == False:
                                            increased_all_damage += (desolation_points / 100)
                                            desolation_buff_timer = current_time + 20
                                            rotation.append("Desolation")
                                            rotation_time.append(current_time)
                                            rotation_damage.append(0)
                                            rotation_status.append("Applied")
                                            desolation_buff = True
                                        else:
                                            desolation_buff_timer = current_time + 20
                                            rotation.append("Desolation")
                                            rotation_time.append(current_time)
                                            rotation_damage.append(0)
                                            rotation_status.append("Refresh")
                                    if sudden_doom_points != 0:  #Sudden Doom aka Free Death Coil
                                        if (random.randint(0, 10000)/100) < sudden_doom_points * 5:
                                            hit = spell_hit(spell_hit_total, increased_spell_hit, target_level)
                                            crit = spell_crit((total_crit + (darkruned_battlegear_two_set / 100)), spell_hit_total, increased_spell_hit, target_level, increased_spell_crit)
                                            if hit == True:
                                                if crit == True:
                                                    atta_num = random.randint(443, 665)
                                                    atta_num = (atta_num + ((current_ap + (current_ap * ((impurity_points * 4) / 100))) * 0)) * var_crit_amount
                                                    if sigil_of_vengeful_heart == True:
                                                        atta_num + 380
                                                    if sigil_of_the_wild_buck == True:
                                                        atta_num += 80
                                                    if black_ice_points == 5:
                                                        atta_num = atta_num + (atta_num * .1)
                                                    elif black_ice_points == 4:
                                                        atta_num = atta_num + (atta_num * .08)
                                                    elif black_ice_points == 3:
                                                        atta_num = atta_num + (atta_num * .06)
                                                    elif black_ice_points == 2:
                                                        atta_num = atta_num + (atta_num * .04)
                                                    elif black_ice_points == 1:
                                                        atta_num = atta_num + (atta_num * .02)
                                                    if dk_presence == 0:
                                                        atta_num = atta_num + (atta_num * .15)
                                                    if tundra_stalker_points != 0:
                                                        if dots[0] > current_time:
                                                            atta_num = atta_num + (atta_num * (tundra_stalker_points * .03))
                                                    if glyph_death_coil == True:
                                                        atta_num += atta_num * .15
                                                    if rage_of_rivendale_points != 0:
                                                        if dots[1] > current_time:
                                                            atta_num += atta_num * ((rage_of_rivendale_points * 2) / 100)
                                                    if morbitity_points != 0:
                                                        atta_num += ((morbitity_points * 5) / 100)
                                                    if hysteria_active == True:
                                                        atta_num = atta_num + (atta_num * .2)
                                                    if tricksoftt_active == True:
                                                        atta_num = atta_num + (atta_num * .15)
                                                    atta_num = atta_num + (atta_num * increased_spell_damage) + (atta_num * increased_all_damage)
                                                    sudden_doom_damage += atta_num
                                                    if unholy_blight_points == 1:
                                                        unholy_blight_amount = atta_num / 10   
                                                        unholy_blight_timer = current_time + 10
                                                    if rune_of_cinderglacier_active == True:
                                                         rune_of_cinderglacier_damage = atta_num * .2
                                                         rune_of_cinderglacier_active_count += 1
                                                         rotation.append("Rune of Cinderglacier")
                                                         rotation_time.append(current_time)
                                                         rotation_status.append("Active")
                                                         rotation_damage.append(atta_num * .2)
                                                         if rune_of_cinderglacier_active_count == 2:
                                                             rune_of_cinderglacier_active = False
                                                    rotation.append("Sudden Doom")
                                                    rotation_time.append(current_time)
                                                    rotation_status.append("Crit")
                                                    rotation_damage.append(atta_num)
                                                else:
                                                    atta_num = random.randint(443, 665)
                                                    atta_num = (atta_num + ((current_ap + (current_ap * ((impurity_points * 4) / 100))) * 0))
                                                    if sigil_of_vengeful_heart == True:
                                                        atta_num + 380
                                                    if sigil_of_the_wild_buck == True:
                                                        atta_num += 80
                                                    if black_ice_points == 5:
                                                        atta_num = atta_num + (atta_num * .1)
                                                    elif black_ice_points == 4:
                                                        atta_num = atta_num + (atta_num * .08)
                                                    elif black_ice_points == 3:
                                                        atta_num = atta_num + (atta_num * .06)
                                                    elif black_ice_points == 2:
                                                        atta_num = atta_num + (atta_num * .04)
                                                    elif black_ice_points == 1:
                                                        atta_num = atta_num + (atta_num * .02)
                                                    if dk_presence == 0:
                                                        atta_num = atta_num + (atta_num * .15)
                                                    if tundra_stalker_points != 0:
                                                        if dots[0] > current_time:
                                                            atta_num = atta_num + (atta_num * (tundra_stalker_points * .03))
                                                    if glyph_death_coil == True:
                                                        atta_num += atta_num * .15
                                                    if rage_of_rivendale_points != 0:
                                                        if dots[1] > current_time:
                                                            atta_num += atta_num * ((rage_of_rivendale_points * 2) / 100)
                                                    if morbitity_points != 0:
                                                        atta_num += ((morbitity_points * 5) / 100)
                                                    if hysteria_active == True:
                                                        atta_num = atta_num + (atta_num * .2)
                                                    if tricksoftt_active == True:
                                                        atta_num = atta_num + (atta_num * .15)
                                                    atta_num = atta_num + (atta_num * increased_spell_damage) + (atta_num * increased_all_damage)
                                                    sudden_doom_damage += atta_num
                                                    if unholy_blight_points == 1:
                                                        unholy_blight_amount = atta_num / 10 
                                                        unholy_blight_timer = current_time + 10
                                                    if rune_of_cinderglacier_active == True:
                                                         rune_of_cinderglacier_damage = atta_num * .2
                                                         rune_of_cinderglacier_active_count += 1
                                                         rotation.append("Rune of Cinderglacier")
                                                         rotation_time.append(current_time)
                                                         rotation_status.append("Active")
                                                         rotation_damage.append(atta_num * .2)
                                                         if rune_of_cinderglacier_active_count == 2:
                                                             rune_of_cinderglacier_active = False
                                                    rotation.append("Sudden Doom")
                                                    rotation_time.append(current_time)
                                                    rotation_status.append("Hit")
                                                    rotation_damage.append(atta_num)
                                            if hit == False:
                                                rotation.append("Sudden Doom")
                                                rotation_time.append(current_time)
                                                rotation_status.append("Miss")
                                                rotation_damage.append(0)
                                    rotation.append("Blood Strike")
                                    rotation_time.append(current_time)
                                    rotation_status.append("Hit")
                                    rotation_damage.append(atta_num)
                                    current_time += gcd
                                    used_gcd = True
                                    # print("Blood Strike - " + str(atta_num))
                                    continue
                    if pestilence_allow_reset == False:         
                        if use_blood_strike_over_blood_boil == True and heart_strike_points == 1: #Use Heart Strike
                            castable = all_rune_check(blood, current_time, rune_cd_tracker) #Heart Strike if pest reset if false
                            use_death_rune = False
                            if castable == 3:   #Blood Strike
                                until_dot0 = dots[0]
                                until_dot1 = dots[1]
                                if pestilence_allow_reset == True:
                                    until_dot0 -= pestilence_reset_window
                                    until_dot1 -= pestilence_reset_window
                                castable_death = all_rune_check(death, current_time, rune_cd_tracker)
                                castable_death_f = all_rune_check(death_f, current_time, rune_cd_tracker)
                                castable_death_u = all_rune_check(death_u, current_time, rune_cd_tracker)
                                if castable_death != 3:
                                    if until_dot0 <= current_time + haste_rune_cd:
                                        if until_dot1 <= current_time + haste_rune_cd:
                                            use_death_rune = True
                                            just_used_death_rune = True
                                            castable = castable_death
                                elif castable_death_f != 3:
                                    if until_dot0 <= current_time + haste_rune_cd:
                                        if until_dot1 <= current_time + haste_rune_cd:
                                            use_death_rune = True
                                            just_used_death_rune = True
                                            castable = castable_death_f
                                elif castable_death_u != 3:
                                    if until_dot0 <= current_time + haste_rune_cd:
                                        if until_dot1 <= current_time + haste_rune_cd:
                                            use_death_rune = True
                                            just_used_death_rune = True
                                            castable = castable_death_u
                            if castable != 3:  
                                if castable == 2: 
                                    castable = 0
                                if use_death_rune == True:
                                    use_death_rune = False
                                    if castable_death != 3:
                                        rune_cd_tracker[castable] = 0
                                        if castable_death == 2:
                                            castable_death = 0
                                        rune_cd_tracker[castable_death + 6] = 10000
                                    elif castable_death_f != 3:
                                        castable += 2
                                        rune_cd_tracker[castable] = 0
                                        if castable_death_f == 2:
                                            castable_death_f = 0
                                        rune_cd_tracker[castable_death_f + 8] = 10000
                                    elif castable_death_u != 3:
                                        castable += 4
                                        rune_cd_tracker[castable] = 0
                                        if castable_death_u == 2:
                                            castable_death_u = 0
                                        rune_cd_tracker[castable_death_u + 10] = 10000
                                else:
                                    use_death_rune = False
                                if amount_of_targets > 1:
                                    attack_table_results = attack_table(1, tanking, H2, True, False, hit_from_gear, hit_from_other, target_level, all_expertise_dodge, all_expertise_parry, total_crit, (annihilation_talent_points / 100) + increased_phy_crit + ((subversion_points * 3) / 100))
                                    armor_red_amount = dam_reduc(current_armor, armor_penetration, target_level)
                                    wep_roll = weapon_roll(mh_input_lowend_weapon_damage,mh_input_topend_weapon_damage)
                                    wep_roll = wep_roll + (attack_damage_normalization * current_ap / 14)
                                    #Rune Hit
                                    haste_percentage = (total_haste_rating / 25.21) / 100 #Returns a result of 0 - 1 for 0% - 100%
                                    haste_rune_cd = rune_grade_timer(current_time, last_rune_change[castable], last_rune_change[castable+6])
                                    if improved_unholy_presence_points != 0:
                                        if dk_presence == 2:
                                            haste_rune_cd = haste_rune_cd - (haste_rune_cd * ((improved_unholy_presence_points * 5) / 100))
                                    if dk_presence != 2:
                                        gcd = input_gcd / (1 + haste_percentage)
                                        if gcd < 1:
                                            gcd = 1
                                    ##Rune Miss
                                    haste_rune_cd_miss = 1
                                    how_many_dots_on_target = 0
                                    if dots[0] > current_time:
                                        how_many_dots_on_target += 1
                                    if dots[1] > current_time:
                                        how_many_dots_on_target += 1
                                    if dots[2] > current_time:
                                        how_many_dots_on_target += 1
                                    if multiple_adds_timer < current_time:
                                        how_many_dots_on_target = 0
                                    if dancing_rune_weapon_points == 1:
                                        if dancing_rune_weapon_active == True:
                                            if attack_table_results == 0:
                                                atta_num = 0
                                                rotation.append("Dancing Rune Weapon")
                                                rotation_time.append(current_time)
                                                rotation_status.append("Miss")
                                                rotation_damage.append(atta_num)
                                            elif attack_table_results == 1:
                                                atta_num = 0
                                                rotation.append("Dancing Rune Weapon")
                                                rotation_time.append(current_time)
                                                rotation_status.append("Dodge")
                                                rotation_damage.append(atta_num)
                                            elif attack_table_results == 5:
                                                atta_num = (((0 + (wep_roll * .25)) + (( 0 + (wep_roll * .25)) * (.1 * how_many_dots_on_target)) + (( 0 + (wep_roll * .25)) * (.1 * how_many_dots_on_target) * darkruned_battlegear_four_set)) - (((0 + (wep_roll * .25)) + (( 0 + (wep_roll * .25)) * (.1 * how_many_dots_on_target)) + (( 0 + (wep_roll * .25)) * (.1 * how_many_dots_on_target) * darkruned_battlegear_four_set)) * armor_red_amount))  * (var_crit_amount)
                                                if dk_presence == 0:
                                                    atta_num = atta_num + (atta_num * .15)
                                                if t9_tank_two_set == True:
                                                    atta_num = atta_num + (atta_num *.05)
                                                if blood_strikes_points != 0:
                                                    atta_num = atta_num + ((blood_strikes_points * 15) / 100)
                                                if might_of_mograine_points != 0:
                                                    atta_num += atta_num * ((might_of_mograine_points * 15) / 100)
                                                if scourgelords_battlegear_two_set == True:
                                                    atta_num = atta_num + (atta_num * .07)
                                                if hysteria_active == True:
                                                    atta_num = atta_num + (atta_num * .2)
                                                if tricksoftt_active == True:
                                                    atta_num = atta_num + (atta_num * .15)
                                                atta_num = atta_num + (atta_num * increased_physical_damage) + (atta_num * increased_all_damage)
                                                atta_num = atta_num * dancing_rune_weapon_damage_multi
                                                dancing_rune_weapon_damage += atta_num
                                                rotation.append("Dancing Rune Weapon")
                                                rotation_time.append(current_time)
                                                rotation_status.append("Crit") 
                                                rotation_damage.append(atta_num)
                                                trinket_hit_crit_tracker = 2
                                                if sigil_of_haunted_dreams == True:
                                                    if random.randint(0, 100) < 15:
                                                        if sigil_of_haunted_dreams_buff == False:
                                                            sigil_of_haunted_dreams_buff = True
                                                            sigil_of_haunted_dreams_timer = current_time + 10  
                                                            total_crit = total_crit + ((173 / 45.8) / 100) 
                                                if t9_dps_two_set == True:
                                                    if t9_bonus == False:
                                                        if t9_cd_timer < current_time:
                                                            if (random.randint(0, 10000)/100) < 50:
                                                                t9_bonus = True
                                                                t9_cd_timer = current_time + 45
                                                                t9_active_timer = current_time + 15
                                                                bonus_loop_str += 180
                                                                rotation.append("T9 DPS 2p Bonus")
                                                                rotation_time.append(current_time)
                                                                rotation_damage.append(0)
                                                                rotation_status.append("Proc")
                                                if sudden_doom_points != 0:  #Sudden Doom aka Free Death Coil
                                                    if (random.randint(0, 10000)/100) < sudden_doom_points * 5:
                                                        hit = spell_hit(spell_hit_total, increased_spell_hit, target_level)
                                                        crit = spell_crit((total_crit + (darkruned_battlegear_two_set / 100)), spell_hit_total, increased_spell_hit, target_level, increased_spell_crit)
                                                        if hit == True:
                                                            if crit == True:
                                                                atta_num = random.randint(443, 665)
                                                                atta_num = (atta_num + ((current_ap + (current_ap * ((impurity_points * 4) / 100))) * 0)) * var_crit_amount
                                                                if sigil_of_vengeful_heart == True:
                                                                    atta_num + 380
                                                                if sigil_of_the_wild_buck == True:
                                                                    atta_num += 80
                                                                if black_ice_points == 5:
                                                                    atta_num = atta_num + (atta_num * .1)
                                                                elif black_ice_points == 4:
                                                                    atta_num = atta_num + (atta_num * .08)
                                                                elif black_ice_points == 3:
                                                                    atta_num = atta_num + (atta_num * .06)
                                                                elif black_ice_points == 2:
                                                                    atta_num = atta_num + (atta_num * .04)
                                                                elif black_ice_points == 1:
                                                                    atta_num = atta_num + (atta_num * .02)
                                                                if dk_presence == 0:
                                                                    atta_num = atta_num + (atta_num * .15)
                                                                if tundra_stalker_points != 0:
                                                                    if dots[0] > current_time:
                                                                        atta_num = atta_num + (atta_num * (tundra_stalker_points * .03))
                                                                if glyph_death_coil == True:
                                                                    atta_num += atta_num * .15
                                                                if rage_of_rivendale_points != 0:
                                                                    if dots[1] > current_time:
                                                                        atta_num += atta_num * ((rage_of_rivendale_points * 2) / 100)
                                                                if morbitity_points != 0:
                                                                    atta_num += ((morbitity_points * 5) / 100)
                                                                if hysteria_active == True:
                                                                    atta_num = atta_num + (atta_num * .2)
                                                                if tricksoftt_active == True:
                                                                    atta_num = atta_num + (atta_num * .15)
                                                                atta_num = atta_num + (atta_num * increased_spell_damage) + (atta_num * increased_all_damage)
                                                                sudden_doom_damage += atta_num
                                                                if unholy_blight_points == 1:
                                                                    unholy_blight_amount = atta_num / 10   
                                                                    unholy_blight_timer = current_time + 10
                                                                if rune_of_cinderglacier_active == True:
                                                                     rune_of_cinderglacier_damage = atta_num * .2
                                                                     rune_of_cinderglacier_active_count += 1
                                                                     rotation.append("Rune of Cinderglacier")
                                                                     rotation_time.append(current_time)
                                                                     rotation_status.append("Active")
                                                                     rotation_damage.append(atta_num * .2)
                                                                     if rune_of_cinderglacier_active_count == 2:
                                                                         rune_of_cinderglacier_active = False
                                                                rotation.append("Sudden Doom")
                                                                rotation_time.append(current_time)
                                                                rotation_status.append("Crit")
                                                                rotation_damage.append(atta_num)
                                                            else:
                                                                atta_num = random.randint(443, 665)
                                                                atta_num = (atta_num + ((current_ap + (current_ap * ((impurity_points * 4) / 100))) * 0))
                                                                if sigil_of_vengeful_heart == True:
                                                                    atta_num + 380
                                                                if sigil_of_the_wild_buck == True:
                                                                    atta_num += 80
                                                                if black_ice_points == 5:
                                                                    atta_num = atta_num + (atta_num * .1)
                                                                elif black_ice_points == 4:
                                                                    atta_num = atta_num + (atta_num * .08)
                                                                elif black_ice_points == 3:
                                                                    atta_num = atta_num + (atta_num * .06)
                                                                elif black_ice_points == 2:
                                                                    atta_num = atta_num + (atta_num * .04)
                                                                elif black_ice_points == 1:
                                                                    atta_num = atta_num + (atta_num * .02)
                                                                if dk_presence == 0:
                                                                    atta_num = atta_num + (atta_num * .15)
                                                                if tundra_stalker_points != 0:
                                                                    if dots[0] > current_time:
                                                                        atta_num = atta_num + (atta_num * (tundra_stalker_points * .03))
                                                                if glyph_death_coil == True:
                                                                    atta_num += atta_num * .15
                                                                if rage_of_rivendale_points != 0:
                                                                    if dots[1] > current_time:
                                                                        atta_num += atta_num * ((rage_of_rivendale_points * 2) / 100)
                                                                if morbitity_points != 0:
                                                                    atta_num += ((morbitity_points * 5) / 100)
                                                                if hysteria_active == True:
                                                                    atta_num = atta_num + (atta_num * .2)
                                                                if tricksoftt_active == True:
                                                                    atta_num = atta_num + (atta_num * .15)
                                                                atta_num = atta_num + (atta_num * increased_spell_damage) + (atta_num * increased_all_damage)
                                                                sudden_doom_damage += atta_num
                                                                if unholy_blight_points == 1:
                                                                    unholy_blight_amount = atta_num / 10 
                                                                    unholy_blight_timer = current_time + 10
                                                                if rune_of_cinderglacier_active == True:
                                                                     rune_of_cinderglacier_damage = atta_num * .2
                                                                     rune_of_cinderglacier_active_count += 1
                                                                     rotation.append("Rune of Cinderglacier")
                                                                     rotation_time.append(current_time)
                                                                     rotation_status.append("Active")
                                                                     rotation_damage.append(atta_num * .2)
                                                                     if rune_of_cinderglacier_active_count == 2:
                                                                         rune_of_cinderglacier_active = False
                                                                rotation.append("Sudden Doom")
                                                                rotation_time.append(current_time)
                                                                rotation_status.append("Hit")
                                                                rotation_damage.append(atta_num)
                                                        if hit == False:
                                                            rotation.append("Sudden Doom")
                                                            rotation_time.append(current_time)
                                                            rotation_status.append("Miss")
                                                            rotation_damage.append(0)                                            
                                            elif attack_table_results == 7:
                                                atta_num = (((0 + (wep_roll * .25)) + (( 0 + (wep_roll * .25)) * (.1 * how_many_dots_on_target)) + (( 0 + (wep_roll * .25)) * (.1 * how_many_dots_on_target) * darkruned_battlegear_four_set)) - (((0 + (wep_roll * .25)) + (( 0 + (wep_roll * .25)) * (.1 * how_many_dots_on_target)) + (( 0 + (wep_roll * .25)) * (.1 * how_many_dots_on_target) * darkruned_battlegear_four_set)) * armor_red_amount))
                                                if dk_presence == 0:
                                                    atta_num = atta_num + (atta_num * .15)
                                                if t9_tank_two_set == True:
                                                    atta_num = atta_num + (atta_num *.05)
                                                if blood_strikes_points != 0:
                                                    atta_num = atta_num + ((blood_strikes_points * 15) / 100)
                                                if might_of_mograine_points != 0:
                                                    atta_num += atta_num * ((might_of_mograine_points * 15) / 100)
                                                if scourgelords_battlegear_two_set == True:
                                                    atta_num = atta_num + (atta_num * .07)
                                                if hysteria_active == True:
                                                    atta_num = atta_num + (atta_num * .2)
                                                if tricksoftt_active == True:
                                                    atta_num = atta_num + (atta_num * .15)
                                                atta_num = atta_num + (atta_num * increased_physical_damage) + (atta_num * increased_all_damage)
                                                atta_num = atta_num * dancing_rune_weapon_damage_multi
                                                dancing_rune_weapon_damage += atta_num
                                                rotation.append("Dancing Rune Weapon")
                                                rotation_time.append(current_time)
                                                rotation_status.append("Hit") 
                                                rotation_damage.append(atta_num)
                                                trinket_hit_crit_tracker = 1
                                                if sigil_of_haunted_dreams == True:
                                                    if random.randint(0, 100) < 15:
                                                        if sigil_of_haunted_dreams_buff == False:
                                                            sigil_of_haunted_dreams_buff = True
                                                            sigil_of_haunted_dreams_timer = current_time + 10  
                                                            total_crit = total_crit + ((173 / 45.8) / 100) 
                                                if t9_dps_two_set == True:
                                                    if t9_bonus == False:
                                                        if t9_cd_timer < current_time:
                                                            if (random.randint(0, 10000)/100) < 50:
                                                                t9_bonus = True
                                                                t9_cd_timer = current_time + 45
                                                                t9_active_timer = current_time + 15
                                                                bonus_loop_str += 180
                                                                rotation.append("T9 DPS 2p Bonus")
                                                                rotation_time.append(current_time)
                                                                rotation_damage.append(0)
                                                                rotation_status.append("Proc")
                                                if sudden_doom_points != 0:  #Sudden Doom aka Free Death Coil
                                                    if (random.randint(0, 10000)/100) < sudden_doom_points * 5:
                                                        hit = spell_hit(spell_hit_total, increased_spell_hit, target_level)
                                                        crit = spell_crit((total_crit + (darkruned_battlegear_two_set / 100)), spell_hit_total, increased_spell_hit, target_level, increased_spell_crit)
                                                        if hit == True:
                                                            if crit == True:
                                                                atta_num = random.randint(443, 665)
                                                                atta_num = (atta_num + ((current_ap + (current_ap * ((impurity_points * 4) / 100))) * 0)) * var_crit_amount
                                                                if sigil_of_vengeful_heart == True:
                                                                    atta_num + 380
                                                                if sigil_of_the_wild_buck == True:
                                                                    atta_num += 80
                                                                if black_ice_points == 5:
                                                                    atta_num = atta_num + (atta_num * .1)
                                                                elif black_ice_points == 4:
                                                                    atta_num = atta_num + (atta_num * .08)
                                                                elif black_ice_points == 3:
                                                                    atta_num = atta_num + (atta_num * .06)
                                                                elif black_ice_points == 2:
                                                                    atta_num = atta_num + (atta_num * .04)
                                                                elif black_ice_points == 1:
                                                                    atta_num = atta_num + (atta_num * .02)
                                                                if dk_presence == 0:
                                                                    atta_num = atta_num + (atta_num * .15)
                                                                if tundra_stalker_points != 0:
                                                                    if dots[0] > current_time:
                                                                        atta_num = atta_num + (atta_num * (tundra_stalker_points * .03))
                                                                if glyph_death_coil == True:
                                                                    atta_num += atta_num * .15
                                                                if rage_of_rivendale_points != 0:
                                                                    if dots[1] > current_time:
                                                                        atta_num += atta_num * ((rage_of_rivendale_points * 2) / 100)
                                                                if morbitity_points != 0:
                                                                    atta_num += ((morbitity_points * 5) / 100)
                                                                if hysteria_active == True:
                                                                    atta_num = atta_num + (atta_num * .2)
                                                                if tricksoftt_active == True:
                                                                    atta_num = atta_num + (atta_num * .15)
                                                                atta_num = atta_num + (atta_num * increased_spell_damage) + (atta_num * increased_all_damage)
                                                                sudden_doom_damage += atta_num
                                                                if unholy_blight_points == 1:
                                                                    unholy_blight_amount = atta_num / 10   
                                                                    unholy_blight_timer = current_time + 10
                                                                if rune_of_cinderglacier_active == True:
                                                                     rune_of_cinderglacier_damage = atta_num * .2
                                                                     rune_of_cinderglacier_active_count += 1
                                                                     rotation.append("Rune of Cinderglacier")
                                                                     rotation_time.append(current_time)
                                                                     rotation_status.append("Active")
                                                                     rotation_damage.append(atta_num * .2)
                                                                     if rune_of_cinderglacier_active_count == 2:
                                                                         rune_of_cinderglacier_active = False
                                                                rotation.append("Sudden Doom")
                                                                rotation_time.append(current_time)
                                                                rotation_status.append("Crit")
                                                                rotation_damage.append(atta_num)
                                                            else:
                                                                atta_num = random.randint(443, 665)
                                                                atta_num = (atta_num + ((current_ap + (current_ap * ((impurity_points * 4) / 100))) * 0))
                                                                if sigil_of_vengeful_heart == True:
                                                                    atta_num + 380
                                                                if sigil_of_the_wild_buck == True:
                                                                    atta_num += 80
                                                                if black_ice_points == 5:
                                                                    atta_num = atta_num + (atta_num * .1)
                                                                elif black_ice_points == 4:
                                                                    atta_num = atta_num + (atta_num * .08)
                                                                elif black_ice_points == 3:
                                                                    atta_num = atta_num + (atta_num * .06)
                                                                elif black_ice_points == 2:
                                                                    atta_num = atta_num + (atta_num * .04)
                                                                elif black_ice_points == 1:
                                                                    atta_num = atta_num + (atta_num * .02)
                                                                if dk_presence == 0:
                                                                    atta_num = atta_num + (atta_num * .15)
                                                                if tundra_stalker_points != 0:
                                                                    if dots[0] > current_time:
                                                                        atta_num = atta_num + (atta_num * (tundra_stalker_points * .03))
                                                                if glyph_death_coil == True:
                                                                    atta_num += atta_num * .15
                                                                if rage_of_rivendale_points != 0:
                                                                    if dots[1] > current_time:
                                                                        atta_num += atta_num * ((rage_of_rivendale_points * 2) / 100)
                                                                if morbitity_points != 0:
                                                                    atta_num += ((morbitity_points * 5) / 100)
                                                                if hysteria_active == True:
                                                                    atta_num = atta_num + (atta_num * .2)
                                                                if tricksoftt_active == True:
                                                                    atta_num = atta_num + (atta_num * .15)
                                                                atta_num = atta_num + (atta_num * increased_spell_damage) + (atta_num * increased_all_damage)
                                                                sudden_doom_damage += atta_num
                                                                if unholy_blight_points == 1:
                                                                    unholy_blight_amount = atta_num / 10 
                                                                    unholy_blight_timer = current_time + 10
                                                                if rune_of_cinderglacier_active == True:
                                                                     rune_of_cinderglacier_damage = atta_num * .2
                                                                     rune_of_cinderglacier_active_count += 1
                                                                     rotation.append("Rune of Cinderglacier")
                                                                     rotation_time.append(current_time)
                                                                     rotation_status.append("Active")
                                                                     rotation_damage.append(atta_num * .2)
                                                                     if rune_of_cinderglacier_active_count == 2:
                                                                         rune_of_cinderglacier_active = False
                                                                rotation.append("Sudden Doom")
                                                                rotation_time.append(current_time)
                                                                rotation_status.append("Hit")
                                                                rotation_damage.append(atta_num)
                                                        if hit == False:
                                                            rotation.append("Sudden Doom")
                                                            rotation_time.append(current_time)
                                                            rotation_status.append("Miss")
                                                            rotation_damage.append(0)   
                                    if attack_table_results == 0:
                                        atta_num = 0
                                        rotation.append("Heart Strike - Second Target")
                                        rotation_time.append(current_time)
                                        rotation_status.append("Miss")
                                        rotation_damage.append(atta_num)
                                    elif attack_table_results == 1:
                                        atta_num = 0
                                        rotation.append("Heart Strike - Second Target")
                                        rotation_time.append(current_time)
                                        rotation_status.append("Dodge")
                                        rotation_damage.append(atta_num)
                                    elif attack_table_results == 5:
                                        #crit attack
                                        atta_num = (((0 + (wep_roll * .25)) + (( 0 + (wep_roll * .25)) * (.1 * how_many_dots_on_target)) + (( 0 + (wep_roll * .25)) * (.1 * how_many_dots_on_target) * darkruned_battlegear_four_set)) - (((0 + (wep_roll * .25)) + (( 0 + (wep_roll * .25)) * (.1 * how_many_dots_on_target)) + (( 0 + (wep_roll * .25)) * (.1 * how_many_dots_on_target) * darkruned_battlegear_four_set)) * armor_red_amount))  * (var_crit_amount)
                                        if dk_presence == 0:
                                            atta_num = atta_num + (atta_num * .15)
                                        if t9_tank_two_set == True:
                                            atta_num = atta_num + (atta_num *.05)
                                        if blood_strikes_points != 0:
                                            atta_num = atta_num + ((blood_strikes_points * 15) / 100)
                                        if might_of_mograine_points != 0:
                                            atta_num += atta_num * ((might_of_mograine_points * 15) / 100)
                                        if scourgelords_battlegear_two_set == True:
                                            atta_num = atta_num + (atta_num * .07)
                                        if hysteria_active == True:
                                            atta_num = atta_num + (atta_num * .2)
                                        if tricksoftt_active == True:
                                            atta_num = atta_num + (atta_num * .15)
                                        atta_num = atta_num + (atta_num * increased_physical_damage) + (atta_num * increased_all_damage)
                                        sum_heart_strike_attacks += atta_num
                                        trinket_hit_crit_tracker = 2
                                        if sigil_of_haunted_dreams == True:
                                            if random.randint(0, 100) < 15:
                                                if sigil_of_haunted_dreams_buff == False:
                                                    sigil_of_haunted_dreams_buff = True
                                                    sigil_of_haunted_dreams_timer = current_time + 10  
                                                    total_crit = total_crit + ((173 / 45.8) / 100) 
                                        if t9_dps_two_set == True:
                                            if t9_bonus == False:
                                                if t9_cd_timer < current_time:
                                                    if (random.randint(0, 10000)/100) < 50:
                                                        t9_bonus = True
                                                        t9_cd_timer = current_time + 45
                                                        t9_active_timer = current_time + 15
                                                        bonus_loop_str += 180
                                                        rotation.append("T9 DPS 2p Bonus")
                                                        rotation_time.append(current_time)
                                                        rotation_damage.append(0)
                                                        rotation_status.append("Proc")
                                        if sudden_doom_points != 0:  #Sudden Doom aka Free Death Coil
                                            if (random.randint(0, 10000)/100) < sudden_doom_points * 5:
                                                hit = spell_hit(spell_hit_total, increased_spell_hit, target_level)
                                                crit = spell_crit((total_crit + (darkruned_battlegear_two_set / 100)), spell_hit_total, increased_spell_hit, target_level, increased_spell_crit)
                                                if hit == True:
                                                    if crit == True:
                                                        atta_num = random.randint(443, 665)
                                                        atta_num = (atta_num + ((current_ap + (current_ap * ((impurity_points * 4) / 100))) * 0)) * var_crit_amount
                                                        if sigil_of_vengeful_heart == True:
                                                            atta_num + 380
                                                        if sigil_of_the_wild_buck == True:
                                                            atta_num += 80
                                                        if black_ice_points == 5:
                                                            atta_num = atta_num + (atta_num * .1)
                                                        elif black_ice_points == 4:
                                                            atta_num = atta_num + (atta_num * .08)
                                                        elif black_ice_points == 3:
                                                            atta_num = atta_num + (atta_num * .06)
                                                        elif black_ice_points == 2:
                                                            atta_num = atta_num + (atta_num * .04)
                                                        elif black_ice_points == 1:
                                                            atta_num = atta_num + (atta_num * .02)
                                                        if dk_presence == 0:
                                                            atta_num = atta_num + (atta_num * .15)
                                                        if tundra_stalker_points != 0:
                                                            if dots[0] > current_time:
                                                                atta_num = atta_num + (atta_num * (tundra_stalker_points * .03))
                                                        if glyph_death_coil == True:
                                                            atta_num += atta_num * .15
                                                        if rage_of_rivendale_points != 0:
                                                            if dots[1] > current_time:
                                                                atta_num += atta_num * ((rage_of_rivendale_points * 2) / 100)
                                                        if morbitity_points != 0:
                                                            atta_num += ((morbitity_points * 5) / 100)
                                                        if hysteria_active == True:
                                                            atta_num = atta_num + (atta_num * .2)
                                                        if tricksoftt_active == True:
                                                            atta_num = atta_num + (atta_num * .15)
                                                        atta_num = atta_num + (atta_num * increased_spell_damage) + (atta_num * increased_all_damage)
                                                        sudden_doom_damage += atta_num
                                                        if unholy_blight_points == 1:
                                                            unholy_blight_amount = atta_num / 10   
                                                            unholy_blight_timer = current_time + 10
                                                        if rune_of_cinderglacier_active == True:
                                                             rune_of_cinderglacier_damage = atta_num * .2
                                                             rune_of_cinderglacier_active_count += 1
                                                             rotation.append("Rune of Cinderglacier")
                                                             rotation_time.append(current_time)
                                                             rotation_status.append("Active")
                                                             rotation_damage.append(atta_num * .2)
                                                             if rune_of_cinderglacier_active_count == 2:
                                                                 rune_of_cinderglacier_active = False
                                                        rotation.append("Sudden Doom")
                                                        rotation_time.append(current_time)
                                                        rotation_status.append("Crit")
                                                        rotation_damage.append(atta_num)
                                                    else:
                                                        atta_num = random.randint(443, 665)
                                                        atta_num = (atta_num + ((current_ap + (current_ap * ((impurity_points * 4) / 100))) * 0))
                                                        if sigil_of_vengeful_heart == True:
                                                            atta_num + 380
                                                        if sigil_of_the_wild_buck == True:
                                                            atta_num += 80
                                                        if black_ice_points == 5:
                                                            atta_num = atta_num + (atta_num * .1)
                                                        elif black_ice_points == 4:
                                                            atta_num = atta_num + (atta_num * .08)
                                                        elif black_ice_points == 3:
                                                            atta_num = atta_num + (atta_num * .06)
                                                        elif black_ice_points == 2:
                                                            atta_num = atta_num + (atta_num * .04)
                                                        elif black_ice_points == 1:
                                                            atta_num = atta_num + (atta_num * .02)
                                                        if dk_presence == 0:
                                                            atta_num = atta_num + (atta_num * .15)
                                                        if tundra_stalker_points != 0:
                                                            if dots[0] > current_time:
                                                                atta_num = atta_num + (atta_num * (tundra_stalker_points * .03))
                                                        if glyph_death_coil == True:
                                                            atta_num += atta_num * .15
                                                        if rage_of_rivendale_points != 0:
                                                            if dots[1] > current_time:
                                                                atta_num += atta_num * ((rage_of_rivendale_points * 2) / 100)
                                                        if morbitity_points != 0:
                                                            atta_num += ((morbitity_points * 5) / 100)
                                                        if hysteria_active == True:
                                                            atta_num = atta_num + (atta_num * .2)
                                                        if tricksoftt_active == True:
                                                            atta_num = atta_num + (atta_num * .15)
                                                        atta_num = atta_num + (atta_num * increased_spell_damage) + (atta_num * increased_all_damage)
                                                        sudden_doom_damage += atta_num
                                                        if unholy_blight_points == 1:
                                                            unholy_blight_amount = atta_num / 10 
                                                            unholy_blight_timer = current_time + 10
                                                        if rune_of_cinderglacier_active == True:
                                                             rune_of_cinderglacier_damage = atta_num * .2
                                                             rune_of_cinderglacier_active_count += 1
                                                             rotation.append("Rune of Cinderglacier")
                                                             rotation_time.append(current_time)
                                                             rotation_status.append("Active")
                                                             rotation_damage.append(atta_num * .2)
                                                             if rune_of_cinderglacier_active_count == 2:
                                                                 rune_of_cinderglacier_active = False
                                                        rotation.append("Sudden Doom")
                                                        rotation_time.append(current_time)
                                                        rotation_status.append("Hit")
                                                        rotation_damage.append(atta_num)
                                                if hit == False:
                                                    rotation.append("Sudden Doom")
                                                    rotation_time.append(current_time)
                                                    rotation_status.append("Miss")
                                                    rotation_damage.append(0)
                                        rotation.append("Heart Strike - Second Target")
                                        rotation_time.append(current_time)
                                        rotation_status.append("Crit")
                                        rotation_damage.append(atta_num)
                                    elif attack_table_results == 7:
                                        #normal attack
                                        atta_num = (((0 + (wep_roll * .25)) + (( 0 + (wep_roll * .25)) * (.1 * how_many_dots_on_target)) + (( 0 + (wep_roll * .25)) * (.1 * how_many_dots_on_target) * darkruned_battlegear_four_set)) - (((0 + (wep_roll * .25)) + (( 0 + (wep_roll * .25)) * (.1 * how_many_dots_on_target)) + (( 0 + (wep_roll * .25)) * (.1 * how_many_dots_on_target) * darkruned_battlegear_four_set)) * armor_red_amount))
                                        if dk_presence == 0:
                                            atta_num = atta_num + (atta_num * .15)
                                        if t9_tank_two_set == True:
                                            atta_num = atta_num + (atta_num *.05)
                                        if blood_strikes_points != 0:
                                            atta_num = atta_num + ((blood_strikes_points * 15) / 100)
                                        if might_of_mograine_points != 0:
                                            atta_num += atta_num * ((might_of_mograine_points * 15) / 100)
                                        if scourgelords_battlegear_two_set == True:
                                            atta_num = atta_num + (atta_num * .07)
                                        if hysteria_active == True:
                                            atta_num = atta_num + (atta_num * .2)
                                        if tricksoftt_active == True:
                                            atta_num = atta_num + (atta_num * .15)
                                        atta_num = atta_num + (atta_num * increased_physical_damage) + (atta_num * increased_all_damage)
                                        sum_heart_strike_attacks += atta_num
                                        trinket_hit_crit_tracker = 1
                                        if sigil_of_haunted_dreams == True:
                                            if random.randint(0, 100) < 15:
                                                if sigil_of_haunted_dreams_buff == False:
                                                    sigil_of_haunted_dreams_buff = True
                                                    sigil_of_haunted_dreams_timer = current_time + 10  
                                                    total_crit = total_crit + ((173 / 45.8) / 100) 
                                        if t9_dps_two_set == True:
                                            if t9_bonus == False:
                                                if t9_cd_timer < current_time:
                                                    if (random.randint(0, 10000)/100) < 50:
                                                        t9_bonus = True
                                                        t9_cd_timer = current_time + 45
                                                        t9_active_timer = current_time + 15
                                                        bonus_loop_str += 180
                                                        rotation.append("T9 DPS 2p Bonus")
                                                        rotation_time.append(current_time)
                                                        rotation_damage.append(0)
                                                        rotation_status.append("Proc")
                                        if sudden_doom_points != 0:  #Sudden Doom aka Free Death Coil
                                            if (random.randint(0, 10000)/100) < sudden_doom_points * 5:
                                                hit = spell_hit(spell_hit_total, increased_spell_hit, target_level)
                                                crit = spell_crit((total_crit + (darkruned_battlegear_two_set / 100)), spell_hit_total, increased_spell_hit, target_level, increased_spell_crit)
                                                if hit == True:
                                                    if crit == True:
                                                        atta_num = random.randint(443, 665)
                                                        atta_num = (atta_num + ((current_ap + (current_ap * ((impurity_points * 4) / 100))) * 0)) * var_crit_amount
                                                        if sigil_of_vengeful_heart == True:
                                                            atta_num + 380
                                                        if sigil_of_the_wild_buck == True:
                                                            atta_num += 80
                                                        if black_ice_points == 5:
                                                            atta_num = atta_num + (atta_num * .1)
                                                        elif black_ice_points == 4:
                                                            atta_num = atta_num + (atta_num * .08)
                                                        elif black_ice_points == 3:
                                                            atta_num = atta_num + (atta_num * .06)
                                                        elif black_ice_points == 2:
                                                            atta_num = atta_num + (atta_num * .04)
                                                        elif black_ice_points == 1:
                                                            atta_num = atta_num + (atta_num * .02)
                                                        if dk_presence == 0:
                                                            atta_num = atta_num + (atta_num * .15)
                                                        if tundra_stalker_points != 0:
                                                            if dots[0] > current_time:
                                                                atta_num = atta_num + (atta_num * (tundra_stalker_points * .03))
                                                        if glyph_death_coil == True:
                                                            atta_num += atta_num * .15
                                                        if rage_of_rivendale_points != 0:
                                                            if dots[1] > current_time:
                                                                atta_num += atta_num * ((rage_of_rivendale_points * 2) / 100)
                                                        if morbitity_points != 0:
                                                            atta_num += ((morbitity_points * 5) / 100)
                                                        if hysteria_active == True:
                                                            atta_num = atta_num + (atta_num * .2)
                                                        if tricksoftt_active == True:
                                                            atta_num = atta_num + (atta_num * .15)
                                                        atta_num = atta_num + (atta_num * increased_spell_damage) + (atta_num * increased_all_damage)
                                                        sudden_doom_damage += atta_num
                                                        if unholy_blight_points == 1:
                                                            unholy_blight_amount = atta_num / 10   
                                                            unholy_blight_timer = current_time + 10
                                                        if rune_of_cinderglacier_active == True:
                                                             rune_of_cinderglacier_damage = atta_num * .2
                                                             rune_of_cinderglacier_active_count += 1
                                                             rotation.append("Rune of Cinderglacier")
                                                             rotation_time.append(current_time)
                                                             rotation_status.append("Active")
                                                             rotation_damage.append(atta_num * .2)
                                                             if rune_of_cinderglacier_active_count == 2:
                                                                 rune_of_cinderglacier_active = False
                                                        rotation.append("Sudden Doom")
                                                        rotation_time.append(current_time)
                                                        rotation_status.append("Crit")
                                                        rotation_damage.append(atta_num)
                                                    else:
                                                        atta_num = random.randint(443, 665)
                                                        atta_num = (atta_num + ((current_ap + (current_ap * ((impurity_points * 4) / 100))) * 0))
                                                        if sigil_of_vengeful_heart == True:
                                                            atta_num + 380
                                                        if sigil_of_the_wild_buck == True:
                                                            atta_num += 80
                                                        if black_ice_points == 5:
                                                            atta_num = atta_num + (atta_num * .1)
                                                        elif black_ice_points == 4:
                                                            atta_num = atta_num + (atta_num * .08)
                                                        elif black_ice_points == 3:
                                                            atta_num = atta_num + (atta_num * .06)
                                                        elif black_ice_points == 2:
                                                            atta_num = atta_num + (atta_num * .04)
                                                        elif black_ice_points == 1:
                                                            atta_num = atta_num + (atta_num * .02)
                                                        if dk_presence == 0:
                                                            atta_num = atta_num + (atta_num * .15)
                                                        if tundra_stalker_points != 0:
                                                            if dots[0] > current_time:
                                                                atta_num = atta_num + (atta_num * (tundra_stalker_points * .03))
                                                        if glyph_death_coil == True:
                                                            atta_num += atta_num * .15
                                                        if rage_of_rivendale_points != 0:
                                                            if dots[1] > current_time:
                                                                atta_num += atta_num * ((rage_of_rivendale_points * 2) / 100)
                                                        if morbitity_points != 0:
                                                            atta_num += ((morbitity_points * 5) / 100)
                                                        if hysteria_active == True:
                                                            atta_num = atta_num + (atta_num * .2)
                                                        if tricksoftt_active == True:
                                                            atta_num = atta_num + (atta_num * .15)
                                                        atta_num = atta_num + (atta_num * increased_spell_damage) + (atta_num * increased_all_damage)
                                                        sudden_doom_damage += atta_num
                                                        if unholy_blight_points == 1:
                                                            unholy_blight_amount = atta_num / 10 
                                                            unholy_blight_timer = current_time + 10
                                                        if rune_of_cinderglacier_active == True:
                                                             rune_of_cinderglacier_damage = atta_num * .2
                                                             rune_of_cinderglacier_active_count += 1
                                                             rotation.append("Rune of Cinderglacier")
                                                             rotation_time.append(current_time)
                                                             rotation_status.append("Active")
                                                             rotation_damage.append(atta_num * .2)
                                                             if rune_of_cinderglacier_active_count == 2:
                                                                 rune_of_cinderglacier_active = False
                                                        rotation.append("Sudden Doom")
                                                        rotation_time.append(current_time)
                                                        rotation_status.append("Hit")
                                                        rotation_damage.append(atta_num)
                                                if hit == False:
                                                    rotation.append("Sudden Doom")
                                                    rotation_time.append(current_time)
                                                    rotation_status.append("Miss")
                                                    rotation_damage.append(0)
                                        rotation.append("Heart Strike - Second Target")
                                        rotation_time.append(current_time)
                                        rotation_status.append("Hit")
                                        rotation_damage.append(atta_num)
                                attack_table_results = attack_table(1, tanking, H2, True, False, hit_from_gear, hit_from_other, target_level, all_expertise_dodge, all_expertise_parry, total_crit, (annihilation_talent_points / 100) + increased_phy_crit + ((subversion_points * 3) / 100))
                                armor_red_amount = dam_reduc(current_armor, armor_penetration, target_level)
                                wep_roll = weapon_roll(mh_input_lowend_weapon_damage,mh_input_topend_weapon_damage)
                                wep_roll = wep_roll + (attack_damage_normalization * current_ap / 14)
                                #Rune Hit
                                haste_percentage = (total_haste_rating / 25.21) / 100 #Returns a result of 0 - 1 for 0% - 100%
                                haste_rune_cd = rune_grade_timer(current_time, last_rune_change[castable], last_rune_change[castable+6])
                                if improved_unholy_presence_points != 0:
                                    if dk_presence == 2:
                                        haste_rune_cd = haste_rune_cd - (haste_rune_cd * ((improved_unholy_presence_points * 5) / 100))
                                if dk_presence != 2:
                                    gcd = input_gcd / (1 + haste_percentage)
                                    if gcd < 1:
                                        gcd = 1
                                ##Rune Miss
                                haste_rune_cd_miss = 1
                                how_many_dots_on_target = 0
                                if dots[0] > current_time:
                                    how_many_dots_on_target += 1
                                if dots[1] > current_time:
                                    how_many_dots_on_target += 1
                                if dots[2] > current_time:
                                    how_many_dots_on_target += 1
                                if dancing_rune_weapon_points == 1:
                                    if dancing_rune_weapon_active == True:
                                        if attack_table_results == 0:
                                            atta_num = 0
                                            rotation.append("Dancing Rune Weapon")
                                            rotation_time.append(current_time)
                                            rotation_status.append("Miss")
                                            rotation_damage.append(atta_num)
                                        elif attack_table_results == 1:
                                            atta_num = 0
                                            rotation.append("Dancing Rune Weapon")
                                            rotation_time.append(current_time)
                                            rotation_status.append("Dodge")
                                            rotation_damage.append(atta_num)
                                        elif attack_table_results == 5:
                                            atta_num = (((0 + (wep_roll * .5)) + (( 0 + (wep_roll * .5)) * (.1 * how_many_dots_on_target)) + (( 0 + (wep_roll * .5)) * (.1 * how_many_dots_on_target) * darkruned_battlegear_four_set)) - (((0 + (wep_roll * .5)) + (( 0 + (wep_roll * .5)) * (.1 * how_many_dots_on_target)) + (( 0 + (wep_roll * .5)) * (.1 * how_many_dots_on_target) * darkruned_battlegear_four_set)) * armor_red_amount))  * (var_crit_amount)
                                            if dk_presence == 0:
                                                atta_num = atta_num + (atta_num * .15)
                                            if t9_tank_two_set == True:
                                                atta_num = atta_num + (atta_num *.05)
                                            if blood_strikes_points != 0:
                                                atta_num = atta_num + ((blood_strikes_points * 15) / 100)
                                            if might_of_mograine_points != 0:
                                                atta_num += atta_num * ((might_of_mograine_points * 15) / 100)
                                            if scourgelords_battlegear_two_set == True:
                                                atta_num = atta_num + (atta_num * .07)
                                            if hysteria_active == True:
                                                atta_num = atta_num + (atta_num * .2)
                                            if tricksoftt_active == True:
                                                atta_num = atta_num + (atta_num * .15)
                                            atta_num = atta_num + (atta_num * increased_physical_damage) + (atta_num * increased_all_damage)
                                            atta_num = atta_num * dancing_rune_weapon_damage_multi
                                            dancing_rune_weapon_damage += atta_num
                                            rotation.append("Dancing Rune Weapon")
                                            rotation_time.append(current_time)
                                            rotation_status.append("Crit") 
                                            rotation_damage.append(atta_num)
                                            trinket_hit_crit_tracker = 2
                                            if sigil_of_haunted_dreams == True:
                                                if random.randint(0, 100) < 15:
                                                    if sigil_of_haunted_dreams_buff == False:
                                                        sigil_of_haunted_dreams_buff = True
                                                        sigil_of_haunted_dreams_timer = current_time + 10  
                                                        total_crit = total_crit + ((173 / 45.8) / 100) 
                                            if t9_dps_two_set == True:
                                                if t9_bonus == False:
                                                    if t9_cd_timer < current_time:
                                                        if (random.randint(0, 10000)/100) < 50:
                                                            t9_bonus = True
                                                            t9_cd_timer = current_time + 45
                                                            t9_active_timer = current_time + 15
                                                            bonus_loop_str += 180
                                                            rotation.append("T9 DPS 2p Bonus")
                                                            rotation_time.append(current_time)
                                                            rotation_damage.append(0)
                                                            rotation_status.append("Proc")
                                            if sudden_doom_points != 0:  #Sudden Doom aka Free Death Coil
                                                if (random.randint(0, 10000)/100) < sudden_doom_points * 5:
                                                    hit = spell_hit(spell_hit_total, increased_spell_hit, target_level)
                                                    crit = spell_crit((total_crit + (darkruned_battlegear_two_set / 100)), spell_hit_total, increased_spell_hit, target_level, increased_spell_crit)
                                                    if hit == True:
                                                        if crit == True:
                                                            atta_num = random.randint(443, 665)
                                                            atta_num = (atta_num + ((current_ap + (current_ap * ((impurity_points * 4) / 100))) * 0)) * var_crit_amount
                                                            if sigil_of_vengeful_heart == True:
                                                                atta_num + 380
                                                            if sigil_of_the_wild_buck == True:
                                                                atta_num += 80
                                                            if black_ice_points == 5:
                                                                atta_num = atta_num + (atta_num * .1)
                                                            elif black_ice_points == 4:
                                                                atta_num = atta_num + (atta_num * .08)
                                                            elif black_ice_points == 3:
                                                                atta_num = atta_num + (atta_num * .06)
                                                            elif black_ice_points == 2:
                                                                atta_num = atta_num + (atta_num * .04)
                                                            elif black_ice_points == 1:
                                                                atta_num = atta_num + (atta_num * .02)
                                                            if dk_presence == 0:
                                                                atta_num = atta_num + (atta_num * .15)
                                                            if tundra_stalker_points != 0:
                                                                if dots[0] > current_time:
                                                                    atta_num = atta_num + (atta_num * (tundra_stalker_points * .03))
                                                            if glyph_death_coil == True:
                                                                atta_num += atta_num * .15
                                                            if rage_of_rivendale_points != 0:
                                                                if dots[1] > current_time:
                                                                    atta_num += atta_num * ((rage_of_rivendale_points * 2) / 100)
                                                            if morbitity_points != 0:
                                                                atta_num += ((morbitity_points * 5) / 100)
                                                            if hysteria_active == True:
                                                                atta_num = atta_num + (atta_num * .2)
                                                            if tricksoftt_active == True:
                                                                atta_num = atta_num + (atta_num * .15)
                                                            atta_num = atta_num + (atta_num * increased_spell_damage) + (atta_num * increased_all_damage)
                                                            sudden_doom_damage += atta_num
                                                            if unholy_blight_points == 1:
                                                                unholy_blight_amount = atta_num / 10   
                                                                unholy_blight_timer = current_time + 10
                                                            if rune_of_cinderglacier_active == True:
                                                                 rune_of_cinderglacier_damage = atta_num * .2
                                                                 rune_of_cinderglacier_active_count += 1
                                                                 rotation.append("Rune of Cinderglacier")
                                                                 rotation_time.append(current_time)
                                                                 rotation_status.append("Active")
                                                                 rotation_damage.append(atta_num * .2)
                                                                 if rune_of_cinderglacier_active_count == 2:
                                                                     rune_of_cinderglacier_active = False
                                                            rotation.append("Sudden Doom")
                                                            rotation_time.append(current_time)
                                                            rotation_status.append("Crit")
                                                            rotation_damage.append(atta_num)
                                                        else:
                                                            atta_num = random.randint(443, 665)
                                                            atta_num = (atta_num + ((current_ap + (current_ap * ((impurity_points * 4) / 100))) * 0))
                                                            if sigil_of_vengeful_heart == True:
                                                                atta_num + 380
                                                            if sigil_of_the_wild_buck == True:
                                                                atta_num += 80
                                                            if black_ice_points == 5:
                                                                atta_num = atta_num + (atta_num * .1)
                                                            elif black_ice_points == 4:
                                                                atta_num = atta_num + (atta_num * .08)
                                                            elif black_ice_points == 3:
                                                                atta_num = atta_num + (atta_num * .06)
                                                            elif black_ice_points == 2:
                                                                atta_num = atta_num + (atta_num * .04)
                                                            elif black_ice_points == 1:
                                                                atta_num = atta_num + (atta_num * .02)
                                                            if dk_presence == 0:
                                                                atta_num = atta_num + (atta_num * .15)
                                                            if tundra_stalker_points != 0:
                                                                if dots[0] > current_time:
                                                                    atta_num = atta_num + (atta_num * (tundra_stalker_points * .03))
                                                            if glyph_death_coil == True:
                                                                atta_num += atta_num * .15
                                                            if rage_of_rivendale_points != 0:
                                                                if dots[1] > current_time:
                                                                    atta_num += atta_num * ((rage_of_rivendale_points * 2) / 100)
                                                            if morbitity_points != 0:
                                                                atta_num += ((morbitity_points * 5) / 100)
                                                            if hysteria_active == True:
                                                                atta_num = atta_num + (atta_num * .2)
                                                            if tricksoftt_active == True:
                                                                atta_num = atta_num + (atta_num * .15)
                                                            atta_num = atta_num + (atta_num * increased_spell_damage) + (atta_num * increased_all_damage)
                                                            sudden_doom_damage += atta_num
                                                            if unholy_blight_points == 1:
                                                                unholy_blight_amount = atta_num / 10 
                                                                unholy_blight_timer = current_time + 10
                                                            if rune_of_cinderglacier_active == True:
                                                                 rune_of_cinderglacier_damage = atta_num * .2
                                                                 rune_of_cinderglacier_active_count += 1
                                                                 rotation.append("Rune of Cinderglacier")
                                                                 rotation_time.append(current_time)
                                                                 rotation_status.append("Active")
                                                                 rotation_damage.append(atta_num * .2)
                                                                 if rune_of_cinderglacier_active_count == 2:
                                                                     rune_of_cinderglacier_active = False
                                                            rotation.append("Sudden Doom")
                                                            rotation_time.append(current_time)
                                                            rotation_status.append("Hit")
                                                            rotation_damage.append(atta_num)
                                                    if hit == False:
                                                        rotation.append("Sudden Doom")
                                                        rotation_time.append(current_time)
                                                        rotation_status.append("Miss")
                                                        rotation_damage.append(0)                                            
                                        elif attack_table_results == 7:
                                            atta_num = (((0 + (wep_roll * .5)) + (( 0 + (wep_roll * .5)) * (.1 * how_many_dots_on_target)) + (( 0 + (wep_roll * .5)) * (.1 * how_many_dots_on_target) * darkruned_battlegear_four_set)) - (((0 + (wep_roll * .5)) + (( 0 + (wep_roll * .5)) * (.1 * how_many_dots_on_target)) + (( 0 + (wep_roll * .5)) * (.1 * how_many_dots_on_target) * darkruned_battlegear_four_set)) * armor_red_amount))
                                            if dk_presence == 0:
                                                atta_num = atta_num + (atta_num * .15)
                                            if t9_tank_two_set == True:
                                                atta_num = atta_num + (atta_num *.05)
                                            if blood_strikes_points != 0:
                                                atta_num = atta_num + ((blood_strikes_points * 15) / 100)
                                            if might_of_mograine_points != 0:
                                                atta_num += atta_num * ((might_of_mograine_points * 15) / 100)
                                            if scourgelords_battlegear_two_set == True:
                                                atta_num = atta_num + (atta_num * .07)
                                            if hysteria_active == True:
                                                atta_num = atta_num + (atta_num * .2)
                                            if tricksoftt_active == True:
                                                atta_num = atta_num + (atta_num * .15)
                                            atta_num = atta_num + (atta_num * increased_physical_damage) + (atta_num * increased_all_damage)
                                            atta_num = atta_num * dancing_rune_weapon_damage_multi
                                            dancing_rune_weapon_damage += atta_num
                                            rotation.append("Dancing Rune Weapon")
                                            rotation_time.append(current_time)
                                            rotation_status.append("Hit") 
                                            rotation_damage.append(atta_num)
                                            trinket_hit_crit_tracker = 1
                                            if sigil_of_haunted_dreams == True:
                                                if random.randint(0, 100) < 15:
                                                    if sigil_of_haunted_dreams_buff == False:
                                                        sigil_of_haunted_dreams_buff = True
                                                        sigil_of_haunted_dreams_timer = current_time + 10  
                                                        total_crit = total_crit + ((173 / 45.8) / 100) 
                                            if t9_dps_two_set == True:
                                                if t9_bonus == False:
                                                    if t9_cd_timer < current_time:
                                                        if (random.randint(0, 10000)/100) < 50:
                                                            t9_bonus = True
                                                            t9_cd_timer = current_time + 45
                                                            t9_active_timer = current_time + 15
                                                            bonus_loop_str += 180
                                                            rotation.append("T9 DPS 2p Bonus")
                                                            rotation_time.append(current_time)
                                                            rotation_damage.append(0)
                                                            rotation_status.append("Proc")
                                            if sudden_doom_points != 0:  #Sudden Doom aka Free Death Coil
                                                if (random.randint(0, 10000)/100) < sudden_doom_points * 5:
                                                    hit = spell_hit(spell_hit_total, increased_spell_hit, target_level)
                                                    crit = spell_crit((total_crit + (darkruned_battlegear_two_set / 100)), spell_hit_total, increased_spell_hit, target_level, increased_spell_crit)
                                                    if hit == True:
                                                        if crit == True:
                                                            atta_num = random.randint(443, 665)
                                                            atta_num = (atta_num + ((current_ap + (current_ap * ((impurity_points * 4) / 100))) * 0)) * var_crit_amount
                                                            if sigil_of_vengeful_heart == True:
                                                                atta_num + 380
                                                            if sigil_of_the_wild_buck == True:
                                                                atta_num += 80
                                                            if black_ice_points == 5:
                                                                atta_num = atta_num + (atta_num * .1)
                                                            elif black_ice_points == 4:
                                                                atta_num = atta_num + (atta_num * .08)
                                                            elif black_ice_points == 3:
                                                                atta_num = atta_num + (atta_num * .06)
                                                            elif black_ice_points == 2:
                                                                atta_num = atta_num + (atta_num * .04)
                                                            elif black_ice_points == 1:
                                                                atta_num = atta_num + (atta_num * .02)
                                                            if dk_presence == 0:
                                                                atta_num = atta_num + (atta_num * .15)
                                                            if tundra_stalker_points != 0:
                                                                if dots[0] > current_time:
                                                                    atta_num = atta_num + (atta_num * (tundra_stalker_points * .03))
                                                            if glyph_death_coil == True:
                                                                atta_num += atta_num * .15
                                                            if rage_of_rivendale_points != 0:
                                                                if dots[1] > current_time:
                                                                    atta_num += atta_num * ((rage_of_rivendale_points * 2) / 100)
                                                            if morbitity_points != 0:
                                                                atta_num += ((morbitity_points * 5) / 100)
                                                            if hysteria_active == True:
                                                                atta_num = atta_num + (atta_num * .2)
                                                            if tricksoftt_active == True:
                                                                atta_num = atta_num + (atta_num * .15)
                                                            atta_num = atta_num + (atta_num * increased_spell_damage) + (atta_num * increased_all_damage)
                                                            sudden_doom_damage += atta_num
                                                            if unholy_blight_points == 1:
                                                                unholy_blight_amount = atta_num / 10   
                                                                unholy_blight_timer = current_time + 10
                                                            if rune_of_cinderglacier_active == True:
                                                                 rune_of_cinderglacier_damage = atta_num * .2
                                                                 rune_of_cinderglacier_active_count += 1
                                                                 rotation.append("Rune of Cinderglacier")
                                                                 rotation_time.append(current_time)
                                                                 rotation_status.append("Active")
                                                                 rotation_damage.append(atta_num * .2)
                                                                 if rune_of_cinderglacier_active_count == 2:
                                                                     rune_of_cinderglacier_active = False
                                                            rotation.append("Sudden Doom")
                                                            rotation_time.append(current_time)
                                                            rotation_status.append("Crit")
                                                            rotation_damage.append(atta_num)
                                                        else:
                                                            atta_num = random.randint(443, 665)
                                                            atta_num = (atta_num + ((current_ap + (current_ap * ((impurity_points * 4) / 100))) * 0))
                                                            if sigil_of_vengeful_heart == True:
                                                                atta_num + 380
                                                            if sigil_of_the_wild_buck == True:
                                                                atta_num += 80
                                                            if black_ice_points == 5:
                                                                atta_num = atta_num + (atta_num * .1)
                                                            elif black_ice_points == 4:
                                                                atta_num = atta_num + (atta_num * .08)
                                                            elif black_ice_points == 3:
                                                                atta_num = atta_num + (atta_num * .06)
                                                            elif black_ice_points == 2:
                                                                atta_num = atta_num + (atta_num * .04)
                                                            elif black_ice_points == 1:
                                                                atta_num = atta_num + (atta_num * .02)
                                                            if dk_presence == 0:
                                                                atta_num = atta_num + (atta_num * .15)
                                                            if tundra_stalker_points != 0:
                                                                if dots[0] > current_time:
                                                                    atta_num = atta_num + (atta_num * (tundra_stalker_points * .03))
                                                            if glyph_death_coil == True:
                                                                atta_num += atta_num * .15
                                                            if rage_of_rivendale_points != 0:
                                                                if dots[1] > current_time:
                                                                    atta_num += atta_num * ((rage_of_rivendale_points * 2) / 100)
                                                            if morbitity_points != 0:
                                                                atta_num += ((morbitity_points * 5) / 100)
                                                            if hysteria_active == True:
                                                                atta_num = atta_num + (atta_num * .2)
                                                            if tricksoftt_active == True:
                                                                atta_num = atta_num + (atta_num * .15)
                                                            atta_num = atta_num + (atta_num * increased_spell_damage) + (atta_num * increased_all_damage)
                                                            sudden_doom_damage += atta_num
                                                            if unholy_blight_points == 1:
                                                                unholy_blight_amount = atta_num / 10 
                                                                unholy_blight_timer = current_time + 10
                                                            if rune_of_cinderglacier_active == True:
                                                                 rune_of_cinderglacier_damage = atta_num * .2
                                                                 rune_of_cinderglacier_active_count += 1
                                                                 rotation.append("Rune of Cinderglacier")
                                                                 rotation_time.append(current_time)
                                                                 rotation_status.append("Active")
                                                                 rotation_damage.append(atta_num * .2)
                                                                 if rune_of_cinderglacier_active_count == 2:
                                                                     rune_of_cinderglacier_active = False
                                                            rotation.append("Sudden Doom")
                                                            rotation_time.append(current_time)
                                                            rotation_status.append("Hit")
                                                            rotation_damage.append(atta_num)
                                                    if hit == False:
                                                        rotation.append("Sudden Doom")
                                                        rotation_time.append(current_time)
                                                        rotation_status.append("Miss")
                                                        rotation_damage.append(0)   
                                if attack_table_results == 0:
                                    atta_num = 0
                                    rune_cd_tracker[castable] = rune_cd(haste_rune_cd_miss, current_time)
                                    rotation.append("Heart Strike")
                                    rotation_time.append(current_time)
                                    rotation_status.append("Miss")
                                    rotation_damage.append(atta_num)
                                    current_time = current_time + gcd
                                    used_gcd = True
                                    continue
                                elif attack_table_results == 1:
                                    atta_num = 0
                                    rune_cd_tracker[castable] = rune_cd(haste_rune_cd_miss, current_time)
                                    rotation.append("Heart Strike")
                                    rotation_time.append(current_time)
                                    rotation_status.append("Dodge")
                                    rotation_damage.append(atta_num)
                                    current_time = current_time + gcd
                                    used_gcd = True
                                    continue
                                elif attack_table_results == 5:
                                    #crit attack
                                    rune_cd_tracker[castable] = rune_cd(haste_rune_cd, current_time)
                                    atta_num = (((0 + (wep_roll * .5)) + (( 0 + (wep_roll * .5)) * (.1 * how_many_dots_on_target)) + (( 0 + (wep_roll * .5)) * (.1 * how_many_dots_on_target) * darkruned_battlegear_four_set)) - (((0 + (wep_roll * .5)) + (( 0 + (wep_roll * .5)) * (.1 * how_many_dots_on_target)) + (( 0 + (wep_roll * .5)) * (.1 * how_many_dots_on_target) * darkruned_battlegear_four_set)) * armor_red_amount))  * (var_crit_amount)
                                    if dk_presence == 0:
                                        atta_num = atta_num + (atta_num * .15)
                                    if t9_tank_two_set == True:
                                        atta_num = atta_num + (atta_num *.05)
                                    if blood_strikes_points != 0:
                                        atta_num = atta_num + ((blood_strikes_points * 15) / 100)
                                    if might_of_mograine_points != 0:
                                        atta_num += atta_num * ((might_of_mograine_points * 15) / 100)
                                    if scourgelords_battlegear_two_set == True:
                                        atta_num = atta_num + (atta_num * .07)
                                    if hysteria_active == True:
                                        atta_num = atta_num + (atta_num * .2)
                                    if tricksoftt_active == True:
                                        atta_num = atta_num + (atta_num * .15)
                                    atta_num = atta_num + (atta_num * increased_physical_damage) + (atta_num * increased_all_damage)
                                    sum_heart_strike_attacks += atta_num
                                    current_power = runic_power(10, current_power, max_runic)
                                    trinket_hit_crit_tracker = 2
                                    if sigil_of_haunted_dreams == True:
                                        if random.randint(0, 100) < 15:
                                            if sigil_of_haunted_dreams_buff == False:
                                                sigil_of_haunted_dreams_buff = True
                                                sigil_of_haunted_dreams_timer = current_time + 10  
                                                total_crit = total_crit + ((173 / 45.8) / 100) 
                                    if t9_dps_two_set == True:
                                        if t9_bonus == False:
                                            if t9_cd_timer < current_time:
                                                if (random.randint(0, 10000)/100) < 50:
                                                    t9_bonus = True
                                                    t9_cd_timer = current_time + 45
                                                    t9_active_timer = current_time + 15
                                                    bonus_loop_str += 180
                                                    rotation.append("T9 DPS 2p Bonus")
                                                    rotation_time.append(current_time)
                                                    rotation_damage.append(0)
                                                    rotation_status.append("Proc")
                                    if sudden_doom_points != 0:  #Sudden Doom aka Free Death Coil
                                        if (random.randint(0, 10000)/100) < sudden_doom_points * 5:
                                            hit = spell_hit(spell_hit_total, increased_spell_hit, target_level)
                                            crit = spell_crit((total_crit + (darkruned_battlegear_two_set / 100)), spell_hit_total, increased_spell_hit, target_level, increased_spell_crit)
                                            if hit == True:
                                                if crit == True:
                                                    atta_num = random.randint(443, 665)
                                                    atta_num = (atta_num + ((current_ap + (current_ap * ((impurity_points * 4) / 100))) * 0)) * var_crit_amount
                                                    if sigil_of_vengeful_heart == True:
                                                        atta_num + 380
                                                    if sigil_of_the_wild_buck == True:
                                                        atta_num += 80
                                                    if black_ice_points == 5:
                                                        atta_num = atta_num + (atta_num * .1)
                                                    elif black_ice_points == 4:
                                                        atta_num = atta_num + (atta_num * .08)
                                                    elif black_ice_points == 3:
                                                        atta_num = atta_num + (atta_num * .06)
                                                    elif black_ice_points == 2:
                                                        atta_num = atta_num + (atta_num * .04)
                                                    elif black_ice_points == 1:
                                                        atta_num = atta_num + (atta_num * .02)
                                                    if dk_presence == 0:
                                                        atta_num = atta_num + (atta_num * .15)
                                                    if tundra_stalker_points != 0:
                                                        if dots[0] > current_time:
                                                            atta_num = atta_num + (atta_num * (tundra_stalker_points * .03))
                                                    if glyph_death_coil == True:
                                                        atta_num += atta_num * .15
                                                    if rage_of_rivendale_points != 0:
                                                        if dots[1] > current_time:
                                                            atta_num += atta_num * ((rage_of_rivendale_points * 2) / 100)
                                                    if morbitity_points != 0:
                                                        atta_num += ((morbitity_points * 5) / 100)
                                                    if hysteria_active == True:
                                                        atta_num = atta_num + (atta_num * .2)
                                                    if tricksoftt_active == True:
                                                        atta_num = atta_num + (atta_num * .15)
                                                    atta_num = atta_num + (atta_num * increased_spell_damage) + (atta_num * increased_all_damage)
                                                    sudden_doom_damage += atta_num
                                                    if unholy_blight_points == 1:
                                                        unholy_blight_amount = atta_num / 10   
                                                        unholy_blight_timer = current_time + 10
                                                    if rune_of_cinderglacier_active == True:
                                                         rune_of_cinderglacier_damage = atta_num * .2
                                                         rune_of_cinderglacier_active_count += 1
                                                         rotation.append("Rune of Cinderglacier")
                                                         rotation_time.append(current_time)
                                                         rotation_status.append("Active")
                                                         rotation_damage.append(atta_num * .2)
                                                         if rune_of_cinderglacier_active_count == 2:
                                                             rune_of_cinderglacier_active = False
                                                    rotation.append("Sudden Doom")
                                                    rotation_time.append(current_time)
                                                    rotation_status.append("Crit")
                                                    rotation_damage.append(atta_num)
                                                else:
                                                    atta_num = random.randint(443, 665)
                                                    atta_num = (atta_num + ((current_ap + (current_ap * ((impurity_points * 4) / 100))) * 0))
                                                    if sigil_of_vengeful_heart == True:
                                                        atta_num + 380
                                                    if sigil_of_the_wild_buck == True:
                                                        atta_num += 80
                                                    if black_ice_points == 5:
                                                        atta_num = atta_num + (atta_num * .1)
                                                    elif black_ice_points == 4:
                                                        atta_num = atta_num + (atta_num * .08)
                                                    elif black_ice_points == 3:
                                                        atta_num = atta_num + (atta_num * .06)
                                                    elif black_ice_points == 2:
                                                        atta_num = atta_num + (atta_num * .04)
                                                    elif black_ice_points == 1:
                                                        atta_num = atta_num + (atta_num * .02)
                                                    if dk_presence == 0:
                                                        atta_num = atta_num + (atta_num * .15)
                                                    if tundra_stalker_points != 0:
                                                        if dots[0] > current_time:
                                                            atta_num = atta_num + (atta_num * (tundra_stalker_points * .03))
                                                    if glyph_death_coil == True:
                                                        atta_num += atta_num * .15
                                                    if rage_of_rivendale_points != 0:
                                                        if dots[1] > current_time:
                                                            atta_num += atta_num * ((rage_of_rivendale_points * 2) / 100)
                                                    if morbitity_points != 0:
                                                        atta_num += ((morbitity_points * 5) / 100)
                                                    if hysteria_active == True:
                                                        atta_num = atta_num + (atta_num * .2)
                                                    if tricksoftt_active == True:
                                                        atta_num = atta_num + (atta_num * .15)
                                                    atta_num = atta_num + (atta_num * increased_spell_damage) + (atta_num * increased_all_damage)
                                                    sudden_doom_damage += atta_num
                                                    if unholy_blight_points == 1:
                                                        unholy_blight_amount = atta_num / 10 
                                                        unholy_blight_timer = current_time + 10
                                                    if rune_of_cinderglacier_active == True:
                                                         rune_of_cinderglacier_damage = atta_num * .2
                                                         rune_of_cinderglacier_active_count += 1
                                                         rotation.append("Rune of Cinderglacier")
                                                         rotation_time.append(current_time)
                                                         rotation_status.append("Active")
                                                         rotation_damage.append(atta_num * .2)
                                                         if rune_of_cinderglacier_active_count == 2:
                                                             rune_of_cinderglacier_active = False
                                                    rotation.append("Sudden Doom")
                                                    rotation_time.append(current_time)
                                                    rotation_status.append("Hit")
                                                    rotation_damage.append(atta_num)
                                            if hit == False:
                                                rotation.append("Sudden Doom")
                                                rotation_time.append(current_time)
                                                rotation_status.append("Miss")
                                                rotation_damage.append(0)
                                    rotation.append("Heart Strike")
                                    rotation_time.append(current_time)
                                    rotation_status.append("Crit")
                                    rotation_damage.append(atta_num)
                                    current_time += gcd
                                    used_gcd = True
                                    continue
                                elif attack_table_results == 7:
                                    #normal attack
                                    rune_cd_tracker[castable] = rune_cd(haste_rune_cd, current_time)
                                    atta_num = (((0 + (wep_roll * .5)) + (( 0 + (wep_roll * .5)) * (.1 * how_many_dots_on_target)) + (( 0 + (wep_roll * .5)) * (.1 * how_many_dots_on_target) * darkruned_battlegear_four_set)) - (((0 + (wep_roll * .5)) + (( 0 + (wep_roll * .5)) * (.1 * how_many_dots_on_target)) + (( 0 + (wep_roll * .5)) * (.1 * how_many_dots_on_target) * darkruned_battlegear_four_set)) * armor_red_amount))
                                    if dk_presence == 0:
                                        atta_num = atta_num + (atta_num * .15)
                                    if t9_tank_two_set == True:
                                        atta_num = atta_num + (atta_num *.05)
                                    if blood_strikes_points != 0:
                                        atta_num = atta_num + ((blood_strikes_points * 15) / 100)
                                    if might_of_mograine_points != 0:
                                        atta_num += atta_num * ((might_of_mograine_points * 15) / 100)
                                    if scourgelords_battlegear_two_set == True:
                                        atta_num = atta_num + (atta_num * .07)
                                    if hysteria_active == True:
                                        atta_num = atta_num + (atta_num * .2)
                                    if tricksoftt_active == True:
                                        atta_num = atta_num + (atta_num * .15)
                                    atta_num = atta_num + (atta_num * increased_physical_damage) + (atta_num * increased_all_damage)
                                    sum_heart_strike_attacks += atta_num
                                    current_power = runic_power(10, current_power, max_runic)
                                    trinket_hit_crit_tracker = 1
                                    if sigil_of_haunted_dreams == True:
                                        if random.randint(0, 100) < 15:
                                            if sigil_of_haunted_dreams_buff == False:
                                                sigil_of_haunted_dreams_buff = True
                                                sigil_of_haunted_dreams_timer = current_time + 10  
                                                total_crit = total_crit + ((173 / 45.8) / 100) 
                                    if t9_dps_two_set == True:
                                        if t9_bonus == False:
                                            if t9_cd_timer < current_time:
                                                if (random.randint(0, 10000)/100) < 50:
                                                    t9_bonus = True
                                                    t9_cd_timer = current_time + 45
                                                    t9_active_timer = current_time + 15
                                                    bonus_loop_str += 180
                                                    rotation.append("T9 DPS 2p Bonus")
                                                    rotation_time.append(current_time)
                                                    rotation_damage.append(0)
                                                    rotation_status.append("Proc")
                                    if sudden_doom_points != 0:  #Sudden Doom aka Free Death Coil
                                        if (random.randint(0, 10000)/100) < sudden_doom_points * 5:
                                            hit = spell_hit(spell_hit_total, increased_spell_hit, target_level)
                                            crit = spell_crit((total_crit + (darkruned_battlegear_two_set / 100)), spell_hit_total, increased_spell_hit, target_level, increased_spell_crit)
                                            if hit == True:
                                                if crit == True:
                                                    atta_num = random.randint(443, 665)
                                                    atta_num = (atta_num + ((current_ap + (current_ap * ((impurity_points * 4) / 100))) * 0)) * var_crit_amount
                                                    if sigil_of_vengeful_heart == True:
                                                        atta_num + 380
                                                    if sigil_of_the_wild_buck == True:
                                                        atta_num += 80
                                                    if black_ice_points == 5:
                                                        atta_num = atta_num + (atta_num * .1)
                                                    elif black_ice_points == 4:
                                                        atta_num = atta_num + (atta_num * .08)
                                                    elif black_ice_points == 3:
                                                        atta_num = atta_num + (atta_num * .06)
                                                    elif black_ice_points == 2:
                                                        atta_num = atta_num + (atta_num * .04)
                                                    elif black_ice_points == 1:
                                                        atta_num = atta_num + (atta_num * .02)
                                                    if dk_presence == 0:
                                                        atta_num = atta_num + (atta_num * .15)
                                                    if tundra_stalker_points != 0:
                                                        if dots[0] > current_time:
                                                            atta_num = atta_num + (atta_num * (tundra_stalker_points * .03))
                                                    if glyph_death_coil == True:
                                                        atta_num += atta_num * .15
                                                    if rage_of_rivendale_points != 0:
                                                        if dots[1] > current_time:
                                                            atta_num += atta_num * ((rage_of_rivendale_points * 2) / 100)
                                                    if morbitity_points != 0:
                                                        atta_num += ((morbitity_points * 5) / 100)
                                                    if hysteria_active == True:
                                                        atta_num = atta_num + (atta_num * .2)
                                                    if tricksoftt_active == True:
                                                        atta_num = atta_num + (atta_num * .15)
                                                    atta_num = atta_num + (atta_num * increased_spell_damage) + (atta_num * increased_all_damage)
                                                    sudden_doom_damage += atta_num
                                                    if unholy_blight_points == 1:
                                                        unholy_blight_amount = atta_num / 10   
                                                        unholy_blight_timer = current_time + 10
                                                    if rune_of_cinderglacier_active == True:
                                                         rune_of_cinderglacier_damage = atta_num * .2
                                                         rune_of_cinderglacier_active_count += 1
                                                         rotation.append("Rune of Cinderglacier")
                                                         rotation_time.append(current_time)
                                                         rotation_status.append("Active")
                                                         rotation_damage.append(atta_num * .2)
                                                         if rune_of_cinderglacier_active_count == 2:
                                                             rune_of_cinderglacier_active = False
                                                    rotation.append("Sudden Doom")
                                                    rotation_time.append(current_time)
                                                    rotation_status.append("Crit")
                                                    rotation_damage.append(atta_num)
                                                else:
                                                    atta_num = random.randint(443, 665)
                                                    atta_num = (atta_num + ((current_ap + (current_ap * ((impurity_points * 4) / 100))) * 0))
                                                    if sigil_of_vengeful_heart == True:
                                                        atta_num + 380
                                                    if sigil_of_the_wild_buck == True:
                                                        atta_num += 80
                                                    if black_ice_points == 5:
                                                        atta_num = atta_num + (atta_num * .1)
                                                    elif black_ice_points == 4:
                                                        atta_num = atta_num + (atta_num * .08)
                                                    elif black_ice_points == 3:
                                                        atta_num = atta_num + (atta_num * .06)
                                                    elif black_ice_points == 2:
                                                        atta_num = atta_num + (atta_num * .04)
                                                    elif black_ice_points == 1:
                                                        atta_num = atta_num + (atta_num * .02)
                                                    if dk_presence == 0:
                                                        atta_num = atta_num + (atta_num * .15)
                                                    if tundra_stalker_points != 0:
                                                        if dots[0] > current_time:
                                                            atta_num = atta_num + (atta_num * (tundra_stalker_points * .03))
                                                    if glyph_death_coil == True:
                                                        atta_num += atta_num * .15
                                                    if rage_of_rivendale_points != 0:
                                                        if dots[1] > current_time:
                                                            atta_num += atta_num * ((rage_of_rivendale_points * 2) / 100)
                                                    if morbitity_points != 0:
                                                        atta_num += ((morbitity_points * 5) / 100)
                                                    if hysteria_active == True:
                                                        atta_num = atta_num + (atta_num * .2)
                                                    if tricksoftt_active == True:
                                                        atta_num = atta_num + (atta_num * .15)
                                                    atta_num = atta_num + (atta_num * increased_spell_damage) + (atta_num * increased_all_damage)
                                                    sudden_doom_damage += atta_num
                                                    if unholy_blight_points == 1:
                                                        unholy_blight_amount = atta_num / 10 
                                                        unholy_blight_timer = current_time + 10
                                                    if rune_of_cinderglacier_active == True:
                                                         rune_of_cinderglacier_damage = atta_num * .2
                                                         rune_of_cinderglacier_active_count += 1
                                                         rotation.append("Rune of Cinderglacier")
                                                         rotation_time.append(current_time)
                                                         rotation_status.append("Active")
                                                         rotation_damage.append(atta_num * .2)
                                                         if rune_of_cinderglacier_active_count == 2:
                                                             rune_of_cinderglacier_active = False
                                                    rotation.append("Sudden Doom")
                                                    rotation_time.append(current_time)
                                                    rotation_status.append("Hit")
                                                    rotation_damage.append(atta_num)
                                            if hit == False:
                                                rotation.append("Sudden Doom")
                                                rotation_time.append(current_time)
                                                rotation_status.append("Miss")
                                                rotation_damage.append(0)
                                    rotation.append("Heart Strike")
                                    rotation_time.append(current_time)
                                    rotation_status.append("Hit")
                                    rotation_damage.append(atta_num)
                                    current_time += gcd
                                    used_gcd = True
                                    continue
                                
                                
                                
                    castable = all_rune_check(frost, current_time, rune_cd_tracker) #Start of Death Strike
                    use_death_rune = False
                    if castable == 3:
                        castable_death = all_rune_check(death, current_time, rune_cd_tracker)
                        castable_death_f = all_rune_check(death_f, current_time, rune_cd_tracker)
                        castable_death_u = all_rune_check(death_u, current_time, rune_cd_tracker)
                        if castable_death != 3:
                            use_death_rune = True
                            just_used_death_rune = True
                            castable_frost = all_rune_check(frost, current_time, rune_cd_tracker)
                            castable_unholy = all_rune_check(unholy, current_time, rune_cd_tracker)
                            if dots[0] <= current_time + haste_rune_cd:
                                if dots[1] <= current_time + haste_rune_cd:
                                    if castable_death == 2:
                                        castable_death = 1
                            if castable_death == 2 or castable_frost < 3:
                                castable = 2
                        elif castable_death_f != 3:
                            use_death_rune = True
                            just_used_death_rune = True
                            castable_frost = all_rune_check(frost, current_time, rune_cd_tracker)
                            castable_unholy = all_rune_check(unholy, current_time, rune_cd_tracker)
                            if dots[0] <= current_time + haste_rune_cd:
                                if dots[1] <= current_time + haste_rune_cd:
                                    if castable_death_f == 2:
                                        castable_death_f = 1
                            if castable_death_f == 2 or castable_frost < 3:
                                castable = 2
                        elif castable_death_u != 3:
                            use_death_rune = True
                            just_used_death_rune = True
                            castable_frost = all_rune_check(frost, current_time, rune_cd_tracker)
                            castable_unholy = all_rune_check(unholy, current_time, rune_cd_tracker)
                            if dots[0] <= current_time + haste_rune_cd:
                                if dots[1] <= current_time + haste_rune_cd:
                                    if castable_death_u == 2:
                                        castable_death_u = 1
                            if castable_death_u == 2 or castable_frost < 3:
                                castable = 2
                    if castable != 3:
                        castable = all_rune_check(unholy, current_time, rune_cd_tracker)
                        #use_death_rune = False
                        if castable == 3:
                            castable_death = all_rune_check(death, current_time, rune_cd_tracker)
                            castable_death_f = all_rune_check(death_f, current_time, rune_cd_tracker)
                            castable_death_u = all_rune_check(death_u, current_time, rune_cd_tracker)
                            if use_death_rune == True:
                                castable_death = all_rune_check(death, current_time, rune_cd_tracker)
                                castable_death_f = all_rune_check(death_f, current_time, rune_cd_tracker)
                                castable_death_u = all_rune_check(death_u, current_time, rune_cd_tracker)
                                if dots[0] <= current_time + haste_rune_cd:
                                    if dots[1] <= current_time + haste_rune_cd:
                                        castable = 3
                                else:
                                    if castable_death != 2:
                                        castable = 3
                                    elif castable_death_f != 2:
                                        castable = 3
                                    elif castable_death_u != 2:
                                        castable = 3
                            elif castable_death != 3:
                                use_death_rune = True
                                just_used_death_rune = True
                                castable_frost = all_rune_check(frost, current_time, rune_cd_tracker)
                                castable_unholy = all_rune_check(unholy, current_time, rune_cd_tracker)
                                if dots[0] <= current_time + haste_rune_cd:
                                    if dots[1] <= current_time + haste_rune_cd:
                                        if castable_death == 2:
                                            castable_death = 1
                                if castable_death == 2 or castable_unholy < 3:
                                    castable = 2
                            elif castable_death_f != 3:
                                use_death_rune = True
                                just_used_death_rune = True
                                castable_frost = all_rune_check(frost, current_time, rune_cd_tracker)
                                castable_unholy = all_rune_check(unholy, current_time, rune_cd_tracker)
                                if dots[0] <= current_time + haste_rune_cd:
                                    if dots[1] <= current_time + haste_rune_cd:
                                        if castable_death_f == 2:
                                            castable_death_f = 1
                                if castable_death_f == 2 or castable_unholy < 3:
                                    castable = 2
                            elif castable_death_u != 3:
                                use_death_rune = True
                                just_used_death_rune = True
                                castable_frost = all_rune_check(frost, current_time, rune_cd_tracker)
                                castable_unholy = all_rune_check(unholy, current_time, rune_cd_tracker)
                                if dots[0] <= current_time + haste_rune_cd:
                                    if dots[1] <= current_time + haste_rune_cd:
                                        if castable_death_u == 2:
                                            castable_death_u = 1
                                if castable_death_u == 2 or castable_unholy < 3:
                                    castable = 2
                        if castable != 3: 
                            castable = all_rune_check(frost, current_time, rune_cd_tracker)
                            castable1 = all_rune_check(unholy, current_time, rune_cd_tracker)
                            if castable == 2: #Can add abilitie modifiers later to damage math
                                castable = 0
                            if castable1 == 2:
                                castable1 = 0
                            if use_death_rune == True:
                                use_death_rune = False
                                if castable == 3 or castable1 == 3:
                                    castable_death = all_rune_check(death, current_time, rune_cd_tracker)
                                    castable_death_f = all_rune_check(death_f, current_time, rune_cd_tracker)
                                    castable_death_u = all_rune_check(death_u, current_time, rune_cd_tracker)
                                    castable_frost = all_rune_check(frost, current_time, rune_cd_tracker)
                                    castable_unholy = all_rune_check(unholy, current_time, rune_cd_tracker)
                                    if castable_frost < 3:
                                        if castable_death != 3:
                                            if castable_death == 2:
                                                castable_death = 0
                                            if castable_frost == 2:
                                                castable_frost = 0
                                            rune_cd_tracker[castable_death] = 0
                                            rune_cd_tracker[castable_frost+2] = 0
                                            rune_cd_tracker[castable_death+6] = 10000
                                            rune_cd_tracker[castable_frost+8] = 10000
                                            castable = 0
                                            castable1 = 1
                                        elif castable_death_f != 3:
                                            if castable_death_f == 2:
                                                castable_death_f = 0
                                            if castable_frost == 2:
                                                castable_frost = 0
                                            rune_cd_tracker[castable_death_f+2] = 0
                                            rune_cd_tracker[castable_frost+2] = 0
                                            rune_cd_tracker[castable_death_f+8] = 10000
                                            rune_cd_tracker[castable_frost+8] = 10000
                                            castable = 0
                                            castable1 = 1
                                        elif castable_death_u != 3:
                                            if castable_death_u == 2:
                                                castable_death_u = 0
                                            if castable_frost == 2:
                                                castable_frost = 0
                                            rune_cd_tracker[castable_death_u+4] = 0
                                            rune_cd_tracker[castable_frost+2] = 0
                                            rune_cd_tracker[castable_death_u+10] = 10000
                                            rune_cd_tracker[castable_frost+8] = 10000
                                            castable = 0
                                            castable1 = 1
                                    elif castable_unholy < 3:
                                        if castable_death != 3:
                                            if castable_death == 2:
                                                castable_death = 0
                                            if castable_unholy == 2:
                                                castable_unholy = 0
                                            rune_cd_tracker[castable_death] = 0
                                            rune_cd_tracker[castable_unholy+4] = 0
                                            rune_cd_tracker[castable_death+6] = 10000
                                            rune_cd_tracker[castable_unholy+10] = 10000
                                            castable = 0
                                            castable1 = 1
                                        elif castable_death_f != 3:
                                            if castable_death_f == 2:
                                                castable_death_f = 0
                                            if castable_unholy == 2:
                                                castable_unholy = 0
                                            rune_cd_tracker[castable_death_f+2] = 0
                                            rune_cd_tracker[castable_unholy+4] = 0
                                            rune_cd_tracker[castable_death_f+8] = 10000
                                            rune_cd_tracker[castable_unholy+10] = 10000
                                            castable = 0
                                            castable1 = 1
                                        elif castable_death_u != 3:
                                            if castable_death_u == 2:
                                                castable_death_u = 0
                                            if castable_unholy == 2:
                                                castable_unholy = 0
                                            rune_cd_tracker[castable_death_u+4] = 0
                                            rune_cd_tracker[castable_unholy+4] = 0
                                            rune_cd_tracker[castable_death_u+10] = 10000
                                            rune_cd_tracker[castable_unholy+10] = 10000
                                            castable = 0
                                            castable1 = 1
                                    elif castable_death < 2:
                                        if castable_death_f != 3:
                                            if castable_death_f == 2:
                                                castable_death_f = 0
                                            if castable_death == 2:
                                                castable_death = 0
                                            rune_cd_tracker[castable_death] = 0
                                            rune_cd_tracker[castable_death_f+2] = 0
                                            rune_cd_tracker[castable_death+6] = 10000
                                            rune_cd_tracker[castable_death_f+8] = 10000
                                            castable = 0
                                            castable1 = 1
                                        elif castable_death_u != 3:
                                            if castable_death_u == 2:
                                                castable_death_u = 0
                                            if castable_death == 2:
                                                castable_death = 0
                                            rune_cd_tracker[castable_death] = 0
                                            rune_cd_tracker[castable_death_u+4] = 0
                                            rune_cd_tracker[castable_death+6] = 10000
                                            rune_cd_tracker[castable_death_u+10] = 10000
                                            castable = 0
                                            castable1 = 1
                                    elif castable_death_f < 2:
                                        if castable_death_u != 3:
                                            if castable_death_u == 2:
                                                castable_death_u = 0
                                            if castable_death_f == 2:
                                                castable_death_f = 0
                                            rune_cd_tracker[castable_death_f+2] = 0
                                            rune_cd_tracker[castable_death_u+4] = 0
                                            rune_cd_tracker[castable_death_f+8] = 10000
                                            rune_cd_tracker[castable_death_u+10] = 10000
                                            castable = 0
                                            castable1 = 1
                                    elif castable_death == 2 or castable_death_f == 2 or castable_death_u == 2:
                                        if castable_death != 3:
                                            if dots[0] > current_time + haste_rune_cd:
                                                if dots[1] > current_time + haste_rune_cd:
                                                    rune_cd_tracker[0] = 0
                                                    rune_cd_tracker[1] = 0
                                                    rune_cd_tracker[6] = 10000
                                                    rune_cd_tracker[7] = 10000
                                                    castable = 0
                                                    castable1 = 1
                                                else:
                                                    continue
                                                #need to not run here
                                            else:
                                                continue
                                            #need to not run here
                                        elif castable_death_f != 3:
                                            if dots[0] > current_time + haste_rune_cd:
                                                if dots[1] > current_time + haste_rune_cd:
                                                    rune_cd_tracker[2] = 0
                                                    rune_cd_tracker[3] = 0
                                                    rune_cd_tracker[8] = 10000
                                                    rune_cd_tracker[9] = 10000
                                                    castable = 2
                                                    castable1 = 3
                                                else:
                                                    continue
                                                #need to not run here
                                            else:
                                                continue
                                            #need to not run here
                                        elif castable_death_u != 3:
                                            if dots[0] > current_time + haste_rune_cd:
                                                if dots[1] > current_time + haste_rune_cd:
                                                    rune_cd_tracker[4] = 0
                                                    rune_cd_tracker[5] = 0
                                                    rune_cd_tracker[10] = 10000
                                                    rune_cd_tracker[11] = 10000
                                                    castable = 4
                                                    castable1 = 5
                                                else:
                                                    continue
                                                #need to not run here
                                            else:
                                                continue
                                            #need to not run here
                            
                            else:
                                use_death_rune = False
                                castable += frost
                                castable1 += unholy
                            attack_table_results = attack_table(1, tanking, H2, True, False, hit_from_gear, hit_from_other, target_level, all_expertise_dodge, all_expertise_parry, total_crit, ((annihilation_talent_points / 100) + increased_phy_crit + (scourgeborne_battlegear_two_set / 100) + ((improved_death_strikes_points * 3) / 100)))
                            armor_red_amount = dam_reduc(current_armor, armor_penetration, target_level)
                            wep_roll = weapon_roll(mh_input_lowend_weapon_damage,mh_input_topend_weapon_damage)
                            wep_roll = wep_roll + (attack_damage_normalization * current_ap / 14)
                            #Rune Hit
                            haste_percentage = (total_haste_rating / 25.21) / 100 #Returns a result of 0 - 1 for 0% - 100%
                            haste_rune_cd = rune_grade_timer(current_time, last_rune_change[castable], last_rune_change[castable+6])
                            if improved_unholy_presence_points != 0:
                                if dk_presence == 2:
                                    haste_rune_cd = haste_rune_cd - (haste_rune_cd * ((improved_unholy_presence_points * 5) / 100))
                            if dk_presence != 2:
                                gcd = input_gcd / (1 + haste_percentage)
                                if gcd < 1:
                                    gcd = 1
                            ##Rune Miss
                            haste_rune_cd_miss = 1
                            how_many_dots_on_target = 0
                            if dots[0] > current_time:
                                how_many_dots_on_target += 1
                            if dots[1] > current_time:
                                how_many_dots_on_target += 1
                            if dots[2] > current_time:
                                how_many_dots_on_target += 1
                            if dancing_rune_weapon_points == 1:
                                if dancing_rune_weapon_active == True:
                                    if attack_table_results == 0:
                                        atta_num = 0
                                        rotation.append("Dancing Rune Weapon")
                                        rotation_time.append(current_time)
                                        rotation_status.append("Miss")
                                        rotation_damage.append(atta_num)
                                    elif attack_table_results == 1:
                                        atta_num = 0
                                        rotation.append("Dancing Rune Weapon")
                                        rotation_time.append(current_time)
                                        rotation_status.append("Dodge")
                                        rotation_damage.append(atta_num)
                                    elif attack_table_results == 5:
                                        #crit attack
                                        atta_num = (((223 + (wep_roll * .75))) - (((223 + (wep_roll * .75))) * armor_red_amount))  * (var_crit_amount)
                                        if sigil_of_awareness == True:
                                            atta_num + 315
                                        if dk_presence == 0:
                                            atta_num = atta_num + (atta_num * .15)
                                        if tundra_stalker_points != 0:
                                            if dots[0] > current_time:
                                                atta_num = atta_num + (atta_num * (tundra_stalker_points * .03))
                                        if rage_of_rivendale_points != 0:
                                            if dots[1] > current_time:
                                                atta_num += atta_num * ((rage_of_rivendale_points * 2) / 100)
                                        if might_of_mograine_points != 0:
                                            atta_num += atta_num * ((might_of_mograine_points * 15) / 100)
                                        if improved_death_strikes_points != 0:
                                            atta_num += atta_num * ((improved_death_strikes_points * 15) / 100)
                                        if glyph_death_strike == True:
                                            if current_power > 25:
                                                death_strike_extra_damage_bonus = 25
                                            else:
                                                death_strike_extra_damage_bonus = current_power
                                            atta_num += atta_num * death_strike_extra_damage_bonus
                                        if hysteria_active == True:
                                            atta_num = atta_num + (atta_num * .2)
                                        if tricksoftt_active == True:
                                            atta_num = atta_num + (atta_num * .15)
                                        atta_num = atta_num + (atta_num * increased_physical_damage) + (atta_num * increased_all_damage)
                                        atta_num = atta_num * dancing_rune_weapon_damage_multi
                                        dancing_rune_weapon_damage += atta_num
                                        trinket_hit_crit_tracker = 2
                                        if sigil_of_virulence == True:
                                            if random.randint(0, 100) < 85:
                                                sigil_of_virulence_timer = current_time + 20 
                                                if sigil_of_virulence_buff == False:
                                                    sigil_of_virulence_buff = True 
                                                    bonus_loop_str += 200
                                        if sigil_of_hanged_man == True:
                                            if random.randint(0, 100) < 101:
                                                sigil_of_hanged_man_buff = True
                                                sigil_of_hanged_man_timer = current_time + 15
                                                sigil_of_hanged_man_count += 1
                                                if sigil_of_hanged_man_count < 4:
                                                    bonus_loop_str += 73
                                                elif sigil_of_hanged_man_count >= 3:
                                                    sigil_of_hanged_man_count = 3
                                        if death_rune_mastery_points != 0:
                                            if just_used_death_rune != True:
                                                proc_num = random.randint(0, 100)
                                                if death_rune_mastery_points < 3:
                                                    death_proc_chance = (death_rune_mastery_points * .3) * 100
                                                elif death_rune_mastery_points == 3:
                                                    death_proc_chance = 100
                                                if death_proc_chance >= proc_num:
                                                    death_castable_f = castable + 6
                                                    death_castable_u = castable1 + 6
                                                    rune_cd_tracker[death_castable_f] = rune_cd(haste_rune_cd, current_time)
                                                    rune_cd_tracker[death_castable_u] = rune_cd(haste_rune_cd, current_time)
                                                    rune_cd_tracker[castable] = 10000 
                                                    rune_cd_tracker[castable1] = 10000
                                        rotation.append("Dancing Rune Weapon")
                                        rotation_time.append(current_time)
                                        rotation_status.append("Crit")
                                        rotation_damage.append(atta_num)
                                        trinket_hit_crit_tracker = 2
                                        
                                    elif attack_table_results == 7:
                                        atta_num = (((223 + (wep_roll * .75))) - (((223 + (wep_roll * .75))) * armor_red_amount))
                                        if sigil_of_awareness == True:
                                            atta_num + 315
                                        if dk_presence == 0:
                                            atta_num = atta_num + (atta_num * .15)
                                        if tundra_stalker_points != 0:
                                            if dots[0] > current_time:
                                                atta_num = atta_num + (atta_num * (tundra_stalker_points * .03))
                                        if rage_of_rivendale_points != 0:
                                            if dots[1] > current_time:
                                                atta_num += atta_num * ((rage_of_rivendale_points * 2) / 100)
                                        if might_of_mograine_points != 0:
                                            atta_num += atta_num * ((might_of_mograine_points * 15) / 100)
                                        if improved_death_strikes_points != 0:
                                            atta_num += atta_num * ((improved_death_strikes_points * 15) / 100)
                                        if glyph_death_strike == True:
                                            if current_power > 25:
                                                death_strike_extra_damage_bonus = 25
                                            else:
                                                death_strike_extra_damage_bonus = current_power
                                            atta_num += atta_num * death_strike_extra_damage_bonus
                                        if hysteria_active == True:
                                            atta_num = atta_num + (atta_num * .2)
                                        if tricksoftt_active == True:
                                            atta_num = atta_num + (atta_num * .15)
                                        atta_num = atta_num + (atta_num * increased_physical_damage) + (atta_num * increased_all_damage)
                                        atta_num = atta_num * dancing_rune_weapon_damage_multi
                                        dancing_rune_weapon_damage += atta_num
                                        trinket_hit_crit_tracker = 1
                                        if sigil_of_virulence == True:
                                            if random.randint(0, 100) < 85:
                                                sigil_of_virulence_timer = current_time + 20 
                                                if sigil_of_virulence_buff == False:
                                                    sigil_of_virulence_buff = True 
                                                    bonus_loop_str += 200
                                        if sigil_of_hanged_man == True:
                                            if random.randint(0, 100) < 101:
                                                sigil_of_hanged_man_buff = True
                                                sigil_of_hanged_man_timer = current_time + 15
                                                sigil_of_hanged_man_count += 1
                                                if sigil_of_hanged_man_count < 4:
                                                    bonus_loop_str += 73
                                                elif sigil_of_hanged_man_count >= 3:
                                                    sigil_of_hanged_man_count = 3
                                        if death_rune_mastery_points != 0:
                                            if just_used_death_rune != True:
                                                proc_num = random.randint(0, 100)
                                                if death_rune_mastery_points < 3:
                                                    death_proc_chance = (death_rune_mastery_points * .3) * 100
                                                elif death_rune_mastery_points == 3:
                                                    death_proc_chance = 100
                                                if death_proc_chance >= proc_num:
                                                    death_castable_f = castable + 6
                                                    death_castable_u = castable1 + 6
                                                    rune_cd_tracker[death_castable_f] = rune_cd(haste_rune_cd, current_time)
                                                    rune_cd_tracker[death_castable_u] = rune_cd(haste_rune_cd, current_time)
                                                    rune_cd_tracker[castable] = 10000 
                                                    rune_cd_tracker[castable1] = 10000
                                        rotation.append("Dancing Rune Weapon")
                                        rotation_time.append(current_time)
                                        rotation_status.append("Hit")
                                        rotation_damage.append(atta_num)
                                        trinket_hit_crit_tracker = 1
                                                             
                            if threat_of_thassarian_points != 0: 
                                if H2 == False:
                                    threat_of_thass_roll = (threat_of_thassarian_points * 30) 
                                    if threat_of_thassarian_points == 3: 
                                        threat_of_thass_roll += 10 
                                    threat_of_t_num = random.randint(0, 100) 
                                    if threat_of_thass_roll >= threat_of_t_num: 
                                        oh_wep_roll = weapon_roll(oh_input_lowend_weapon_damage,oh_input_topend_weapon_damage)
                                        oh_wep_roll = wep_roll + (attack_damage_normalization * current_ap / 14)
                                        oh_attack_table_results = attack_table(1, tanking, H2, False, True, hit_from_gear, hit_from_other, target_level, all_expertise_dodge, all_expertise_parry, total_crit, ((annihilation_talent_points / 100) + increased_phy_crit + (scourgeborne_battlegear_two_set / 100) + ((improved_death_strikes_points * 3) / 100)))
                                        if oh_attack_table_results == 0:
                                            atta_num = 0
                                            rotation.append("OH - Death Strike")
                                            rotation_time.append(current_time)
                                            rotation_status.append("Miss")
                                            rotation_damage.append(atta_num)
                                        elif oh_attack_table_results == 1:
                                            atta_num = 0
                                            rotation.append("OH - Death Strike")
                                            rotation_time.append(current_time)
                                            rotation_status.append("Dodge")
                                            rotation_damage.append(atta_num)
                                        elif oh_attack_table_results == 5:
                                            #crit attack
                                            atta_num = (((223 + (oh_wep_roll * .75))) - (((223 + (oh_wep_roll * .75))) * armor_red_amount))  * (var_crit_amount)
                                            if sigil_of_awareness == True:
                                                atta_num + 315
                                            if dk_presence == 0:
                                                atta_num = atta_num + (atta_num * .15)
                                            if tundra_stalker_points != 0:
                                                if dots[0] > current_time:
                                                    atta_num = atta_num + (atta_num * (tundra_stalker_points * .03))
                                            if rage_of_rivendale_points != 0:
                                                if dots[1] > current_time:
                                                    atta_num += atta_num * ((rage_of_rivendale_points * 2) / 100)
                                            if might_of_mograine_points != 0:
                                                atta_num += atta_num * ((might_of_mograine_points * 15) / 100)
                                            if improved_death_strikes_points != 0:
                                                atta_num += atta_num * ((improved_death_strikes_points * 15) / 100)
                                            if glyph_death_strike == True:
                                                if current_power > 25:
                                                    death_strike_extra_damage_bonus = 25
                                                else:
                                                    death_strike_extra_damage_bonus = current_power
                                                atta_num += atta_num * death_strike_extra_damage_bonus
                                            atta_num = atta_num * oh_wep_damage_mod
                                            if hysteria_active == True:
                                                atta_num = atta_num + (atta_num * .2)
                                            if tricksoftt_active == True:
                                                atta_num = atta_num + (atta_num * .15)
                                            atta_num = atta_num + (atta_num * increased_physical_damage) + (atta_num * increased_all_damage)
                                            sum_death_strike_attacks += atta_num
                                            trinket_hit_crit_tracker = 2
                                            if sigil_of_virulence == True:
                                                if random.randint(0, 100) < 85:
                                                    sigil_of_virulence_timer = current_time + 20 
                                                    if sigil_of_virulence_buff == False:
                                                        sigil_of_virulence_buff = True 
                                                        bonus_loop_str += 200
                                            if sigil_of_hanged_man == True:
                                                if random.randint(0, 100) < 101:
                                                    sigil_of_hanged_man_buff = True
                                                    sigil_of_hanged_man_timer = current_time + 15
                                                    sigil_of_hanged_man_count += 1
                                                    if sigil_of_hanged_man_count < 4:
                                                        bonus_loop_str += 73
                                                    elif sigil_of_hanged_man_count >= 3:
                                                        sigil_of_hanged_man_count = 3
                                            if death_rune_mastery_points != 0:
                                                if just_used_death_rune != True:
                                                    proc_num = random.randint(0, 100)
                                                    if death_rune_mastery_points < 3:
                                                        death_proc_chance = (death_rune_mastery_points * .3) * 100
                                                    elif death_rune_mastery_points == 3:
                                                        death_proc_chance = 100
                                                    if death_proc_chance >= proc_num:
                                                        death_castable_f = castable + 6
                                                        death_castable_u = castable1 + 6
                                                        rune_cd_tracker[death_castable_f] = rune_cd(haste_rune_cd, current_time)
                                                        rune_cd_tracker[death_castable_u] = rune_cd(haste_rune_cd, current_time)
                                                        rune_cd_tracker[castable] = 10000 
                                                        rune_cd_tracker[castable1] = 10000
                                            rotation.append("OH - Death Strike")
                                            rotation_time.append(current_time)
                                            rotation_status.append("Crit")
                                            rotation_damage.append(atta_num)

                                                
                                        elif oh_attack_table_results == 7:
                                            atta_num = (((223 + (oh_wep_roll * .75))) - (((223 + (oh_wep_roll * .75))) * armor_red_amount))
                                            if sigil_of_awareness == True:
                                                atta_num + 315
                                            if dk_presence == 0:
                                                atta_num = atta_num + (atta_num * .15)
                                            if tundra_stalker_points != 0:
                                                if dots[0] > current_time:
                                                    atta_num = atta_num + (atta_num * (tundra_stalker_points * .03))
                                            if rage_of_rivendale_points != 0:
                                                if dots[1] > current_time:
                                                    atta_num += atta_num * ((rage_of_rivendale_points * 2) / 100)
                                            if might_of_mograine_points != 0:
                                                atta_num += atta_num * ((might_of_mograine_points * 15) / 100)
                                            if improved_death_strikes_points != 0:
                                                atta_num += atta_num * ((improved_death_strikes_points * 15) / 100)
                                            if glyph_death_strike == True:
                                                if current_power > 25:
                                                    death_strike_extra_damage_bonus = 25
                                                else:
                                                    death_strike_extra_damage_bonus = current_power
                                                atta_num += atta_num * death_strike_extra_damage_bonus
                                            atta_num = atta_num * oh_wep_damage_mod
                                            if hysteria_active == True:
                                                atta_num = atta_num + (atta_num * .2)
                                            if tricksoftt_active == True:
                                                atta_num = atta_num + (atta_num * .15)
                                            atta_num = atta_num + (atta_num * increased_physical_damage) + (atta_num * increased_all_damage)
                                            sum_death_strike_attacks += atta_num
                                            trinket_hit_crit_tracker = 1
                                            if sigil_of_virulence == True:
                                                if random.randint(0, 100) < 85:
                                                    sigil_of_virulence_timer = current_time + 20 
                                                    if sigil_of_virulence_buff == False:
                                                        sigil_of_virulence_buff = True 
                                                        bonus_loop_str += 200
                                            if sigil_of_hanged_man == True:
                                                if random.randint(0, 100) < 101:
                                                    sigil_of_hanged_man_buff = True
                                                    sigil_of_hanged_man_timer = current_time + 15
                                                    sigil_of_hanged_man_count += 1
                                                    if sigil_of_hanged_man_count < 4:
                                                        bonus_loop_str += 73
                                                    elif sigil_of_hanged_man_count >= 3:
                                                        sigil_of_hanged_man_count = 3
                                            if death_rune_mastery_points != 0:
                                                if just_used_death_rune != True:
                                                    proc_num = random.randint(0, 100)
                                                    if death_rune_mastery_points < 3:
                                                        death_proc_chance = (death_rune_mastery_points * .3) * 100
                                                    elif death_rune_mastery_points == 3:
                                                        death_proc_chance = 100
                                                    if death_proc_chance >= proc_num:
                                                        death_castable_f = castable + 6
                                                        death_castable_u = castable1 + 6
                                                        rune_cd_tracker[death_castable_f] = rune_cd(haste_rune_cd, current_time)
                                                        rune_cd_tracker[death_castable_u] = rune_cd(haste_rune_cd, current_time)
                                                        rune_cd_tracker[castable] = 10000 
                                                        rune_cd_tracker[castable1] = 10000
                                            rotation.append("OH - Death Strike")
                                            rotation_time.append(current_time)
                                            rotation_status.append("Hit")
                                            rotation_damage.append(atta_num)
                                            

                            
                            
                            if attack_table_results == 0:
                                atta_num = 0
                                rune_cd_tracker[castable] = rune_cd(haste_rune_cd_miss, current_time)
                                rune_cd_tracker[castable1] = rune_cd(haste_rune_cd_miss, current_time)
                                rotation.append("Death Strike")
                                rotation_time.append(current_time)
                                rotation_status.append("Miss")
                                rotation_damage.append(atta_num)
                                current_time = current_time + gcd
                                used_gcd = True
                                continue
                            elif attack_table_results == 1:
                                atta_num = 0
                                rune_cd_tracker[castable] = rune_cd(haste_rune_cd_miss, current_time)
                                rune_cd_tracker[castable1] = rune_cd(haste_rune_cd_miss, current_time)
                                rotation.append("Death Strike")
                                rotation_time.append(current_time)
                                rotation_status.append("Dodge")
                                rotation_damage.append(atta_num)
                                current_time = current_time + gcd
                                used_gcd = True
                                continue
                            elif attack_table_results == 5:
                                #crit attack
                                rune_cd_tracker[castable] = rune_cd(haste_rune_cd, current_time)
                                rune_cd_tracker[castable1] = rune_cd(haste_rune_cd, current_time)
                                atta_num = (((223 + (wep_roll * .75))) - (((223 + (wep_roll * .75))) * armor_red_amount))  * (var_crit_amount)
                                if sigil_of_awareness == True:
                                    atta_num + 315
                                if dk_presence == 0:
                                    atta_num = atta_num + (atta_num * .15)
                                if tundra_stalker_points != 0:
                                    if dots[0] > current_time:
                                        atta_num = atta_num + (atta_num * (tundra_stalker_points * .03))
                                if rage_of_rivendale_points != 0:
                                    if dots[1] > current_time:
                                        atta_num += atta_num * ((rage_of_rivendale_points * 2) / 100)
                                if might_of_mograine_points != 0:
                                    atta_num += atta_num * ((might_of_mograine_points * 15) / 100)
                                if improved_death_strikes_points != 0:
                                    atta_num += atta_num * ((improved_death_strikes_points * 15) / 100)
                                if glyph_death_strike == True:
                                    if current_power > 25:
                                        death_strike_extra_damage_bonus = 25
                                    else:
                                        death_strike_extra_damage_bonus = current_power
                                    atta_num += atta_num * death_strike_extra_damage_bonus
                                if hysteria_active == True:
                                    atta_num = atta_num + (atta_num * .2)
                                if tricksoftt_active == True:
                                    atta_num = atta_num + (atta_num * .15)
                                atta_num = atta_num + (atta_num * increased_physical_damage) + (atta_num * increased_all_damage)
                                sum_death_strike_attacks += atta_num
                                current_power = runic_power(15, current_power, max_runic)
                                if dirge_points != 0:
                                    current_power = runic_power((dirge_points * 2.5), current_power, max_runic)
                                if scourgeborne_battlegear_four_set == True:
                                    current_power = runic_power(5, current_power, max_runic)
                                trinket_hit_crit_tracker = 2
                                if sigil_of_virulence == True:
                                    if random.randint(0, 100) < 85:
                                        sigil_of_virulence_timer = current_time + 20 
                                        if sigil_of_virulence_buff == False:
                                            sigil_of_virulence_buff = True 
                                            bonus_loop_str += 200
                                if sigil_of_hanged_man == True:
                                    if random.randint(0, 100) < 101:
                                        sigil_of_hanged_man_buff = True
                                        sigil_of_hanged_man_timer = current_time + 15
                                        sigil_of_hanged_man_count += 1
                                        if sigil_of_hanged_man_count < 4:
                                            bonus_loop_str += 73
                                        elif sigil_of_hanged_man_count >= 3:
                                            sigil_of_hanged_man_count = 3
                                if death_rune_mastery_points != 0:
                                    if just_used_death_rune != True:
                                        proc_num = random.randint(0, 100)
                                        if death_rune_mastery_points < 3:
                                            death_proc_chance = (death_rune_mastery_points * .3) * 100
                                        elif death_rune_mastery_points == 3:
                                            death_proc_chance = 100
                                        if death_proc_chance >= proc_num:
                                            death_castable_f = castable + 6
                                            death_castable_u = castable1 + 6
                                            rune_cd_tracker[death_castable_f] = rune_cd(haste_rune_cd, current_time)
                                            rune_cd_tracker[death_castable_u] = rune_cd(haste_rune_cd, current_time)
                                            rune_cd_tracker[castable] = 10000 
                                            rune_cd_tracker[castable1] = 10000
                                rotation.append("Death Strike")
                                rotation_time.append(current_time)
                                rotation_status.append("Crit")
                                rotation_damage.append(atta_num)
                                current_time += gcd
                                used_gcd = True
                                # print("Obliterate Crit - " + str(atta_num))
                                continue
                            elif attack_table_results == 7:
                                rune_cd_tracker[castable] = rune_cd(haste_rune_cd, current_time)
                                rune_cd_tracker[castable1] = rune_cd(haste_rune_cd, current_time)
                                atta_num = (((223 + (wep_roll * .75))) - (((223 + (wep_roll * .75))) * armor_red_amount))
                                if sigil_of_awareness == True:
                                    atta_num + 315
                                if dk_presence == 0:
                                    atta_num = atta_num + (atta_num * .15)
                                if tundra_stalker_points != 0:
                                    if dots[0] > current_time:
                                        atta_num = atta_num + (atta_num * (tundra_stalker_points * .03))
                                if rage_of_rivendale_points != 0:
                                    if dots[1] > current_time:
                                        atta_num += atta_num * ((rage_of_rivendale_points * 2) / 100)
                                if might_of_mograine_points != 0:
                                    atta_num += atta_num * ((might_of_mograine_points * 15) / 100)
                                if improved_death_strikes_points != 0:
                                    atta_num += atta_num * ((improved_death_strikes_points * 15) / 100)
                                if glyph_death_strike == True:
                                    if current_power > 25:
                                        death_strike_extra_damage_bonus = 25
                                    else:
                                        death_strike_extra_damage_bonus = current_power
                                    atta_num += atta_num * death_strike_extra_damage_bonus
                                if hysteria_active == True:
                                    atta_num = atta_num + (atta_num * .2)
                                if tricksoftt_active == True:
                                    atta_num = atta_num + (atta_num * .15)
                                atta_num = atta_num + (atta_num * increased_physical_damage) + (atta_num * increased_all_damage)
                                sum_death_strike_attacks += atta_num
                                current_power = runic_power(15, current_power, max_runic)
                                if dirge_points != 0:
                                    current_power = runic_power((dirge_points * 2.5), current_power, max_runic)
                                if scourgeborne_battlegear_four_set == True:
                                    current_power = runic_power(5, current_power, max_runic)
                                trinket_hit_crit_tracker = 1
                                if sigil_of_virulence == True:
                                    if random.randint(0, 100) < 85:
                                        sigil_of_virulence_timer = current_time + 20 
                                        if sigil_of_virulence_buff == False:
                                            sigil_of_virulence_buff = True 
                                            bonus_loop_str += 200
                                if sigil_of_hanged_man == True:
                                    if random.randint(0, 100) < 101:
                                        sigil_of_hanged_man_buff = True
                                        sigil_of_hanged_man_timer = current_time + 15
                                        sigil_of_hanged_man_count += 1
                                        if sigil_of_hanged_man_count < 4:
                                            bonus_loop_str += 73
                                        elif sigil_of_hanged_man_count >= 3:
                                            sigil_of_hanged_man_count = 3
                                if death_rune_mastery_points != 0:
                                    if just_used_death_rune != True:
                                        proc_num = random.randint(0, 100)
                                        if death_rune_mastery_points < 3:
                                            death_proc_chance = (death_rune_mastery_points * .3) * 100
                                        elif death_rune_mastery_points == 3:
                                            death_proc_chance = 100
                                        if death_proc_chance >= proc_num:
                                            death_castable_f = castable + 6
                                            death_castable_u = castable1 + 6
                                            rune_cd_tracker[death_castable_f] = rune_cd(haste_rune_cd, current_time)
                                            rune_cd_tracker[death_castable_u] = rune_cd(haste_rune_cd, current_time)
                                            rune_cd_tracker[castable] = 10000 
                                            rune_cd_tracker[castable1] = 10000
                                rotation.append("Death Strike")
                                rotation_time.append(current_time)
                                rotation_status.append("Hit")
                                rotation_damage.append(atta_num)
                                current_time += gcd
                                used_gcd = True
                                # print("Obliterate - " + str(atta_num))
                                continue 
                    
                    
                    
                    
                    
                    
                    
                    if current_power >= death_coil_cost: #Death Coil
                        current_power = runic_power(-death_coil_cost, current_power, max_runic)
                        hit = spell_hit(spell_hit_total, increased_spell_hit, target_level)
                        crit = spell_crit((total_crit + (darkruned_battlegear_two_set / 100)), spell_hit_total, increased_spell_hit, target_level, increased_spell_crit)
                        if dk_presence != 2:
                            gcd = input_gcd / (1 + haste_percentage)
                            if gcd < 1:
                                gcd = 1
                        if hit == True:
                            if crit == True:
                                atta_num = random.randint(443, 665)
                                atta_num = (atta_num + ((current_ap + (current_ap * ((impurity_points * 4) / 100))) * 0)) * var_crit_amount
                                if sigil_of_vengeful_heart == True:
                                    atta_num + 380
                                if sigil_of_the_wild_buck == True:
                                    atta_num += 80
                                if black_ice_points == 5:
                                    atta_num = atta_num + (atta_num * .1)
                                elif black_ice_points == 4:
                                    atta_num = atta_num + (atta_num * .08)
                                elif black_ice_points == 3:
                                    atta_num = atta_num + (atta_num * .06)
                                elif black_ice_points == 2:
                                    atta_num = atta_num + (atta_num * .04)
                                elif black_ice_points == 1:
                                    atta_num = atta_num + (atta_num * .02)
                                if dk_presence == 0:
                                    atta_num = atta_num + (atta_num * .15)
                                if tundra_stalker_points != 0:
                                    if dots[0] > current_time:
                                        atta_num = atta_num + (atta_num * (tundra_stalker_points * .03))
                                if glyph_death_coil == True:
                                    atta_num += atta_num * .15
                                if rage_of_rivendale_points != 0:
                                    if dots[1] > current_time:
                                        atta_num += atta_num * ((rage_of_rivendale_points * 2) / 100)
                                if morbitity_points != 0:
                                    atta_num += ((morbitity_points * 5) / 100)
                                if hysteria_active == True:
                                    atta_num = atta_num + (atta_num * .2)
                                if tricksoftt_active == True:
                                    atta_num = atta_num + (atta_num * .15)
                                atta_num = atta_num + (atta_num * increased_spell_damage) + (atta_num * increased_all_damage)
                                death_coil_damage += atta_num
                                if unholy_blight_points == 1:
                                    unholy_blight_amount = atta_num / 10   
                                    unholy_blight_timer = current_time + 10
                                if rune_of_cinderglacier_active == True:
                                     rune_of_cinderglacier_damage = atta_num * .2
                                     rune_of_cinderglacier_active_count += 1
                                     rotation.append("Rune of Cinderglacier")
                                     rotation_time.append(current_time)
                                     rotation_status.append("Active")
                                     rotation_damage.append(atta_num * .2)
                                     if rune_of_cinderglacier_active_count == 2:
                                         rune_of_cinderglacier_active = False
                                rotation.append("Death Coil")
                                rotation_time.append(current_time)
                                rotation_status.append("Crit")
                                rotation_damage.append(atta_num)
                                current_time += gcd
                                used_gcd = True
                                continue
                            else:
                                atta_num = random.randint(443, 665)
                                atta_num = (atta_num + ((current_ap + (current_ap * ((impurity_points * 4) / 100))) * 0))
                                if sigil_of_vengeful_heart == True:
                                    atta_num + 380
                                if sigil_of_the_wild_buck == True:
                                    atta_num += 80
                                if black_ice_points == 5:
                                    atta_num = atta_num + (atta_num * .1)
                                elif black_ice_points == 4:
                                    atta_num = atta_num + (atta_num * .08)
                                elif black_ice_points == 3:
                                    atta_num = atta_num + (atta_num * .06)
                                elif black_ice_points == 2:
                                    atta_num = atta_num + (atta_num * .04)
                                elif black_ice_points == 1:
                                    atta_num = atta_num + (atta_num * .02)
                                if dk_presence == 0:
                                    atta_num = atta_num + (atta_num * .15)
                                if tundra_stalker_points != 0:
                                    if dots[0] > current_time:
                                        atta_num = atta_num + (atta_num * (tundra_stalker_points * .03))
                                if glyph_death_coil == True:
                                    atta_num += atta_num * .15
                                if rage_of_rivendale_points != 0:
                                    if dots[1] > current_time:
                                        atta_num += atta_num * ((rage_of_rivendale_points * 2) / 100)
                                if morbitity_points != 0:
                                    atta_num += ((morbitity_points * 5) / 100)
                                if hysteria_active == True:
                                    atta_num = atta_num + (atta_num * .2)
                                if tricksoftt_active == True:
                                    atta_num = atta_num + (atta_num * .15)
                                atta_num = atta_num + (atta_num * increased_spell_damage) + (atta_num * increased_all_damage)
                                death_coil_damage += atta_num
                                if unholy_blight_points == 1:
                                    unholy_blight_amount = atta_num / 10 
                                    unholy_blight_timer = current_time + 10
                                if rune_of_cinderglacier_active == True:
                                     rune_of_cinderglacier_damage = atta_num * .2
                                     rune_of_cinderglacier_active_count += 1
                                     rotation.append("Rune of Cinderglacier")
                                     rotation_time.append(current_time)
                                     rotation_status.append("Active")
                                     rotation_damage.append(atta_num * .2)
                                     if rune_of_cinderglacier_active_count == 2:
                                         rune_of_cinderglacier_active = False
                                rotation.append("Death Coil")
                                rotation_time.append(current_time)
                                rotation_status.append("Hit")
                                rotation_damage.append(atta_num)
                                current_time += gcd
                                used_gcd = True
                                continue
                        if hit == False:
                            rotation.append("Death Coil")
                            rotation_time.append(current_time)
                            rotation_status.append("Miss")
                            rotation_damage.append(0)
                            current_time += gcd
                            used_gcd = True
                            continue







                    
                    
                    
                    
                    







            if how_cd < current_time:
                rotation.append("Horn of Winter")
                rotation_time.append(current_time)
                rotation_status.append("Active")
                rotation_damage.append(0)
                how_cd = current_time + 20
                current_power = runic_power(10, current_power, max_runic)
                current_time += gcd
                used_gcd = True
                continue
            current_time += unable_to_do_anything
        ##stuff after this is resettings and appending stuff to lists so can go to next iteration
        #####
        ###
        mh_attacks_so_far = 0
        oh_attacks_so_far = 0
        trinket1_damage_list.append(trinket1_damage)
        trinket2_damage_list.append(trinket2_damage)
        army_damage_list.append(army_damage)
        army_damage_claw_list.append(army_damage_claw)
        ghoul_damage_list.append(ghoul_damage)
        ghoul_damage_claw_list.append(ghoul_damage_claw)
        garg_damage_list.append(garg_damage)
        sum_heart_strike_attacks_list.append(sum_heart_strike_attacks)
        sum_death_strike_attacks_list.append(sum_death_strike_attacks)
        sum_scourge_strikes_attacks_list.append(sum_scourge_strikes_attacks)
        death_coil_damage_list.append(death_coil_damage)
        death_and_decay_damage_list.append(death_and_decay_damage)
        blood_boil_damage_list.append(blood_boil_damage)
        unholy_blight_damage_list.append(unholy_blight_damage)
        sudden_doom_damage_list.append(sudden_doom_damage)
        dancing_rune_weapon_damage_list.append(dancing_rune_weapon_damage)
        necrosis_damage_list.append(necrosis_damage)
        wandering_plague_damage_list.append(wandering_plague_damage)
        bloodcaked_blades_damage_list.append(bloodcaked_blades_damage)
        rune_of_cinderglacier_damage_list.append(rune_of_cinderglacier_damage)
        rune_of_lichbane_damage_list.append(rune_of_lichbane_damage)
        rune_of_razorice_damage_list.append(rune_of_razorice_damage)
        sum_oh_obil_attacks_list.append(sum_oh_obil_attacks)
        sum_oh_ps_attacks_list.append(sum_oh_ps_attacks)
        sum_oh_bs_attacks_list.append(sum_oh_bs_attacks)
        sum_oh_fs_attacks_list.append(sum_oh_fs_attacks)
        sum_ps_attacks_list.append(sum_ps_attacks)
        sum_it_attacks_list.append(sum_it_attacks)
        sum_dot0_damage_list.append(sum_dot0_damage)
        sum_dot1_damage_list.append(sum_dot1_damage)
        sum_pest_attacks_list.append(sum_pest_attacks)
        sum_obil_attacks_list.append(sum_obil_attacks)
        sum_bs_attacks_list.append(sum_bs_attacks)
        sum_fs_attacks_list.append(sum_fs_attacks)
        sum_hb_attacks_list.append(sum_hb_attacks)
        sum_mh_white_attacks_list.append(sum_mh_white_attacks)
        sum_oh_white_attacks_list.append(sum_oh_white_attacks)
        t_damage = sum_mh_white_attacks + sum_oh_white_attacks + sum_ps_attacks + sum_it_attacks + sum_dot0_damage + sum_dot1_damage + sum_pest_attacks + sum_obil_attacks + sum_bs_attacks + sum_fs_attacks + sum_hb_attacks + sum_oh_obil_attacks + sum_oh_ps_attacks + sum_oh_bs_attacks + sum_oh_fs_attacks + rune_of_razorice_damage + rune_of_lichbane_damage + rune_of_cinderglacier_damage + trinket1_damage + trinket2_damage + bloodcaked_blades_damage + wandering_plague_damage + necrosis_damage + dancing_rune_weapon_damage + sudden_doom_damage + unholy_blight_damage + blood_boil_damage + death_and_decay_damage + death_coil_damage + sum_scourge_strikes_attacks + sum_death_strike_attacks + sum_heart_strike_attacks + garg_damage + ghoul_damage + ghoul_damage_claw + army_damage + army_damage_claw
        sum_damage_list.append(t_damage)
        sum_dps_list.append((t_damage)/fight_length)
        current_sim_number += 1
        # print(rotation)
        # print(rotation_time)
        # print(rotation_damage)
        # print(rotation_status)
        
        
        
        
        
        
    bonus_loop_expertise_rating = 0
    bonus_loop_armor_pen_rating = 0
    bonus_loop_crit_rating = 0
    bonus_loop_agility = 0
    bonus_loop_hit = 0
    bonus_loop_hp = 0
    bonus_loop_ap = 0
    bonus_loop_haste_rating = 0
    bonus_loop_str = 0
    bonus_loop_stam = 0
    #Armor Pen Area
    armor_penetration = (top_armor_pen_rating + bonus_loop_armor_pen_rating / 7) * 0.5
    if blood_gorged_points != 0:
        armor_penetration += blood_gorged_points * 2
    #Strength Percentage Area
    strtoap = top_str + bonus_loop_str 
    expertise_rating = top_expertise_rating + bonus_loop_expertise_rating
    total_crit_strike = top_crit_rating + bonus_loop_crit_rating
    total_stam = top_stam + bonus_loop_stam
    total_agi = top_agi + base_agility + bonus_loop_agility
    total_haste_rating = top_haste_rating + bonus_loop_haste_rating
    if veteran_of_the_third_war_points != 0:
        strtoap += strtoap * ((veteran_of_the_third_war_points * 2) / 100)
        expertise_rating += ((veteran_of_the_third_war_points * 2) * 7.9)
        total_stam += total_stam * (veteran_of_the_third_war_points / 100)
    if ravenous_dead_points != 0:
        strtoap += strtoap * (ravenous_dead_points / 100)
    if abominations_might_points != 0:
        strtoap += (strtoap * (abominations_might_points / 100))
    if abominations_might_points == 2:
        raid_buff_abomination_rage = True
        strtoap += strtoap * .02
    if greater_gift_of_the_wild == True:
        strtoap = strtoap + (strtoap * .02)
        total_agi += (total_agi * .02)
        total_stam += (total_stam * .02)
        # items_intelligence = items_intelligence + (items_intelligence * .02)
        # items_spirit = items_spirit + (items_spirit * .02)
    if raid_buff_greater_blessing_of_kings == True:
        strtoap = strtoap + (strtoap * .1)
        total_agi += (total_agi * .1)
        total_stam += (total_stam * .1)
        # items_intelligence = items_intelligence + (items_intelligence * .1)
        # items_spirit = items_spirit + (items_spirit * .1)
    if endless_winter_points == 2:
        strtoap = strtoap + (strtoap * .04)
    elif endless_winter_points == 1:
        strtoap = strtoap + (strtoap * .02)
    current_ap = (strtoap * 2) + top_ap + bonus_loop_ap
    if abominations_might_points == 1:
        if raid_buff_abomination_rage == False:
            current_ap += current_ap * .05
    if raid_buff_abomination_rage == True:
        current_ap += current_ap * .1
    if raid_buff_greater_blessing_of_might == True:
        current_ap += 550 
    if raid_buff_imp_greater_blessing_of_might == True:
        current_ap += (550 * .25)
    if bladed_armor_points != 0:
        current_ap += (my_own_current_armor / 180) * bladed_armor_points
    #Expertise Area
    if rage_of_rivendale_points != 0:
        expertise_rating += (rage_of_rivendale_points * 7.9)
    #Race Selection extra expertise bonuses
    if race_selection == 0:
        if weapons_type[0] == 'sword':
            expertise_rating += 3 * 7.9
        elif weapons_type[0] == 'mace':
            expertise_rating += 3 * 7.9
    if race_selection == 1:
        if weapons_type[0] == 'mace':
            expertise_rating += 5 * 7.9
    if race_selection == 5:
        if weapons_type[0] == 'axe':
            expertise_rating += 5 * 7.9
    #Expertise from Tundra Stalker
    if tundra_stalker_points != 0:
        expertise_rating += tundra_stalker_points * 7.9
    #Expertise Math
    total_expertise_rating = expertise_rating
    total_expertise = total_expertise_rating / 7.9
    if round(total_expertise) > total_expertise:
        total_expertise = round(total_expertise) - 1
    elif round(total_expertise) <= total_expertise:
        total_expertise = round(total_expertise)
    all_expertise = total_expertise
    if all_expertise * .25 > 6.5:
        all_expertise_dodge = 6.5
    elif all_expertise * .25 <= 6.5:
        all_expertise_dodge = all_expertise
    all_expertise_parry = all_expertise
    if all_expertise * .25 > 14.0:
        all_expertise_parry = 14.0
    elif all_expertise * .25 <= 14.0:
        all_expertise_parry = all_expertise
        
    #Crit Strike Math
    if dark_conviction_points != 0:
        total_crit_strike += dark_conviction_points * 45.8
    if ebon_plaguebringer_points != 0:
        total_crit_strike += ebon_plaguebringer_points * 45.8
    total_crit = (((total_agi / 62.5) + 3.188 + (total_crit_strike / 45.8)) / 100) + increased_crit


    total_hp = (total_stam * 10) + base_hp + bonus_loop_hp
    
    
    hit_from_gear = top_hit_rating + bonus_loop_hit
    spell_magic_hit = 0
    if virtulence_points != 0:
        spell_magic_hit += (virtulence_points * 32.789)
    spell_hit_total = hit_from_gear + hit_from_other + spell_magic_hit
    if item_two_hand == False:
        if nerves_of_cold_steel != 0:
           spell_hit_total -= (32.789 * nerves_of_cold_steel)
    
    
    
    
    export_hit = hit_from_gear
    export_hit_perc = round((((export_hit) * 30.5)/1000), 2)
    export_crit = round((total_crit * 100), 2) 
    export_crit_rating = total_crit_strike
    export_strength = strtoap
    export_stamina = total_stam
    export_hp = total_hp
    export_armor = my_own_current_armor
    export_agi = total_agi
    export_ap = current_ap
    export_armor_pen = top_armor_pen_rating + bonus_loop_armor_pen_rating
    export_armor_pen_perc =  armor_penetration
    export_expertise = all_expertise
    export_expertise_rating = total_expertise_rating
    export_haste = round((total_haste_rating / 25.21), 2) #Assuming Correct
    export_haste_rating = total_haste_rating
    raw_stat_string_sep = "*^*"
    raw_stat_string = str(export_hit) + str(raw_stat_string_sep) + str(export_hit_perc) + str(raw_stat_string_sep) + str(export_crit) + str(raw_stat_string_sep) + str(export_crit_rating) + str(raw_stat_string_sep) + str(export_strength) + str(raw_stat_string_sep) + str(export_stamina) + str(raw_stat_string_sep) + str(export_hp) + str(raw_stat_string_sep) + str(export_armor) + str(raw_stat_string_sep) + str(export_agi) + str(raw_stat_string_sep) + str(export_ap) + str(raw_stat_string_sep) + str(export_armor_pen) + str(raw_stat_string_sep) + str(export_armor_pen_perc) + str(raw_stat_string_sep) + str(export_expertise) + str(raw_stat_string_sep) + str(export_expertise_rating) + str(raw_stat_string_sep) + str(export_haste) + str(raw_stat_string_sep) + str(export_haste_rating) + str(raw_stat_string_sep) + str(H2)

        
    avg_sum_dps = sum(sum_dps_list) / len(sum_dps_list)
    avg_sum_dps = round(avg_sum_dps, 3)
    # print("DPS: " + str(avg_sum_dps))
    # print(len(rotation))
    # print(len(rotation_time))
    # print(len(rotation_damage))
    # print(len(rotation_status))
    
    # mast = []
    # for i in range(0, len(rotation)):
    #     mast.append(rotation[i])
    #     mast.append(rotation_status[i])
    #     mast.append(rotation_damage[i])
    # print(mast)
    #     return [sub[item] for item in range(len(lst2))
    #                   for sub in [lst1, lst2]]
      
    # print(countList(rotation, rotation_damage))
    sum_dps_list_s = []
    for i in sum_dps_list:
        i = round(i)
        sum_dps_list_s.append(i)
    exported_results = str(avg_sum_dps) + "*&*" + str(t_damage) + "*&*" + str(fight_length) + "*&*" + str(rotation) + "*&*" + str(rotation_time) + "*&*" + str(rotation_damage) + "*&*" + str(rotation_status) + "*&*" + str(rune_0_tracker) + "*&*" + str(rune_1_tracker) + "*&*" + str(rune_2_tracker) + "*&*" + str(rune_3_tracker) + "*&*" + str(rune_4_tracker) + "*&*" + str(rune_5_tracker) + "*&*" + str(rune_6_tracker) + "*&*" + str(rune_7_tracker) + "*&*" + str(rune_8_tracker) + "*&*" + str(rune_9_tracker) + "*&*" + str(rune_10_tracker) + "*&*" + str(rune_11_tracker) + "*&*" + str(rune_time_tracker) + "*&*" + str(runic_power_tracker) + "*&*" + str(raw_stat_string) + "*&*" + (str(total_simulation_amounts) + "*" + str(sum_dps_list_s))
    return str(exported_results)
